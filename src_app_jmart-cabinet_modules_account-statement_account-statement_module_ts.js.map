{"version":3,"file":"src_app_jmart-cabinet_modules_account-statement_account-statement_module_ts.js","mappings":"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","sources":["./src/app/jmart-cabinet/modules/account-statement/account-statement.component.ts","./src/app/jmart-cabinet/modules/account-statement/account-statement.module.ts","./src/app/jmart-cabinet/modules/account-statement/account-statement.service.ts","./src/app/jmart-cabinet/modules/account-statement/components/account-statement-pagination/account-statement-pagination.component.ts","./src/app/jmart-cabinet/modules/account-statement/components/account-statement-period-date/account-statement-period-date.component.ts","./src/app/jmart-cabinet/modules/account-statement/components/account-statement-search/account-statement-search.component.ts","./src/app/jmart-cabinet/modules/account-statement/components/account-statement-table/account-statement-table.component.ts","./node_modules/rxjs/_esm2015/internal/operators/merge.js"],"sourcesContent":["import {  Component, OnInit } from '@angular/core';\nimport { AccountStatementService } from '@jmart-cabinet/modules/account-statement/account-statement.service';\n\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { OrdersPagination } from '@jmart-cabinet/modules/orders/models/order.model';\nimport { debounceTime, distinctUntilChanged, map, merge, share, startWith, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'j-account-statement',\n  templateUrl: './account-statement.component.html',\n  styleUrls: ['./account-statement.component.scss'],\n})\nexport class AccountStatementComponent implements OnInit {\n  private searchStream = new Subject<string>();\n  private pagingStream = new Subject<number>();\n  private periodStream = new Subject<any>();\n  public accountStatements: any;\n  public pagination: OrdersPagination;\n  params = {\n    page: 1,\n    dateTo: '',\n    dateFrom: '',\n    search: ''\n  };\n  loading = true;\n  constructor(private accountStatementService: AccountStatementService) {\n  }\n\n  ngOnInit(): void {\n    const periodSource = this.periodStream.pipe(\n      distinctUntilChanged(),\n      map(date  => {\n        this.params.dateTo = date.to;\n        this.params.dateFrom =  date.from;\n        this.params.page = 1;\n        return this.params;\n      })\n    );\n    const pagingSource = this.pagingStream.pipe(\n      distinctUntilChanged(),\n      map(pageNumber => {\n        this.params.page = pageNumber;\n        return this.params;\n      })\n    );\n    const searchSource = this.searchStream.pipe(\n      debounceTime(1000),\n      distinctUntilChanged(),\n      map(searchTerm => {\n        this.params.search = searchTerm;\n        this.params.page = 1;\n        return this.params;\n      })\n    );\n    const source = pagingSource.pipe(\n      merge(searchSource, periodSource),\n      tap(() => {\n        this.loading = true;\n        this.accountStatements = null;\n      }),\n      switchMap((params: {page: number, dateTo: '', dateFrom: '', search: string}) => {\n        return this.accountStatementService.getAccountStatements(params.page, params.dateTo, params.dateFrom, params.search);\n      }),\n      share(),\n      tap(() => this.loading = false)\n    );\n    source.subscribe(data => {\n      this.accountStatements = data.items;\n      this.pagination = data.pagination;\n    });\n  }\n  public searchChange(term: string): void {\n    this.searchStream.next(term);\n  }\n  public onPeriodChanged(period: any): void {\n    this.periodStream.next(period);\n  }\n  public pageChange(page: number): void {\n    this.pagingStream.next(page);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccountStatementComponent } from './account-statement.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { JmartCabinetLayoutComponent } from '@jmart-cabinet/components/jmart-cabinet-layout/jmart-cabinet-layout.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FilterModule } from '@filter/filter.module';\nimport { AccountStatementPeriodDateComponent } from './components/account-statement-period-date/account-statement-period-date.component';\nimport { AccountStatementSearchComponent } from './components/account-statement-search/account-statement-search.component';\nimport { AccountStatementTableComponent } from './components/account-statement-table/account-statement-table.component';\nimport { AccountStatementPaginationComponent } from './components/account-statement-pagination/account-statement-pagination.component';\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JmartCabinetLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: AccountStatementComponent,\n      },\n    ],\n  }\n];\n@NgModule({\n  declarations: [\n    AccountStatementComponent,\n    AccountStatementPeriodDateComponent,\n    AccountStatementSearchComponent,\n    AccountStatementTableComponent,\n    AccountStatementPaginationComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FilterModule,\n    NgbPaginationModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AccountStatementModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountStatementService {\n\n  constructor(\n    @Inject('JMART_CABINET_BASE_URL') private baseUrl: string,\n    private http: HttpClient,\n  ) { }\n  getAccountStatements(page= 1, paymentDateTo = '', paymentDateFrom = '',  search= '') {\n    const url = `${this.baseUrl}/gw/order/v2/merchant/order-transactions`;\n    let params =  new HttpParams()\n      .set('search', search)\n      .set('page', String(page))\n      .set('per_page', '12');\n    if (paymentDateTo){\n      params = params.set('payment_date_to', paymentDateTo);\n    }\n    if (paymentDateFrom){\n      params = params.set('payment_date_from', paymentDateFrom);\n    }\n    return this.http.get(url, { params }).pipe(\n      map((data: any) => data.data)\n    );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { OrdersPagination } from '@jmart-cabinet/modules/orders/models/order.model';\n\n@Component({\n  selector: 'j-account-statement-pagination',\n  templateUrl: './account-statement-pagination.component.html',\n  styleUrls: ['./account-statement-pagination.component.scss']\n})\nexport class AccountStatementPaginationComponent implements OnInit {\n  public page = 1;\n  @Input() pagination: OrdersPagination;\n  @Output() pageChange: EventEmitter<number> = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FILTER_MODE, FILTER_PERIOD_TYPE, IStatementPeriod } from '@filter/filter.model';\nimport { FilterService } from '@filter/filter.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'j-account-statement-period-date',\n  templateUrl: './account-statement-period-date.component.html',\n  styleUrls: ['./account-statement-period-date.component.scss'],\n  providers: [DatePipe]\n})\nexport class AccountStatementPeriodDateComponent implements OnInit, AfterViewInit {\n  readonly mode = FILTER_MODE.ACCOUNTS;\n  public defaultPeriod: IStatementPeriod;\n  public periodList: IStatementPeriod[];\n  @Output() submitted = new EventEmitter();\n  constructor(\n    private filterService: FilterService,\n    private datePipe: DatePipe,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit() {\n    this.defaultPeriod = {\n      type: FILTER_PERIOD_TYPE.NONE,\n      label: 'За всё время',\n      showDates: false,\n      dates: { from: null, to: null },\n    };\n    this.periodList = [this.defaultPeriod, ...this.filterService.PERIOD_LIST];\n    this.cdr.detectChanges();\n  }\n\n  onPeriodChanged(event){\n    console.log(event);\n    this.submitted.emit({\n        to: this.datePipe.transform(event.to, 'dd-MM-yyyy'),\n        from: this.datePipe.transform(event.from, 'dd-MM-yyyy')\n      });\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'j-account-statement-search',\n  templateUrl: './account-statement-search.component.html',\n  styleUrls: ['./account-statement-search.component.scss']\n})\nexport class AccountStatementSearchComponent implements OnInit {\n  public terms = '';\n  public control: FormControl;\n  @Output() searchChange: EventEmitter<string> = new EventEmitter<string>();\n  constructor(private route: ActivatedRoute) {\n    this.terms =  this.route.snapshot.queryParams?.terms || '';\n    this.control = new FormControl(this.terms);\n  }\n\n  ngOnInit(): void {\n    this.searchChange.emit(this.terms);\n  }\n  public search(term: string): void {\n    this.terms = term;\n    this.searchChange.emit(term);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-account-statement-table',\n  templateUrl: './account-statement-table.component.html',\n  styleUrls: ['./account-statement-table.component.scss']\n})\nexport class AccountStatementTableComponent implements OnInit {\n  @Input() accountStatements: any;\n  @Input() loading: boolean;\n  readonly img = './assets/jmart/no-data.svg';\n  readonly theme = { height: '2.5rem', 'background-color': '#ECEEF1', margin: '25px 10px 0 10px', width: 'calc(100% - 20px)' };\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { merge as mergeStatic } from '../observable/merge';\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n"],"names":[],"sourceRoot":"webpack:///"}