{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEvD,QAAQ;AACiD;AACiB;AACM;AAEhF,WAAW;AACuD;AACoB;AACM;AACN;AACM;AACS;AACN;AAE/F,SAAS;AACqE;AACN;AACY;AACQ;AAEnD;AACmD;AAErF,MAAM,eAAe,GAAG;IAC7B,QAAQ;IACR,kEAAc;IACd,yFAAmB;IACnB,mFAAiB;IAEjB,WAAW;IACX,2EAAiB;IACjB,qGAAsB;IACtB,+FAAoB;IACpB,qGAAsB;IACtB,8GAAyB;IACzB,wGAAuB;IAEvB,SAAS;IACT,wFAAkB;IAClB,kFAAgB;IAChB,8FAAoB;IACpB,sGAAsB;CACvB,CAAC;AAEF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,kEAAc;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAiB;QAC5B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,KAAK;aAClB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,+FAAoB;gBAC/B,IAAI,EAAE;oBACJ,KAAK,EAAE,qBAAqB;oBAC5B,MAAM,EAAE,4DAAkB;iBAC3B;aACF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,wFAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,kFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,8FAAoB;aAChC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qGAAsB;gBACjC,IAAI,EAAE;oBACJ,KAAK,EAAE,cAAc;oBACrB,MAAM,EAAE,4DAAkB;iBAC3B;aACF;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,+FAAoB;gBAC/B,IAAI,EAAE;oBACJ,MAAM,EAAE,4DAAkB;iBAC3B;aACF;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,sGAAsB;aAClC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qGAAsB;aAClC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8GAAyB;gBACpC,IAAI,EAAE;oBACJ,MAAM,EAAE,4DAAkB;iBAC3B;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,sGAAsB;gBACjC,IAAI,EAAE;oBACJ,MAAM,EAAE,4DAAkB;iBAC3B;aACF;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wGAAuB;gBAClC,IAAI,EAAE;oBACJ,MAAM,EAAE,4DAAkB;iBAC3B;aACF;SACF;KACF;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAiB;QAC5B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,KAAK;aAClB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,+FAAoB;gBAC/B,IAAI,EAAE;oBACJ,KAAK,EAAE,cAAc;oBACrB,MAAM,EAAE,2DAAiB;iBAC1B;aACF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,wFAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,kFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,8FAAoB;aAChC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qGAAsB;gBACjC,IAAI,EAAE;oBACJ,KAAK,EAAE,cAAc;oBACrB,MAAM,EAAE,2DAAiB;iBAC1B;aACF;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,+FAAoB;gBAC/B,IAAI,EAAE;oBACJ,MAAM,EAAE,2DAAiB;iBAC1B;aACF;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,sGAAsB;aAClC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qGAAsB;aAClC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8GAAyB;gBACpC,IAAI,EAAE;oBACJ,MAAM,EAAE,2DAAiB;iBAC1B;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,sGAAsB;gBACjC,IAAI,EAAE;oBACJ,MAAM,EAAE,2DAAiB;iBAC1B;aACF;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wGAAuB;gBAClC,IAAI,EAAE;oBACJ,MAAM,EAAE,2DAAiB;iBAC1B;aACF;SACF;KACF;CACF,CAAC;IAMW,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAJ7B,wDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,mEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,0DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;ACnNvB,MAAM,WAAW,GAAG;IACzB,eAAe,EAAE,GAAG;IACpB,iBAAiB,EAAE,gCAAgC;IACnD,cAAc,EAAE,KAAK;CACtB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJuC;AACM;AACA;AACmB;AAEf;AAEE;AAErD,UAAU;AACiE;AAE3E,SAAS;AAC2E;AACH;AACM;AACjB;AACiB;AAEvF,SAAS;AACgE;AAEa;AACM;IAyB/E,UAAU,SAAV,UAAU;CAAG;AAAb,UAAU;IAvBtB,wDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iEAAe;YACf,6FAAoB;YACpB,0FAAmB;YACnB,gGAAqB;YACrB,kFAAgB;YAChB,+FAAoB;YACpB,+EAAgB;YAChB,gGAAqB;YACrB,qGAAsB;SACvB;QACD,OAAO,EAAE;YACP,0DAAY;YACZ,mEAAiB;YACjB,wDAAW;YACX,0DAAY;YACZ,gEAAmB;YACnB,+DAAY;YACZ,oDAAa;SACd;QACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,+CAAQ,EAAE,QAAQ,EAAE,+CAAQ,EAAE,CAAC;KACvD,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChDmB;AAEW;IAOxC,kBAAkB,SAAlB,kBAAkB;IAK7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJ1C,oBAAe,GAAG;YAChB,GAAG,EAAE,MAAM;SACZ,CAAC;QAGA,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;CACF;;YAhBQ,+DAAU;;AAON,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4EAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAS9B;AAT8B;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACW;IAOxC,gBAAgB,SAAhB,gBAAgB;IAC3B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QACxC,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;CACF;;YAZQ,+DAAU;;AAON,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,0EAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAK5B;AAL4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRwB;AACI;AACJ;AAEjB;AACC;IAOxB,sBAAsB,SAAtB,sBAAsB;IAOjC,YACU,MAAc,EACd,KAAqB,EACrB,UAAsB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,eAAU,GAAV,UAAU,CAAY;QALvB,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAOzC,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACvC,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,QAAe,IAAI;QACjC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE;gBACL,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;CACF;;YApDwB,mDAAM;YAAtB,2DAAc;YACd,+DAAU;;AAUN,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,sBAAsB,CAyClC;AAzCkC;;;;;;;;;;;;;;;;;;;;;;;ACZO;AACW;IAOxC,oBAAoB,SAApB,oBAAoB;IAK/B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJ1C,oBAAe,GAAG;YAChB,GAAG,EAAE,MAAM;SACZ,CAAC;QAGA,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;CACF;;YAhBQ,+DAAU;;AAON,oBAAoB;IALhC,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAShC;AATgC;;;;;;;;;;;;;;;;;;;;;;;;;;ACDV;AAC6C;AAEhC;AAGiB;AAEJ;IAapC,gBAAgB,SAAhB,gBAAgB;IAmB3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAlB5C,QAAG,GAAG,EAAE,CAAC;QAcC,cAAS,GAAG,IAAI,uDAAY,EAAkB,CAAC;QAEhD,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QAGjC,IAAI,CAAC,WAAW,GAAG,IAAI,qDAAS,CAAC;YAC/B,GAAG,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,+DAAmB,EAAE,+DAAW,CAAC,CAAC;SACnE,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAC9D,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAClC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpC,OAAO;aACR;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,yBAAyB;aAC1B,CAAC,CAAC;YAEH,QAAQ;YACR,8DAA8D;YAE9D,0BAA0B;YAC1B,qBAAqB;YACrB,6BAA6B;YAC7B,QAAQ;YACR,oBAAoB;YACpB,0BAA0B;YAC1B,gCAAgC;YAChC,8BAA8B;YAC9B,yBAAyB;YACzB,2CAA2C;YAC3C,YAAY;YACZ,eAAe;YACf,MAAM;YACN,4CAA4C;YAC5C,cAAc;YACd,4BAA4B;YAC5B,IAAI;QACN,CAAC;KAAA;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;IAC1B,CAAC;IAEO,WAAW,CAAC,MAAM;QACxB,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;SACtC;aAAM,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;SACpC;IACH,CAAC;CACF;;YA9GQ,2DAAW;;;uBA0BjB,oDAAS,SAAC,UAAU;wBAEpB,iDAAM;;AAfI,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,0EAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAiG5B;AAjG4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBN;AAC0B;AACmB;AAEhC;AAGmB;AAEG;AAII;AACP;AAGkB;IAa5D,mBAAmB,SAAnB,mBAAmB;IAkD9B,YACU,aAA4B,EAC5B,KAAqB,EACrB,cAA8B,EAC9B,gBAAkC,EAClC,mBAAwC;QAJxC,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAjDlD,gBAAW,GAAG,KAAK,CAAC;QACpB,qBAAgB,GAAG,KAAK,CAAC;QAqBzB,UAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3E,aAAQ,GAAG,EAAE,CAAC;QAGd,mBAAc,GAAG,MAAM,CAAC;QACxB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,gBAAW,GAAG;YACZ,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI;YACxB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,aAAa,wEAA0B,EAAE,CAC1C;YACD,EAAE,EAAE,wEAA0B;YAC9B,WAAW,EAAE,6EAA+B;SAC7C,CAAC;QAEQ,cAAS,GAAG,IAAI,uDAAY,EAAc,CAAC;QAE5C,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAG3C,cAAS,GAAG,KAAK,CAAC;QAShB,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAC1D,CAAC,WAAW,EAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,qDAAS,CAAC;YAC7B,MAAM,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,+DAAmB,CAAC;YACnE,KAAK,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,KAAK,EAAE,+DAAmB,CAAC;YACvD,QAAQ,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,+DAAmB,CAAC;SAC9D,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAClE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,2BAA2B;YAC3B,wBAAwB;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEK,iBAAiB;;YACrB,IAAI;gBACF,MAAM,IAAI,CAAC,mBAAmB;qBAC3B,2BAA2B,EAAE;qBAC7B,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACjB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAC9B,CAAC,UAAmC,EAAE,EAAE,CAAC,CAAC;wBACxC,EAAE,EAAE,UAAU,CAAC,EAAE;wBACjB,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW;wBAClC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI;wBAC9B,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI;qBACnC,CAAC,CACH,CAAC;gBACJ,CAAC,CAAC,CAAC;aACN;YAAC,OAAO,GAAG,EAAE,GAAE;QAClB,CAAC;KAAA;IAEM,qBAAqB;QAC1B,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;IAC9C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SACzB;IACH,CAAC;IAED,WAAW,CAAC,OAAsB;;QAChC,IAAI,aAAO,CAAC,aAAa,0CAAE,YAAY,EAAE;YACvC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC;SACzD;IACH,CAAC;IAED,UAAU,CAAC,KAAoB;QAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5B;IACH,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;oBACxC,IAAI,CAAC,UAAU,GAAG,2BAA2B,CAAC;iBAC/C;qBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;oBAClD,IAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC;iBAC9C;gBACD,OAAO;aACR;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,KAAK;gBACL,QAAQ;gBACR,WAAW;aACZ,CAAC,CAAC;QACL,CAAC;KAAA;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,iBAAiB,CAAC,WAAW;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;CACF;;YAlLQ,wEAAa;YAZb,4DAAc;YAQd,oEAAc;YAFd,kEAAgB;YAOhB,iEAAmB;;;wBAmBzB,gDAAK;oBAML,gDAAK;4BAGL,gDAAK;yBAGL,gDAAK;qBAGL,gDAAK;yBAGL,oDAAS,SAAC,YAAY;4BACtB,oDAAS,SAAC,eAAe;6BAEzB,oDAAS,SAAC,gBAAgB;wBAmB1B,iDAAM;;AA3CI,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6EAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAiK/B;AAjK+B;;;;;;;;;;;;;;;;;;;;;;;;;ACzCuC;AAExB;AACsB;AACT;IAQ/C,iBAAiB,SAAjB,iBAAiB;IAmB5B;QATA,YAAO,GAAG,KAAK,CAAC;QAGhB,2BAAsB,GAAG,YAAY,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QACxE,cAAS,GAAG,sDAAU,CAAC;QAEb,cAAS,GAAG,IAAI,uDAAY,EAAa,CAAC;QAC1C,WAAM,GAAG,IAAI,uDAAY,EAAE,CAAC;QAGpC,IAAI,CAAC,YAAY,GAAG;YAClB,SAAS,EAAE,uEAAyB;SACrC,CAAC;QACF,IAAI,CAAC,sBAAsB,GAAG,YAAY,CAAC,OAAO,CAAC,wBAAwB,CAAC,IAAI,0EAA0B,CAAC;IAC7G,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,QAAmB;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,eAAe,CAAC,QAAe,IAAI;QACjC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAED,uBAAuB,CAAC,MAAM;QAC5B,YAAY,CAAC,OAAO,CAClB,wBAAwB,EACxB,MAAM,KAAK,0DAAc;YACvB,CAAC,CAAC,0EAA0B;YAC5B,CAAC,CAAC,0EAA0B,CAC/B,CAAC;QACF,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;IACvC,CAAC;CACF;;;wBA/CE,gDAAK;oBAGL,gDAAK;0BAGL,gDAAK;wBASL,iDAAM;qBACN,iDAAM;;AAjBI,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,2EAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAgD7B;AAhD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiD;AACtB;AAErB;AACC;AAEc;AAEf;AAEuB;AAGV;AAOjD,IAAK,WAIJ;AAJD,WAAK,WAAW;IACd,8BAAe;IACf,0BAAW;IACX,kCAAmB;AACrB,CAAC,EAJI,WAAW,KAAX,WAAW,QAIf;IAOY,cAAc,SAAd,cAAc;IAgBzB,YACU,IAAiB,EACjB,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,eAAgC;QAJhC,SAAI,GAAJ,IAAI,CAAa;QACjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QApB1C,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,WAAW,CAAC;QACpB,gBAAW,GAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAE5C,eAAU,GAAG,EAAE,CAAC;QAOP,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAUzC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aAC1B;YACD,IAAI,KAAK,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;aAC/B;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,aAAa,CAAC,SAAqB;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAE9C,IAAI;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAClD,IAAI,CAAC,SAAS,CAAC,QAAQ,CACxB,CAAC;YACF,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAEpD,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAEK,WAAW,CAAC,QAAmB;;YACnC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAC/C,IAAI,CAAC,KAAK,EACV,QAAQ,CAAC,IAAI,CACd,CAAC;gBACF,IAAI,CAAC,YAAY,CAAC,cAAc,CAC9B,WAAW,CAAC,SAAS,EACrB,IAAI,CAAC,SAAS,CAAC,QAAQ,CACxB,CAAC;gBACF,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,QAAQ,KAAK,CAAC,IAAI,EAAE;oBAClB,KAAK,mEAA2B,CAAC;oBACjC,KAAK,iEAAyB,CAAC;oBAC/B,KAAK,kEAA0B,CAAC;oBAChC,KAAK,4DAAoB;wBACvB,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC;wBAC7C,MAAM;oBACR,KAAK,2DAAmB,CAAC;oBACzB,KAAK,+DAAuB;wBAC1B,IAAI,CAAC,UAAU,GAAG,wBAAwB,CAAC;wBAC3C,MAAM;oBACR;wBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;wBACpC,MAAM;iBACT;aACF;QACH,CAAC;KAAA;IAEK,KAAK;;YACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YAErB,IAAI;gBACF,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CACnB,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,CACxB,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACjB,IAAI,CAAC,UAAU,GAAG,wBAAwB,CAAC;iBAC5C;qBAAM;oBACL,QAAQ,KAAK,CAAC,IAAI,EAAE;wBAClB,KAAK,iEAAyB,CAAC;wBAC/B,KAAK,kEAA0B,CAAC;wBAChC,KAAK,4DAAoB;4BACvB,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC;4BAC7C,MAAM;wBAER,KAAK,+DAAuB;4BAC1B,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;4BACrC,IAAI,CAAC,UAAU,GAAG,wBAAwB,CAAC;4BAC3C,MAAM;wBAER,KAAK,oEAA4B,CAAC;wBAClC,KAAK,mEAA2B,CAAC;wBACjC,KAAK,4DAAoB;4BACvB,IAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,uCAAuC;4BACvC,MAAM;wBAER;4BACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;4BACpC,MAAM;qBACT;iBACF;gBAED,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAEO,aAAa;QACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC;IACrC,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;IACvC,CAAC;CACF;;YA9KQ,2DAAW;YAHX,qEAAY;YATZ,2DAAc;YAAE,mDAAM;YAKtB,6DAAe;;;yBAoCrB,qDAAS,SAAC,YAAY;;AAXZ,cAAc;IAL1B,yDAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,uEAAqC;;KAEtC,CAAC;GACW,cAAc,CA4J1B;AA5J0B;;;;;;;;;;;;;;;;;;;;;;;AC/Be;AACkB;IAO/C,oBAAoB,SAApB,oBAAoB;IAC/B,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE5C,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;CACF;;YAjBQ,sEAAc;;AAOV,oBAAoB;IALhC,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAUhC;AAVgC;;;;;;;;;;;;;;;;;;;;;;;ACRS;AACkB;IAO/C,mBAAmB,SAAnB,mBAAmB;IAC9B,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE5C,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;CACF;;YAjBQ,sEAAc;;AAOV,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6EAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAU/B;AAV+B;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AACU;IAO/C,qBAAqB,SAArB,qBAAqB;IAChC,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE5C,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;CACF;;YAjBQ,sEAAc;;AAOV,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAUjC;AAViC;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AACU;IAO/C,gBAAgB,SAAhB,gBAAgB;IAC3B,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE5C,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;CACF;;YAbQ,sEAAc;;AAOV,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,yEAAuC;;KAExC,CAAC;GACW,gBAAgB,CAM5B;AAN4B;;;;;;;;;;;;;;;;;;;;;;;;ACRyB;AACF;AACI;AACZ;AACY;;;;;;;;;;;;;;;;;;;;;;;ACJd;AACkB;IAO/C,qBAAqB,SAArB,qBAAqB;IAChC,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE5C,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;CACF;;YAbQ,sEAAc;;AAOV,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAMjC;AANiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR8B;AACI;AACX;AAErB;AACC;AAEiB;AAElB;AAIY;AACC;AAC0C;AACjB;AAMlD;AAC6B;IAOxC,sBAAsB,SAAtB,sBAAsB;IA4CjC,YACU,KAAqB,EACrB,IAAiB,EACjB,MAAc,EACd,YAAsB,EACtB,UAAsB;QAJtB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAU;QACtB,eAAU,GAAV,UAAU,CAAY;QA1ChC,kBAAa,GAAG,2DAAe,CAAC;QAWhC,kBAAa,GAAG,+DAAmB,CAAC;QAUpC,wBAAmB,GAAG,0EAA2B,CAAC;QAGlD,eAAU,GAAG,2DAAe,CAAC;QAG7B,YAAO,GAAG,KAAK,CAAC;QAGhB,eAAU,GAAG,yDAAa,CAAC;QAC3B,aAAQ,GAAG,oDAAQ,CAAC;QAIX,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QASjC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,sDAAS,CAAC;YACjC,SAAS,EAAE,IAAI,wDAAW,CAAC,EAAE,EAAE,gEAAmB,CAAC;SACpD,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC1C,IAAI,CAAC,oDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEL,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAChE,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,EAAE;gBACpE,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACH,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAClC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qGAAqB,EAAE;YAC5C,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,GAAa;QAClB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACrC,CAAC;IAEK,YAAY;;YAChB,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI;gBACF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEtE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;YAAC,OAAO,KAAK,EAAE;gBACd,QAAQ,KAAK,CAAC,IAAI,EAAE;oBAClB,KAAK,+DAAuB;wBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;4BAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;yBAC9B,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,+DAAuB;wBAC1B,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE;4BAC7C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;yBACrD;wBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;wBAC7C,MAAM;oBACR;wBACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;wBACnC,MAAM;iBACT;aACF;oBAAS;gBACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;QACH,CAAC;KAAA;IAED,eAAe,CAAC,QAAe,IAAI;QACjC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE;gBACL,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB;SACF,CAAC,CAAC;IACL,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;gBAEzC,IAAI;oBACF,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;oBAE7D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;wBACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;wBAC7B,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;qBAC5C,CAAC,CAAC;iBACJ;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAErB,QAAQ,KAAK,CAAC,IAAI,EAAE;wBAClB,KAAK,+DAAuB;4BAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;gCAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;6BAC9B,CAAC,CAAC;4BACH,MAAM;wBACR,KAAK,+DAAuB,CAAC;wBAC7B,KAAK,2DAAmB;4BACtB,IAAI,SAAS,CAAC;4BACd,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gCACtC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;gCACjC,IAAI,CAAC,WAAW,GAAG,EAAE,SAAS,EAAE,CAAC;gCACjC,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC;gCACxC,QAAQ,SAAS,GAAG,EAAE,EAAE;oCACtB,KAAK,CAAC;wCACJ,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC;wCACxB,MAAM;oCACR,KAAK,CAAC,CAAC;oCACP,KAAK,CAAC,CAAC;oCACP,KAAK,CAAC;wCACJ,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC;wCACxB,MAAM;oCACR;wCACE,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC;iCAC7B;6BACF;iCAAM;gCACL,IAAI,CAAC,UAAU,EAAE,CAAC;gCAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;6BACtC;4BACD,MAAM;wBAER,KAAK,wDAAgB;4BACnB,IAAI,CAAC,UAAU,EAAE,CAAC;4BAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;4BACrC,MAAM;wBAER,KAAK,kEAA0B,CAAC;wBAChC,KAAK,4DAAoB;4BACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oFAAgB,EAAE;gCACxD,QAAQ,EAAE,IAAI;6BACf,CAAC,CAAC;4BACH,IAAI;gCACF,MAAM,QAAQ,CAAC,MAAM,CAAC;6BACvB;4BAAC,OAAO,KAAK,EAAE;6BACf;oCAAS;gCACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;oCAC5B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;oCAC7B,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;iCACzB,CAAC,CAAC;6BACJ;4BACD,MAAM;wBAER;4BACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;4BACnC,MAAM;qBACT;oBACD,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC;iBACzC;wBAAS;oBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;aACF;QACH,CAAC;KAAA;IAEO,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;QACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;gBACzB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAEO,SAAS;QACf,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEO,iBAAiB,CAAC,gBAAwB;QAChD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAElC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE;YACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;gBAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAEO,gBAAgB;QACtB,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;CACF;;YAzRQ,4DAAc;YAYd,2DAAW;YAZK,oDAAM;YAKtB,iEAAQ;YAgBR,+DAAU;;;wBA+ChB,qDAAS,SAAC,WAAW;;AAxCX,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CA6PlC;AA7PkC;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BkB;AACJ;AAEb;AACC;AAEQ;IAOhC,sBAAsB,SAAtB,sBAAsB;IAMjC,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAFzC,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAGhC,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/C,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAC/C,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,QAAQ,KAAK,gEAAkB;YACzC,CAAC,CAAC,iCAAiC;YACnC,CAAC,CAAC,gCAAgC,CAAC;IACvC,CAAC;IAED,IAAI,KAAK;QACP,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;CACF;;YAjDQ,2DAAc;;AAYV,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAqClC;AArCkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbkB;AACI;AAErB;AAEkB;AAED;AAEI;AACgB;AAEf;AAE1D,MAAM,aAAa,GAAG;IACpB,aAAa,EAAE,gBAAgB;IAC/B,WAAW,EAAE,wBAAwB;IACrC,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,IAAI;CACf,CAAC;IAOW,oBAAoB,SAApB,oBAAoB;IAO/B,YACU,MAAc,EACd,KAAqB,EACrB,UAAsB,EACtB,YAAsB,EACtB,cAA8B;QAJ9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAU;QACtB,mBAAc,GAAd,cAAc,CAAgB;QARxC,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QAC1B,cAAS,GAAG,KAAK,CAAC;QAShB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAE/D,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAC7D,CAAC,WAAW,EAAE,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACxC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,MAAsB;QAC7B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,kDAAkD;IACpD,CAAC;IAEa,cAAc,CAAC,SAAqB,EAAE,GAAW;;YAC7D,QAAQ,SAAS,EAAE;gBACjB,KAAK,gEAAkB;oBACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,MAAM;gBACR,KAAK,uEAAyB;oBAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC3B,MAAM;gBACR,KAAK,uEAAyB,CAAC;gBAC/B,KAAK,qEAAuB;oBAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,MAAM;gBACR,KAAK,2EAA6B;oBAChC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;oBAClC,MAAM;gBACR,KAAK,qEAAuB;oBAC1B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;oBAC5B,MAAM;aACT;QACH,CAAC;KAAA;IAEO,uBAAuB,CAAC,GAAW;QACzC,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,+DAAiB;gBACpB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACR,KAAK,gEAAkB;gBACrB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAC9B,MAAM;SACT;IACH,CAAC;IAEa,oBAAoB,CAAC,GAAW;;YAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACrC,8DAAoB,EACpB,aAAa,CACd,CAAC;YACF,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACtB,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE,GAAE;QACpB,CAAC;KAAA;IAEa,mBAAmB,CAAC,GAAW;;YAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6DAAmB,EAAE,aAAa,CAAC,CAAC;YAC5E,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;gBAC1C,IAAI,WAAW,IAAI,SAAS,EAAE;oBAC5B,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;iBAClC;qBAAM,IAAI,WAAW,IAAI,OAAO,EAAE;oBACjC,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;aACF;YAAC,OAAO,KAAK,EAAE,GAAE;QACpB,CAAC;KAAA;IAEO,iBAAiB,CAAC,GAAW;QACnC,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,gEAAkB;gBACrB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACR,KAAK,+DAAiB;gBACpB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM;SACT;IACH,CAAC;IAEO,eAAe,CAAC,GAAW,EAAE,SAAiB,EAAE;QACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,OAAO,CAAC,EAAE;YACvC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE;gBACL,GAAG;aACJ;SACF,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB,CAAC,GAAW;QACzC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAEO,sBAAsB,CAAC,GAAW;QACxC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IAC3C,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;YACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IACO,qBAAqB;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;YACrC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;CACF;;YA/KwB,mDAAM;YAAtB,2DAAc;YAMd,+DAAU;YAFV,gEAAQ;YAOR,oEAAc;;AAcV,oBAAoB;IALhC,yDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAsJhC;AAtJgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BS;AACe;AAErB;AACC;AAEiB;AAElB;AAEa;AACD;AACH;AAEQ;IAOxC,yBAAyB,SAAzB,yBAAyB;IAYpC,YACU,IAAiB,EACjB,MAAc,EACd,KAAqB,EACrB,YAAsB,EACtB,UAAsB;QAJtB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAU;QACtB,eAAU,GAAV,UAAU,CAAY;QAThC,cAAS,GAAG,KAAK,CAAC;QAET,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QASjC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/C,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YAErB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;iBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAEL,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAEK,QAAQ,CAAC,iBAAqC;;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,IAAI,IAAI,CAAC,QAAQ,IAAI,+DAAiB,EAAE;oBACtC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CACrB,IAAI,CAAC,KAAK,EACV,iBAAiB,CAAC,WAAW,EAC7B,IAAI,CAAC,GAAG,CACT,CAAC;iBACH;qBAAM;oBACL,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CACtB,IAAI,CAAC,KAAK,EACV,iBAAiB,CAAC,WAAW,EAC7B,IAAI,CAAC,GAAG,CACT,CAAC;iBACH;gBAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;aACtD;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAEa,QAAQ,CAAC,KAAK;;YAC1B,QAAQ,KAAK,CAAC,IAAI,EAAE;gBAClB,KAAK,iEAAyB,CAAC;gBAC/B,KAAK,wDAAgB,CAAC;gBACtB,KAAK,8DAAsB;oBACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,MAAM;gBACR,KAAK,kEAA0B,CAAC;gBAChC,KAAK,4DAAoB;oBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,MAAM;gBACR,KAAK,mEAA2B,CAAC;gBACjC,KAAK,+DAAuB;oBAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,MAAM;gBACR;oBACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;oBACnC,MAAM;aACT;QACH,CAAC;KAAA;IAEa,gBAAgB;;YAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0DAAgB,EAAE;gBACxD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC;KAAA;IAEO,aAAa;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;SACzB,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB,CAAC,WAAmB;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAC/B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;YACxC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;CACF;;YA7IQ,2DAAW;YATX,oDAAM;YAAE,4DAAc;YAKtB,iEAAQ;YAQR,+DAAU;;AAON,yBAAyB;IALrC,yDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mFAAiD;;KAElD,CAAC;GACW,yBAAyB,CAkIrC;AAlIqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBgD;AAClB;AACX;AAErB;AACC;AAED;AAE0B;AAET;AAE+B;AACnC;AACK;AACqC;AACvD;AACmB;AAEA;IAO1C,sBAAsB,SAAtB,sBAAsB;IAgCjC,YACU,MAAc,EACd,KAAqB,EACrB,aAA4B,EAC5B,QAAkB,EAClB,UAAsB,EACtB,WAAwB,EACxB,YAAsB,EACtB,gBAAkC,EAClC,mBAAwC;QARxC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAU;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAxClD,UAAK,GAAG,EAAE,CAAC;QAKX,iBAAY,GAAG,KAAK,CAAC;QAarB,gBAAW,GAAG;YACZ,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACpC,aAAa,wEAA0B,EAAE,CAC1C;YACD,EAAE,EAAE,wEAA0B;YAC9B,WAAW,EAAE,6EAA+B;SAC7C,CAAC;QAIO,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QAajC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,iBAAiB,GAAG,IAAI,sDAAS,CAAC;YACrC,KAAK,EAAE,IAAI,wDAAW,CAAC,IAAI,CAAC,KAAK,EAAE,gEAAmB,CAAC;SACxD,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAE/D,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CACpE,GAAG,EAAE;YACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CACF,CAAC;QAEF,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/C,IAAI,CAAC,oDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;YACD,IAAI,KAAK,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;gBACrC,IAAI,KAAK,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACpC;aACF;QACH,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,iBAAiB,CAAC,IAAY;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE;YAC1C,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAEK,iBAAiB;;YACrB,IAAI;gBACF,MAAM,IAAI,CAAC,mBAAmB,CAAC,2BAA2B,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAC3E,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAmC,EAAE,EAAE,CAAC,CAAC;wBACzE,EAAE,EAAE,UAAU,CAAC,EAAE;wBACjB,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW;wBAClC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI;wBAC9B,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI;qBACnC,CAAC,CAAC,CAAC;gBACN,CAAC,CAAC,CAAC;aACJ;YAAC,OAAO,GAAG,EAAE,GAAE;QAClB,CAAC;KAAA;IAEK,QAAQ;;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,SAAS,GAAG,2BAA2B,CAAC;gBAC7C,OAAO;aACR;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3E,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;YAAC,OAAO,KAAK,EAAE;gBACd,QAAQ,KAAK,CAAC,IAAI,EAAE;oBAClB,KAAK,mEAA2B;wBAC9B,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC;wBACzC,MAAM;oBACR;wBACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;wBACnC,MAAM;iBACT;aACF;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IACzC,CAAC;IAEa,2BAA2B;;YACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qGAAqB,EAAE;gBAC7D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aACzB;QACH,CAAC;KAAA;IAEO,aAAa;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE;gBACL,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,WAAW;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;CACF;;YApNQ,oDAAM;YAAE,4DAAc;YAOtB,wEAAa;YAQb,+CAAQ;YANR,+DAAU;YAGV,2DAAW;YACX,iEAAQ;YAGR,kEAAgB;YAEhB,iEAAmB;;;yBAmCzB,qDAAS,SAAC,YAAY;sBAkEtB,wDAAY,SAAC,aAAa;;AA9FhB,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CA2LlC;AA3LkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BkB;AACI;AAErB;AACC;AAEY;AACJ;AACc;AAEf;AACS;IAOxC,uBAAuB,SAAvB,uBAAuB;IAWlC,YACU,KAAqB,EACrB,MAAc,EACd,IAAiB,EACjB,YAA0B,EAC1B,UAAsB;QAJtB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QACjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,eAAU,GAAV,UAAU,CAAY;QAfhC,cAAS,GAAG,KAAK,CAAC;QAGlB,cAAS,GAAG,uDAAS,CAAC;QAKb,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QASjC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/C,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;QAEL,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACvC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAEK,KAAK,CAAC,KAAY;;YACtB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,0DAAc,CAAC,CAAC;gBAC9E,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEvE,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;oBACpC,KAAK,EAAE;wBACL,KAAK,EAAE,KAAK,CAAC,WAAW,IAAI,KAAK;qBAClC;iBACF,CAAC,CAAC;aACJ;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;CACF;;YA3EQ,4DAAc;YAAE,oDAAM;YAKtB,2DAAW;YAEX,qEAAY;YAGZ,+DAAU;;AAON,uBAAuB;IALnC,yDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA0DnC;AA1DmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBiB;AACI;AAEpB;AACD;AAIa;AACkB;AACb;AACmB;AAE1B;AACM;AAErD,MAAM,aAAa,GAAG;IACpB,aAAa,EAAE,gBAAgB;IAC/B,WAAW,EAAE,wBAAwB;IACrC,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,IAAI;CACf,CAAC;IAOW,oBAAoB,SAApB,oBAAoB;IAY/B,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,YAAsB,EACtB,UAAsB;QAJtB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAU;QACtB,eAAU,GAAV,UAAU,CAAY;QAbhC,iBAAY,GAAG,KAAK,CAAC;QAMZ,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QASjC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CAAC,mDAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG;gBACZ,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;aACtB,CAAC;QACJ,CAAC,CAAC,CACL,CAAC;QAEF,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG;gBAClB,SAAS,EAAE,yDAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;aACpD,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS;QACP,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEK,WAAW,CAAC,QAAmB;;YACnC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC;KAAA;IAED,eAAe,CAAC,QAAe,IAAI;QACjC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;SAC3E,CAAC,CAAC;IACL,CAAC;IAEa,gBAAgB;;YAC5B,IAAI;gBACF,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,gBAAgB,CACpE,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,KAAK,CACX,CAAC;gBAEF,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;aAC5D;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC;KAAA;IAEO,sBAAsB,CAAC,MAA4B;QACzD,QAAQ,MAAM,EAAE;YACd,KAAK,0EAA4B;gBAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,MAAM;YACR,KAAK,iFAAmC;gBACtC,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,MAAM;YACR,KAAK,+EAAiC,CAAC;YACvC,KAAK,iFAAmC;gBACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,MAAM;YACR,KAAK,gFAAkC;gBACrC,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,MAAM;YACR,KAAK,qFAAuC;gBAC1C,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,MAAM;YACR,KAAK,+EAAiC;gBACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,MAAM;SACT;IACH,CAAC;IAEO,eAAe,CAAC,KAAK;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE;gBACL,KAAK;gBACL,GAAG,EAAE,IAAI,CAAC,GAAG;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;YACrC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CAAC,SAAiB,EAAE;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,OAAO,CAAC,EAAE;YACvC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;YACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;YACxC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;SAC3E,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB;QAC7B,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,+DAAiB;gBACpB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,gEAAkB;gBACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,MAAM;SACT;IACH,CAAC;IAEa,oBAAoB;;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACrC,8DAAoB,EACpB,aAAa,CACd,CAAC;YACF,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC;KAAA;IAEa,mBAAmB;;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6DAAmB,EAAE,aAAa,CAAC,CAAC;YAC5E,IAAI;gBACF,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;gBAC1C,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;iBAC/B;qBAAM,IAAI,WAAW,KAAK,OAAO,EAAE;oBAClC,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC;KAAA;IAEO,iBAAiB;QACvB,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,gEAAkB;gBACrB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,+DAAiB;gBACpB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,MAAM;SACT;IACH,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAEO,sBAAsB;QAC5B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;SAC9B,CAAC,CAAC;IACL,CAAC;CACF;;YArOQ,2DAAW;YAPX,4DAAc;YAAE,oDAAM;YAStB,iEAAQ;YAIR,+DAAU;;AAcN,oBAAoB;IALhC,yDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAiNhC;AAjNgC;;;;;;;;;;;;;;;;;;;;;;AC5BS;IAO7B,iBAAiB,SAAjB,iBAAiB;IAC5B,gBAAgB,CAAC;CAClB;;AAFY,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,0EAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAE7B;AAF6B;;;;;;;;;;;;;;;ACLvB,SAAS,WAAW,CAAC,CAAc;IACxC,MAAM,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;IAE3C,IAAI,aAAa,EAAE;QACjB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,IAAI,CAAC,aAAa,EAAE;QACjB,MAAc,CAAC,MAAM,GAAG,IAAI,CAAC;KAC/B;IAED,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AACzB,CAAC","sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.config.ts","./src/app/auth/auth.module.ts","./src/app/auth/errors/no-account/no-account.component.ts","./src/app/auth/errors/no-email/no-email.component.ts","./src/app/auth/errors/phone-not-match/phone-not-match.component.ts","./src/app/auth/errors/user-blocked/user-blocked.component.ts","./src/app/auth/helpers/auth-iin/auth-iin.component.ts","./src/app/auth/login/login-phone/login-phone.component.ts","./src/app/auth/login/login-sms/login-sms.component.ts","./src/app/auth/login/login.component.ts","./src/app/auth/modals/can-register/can-register.component.ts","./src/app/auth/modals/can-restore/can-restore.component.ts","./src/app/auth/modals/contact-modal/contact-modal.component.ts","./src/app/auth/modals/expired/expired.component.ts","./src/app/auth/modals/index.ts","./src/app/auth/modals/invalid-phone/invalid-phone.component.ts","./src/app/auth/register/register-email/register-email.component.ts","./src/app/auth/register/register-error/register-error.component.ts","./src/app/auth/register/register-iin/register-iin.component.ts","./src/app/auth/register/register-password/register-password.component.ts","./src/app/auth/register/register-phone/register-phone.component.ts","./src/app/auth/register/register-result/register-result.component.ts","./src/app/auth/register/register-sms/register-sms.component.ts","./src/app/auth/register/register.component.ts","./src/app/shared/validators/iin.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Login\nimport { LoginComponent } from './login/login.component';\nimport { LoginSmsComponent } from './login/login-sms/login-sms.component';\nimport { LoginPhoneComponent } from './login/login-phone/login-phone.component';\n\n// Register\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterIinComponent } from './register/register-iin/register-iin.component';\nimport { RegisterPhoneComponent } from './register/register-phone/register-phone.component';\nimport { RegisterSmsComponent } from './register/register-sms/register-sms.component';\nimport { RegisterEmailComponent } from './register/register-email/register-email.component';\nimport { RegisterPasswordComponent } from './register/register-password/register-password.component';\nimport { RegisterResultComponent } from './register/register-result/register-result.component';\n\n// Errors\nimport { NoAccountComponent } from './errors/no-account/no-account.component';\nimport { NoEmailComponent } from './errors/no-email/no-email.component';\nimport { UserBlockedComponent } from './errors/user-blocked/user-blocked.component';\nimport { PhoneNotMatchComponent } from './errors/phone-not-match/phone-not-match.component';\n\nimport { AUTH_TYPE } from './auth.model';\nimport { RegisterErrorComponent } from './register/register-error/register-error.component';\n\nexport const routeComponents = [\n  // Login\n  LoginComponent,\n  LoginPhoneComponent,\n  LoginSmsComponent,\n\n  // Register\n  RegisterComponent,\n  RegisterPhoneComponent,\n  RegisterSmsComponent,\n  RegisterEmailComponent,\n  RegisterPasswordComponent,\n  RegisterResultComponent,\n\n  // Errors\n  NoAccountComponent,\n  NoEmailComponent,\n  UserBlockedComponent,\n  PhoneNotMatchComponent,\n];\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'iin',\n      },\n      {\n        path: 'iin',\n        component: RegisterIinComponent,\n        data: {\n          title: 'AUTH.REGISTER_TITLE',\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n      {\n        path: 'no-account',\n        component: NoAccountComponent,\n      },\n      {\n        path: 'no-email',\n        component: NoEmailComponent,\n      },\n      {\n        path: 'user-blocked',\n        component: UserBlockedComponent,\n      },\n      {\n        path: 'phone',\n        component: RegisterPhoneComponent,\n        data: {\n          title: 'SHARED.PHONE',\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n      {\n        path: 'sms',\n        component: RegisterSmsComponent,\n        data: {\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n      {\n        path: 'phone-not-match',\n        component: PhoneNotMatchComponent,\n      },\n      {\n        path: 'email',\n        component: RegisterEmailComponent,\n      },\n      {\n        path: 'password',\n        component: RegisterPasswordComponent,\n        data: {\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n      {\n        path: 'error',\n        component: RegisterErrorComponent,\n        data: {\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n      {\n        path: 'result',\n        component: RegisterResultComponent,\n        data: {\n          action: AUTH_TYPE.REGISTER,\n        },\n      },\n    ],\n  },\n  {\n    path: 'restore',\n    component: RegisterComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'iin',\n      },\n      {\n        path: 'iin',\n        component: RegisterIinComponent,\n        data: {\n          title: 'AUTH.RESTORE',\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n      {\n        path: 'no-account',\n        component: NoAccountComponent,\n      },\n      {\n        path: 'no-email',\n        component: NoEmailComponent,\n      },\n      {\n        path: 'user-blocked',\n        component: UserBlockedComponent,\n      },\n      {\n        path: 'phone',\n        component: RegisterPhoneComponent,\n        data: {\n          title: 'SHARED.PHONE',\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n      {\n        path: 'sms',\n        component: RegisterSmsComponent,\n        data: {\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n      {\n        path: 'phone-not-match',\n        component: PhoneNotMatchComponent,\n      },\n      {\n        path: 'email',\n        component: RegisterEmailComponent,\n      },\n      {\n        path: 'password',\n        component: RegisterPasswordComponent,\n        data: {\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n      {\n        path: 'error',\n        component: RegisterErrorComponent,\n        data: {\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n      {\n        path: 'result',\n        component: RegisterResultComponent,\n        data: {\n          action: AUTH_TYPE.RESTORE,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","export const AUTH_CONFIG = {\n  EMAIL_COUNTDOWN: 300,\n  BASIC_AUTH_HEADER: 'Basic d2ViYXBwOnJqWkk5TWZRT2Y=',\n  NEXT_INPUT_KEY: 'Tab',\n};\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { NgxMaskModule, MaskPipe } from 'ngx-mask';\n\nimport { SharedModule } from '@shared/shared.module';\n\n// Routing\nimport { AuthRoutingModule, routeComponents } from './auth-routing.module';\n\n// Models\nimport { CanRegisterComponent } from './modals/can-register/can-register.component';\nimport { CanRestoreComponent } from './modals/can-restore/can-restore.component';\nimport { ContactModalComponent } from './modals/contact-modal/contact-modal.component';\nimport { ExpiredComponent } from './modals/expired/expired.component';\nimport { InvalidPhoneComponent } from './modals/invalid-phone/invalid-phone.component';\n\n// Errors\nimport { AuthIinComponent } from './helpers/auth-iin/auth-iin.component';\n\nimport { RegisterIinComponent } from './register/register-iin/register-iin.component';\nimport { RegisterErrorComponent } from './register/register-error/register-error.component';\n\n@NgModule({\n  declarations: [\n    routeComponents,\n    CanRegisterComponent,\n    CanRestoreComponent,\n    ContactModalComponent,\n    AuthIinComponent,\n    RegisterIinComponent,\n    ExpiredComponent,\n    InvalidPhoneComponent,\n    RegisterErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxMaskModule,\n  ],\n  providers: [{ provide: MaskPipe, useClass: MaskPipe }],\n})\nexport class AuthModule {}\n","import { Component } from '@angular/core';\n\nimport { NavService } from '@shared/nav/nav.service';\n\n@Component({\n  selector: 'j-no-account',\n  templateUrl: './no-account.component.html',\n  styleUrls: ['./no-account.component.scss'],\n})\nexport class NoAccountComponent {\n  translateParams = {\n    tel: '7711',\n  };\n\n  constructor(private navService: NavService) {\n    this.navService.triggerRegisterError('iin', true);\n    this.navService.triggerRegisterError('no-account', true);\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\n@Component({\r\n  selector: 'j-no-email',\r\n  templateUrl: './no-email.component.html',\r\n  styleUrls: ['./no-email.component.scss'],\r\n})\r\nexport class NoEmailComponent {\r\n  constructor(private navService: NavService) {\r\n    this.navService.triggerRegisterError('iin', true);\r\n    this.navService.triggerRegisterError('no-email', true);\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NavService } from '@shared/nav/nav.service';\nimport { ICountryCode } from '@shared/models';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'j-phone-not-match',\n  templateUrl: './phone-not-match.component.html',\n  styleUrls: ['./phone-not-match.component.scss'],\n})\nexport class PhoneNotMatchComponent implements OnDestroy {\n  iin: string;\n  phone: string;\n  countryCode: ICountryCode;\n\n  readonly subscription = new Subscription();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private navService: NavService\n  ) {\n    this.navService.triggerRegisterError('phone', true);\n    this.navService.triggerRegisterError('phone-not-match', true);\n\n    this.subscription.add(\n      this.route.paramMap\n        .pipe(map(() => window.history.state))\n        .subscribe((state) => {\n          this.phone = state.phone;\n          this.iin = state.iin;\n          this.countryCode = state.countryCode;\n        })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  navigateToPhone(event: Event = null) {\n    event?.preventDefault();\n    this.router.navigate([`phone`], {\n      relativeTo: this.route.parent,\n      state: {\n        iin: this.iin,\n        phone: this.phone,\n        countryCode: this.countryCode,\n      },\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { NavService } from '@shared/nav/nav.service';\n\n@Component({\n  selector: 'j-user-blocked',\n  templateUrl: './user-blocked.component.html',\n  styleUrls: ['./user-blocked.component.scss'],\n})\nexport class UserBlockedComponent {\n  translateParams = {\n    tel: '7711',\n  };\n\n  constructor(private navService: NavService) {\n    this.navService.triggerRegisterError('iin', true);\n    this.navService.triggerRegisterError('user-blocked', true);\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { IinInputComponent } from '@shared/input/iin-input/iin-input.component';\nimport { validateIin } from '@shared/validators/iin';\n\nimport { AuthService } from '@auth/auth.service';\nimport { IIN_STATUS } from '@auth/auth.model';\n\nexport interface IAuthIinResult {\n  iin: string;\n  status?: IIN_STATUS;\n}\n\n@Component({\n  selector: 'j-auth-iin',\n  templateUrl: './auth-iin.component.html',\n  styleUrls: ['./auth-iin.component.scss'],\n})\nexport class AuthIinComponent implements OnDestroy, AfterViewInit {\n  IIN = '';\n\n  isLoading: boolean;\n  isSubmitted: boolean;\n\n  openIinForm: FormGroup;\n\n  hasError: boolean;\n  errorText: string;\n\n  name: string;\n\n  @ViewChild('iinInput') iinInput: IinInputComponent;\n\n  @Output() submitted = new EventEmitter<IAuthIinResult>();\n\n  readonly subs = new Subscription();\n\n  constructor(private authService: AuthService) {\n    this.openIinForm = new FormGroup({\n      iin: new FormControl(this.IIN, [Validators.required, validateIin]),\n    });\n\n    const formSubscription = this.openIinForm.valueChanges.subscribe(\n      (value) => {\n        this.isSubmitted = false;\n        this.errorText = '';\n      }\n    );\n\n    this.subs.add(formSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    this.iinInput.focus();\n  }\n\n  async onSubmit() {\n    this.isSubmitted = true;\n\n    if (!this.openIinForm.valid) {\n      this.validateIin(this.f.iin.errors);\n      return;\n    }\n\n    this.isLoading = true;\n\n    this.submitted.emit({\n      iin: this.iin,\n      // status: result.status,\n    });\n\n    // try {\n    //   const result = await this.authService.checkIin(this.iin);\n\n    //   this.submitted.emit({\n    //     iin: this.iin,\n    //     status: result.status,\n    //   });\n    // } catch (error) {\n    //   switch (error.code) {\n    //     case ERRORS.INVALID_DATA:\n    //       this.submitted.emit({\n    //         iin: this.iin,\n    //         status: IIN_STATUS.INVALID_DATA,\n    //       });\n    //       break;\n    //   }\n    //   this.iinInput.triggerHelperAnimation();\n    // } finally {\n    //   this.isLoading = false;\n    // }\n  }\n\n  get f() {\n    return this.openIinForm.controls;\n  }\n\n  get iin() {\n    return this.f.iin.value;\n  }\n\n  private validateIin(errors) {\n    if (!errors || !errors.iin) {\n      return;\n    }\n    if (errors.iin.length) {\n      this.errorText = `ERRORS.IIN_LENGTH`;\n    } else if (errors.iin.date) {\n      this.errorText = `ERRORS.IIN_DATE`;\n    }\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  AfterViewInit,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { PasswordInputComponent } from '@shared/input/password-input/password-input.component';\nimport { PhoneInputComponent } from '@shared/input/phone-input/phone-input.component';\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { DictionariesService } from '@shared/services';\nimport { ICountryCode, ICountryCodeResponseObj } from '@shared/models';\n\nimport { DEFAULT_COUNTRY, DEFAULT_COUNTRY_CODE } from '@auth/auth.model';\n\nexport interface ILoginForm {\n  phone: string;\n  password: string;\n  countryCode: ICountryCode;\n}\n\n@Component({\n  selector: 'j-login-phone',\n  templateUrl: './login-phone.component.html',\n  styleUrls: ['./login-phone.component.scss'],\n})\nexport class LoginPhoneComponent\n  implements OnInit, OnDestroy, OnChanges, AfterViewInit\n{\n  @Input()\n  isLoading: boolean;\n\n  isSubmitted = false;\n  isPhoneSubmitted = false;\n\n  @Input()\n  phone: string;\n\n  @Input()\n  passwordError: string;\n\n  @Input()\n  loginError: string;\n\n  @Input()\n  prefix: string;\n\n  @ViewChild('phoneInput') phoneInput: PhoneInputComponent;\n  @ViewChild('passwordInput') passwordInput: PasswordInputComponent;\n\n  @ViewChild('registerButton') registerButton: NgbTooltip;\n\n  loginForm: FormGroup;\n\n  PHONE = localStorage.getItem('phone') ? localStorage.getItem('phone') : '';\n  PASSWORD = '';\n  countryCodes: ICountryCode[];\n\n  passwordRegExp = /[^ ]/;\n  passwordPasteRegExp = /[ ]/;\n  countryCode = {\n    code: this.PHONE || '+7',\n    country: this.translateService.instant(\n      `COUNTRIES.${DEFAULT_COUNTRY.KAZAKHSTAN}`\n    ),\n    id: DEFAULT_COUNTRY.KAZAKHSTAN,\n    countryCode: DEFAULT_COUNTRY_CODE.KAZAKHSTAN,\n  };\n\n  @Output() submitted = new EventEmitter<ILoginForm>();\n\n  readonly subscription = new Subscription();\n  queryParams: any;\n\n  isFromAtf = false;\n\n  constructor(\n    private maskedService: MaskedService,\n    private route: ActivatedRoute,\n    private companyService: CompanyService,\n    private translateService: TranslateService,\n    private dictionariesService: DictionariesService\n  ) {\n    const routeSubscription = this.route.queryParams.subscribe(\n    (queryParams) => {\n      this.queryParams = queryParams;\n      this.isFromAtf = this.companyService.isFromAtf(queryParams);\n    });\n    \n    this.loginForm = new FormGroup({\n      prefix: new FormControl(this.countryCode.code, Validators.required),\n      phone: new FormControl(this.PHONE, Validators.required),\n      password: new FormControl(this.PASSWORD, Validators.required),\n    });\n      \n    const formSubscription = this.loginForm.valueChanges.subscribe(() => {\n      this.isSubmitted = false;\n      this.isPhoneSubmitted = false;\n      // this.passwordError = '';\n      // this.loginError = '';\n    });\n\n    this.subscription.add(routeSubscription);\n    this.subscription.add(formSubscription);\n  }\n\n  ngOnInit() {\n    this.fetchCountryCodes();\n  }\n\n  async fetchCountryCodes() {\n    try {\n      await this.dictionariesService\n        .fetchCountryCodesDictionary()\n        .then((response) => {\n          this.countryCodes = response.map(\n            (countryObj: ICountryCodeResponseObj) => ({\n              id: countryObj.id,\n              code: countryObj.value.description,\n              country: countryObj.value.name,\n              countryCode: countryObj.value.code,\n            })\n          );\n        });\n    } catch (err) {}\n  }\n\n  public triggerErrorAnimation() {\n    this.passwordInput.triggerHelperAnimation();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    if (this.loginForm.controls.phone.valid) {\n      this.passwordInput.focus();\n    } else {\n      this.phoneInput.focus();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.passwordError?.currentValue) {\n      this.passwordError = changes.passwordError.currentValue;\n    }\n  }\n\n  onTabPress(event: KeyboardEvent) {\n    event.preventDefault();\n\n    this.isPhoneSubmitted = true;\n\n    if (this.f.phone.valid) {\n      this.passwordInput.focus();\n    }\n  }\n\n  async onSubmit() {\n    this.isSubmitted = true;\n    if (this.loginForm.invalid) {\n      if (this.loginForm.controls.phone.errors) {\n        this.loginError = 'ERRORS.NOT_ENOUGH_SYMBOLS';\n      } else if (this.loginForm.controls.password.errors) {\n        this.passwordError = 'ERRORS.ENTER_PASSWORD';\n      }\n      return;\n    }\n\n    const phone = this.maskedService.getUnmaskedPhone(this.f.phone.value);\n    const password = this.f.password.value;\n    const countryCode = this.countryCode;\n    this.submitted.emit({\n      phone,\n      password,\n      countryCode,\n    });\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onCountrySelected(countryCode) {\n    this.countryCode = countryCode;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SMS_HEADERS } from '@api/api.service';\nimport { ICountryCode, ISmsToken, TOKEN_TYPE } from '@shared/models';\nimport { CONFIRM_SIGNATURE_TYPE } from '@shared/components';\nimport { Dictionary } from 'lodash';\n\n@Component({\n  selector: 'j-login-sms',\n  templateUrl: './login-sms.component.html',\n  styleUrls: ['./login-sms.component.scss'],\n})\nexport class LoginSmsComponent {\n  @Input()\n  isLoading: boolean;\n\n  @Input()\n  phone: string;\n\n  @Input()\n  countryCode: ICountryCode;\n\n  isReady = false;\n  headerParams: Dictionary<any>;\n\n  preferredSignatureType = localStorage.getItem('preferredSignatureType');\n  tokenType = TOKEN_TYPE;\n\n  @Output() submitted = new EventEmitter<ISmsToken>();\n  @Output() closed = new EventEmitter();\n\n  constructor() {\n    this.headerParams = {\n      smsHeader: SMS_HEADERS.AUTHORIZATION\n    };\n    this.preferredSignatureType = localStorage.getItem('preferredSignatureType') || CONFIRM_SIGNATURE_TYPE.SMS;\n  }\n\n  onSmsLoaded() {\n    this.isReady = true;\n  }\n\n  onSubmit(smsToken: ISmsToken) {\n    this.submitted.emit(smsToken);\n  }\n\n  navigateToPhone(event: Event = null) {\n    event?.preventDefault();\n    this.closed.emit();\n  }\n\n  changeCodeRequestMethod(method) {\n    localStorage.setItem(\n      'preferredSignatureType',\n      method === TOKEN_TYPE.OTP\n        ? CONFIRM_SIGNATURE_TYPE.OTP\n        : CONFIRM_SIGNATURE_TYPE.SMS\n    );\n    this.preferredSignatureType = method;\n  }\n}\n","import { Component, ViewChild, OnDestroy, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NotifierService } from 'angular-notifier';\n\nimport { ERRORS } from '@api/index';\n\nimport { TokenService } from '@shared/token/token.service';\nimport { ICountryCode, ISmsToken } from '@shared/models';\n\nimport { AuthService } from '@auth/auth.service';\n\nimport {\n  ILoginForm,\n  LoginPhoneComponent,\n} from './login-phone/login-phone.component';\n\nenum LOGIN_STEPS {\n  PHONE = 'phone',\n  SMS = 'sms',\n  LOADING = 'loading',\n}\n\n@Component({\n  selector: 'j-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnDestroy {\n  isLoading = false;\n\n  steps = LOGIN_STEPS;\n  currentStep: LOGIN_STEPS = this.steps.PHONE;\n\n  phoneError = '';\n  loginForm: ILoginForm;\n\n  phone: string;\n\n  @ViewChild('loginPhone') loginPhone: LoginPhoneComponent;\n\n  readonly subscription = new Subscription();\n  countryCode: ICountryCode;\n\n  constructor(\n    private auth: AuthService,\n    private tokenService: TokenService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private notifierService: NotifierService\n  ) {\n    this.subscription.add(\n      this.route.paramMap\n        .pipe(map(() => window.history.state))\n        .subscribe((state) => {\n          if (state.phone) {\n            this.phone = state.phone;\n          }\n          if (state.error) {\n            this.phoneError = state.error;\n          }\n        })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onSmsClose() {\n    this.navigateToPhone();\n    this.phoneError = '';\n  }\n\n  onPhoneSubmit(loginForm: ILoginForm) {\n    this.loginForm = loginForm;\n    this.phone = '+' + this.loginForm.phone;\n    this.countryCode = this.loginForm.countryCode;\n\n    try {\n      const deviceToken = this.tokenService.getDeviceToken(\n        this.loginForm.password\n      );\n      localStorage.setItem('countryCode', JSON.stringify(this.countryCode));\n      localStorage.setItem('phone', this.loginForm.phone);\n      \n      if (deviceToken) {\n        this.login();\n      } else {\n        this.navigateToSms();\n      }\n    } catch (error) {\n      this.navigateToSms();\n    }\n  }\n\n  async onSmsSubmit(smsToken: ISmsToken) {\n    this.auth.setSmsToken(smsToken);\n    this.currentStep = this.steps.LOADING;\n    try {\n      const deviceToken = await this.auth.requestDevice(\n        this.phone,\n        smsToken.type\n      );\n      this.tokenService.setDeviceToken(\n        deviceToken.signature,\n        this.loginForm.password\n      );\n      this.login();\n    } catch (error) {\n      this.navigateToPhone();\n\n      switch (error.code) {\n        case ERRORS.DEVICE_TOKEN_INVALID:\n        case ERRORS.RESOURCE_NOT_FOUND:\n        case ERRORS.AUTHORIZATION_ERROR:\n        case ERRORS.INVALID_GRANT:\n          this.phoneError = 'ERRORS.WRONG_CREDENTIALS';\n          break;\n        case ERRORS.USER_BLOCKED:\n        case ERRORS.RESOURCE_BLOCKED:\n          this.phoneError = 'ERRORS.ACCOUNT_BLOCKED';\n          break;\n        default:\n          this.phoneError = error.description;\n          break;\n      }\n    }\n  }\n\n  async login() {\n    this.isLoading = true;\n    this.phoneError = '';\n\n    try {\n      await this.auth.login(\n        '+' + this.loginForm.phone,\n        this.loginForm.password\n      );\n      this.router.navigateByUrl('/');\n      this.notifierService.hideAll();\n    } catch (error) {\n      this.navigateToPhone();\n\n      if (!error.status) {\n        this.phoneError = 'ERRORS.API_UNAVAILABLE';\n      } else {\n        switch (error.code) {\n          case ERRORS.RESOURCE_NOT_FOUND:\n          case ERRORS.AUTHORIZATION_ERROR:\n          case ERRORS.INVALID_GRANT:\n            this.phoneError = 'ERRORS.WRONG_CREDENTIALS';\n            break;\n\n          case ERRORS.RESOURCE_BLOCKED:\n            this.tokenService.clearDeviceToken();\n            this.phoneError = 'ERRORS.ACCOUNT_BLOCKED';\n            break;\n\n          case ERRORS.DEVICE_NOT_AUTHORIZED:\n          case ERRORS.DEVICE_TOKEN_INVALID:\n          case ERRORS.TOKEN_EXPIRED:\n            this.navigateToSms();\n            // this.phoneError = error.description;\n            break;\n\n          default:\n            this.phoneError = error.description;\n            break;\n        }\n      }\n\n      this.loginPhone.triggerErrorAnimation();\n      this.isLoading = false;\n    }\n  }\n\n  private navigateToSms() {\n    this.currentStep = LOGIN_STEPS.SMS;\n  }\n\n  private navigateToPhone() {\n    this.currentStep = LOGIN_STEPS.PHONE;\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-can-register',\n  templateUrl: './can-register.component.html',\n  styleUrls: ['./can-register.component.scss']\n})\nexport class CanRegisterComponent {\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-can-restore',\n  templateUrl: './can-restore.component.html',\n  styleUrls: ['./can-restore.component.scss'],\n})\nexport class CanRestoreComponent {\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal(message) {\n    this.modal.close(message);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-contact-modal',\n  templateUrl: './contact-modal.component.html',\n  styleUrls: ['./contact-modal.component.scss'],\n})\nexport class ContactModalComponent {\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal(message) {\n    this.modal.close(message);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-expired',\n  templateUrl: './expired.component.html',\n  styleUrls: ['./expired.component.scss'],\n})\nexport class ExpiredComponent {\n  constructor(public modal: NgbActiveModal) {}\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","export * from './can-register/can-register.component';\nexport * from './can-restore/can-restore.component';\nexport * from './contact-modal/contact-modal.component';\nexport * from './expired/expired.component';\nexport * from './invalid-phone/invalid-phone.component';\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-invalid-phone',\n  templateUrl: './invalid-phone.component.html',\n  styleUrls: ['./invalid-phone.component.scss'],\n})\nexport class InvalidPhoneComponent {\n  constructor(public modal: NgbActiveModal) {}\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","import { Component, ViewChild, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ERRORS } from '@api/index';\r\n\r\nimport { SmsInputComponent } from '@shared/input/sms-input/sms-input.component';\r\n\r\nimport { AUTH_CONFIG } from '@auth/auth.config';\r\nimport { AuthService } from '@auth/auth.service';\r\nimport { ContactModalComponent } from '@auth/modals/contact-modal/contact-modal.component';\r\nimport { ExpiredComponent } from '@auth/modals/expired/expired.component';\r\nimport {\r\n  SMS_CODE_LENGTH,\r\n  SMS_TIMER_COUNTDOWN,\r\n  SMS_ERROR_TYPES,\r\n  SMS_TABS,\r\n} from '@shared/models';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\n@Component({\r\n  selector: 'j-register-email',\r\n  templateUrl: './register-email.component.html',\r\n  styleUrls: ['./register-email.component.scss'],\r\n})\r\nexport class RegisterEmailComponent implements OnDestroy {\r\n  phone: string;\r\n  iin: string;\r\n  email: string;\r\n\r\n  emailCodeForm: FormGroup;\r\n\r\n  smsCodeLength = SMS_CODE_LENGTH;\r\n\r\n  errorText: string;\r\n  errorParams: {\r\n    triesLeft: number;\r\n  };\r\n\r\n  hasError: boolean;\r\n\r\n  timer: any;\r\n  timerValue: number;\r\n  timerMaxValue = SMS_TIMER_COUNTDOWN;\r\n  isTimerRunning: boolean;\r\n\r\n  blockedTimer: any;\r\n  blockedTimerValue: number;\r\n  isBlocked: boolean;\r\n  isBlockedTimerRunning: boolean;\r\n\r\n  expireTimer: any;\r\n  expireTimerValue: number;\r\n  expireTimerMaxValue = AUTH_CONFIG.EMAIL_COUNTDOWN;\r\n  isExpireTimerRunning: boolean;\r\n\r\n  errorTypes = SMS_ERROR_TYPES;\r\n\r\n  isLoading: boolean;\r\n  isReady = false;\r\n  isSubmitted: boolean;\r\n\r\n  currentTab = SMS_TABS.FORM;\r\n  authTabs = SMS_TABS;\r\n\r\n  @ViewChild('codeInput') codeInput: SmsInputComponent;\r\n\r\n  readonly subs = new Subscription();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    private navService: NavService\r\n  ) {\r\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\r\n    this.emailCodeForm = new FormGroup({\r\n      emailCode: new FormControl('', Validators.required),\r\n    });\r\n\r\n    const routeSubscription = this.route.paramMap\r\n      .pipe(map(() => window.history.state))\r\n      .subscribe((state) => {\r\n        this.phone = state.phone;\r\n        this.iin = state.iin;\r\n        this.requestEmail();\r\n      });\r\n\r\n    const formSubscription = this.emailCodeForm.valueChanges.subscribe(\r\n      (value) => {\r\n        this.isSubmitted = false;\r\n        if (value.emailCode && value.emailCode.length === this.smsCodeLength) {\r\n          this.onSubmit();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.subs.add(routeSubscription);\r\n    this.subs.add(formSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  openContactModal() {\r\n    this.modalService.open(ContactModalComponent, {\r\n      centered: true,\r\n    });\r\n  }\r\n\r\n  setTab(tab: SMS_TABS) {\r\n    this.currentTab = tab;\r\n  }\r\n\r\n  get f() {\r\n    return this.emailCodeForm.controls;\r\n  }\r\n\r\n  async requestEmail() {\r\n    this.f.emailCode.setValue('');\r\n    this.errorText = '';\r\n    this.hasError = false;\r\n    try {\r\n      const emailToken = await this.auth.requestEmail(this.phone, this.iin);\r\n\r\n      this.setTab(this.authTabs.FORM);\r\n      this.email = emailToken.email.replace(/\\*/gm, '•');\r\n      this.codeInput.focus();\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case ERRORS.ARGUMENT_MISSING:\r\n          this.router.navigate([`phone`], {\r\n            relativeTo: this.route.parent,\r\n          });\r\n          break;\r\n        case ERRORS.RESOURCE_BLOCKED:\r\n          if (error.data && error.data.millisecondsLeft) {\r\n            this.startBlockedTimer(error.data.millisecondsLeft);\r\n          }\r\n          this.setTab(this.authTabs.FORBIDDEN_BLOCKED);\r\n          break;\r\n        default:\r\n          this.setTab(this.authTabs.ERRORED);\r\n          break;\r\n      }\r\n    } finally {\r\n      this.isReady = true;\r\n    }\r\n  }\r\n\r\n  navigateToPhone(event: Event = null) {\r\n    event?.preventDefault();\r\n    this.router.navigate([`phone`], {\r\n      relativeTo: this.route.parent,\r\n      state: {\r\n        iin: this.iin,\r\n        phone: this.phone,\r\n      },\r\n    });\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.isSubmitted = true;\r\n\r\n    if (this.emailCodeForm.valid) {\r\n      this.isLoading = true;\r\n      const emailCode = this.f.emailCode.value;\r\n\r\n      try {\r\n        await this.auth.submitEmail(emailCode, this.phone, this.iin);\r\n\r\n        this.router.navigate([`password`], {\r\n          relativeTo: this.route.parent,\r\n          state: { phone: this.phone, iin: this.iin },\r\n        });\r\n      } catch (error) {\r\n        this.hasError = true;\r\n\r\n        switch (error.code) {\r\n          case ERRORS.ARGUMENT_MISSING:\r\n            this.router.navigate([`phone`], {\r\n              relativeTo: this.route.parent,\r\n            });\r\n            break;\r\n          case ERRORS.RESOURCE_BLOCKED:\r\n          case ERRORS.INVALID_CODE:\r\n            let triesLeft;\r\n            if (error.data && error.data.triesLeft) {\r\n              triesLeft = error.data.triesLeft;\r\n              this.errorParams = { triesLeft };\r\n              this.errorText = 'ERRORS.INVALID_CODE.';\r\n              switch (triesLeft % 20) {\r\n                case 1:\r\n                  this.errorText += `ONE`;\r\n                  break;\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                  this.errorText += `FEW`;\r\n                  break;\r\n                default:\r\n                  this.errorText += `OTHER`;\r\n              }\r\n            } else {\r\n              this.startTimer();\r\n              this.setTab(this.authTabs.FORBIDDEN);\r\n            }\r\n            break;\r\n\r\n          case ERRORS.FORBIDDEN:\r\n            this.startTimer();\r\n            this.setTab(this.authTabs.FORBIDDEN);\r\n            break;\r\n\r\n          case ERRORS.PHONE_TOKEN_EXPIRED:\r\n          case ERRORS.TOKEN_EXPIRED:\r\n            const modalRef = this.modalService.open(ExpiredComponent, {\r\n              centered: true,\r\n            });\r\n            try {\r\n              await modalRef.result;\r\n            } catch (error) {\r\n            } finally {\r\n              this.router.navigate([`iin`], {\r\n                relativeTo: this.route.parent,\r\n                state: { iin: this.iin },\r\n              });\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.errorText = error.description;\r\n            break;\r\n        }\r\n        this.codeInput.triggerHelperAnimation();\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  private startTimer(timerMaxValue = this.timerMaxValue) {\r\n    this.isTimerRunning = true;\r\n    this.timerValue = timerMaxValue;\r\n    this.timer = setInterval(() => {\r\n      this.timerValue--;\r\n\r\n      if (this.timerValue === 0) {\r\n        this.stopTimer();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  private stopTimer() {\r\n    clearInterval(this.timer);\r\n    this.isTimerRunning = false;\r\n  }\r\n\r\n  private startBlockedTimer(millisecondsLeft: number) {\r\n    this.blockedTimerValue = Math.ceil(millisecondsLeft / 1000);\r\n    this.isBlockedTimerRunning = true;\r\n\r\n    this.blockedTimer = setInterval(() => {\r\n      this.blockedTimerValue--;\r\n\r\n      if (this.blockedTimerValue === 0) {\r\n        this.stopBlockedTimer();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  private stopBlockedTimer() {\r\n    clearInterval(this.blockedTimer);\r\n    this.isBlockedTimerRunning = false;\r\n    this.blockedTimerValue = null;\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AUTH_TYPE } from '@auth/auth.model';\n\n@Component({\n  selector: 'j-register-error',\n  templateUrl: './register-error.component.html',\n  styleUrls: ['./register-error.component.scss'],\n})\nexport class RegisterErrorComponent implements OnDestroy {\n  authType: AUTH_TYPE;\n  error: any;\n  iin: string;\n  subscription = new Subscription();\n\n  constructor(private route: ActivatedRoute) {\n    const routeDataSubscription = this.route.data.subscribe((data) => {\n      this.authType = data.action;\n    });\n\n    const routeStateSubscription = this.route.paramMap\n      .pipe(map(() => window.history.state))\n      .subscribe((state) => {\n        this.error = state.error;\n        this.iin = state.iin;\n      });\n\n    this.subscription.add(routeStateSubscription);\n    this.subscription.add(routeDataSubscription);\n  }\n\n  get description() {\n    return this.authType === AUTH_TYPE.REGISTER\n      ? 'AUTH.ERROR.DESCRIPTION_REGISTER'\n      : 'AUTH.ERROR.DESCRIPTION_RESTORE';\n  }\n\n  get state() {\n    return {\n      iin: this.iin,\n    };\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { IIN_STATUS, AUTH_TYPE } from '@auth/auth.model';\nimport { CanRestoreComponent, CanRegisterComponent } from '@auth/modals';\nimport { IAuthIinResult } from '@auth/helpers/auth-iin/auth-iin.component';\nimport { CompanyService } from '@company/company.service';\n\nconst MODAL_OPTIONS = {\n  backdropClass: 'backdrop_light',\n  windowClass: 'modal_light modal-auth',\n  size: 'md',\n  centered: true,\n};\n\n@Component({\n  selector: 'j-register-iin',\n  templateUrl: './register-iin.component.html',\n  styleUrls: ['./register-iin.component.scss'],\n})\nexport class RegisterIinComponent implements OnDestroy {\n  title: string;\n  authType: AUTH_TYPE;\n\n  subs = new Subscription();\n  isFromAtf = false;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private navService: NavService,\n    private modalService: NgbModal,\n    private companyService: CompanyService\n  ) {\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\n    this.navService.triggerRegisterError('iin', false);\n    this.navService.triggerRegisterError('no-account', false);\n    this.navService.triggerRegisterError('no-email', false);\n    this.navService.triggerRegisterError('user-blocked', false);\n    this.navService.triggerRegisterError('phone-not-match', false);\n\n    const routeDataSubscription = this.route.data.subscribe((data) => {\n      this.title = data.title;\n      this.authType = data.action;\n    });\n\n    const routeParamSubscription = this.route.queryParams.subscribe(\n      (queryParams) => {\n        this.isFromAtf = this.companyService.isFromAtf(queryParams);\n      }\n    );\n\n    this.subs.add(routeDataSubscription);\n    this.subs.add(routeParamSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  onSubmit(result: IAuthIinResult) {\n    this.navigateToPhone(result.iin);\n    // this.handleCheckIin(result.status, result.iin);\n  }\n\n  private async handleCheckIin(iinStatus: IIN_STATUS, iin: string) {\n    switch (iinStatus) {\n      case IIN_STATUS.BLOCKED:\n        this.navigateToUserBlocked();\n        break;\n      case IIN_STATUS.DOES_NOT_EXIST:\n        this.navigateToNoAccount();\n        break;\n      case IIN_STATUS.INCORRECT_DATA:\n      case IIN_STATUS.INVALID_DATA:\n        this.navigateToNoEmail();\n        break;\n      case IIN_STATUS.ALREADY_REGISTERED:\n        this.handleAlreadyRegistered(iin);\n        break;\n      case IIN_STATUS.CAN_REGISTER:\n        this.handleCanRegister(iin);\n        break;\n    }\n  }\n\n  private handleAlreadyRegistered(iin: string) {\n    switch (this.authType) {\n      case AUTH_TYPE.RESTORE:\n        this.navigateToPhone(iin);\n        break;\n      case AUTH_TYPE.REGISTER:\n        this.showCanRestoreModal(iin);\n        break;\n    }\n  }\n\n  private async showCanRegisterModal(iin: string) {\n    const modalRef = this.modalService.open(\n      CanRegisterComponent,\n      MODAL_OPTIONS\n    );\n    try {\n      await modalRef.result;\n      this.navigateToRegisterPhone(iin);\n    } catch (error) {}\n  }\n\n  private async showCanRestoreModal(iin: string) {\n    const modalRef = this.modalService.open(CanRestoreComponent, MODAL_OPTIONS);\n    try {\n      const closeAction = await modalRef.result;\n      if (closeAction == 'restore') {\n        this.navigateToRestorePhone(iin);\n      } else if (closeAction == 'login') {\n        this.navigateToLogin();\n      }\n    } catch (error) {}\n  }\n\n  private handleCanRegister(iin: string) {\n    switch (this.authType) {\n      case AUTH_TYPE.REGISTER:\n        this.navigateToPhone(iin);\n        break;\n      case AUTH_TYPE.RESTORE:\n        this.showCanRegisterModal(iin);\n        break;\n    }\n  }\n\n  private navigateToPhone(iin: string, prefix: string = '') {\n    this.router.navigate([`${prefix}phone`], {\n      relativeTo: this.route.parent,\n      state: {\n        iin,\n      },\n    });\n  }\n\n  private navigateToRegisterPhone(iin: string) {\n    this.navigateToPhone(iin, '../register/');\n  }\n\n  private navigateToRestorePhone(iin: string) {\n    this.navigateToPhone(iin, '../restore/');\n  }\n\n  private navigateToLogin() {\n    this.router.navigate([`../login`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  private navigateToNoAccount() {\n    this.router.navigate([`no-account`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  private navigateToNoEmail() {\n    this.router.navigate([`no-email`], {\n      relativeTo: this.route.parent,\n    });\n  }\n  private navigateToUserBlocked() {\n    this.router.navigate([`user-blocked`], {\n      relativeTo: this.route.parent,\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ERRORS } from '@api/index';\n\nimport { AuthService } from '@auth/auth.service';\nimport { ExpiredComponent } from '@auth/modals';\nimport { AUTH_TYPE } from '@auth/auth.model';\nimport { INewPasswordResult } from '@shared/components/new-password/new-password.component';\nimport { NavService } from '@shared/nav/nav.service';\n\n@Component({\n  selector: 'j-register-password',\n  templateUrl: './register-password.component.html',\n  styleUrls: ['./register-password.component.scss'],\n})\nexport class RegisterPasswordComponent {\n  authType: AUTH_TYPE;\n\n  phone: string;\n  iin: string;\n\n  errorText: string;\n\n  isLoading = false;\n\n  readonly subs = new Subscription();\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private modalService: NgbModal,\n    private navService: NavService\n  ) {\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\n    const routeStateSubscription = this.route.paramMap\n      .pipe(map(() => window.history.state))\n      .subscribe((state) => {\n        this.phone = state.phone;\n        this.iin = state.iin;\n\n        if (!this.iin) {\n          this.navigateToIin();\n        } else if (!this.phone) {\n          this.navigateToPhone();\n        }\n      });\n\n    const routeDataSubscription = this.route.data.subscribe((data) => {\n      this.authType = data.action;\n    });\n\n    this.subs.add(routeStateSubscription);\n    this.subs.add(routeDataSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  async onSubmit(newPasswordResult: INewPasswordResult) {\n    this.isLoading = true;\n\n    try {\n      if (this.authType == AUTH_TYPE.RESTORE) {\n        await this.auth.restore(\n          this.phone,\n          newPasswordResult.newPassword,\n          this.iin\n        );\n      } else {\n        await this.auth.register(\n          this.phone,\n          newPasswordResult.newPassword,\n          this.iin\n        );\n      }\n\n      this.navigateToResult(newPasswordResult.newPassword);\n    } catch (error) {\n      this.mapError(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async mapError(error) {\n    switch (error.code) {\n      case ERRORS.RESOURCE_NOT_FOUND:\n      case ERRORS.FORBIDDEN:\n      case ERRORS.RESOURCE_EXISTS:\n        this.navigateToPhoneNotMatch();\n        break;\n      case ERRORS.PHONE_TOKEN_EXPIRED:\n      case ERRORS.TOKEN_EXPIRED:\n        this.showExpiredModal();\n        break;\n      case ERRORS.INVALID_PHONE_FORMAT:\n      case ERRORS.ARGUMENT_MISSING:\n        this.navigateToPhone();\n        break;\n      default:\n        this.errorText = error.description;\n        break;\n    }\n  }\n\n  private async showExpiredModal() {\n    const modalRef = this.modalService.open(ExpiredComponent, {\n      centered: true,\n    });\n    try {\n      await modalRef.result;\n    } catch (error) {\n    } finally {\n      this.navigateToIin();\n    }\n  }\n\n  private navigateToIin() {\n    this.router.navigate([`iin`], {\n      relativeTo: this.route.parent,\n      state: { iin: this.iin || '' },\n    });\n  }\n\n  private navigateToPhone() {\n    this.router.navigate([`phone`], {\n      relativeTo: this.route.parent,\n      state: { iin: this.iin },\n    });\n  }\n\n  private navigateToResult(newPassword: string) {\n    this.router.navigate([`result`], {\n      relativeTo: this.route.parent,\n      state: { phone: this.phone, password: newPassword },\n    });\n  }\n\n  private navigateToPhoneNotMatch() {\n    this.router.navigate([`phone-not-match`], {\n      relativeTo: this.route.parent,\n    });\n  }\n}\n","import { Component, ViewChild, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ERRORS } from '@api/index';\n\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { PhoneInputComponent } from '@shared/input/phone-input/phone-input.component';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { AUTH_TYPE, DEFAULT_COUNTRY, DEFAULT_COUNTRY_CODE } from '@auth/auth.model';\nimport { AuthService } from '@auth/auth.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { InvalidPhoneComponent } from '@auth/modals/invalid-phone/invalid-phone.component';\nimport { MaskPipe } from 'ngx-mask';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICountryCode, ICountryCodeResponseObj } from '@shared/models';\nimport { DictionariesService } from '@shared/services';\n\n@Component({\n  selector: 'j-register-phone',\n  templateUrl: './register-phone.component.html',\n  styleUrls: ['./register-phone.component.scss'],\n})\nexport class RegisterPhoneComponent implements OnDestroy, OnInit {\n  PHONE = '';\n\n  isLoading: boolean;\n  isSubmitted: boolean;\n\n  hasNoAccount = false;\n\n  title: string;\n  authType: AUTH_TYPE;\n\n  errorText: string;\n\n  registerPhoneForm: FormGroup;\n\n  phone: string;\n  iin: string;\n\n  countryCodes: ICountryCode[];\n  countryCode = {\n    code: '+7',\n    country: this.translateService.instant(\n      `COUNTRIES.${DEFAULT_COUNTRY.KAZAKHSTAN}`\n    ),\n    id: DEFAULT_COUNTRY.KAZAKHSTAN,\n    countryCode: DEFAULT_COUNTRY_CODE.KAZAKHSTAN,\n  };\n\n  @ViewChild('phoneInput') phoneInput: PhoneInputComponent;\n\n  readonly subs = new Subscription();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private maskedService: MaskedService,\n    private maskPipe: MaskPipe,\n    private navService: NavService,\n    private authService: AuthService,\n    private modalService: NgbModal,\n    private translateService: TranslateService,\n    private dictionariesService: DictionariesService,\n  ) {\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\n    this.registerPhoneForm = new FormGroup({\n      phone: new FormControl(this.PHONE, Validators.required),\n    });\n\n    this.navService.triggerRegisterError('phone', false);\n    this.navService.triggerRegisterError('no-account', false);\n    this.navService.triggerRegisterError('no-email', false);\n    this.navService.triggerRegisterError('user-blocked', false);\n    this.navService.triggerRegisterError('phone-not-match', false);\n\n    const formSubscription = this.registerPhoneForm.valueChanges.subscribe(\n      () => {\n        this.isSubmitted = false;\n      }\n    );\n\n    const routeDataSubscription = this.route.data.subscribe((data) => {\n      this.title = data.title;\n      this.authType = data.action;\n    });\n\n    const routeStateSubscription = this.route.paramMap\n      .pipe(map(() => window.history.state))\n      .subscribe((state) => {\n        if (state.iin) {\n          this.iin = state.iin;\n        } else {\n          this.navigateToIin();\n        }\n        if (state.countryCode) {\n          this.countryCode = state.countryCode;\n          if (state.phone) {\n            this.f.phone.setValue(state.phone);\n          }\n        }\n      });\n\n    this.subs.add(formSubscription);\n    this.subs.add(routeDataSubscription);\n    this.subs.add(routeStateSubscription);\n  }\n\n  ngOnInit() {\n    this.fetchCountryCodes();\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  @HostListener('keyup.enter')\n  onEnter() {\n    this.phoneInput.blur();\n    this.onSubmit();\n  }\n\n  focus() {\n    this.phoneInput.focus();\n  }\n\n  navigateFromModal(path: string) {\n    this.router.navigate([`/auth/${path}/sms`], {\n      state: { phone: this.phone, iin: this.iin },\n    });\n  }\n\n  async fetchCountryCodes() {\n    try {\n      await this.dictionariesService.fetchCountryCodesDictionary().then(response => {\n        this.countryCodes = response.map((countryObj: ICountryCodeResponseObj) => ({\n          id: countryObj.id,\n          code: countryObj.value.description,\n          country: countryObj.value.name,\n          countryCode: countryObj.value.code,\n        }));\n      });\n    } catch (err) {}\n  }\n\n  async onSubmit() {\n    this.isSubmitted = true;\n    if (!this.registerPhoneForm.valid) {\n      this.errorText = 'ERRORS.NOT_ENOUGH_SYMBOLS';\n      return;\n    }\n\n    this.isLoading = true;\n\n    try {\n      this.phone = '+' + this.maskedService.getUnmaskedPhone(this.f.phone.value);\n      await this.authService.checkPhone(this.phone);\n      this.navigateToSms();\n    } catch (error) {\n      switch (error.code) {\n        case ERRORS.INVALID_PHONE_FORMAT:\n          await this.showInvalidPhoneFormatModal();\n          break;\n        default:\n          this.errorText = error.description;\n          break;\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  get f() {\n    return this.registerPhoneForm.controls;\n  }\n\n  private async showInvalidPhoneFormatModal() {\n    const modalRef = this.modalService.open(InvalidPhoneComponent, {\n      centered: true,\n    });\n\n    try {\n      await modalRef.result;\n    } catch (error) {\n    } finally {\n      this.phoneInput.focus();\n    }\n  }\n\n  private navigateToSms() {\n    this.router.navigate([`sms`], {\n      relativeTo: this.route.parent,\n      state: {\n        phone: this.phone,\n        iin: this.iin,\n        countryCode: this.countryCode,\n      },\n    });\n  }\n\n  private navigateToIin() {\n    this.router.navigate([`iin`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  onCountrySelected(countryCode) {\n    this.countryCode = countryCode;\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from '@auth/auth.service';\nimport { AUTH_TYPE } from '@auth/auth.model';\nimport { TokenService } from '@shared/token/token.service';\nimport { HEADERS } from '@api/api.service';\nimport { TOKEN_TYPE } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\n@Component({\n  selector: 'j-register-result',\n  templateUrl: './register-result.component.html',\n  styleUrls: ['./register-result.component.scss'],\n})\nexport class RegisterResultComponent implements OnDestroy {\n  isLoading = false;\n\n  authType: AUTH_TYPE;\n  authTypes = AUTH_TYPE;\n\n  phone: string;\n  password: string;\n\n  readonly subs = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private auth: AuthService,\n    private tokenService: TokenService,\n    private navService: NavService\n  ) {\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\n    const routeStateSubscription = this.route.paramMap\n      .pipe(map(() => window.history.state))\n      .subscribe((state) => {\n        this.phone = state.phone;\n        this.password = state.password;\n      });\n\n    const routeDataSubscription = this.route.data.subscribe((data) => {\n      this.authType = data.action;\n    });\n\n    this.subs.add(routeStateSubscription);\n    this.subs.add(routeDataSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  async login(event: Event) {\n    event.preventDefault();\n    this.isLoading = true;\n    try {\n      const deviceToken = await this.auth.requestDevice(this.phone, TOKEN_TYPE.SMS);\n      this.tokenService.setDeviceToken(deviceToken.signature, this.password);\n\n      await this.auth.login(this.phone, this.password);\n\n      this.router.navigateByUrl('/');\n    } catch (error) {\n      this.router.navigate(['/auth/login'], {\n        state: {\n          error: error.description || error,\n        },\n      });\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { ICountryCode, ISmsToken } from '@shared/models';\n\nimport { AuthService } from '@auth/auth.service';\nimport { AUTH_TYPE, IIN_AND_PHONE_STATUS } from '@auth/auth.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CanRegisterComponent, CanRestoreComponent } from '@auth/modals';\nimport { Dictionary } from 'lodash';\nimport { SMS_HEADERS } from '@api/api.service';\nimport { NavService } from '@shared/nav/nav.service';\n\nconst MODAL_OPTIONS = {\n  backdropClass: 'backdrop_light',\n  windowClass: 'modal_light modal-auth',\n  size: 'md',\n  centered: true,\n};\n\n@Component({\n  selector: 'j-register-sms',\n  templateUrl: './register-sms.component.html',\n  styleUrls: ['./register-sms.component.scss'],\n})\nexport class RegisterSmsComponent implements OnDestroy {\n  phone: string;\n  iin: string;\n  countryCode: ICountryCode;\n  isFormLoaded = false;\n  authType: AUTH_TYPE;\n\n  params: Dictionary<any>;\n  headerParams: Dictionary<any>;\n\n  readonly subs = new Subscription();\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal,\n    private navService: NavService\n  ) {\n    this.navService.triggerActiveItem(route.snapshot.url[0].path);\n    this.subs.add(\n      this.route.paramMap\n        .pipe(map(() => window.history.state))\n        .subscribe((state) => {\n          this.phone = state.phone;\n          this.countryCode = state.countryCode;\n          this.iin = state.iin;\n          this.params = {\n            actionIds: [this.iin],\n          };\n        })\n    );\n\n    const routeSubscription = this.route.data.subscribe((data) => {\n      this.authType = data.action;\n      this.headerParams = {\n        smsHeader: SMS_HEADERS[this.authType.toUpperCase()]\n      };\n    });\n\n    this.subs.add(routeSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  onSmsFail() {\n    this.navigateToPhone();\n  }\n\n  onFormLoaded() {\n    this.isFormLoaded = true;\n  }\n\n  async onSmsSubmit(smsToken: ISmsToken) {\n    this.authService.setSmsToken(smsToken);\n    this.checkIinAndPhone();\n  }\n\n  navigateToPhone(event: Event = null) {\n    event?.preventDefault();\n    this.router.navigate([`phone`], {\n      relativeTo: this.route.parent,\n      state: { iin: this.iin, phone: this.phone, countryCode: this.countryCode },\n    });\n  }\n\n  private async checkIinAndPhone() {\n    try {\n      const iinAndPhoneCheckResult = await this.authService.checkIinAndPhone(\n        this.iin,\n        this.phone\n      );\n\n      this.handleIinAndPhoneCheck(iinAndPhoneCheckResult.status);\n    } catch (error) {\n      this.navigateToError(error);\n    }\n  }\n\n  private handleIinAndPhoneCheck(status: IIN_AND_PHONE_STATUS) {\n    switch (status) {\n      case IIN_AND_PHONE_STATUS.BLOCKED:\n        this.navigateToUserBlocked();\n        break;\n      case IIN_AND_PHONE_STATUS.DOES_NOT_EXIST:\n        this.navigateToNoAccount();\n        break;\n      case IIN_AND_PHONE_STATUS.INVALID_DATA:\n      case IIN_AND_PHONE_STATUS.INCORRECT_DATA:\n        this.navigateToNoEmail();\n        break;\n      case IIN_AND_PHONE_STATUS.DATA_MISMATCH:\n        this.navigateToPhoneNotMatch();\n        break;\n      case IIN_AND_PHONE_STATUS.ALREADY_REGISTERED:\n        this.handleAlreadyRegistered();\n        break;\n      case IIN_AND_PHONE_STATUS.CAN_REGISTER:\n        this.handleCanRegister();\n        break;\n    }\n  }\n\n  private navigateToError(error) {\n    this.router.navigate([`error`], {\n      relativeTo: this.route.parent,\n      state: {\n        error,\n        iin: this.iin,\n      },\n    });\n  }\n\n  private navigateToUserBlocked() {\n    this.router.navigate([`user-blocked`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  private navigateToEmail(prefix: string = '') {\n    this.router.navigate([`${prefix}email`], {\n      relativeTo: this.route.parent,\n      state: { phone: this.phone, iin: this.iin },\n    });\n  }\n\n  private navigateToNoAccount() {\n    this.router.navigate([`no-account`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  private navigateToNoEmail() {\n    this.router.navigate([`no-email`], {\n      relativeTo: this.route.parent,\n    });\n  }\n\n  private navigateToPhoneNotMatch() {\n    this.router.navigate([`phone-not-match`], {\n      relativeTo: this.route.parent,\n      state: { iin: this.iin, phone: this.phone, countryCode: this.countryCode },\n    });\n  }\n\n  private handleAlreadyRegistered() {\n    switch (this.authType) {\n      case AUTH_TYPE.RESTORE:\n        this.navigateToEmail();\n        break;\n      case AUTH_TYPE.REGISTER:\n        this.showCanRestoreModal();\n        break;\n    }\n  }\n\n  private async showCanRegisterModal() {\n    const modalRef = this.modalService.open(\n      CanRegisterComponent,\n      MODAL_OPTIONS\n    );\n    try {\n      await modalRef.result;\n      this.navigateToRegisterEmail();\n    } catch (error) {\n      this.navigateToPhone();\n    }\n  }\n\n  private async showCanRestoreModal() {\n    const modalRef = this.modalService.open(CanRestoreComponent, MODAL_OPTIONS);\n    try {\n      const closeAction = await modalRef.result;\n      if (closeAction === 'restore') {\n        this.navigateToRestoreEmail();\n      } else if (closeAction === 'login') {\n        this.navigateToLogin();\n      }\n    } catch (error) {\n      this.navigateToPhone();\n    }\n  }\n\n  private handleCanRegister() {\n    switch (this.authType) {\n      case AUTH_TYPE.REGISTER:\n        this.navigateToEmail();\n        break;\n      case AUTH_TYPE.RESTORE:\n        this.showCanRegisterModal();\n        break;\n    }\n  }\n\n  private navigateToRegisterEmail() {\n    this.navigateToEmail('../register/');\n  }\n\n  private navigateToRestoreEmail() {\n    this.navigateToEmail('../restore/');\n  }\n\n  private navigateToLogin() {\n    this.router.navigate([`../login`], {\n      relativeTo: this.route.parent,\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'j-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  constructor() { }\n}\n","import { FormControl } from '@angular/forms';\n\nexport function validateIin(c: FormControl) {\n  const isLengthValid = c.value.length == 12;\n\n  if (isLengthValid) {\n    return null;\n  }\n  \n  let errors = {};\n\n  if (!isLengthValid) {\n    (errors as any).length = true;\n  }\n\n  return { iin: errors };\n}\n"],"names":[],"sourceRoot":"webpack:///"}