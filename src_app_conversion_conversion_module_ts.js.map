{"version":3,"file":"src_app_conversion_conversion_module_ts.js","mappings":"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","sources":["./src/app/conversion/conversion-form/conversion-form.component.ts","./src/app/conversion/conversion-routing.module.ts","./src/app/conversion/conversion.component.ts","./src/app/conversion/conversion.module.ts","./src/app/conversion/modals/conversion-error-modal/conversion-error-modal.component.ts","./src/app/conversion/modals/conversion-success-modal/conversion-success-modal.component.ts"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { debounceTime, map } from 'rxjs/operators';\r\n\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\nimport { ERRORS } from '@api/errors';\r\n\r\nimport { AccountsService, ACCOUNT_TYPE, RegularAccount } from '@accounts/index';\r\nimport { AccountDropdownComponent } from '@accounts/components/account-dropdown/account-dropdown.component';\r\n\r\nimport { CompanyService } from '@company/company.service';\r\n\r\nimport { Payment } from '@payments/models';\r\nimport { PaymentsService } from '@payments/services/payments.service';\r\n\r\nimport { CURRENCY, IMoney } from '@shared/currency/currency.model';\r\nimport { MaskedService } from '@shared/masked/masked.service';\r\nimport { DropdownInputComponent } from '@shared/input';\r\nimport { CurSymbolPipe } from '@shared/pipes';\r\nimport { SingleEntityStore } from '@utils/simple-store';\r\nimport {\r\n  AUTHORITY_TYPE,\r\n  IConversionPurpose,\r\n  IExchangeRate,\r\n  PAYMENT_TYPE,\r\n  SIGNATURE_SCHEME,\r\n} from '@shared/models';\r\n\r\nimport { ConversionSuccessModalComponent } from '@conversion/modals/conversion-success-modal/conversion-success-modal.component';\r\nimport { ConversionErrorModalComponent } from '@conversion/modals/conversion-error-modal/conversion-error-modal.component';\r\nimport { ConversionService } from '@conversion/conversion.service';\r\nimport { FILTER_PAYMENT_STATUS } from '@filter/filter.model';\r\nimport { NavService } from '@shared/nav/nav.service';\r\nimport { AuthorityPermissionsService } from '@authorities/services';\r\nimport { PaymentApiService } from '@payments/services';\r\n\r\nexport interface IConversionForm {\r\n  id?: string;\r\n  from: RegularAccount;\r\n  fromAmount: string;\r\n  to: RegularAccount;\r\n  toAmount: string;\r\n  documentNumber: string;\r\n  purpose: IConversionPurpose;\r\n  commission: IMoney;\r\n  commissionAccount: RegularAccount;\r\n  rate: IExchangeRate;\r\n  description: string;\r\n}\r\n\r\nconst INPUT_DEBOUNCE_TIME = 500;\r\nconst PURPOSE_MAX_LENGTH = 250;\r\n\r\nconst MODAL_CONFIG: Partial<NgbModalConfig> = {\r\n  backdropClass: 'backdrop_light',\r\n  windowClass: 'modal_light modal_sm',\r\n  backdrop: 'static',\r\n  centered: true,\r\n};\r\n\r\nenum RATE_ERROR {\r\n  RATE_NOT_LOADED = 'rate_not_found',\r\n}\r\n\r\n@Component({\r\n  selector: 'j-conversion-form',\r\n  templateUrl: './conversion-form.component.html',\r\n  styleUrls: ['./conversion-form.component.scss'],\r\n})\r\nexport class ConversionFormComponent\r\n  implements OnInit, OnDestroy, AfterViewInit\r\n{\r\n  conversionForm: FormGroup;\r\n  originalPayment: Payment;\r\n\r\n  descriptionMaxLength = PURPOSE_MAX_LENGTH;\r\n\r\n  isSubmitted = false;\r\n  isRateLoading = false;\r\n  isEditing: boolean = false;\r\n  isLoading: boolean = true;\r\n  isRestricted: boolean = false;\r\n  isSubmitting: boolean = false;\r\n  isCommissionAccountSelectable: boolean = false;\r\n\r\n  rateFrom: IMoney = null;\r\n  rateTo: IMoney = null;\r\n\r\n  hasAccountFromRateError = false;\r\n  hasAccountToRateError = false;\r\n  rateErrorDescription = '';\r\n\r\n  commission: IMoney = null;\r\n\r\n  accounts: RegularAccount[] = [];\r\n  purposeList: IConversionPurpose[] = [];\r\n\r\n  @ViewChild('fromDropdown') fromDropdown: AccountDropdownComponent;\r\n  @ViewChild('toDropdown') toDropdown: AccountDropdownComponent;\r\n  @ViewChild('purposeDropdown') purposeDropdown: DropdownInputComponent;\r\n  @ViewChild('commissionAccountDropdown')\r\n  commissionAccountDropdown: AccountDropdownComponent;\r\n\r\n  fromCurrency: CURRENCY;\r\n  toCurrency: CURRENCY;\r\n\r\n  paymentNumberStore: SingleEntityStore<string>;\r\n\r\n  subscription = new Subscription();\r\n  descriptionLengthMessage$ = new BehaviorSubject(\r\n    `0/${this.descriptionMaxLength}`\r\n  );\r\n\r\n  isAccountsLoading = true;\r\n  rateSubscription = null;\r\n\r\n  constructor(\r\n    private conversionService: ConversionService,\r\n    private accountsService: AccountsService,\r\n    private paymentsService: PaymentsService,\r\n    private companyService: CompanyService,\r\n    private maskedService: MaskedService,\r\n    private curSymbolPipe: CurSymbolPipe,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private notifierService: NotifierService,\r\n    private translateService: TranslateService,\r\n    private navService: NavService,\r\n    private authorityPermissionsService: AuthorityPermissionsService,\r\n    private paymentsApiService: PaymentApiService\r\n  ) {\r\n    this.conversionForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      from: new FormControl(null, Validators.required),\r\n      fromAmount: new FormControl('', Validators.required),\r\n      to: new FormControl(null, Validators.required),\r\n      toAmount: new FormControl('', Validators.required),\r\n      documentNumber: new FormControl('', Validators.required),\r\n      purpose: new FormControl('', Validators.required),\r\n      commission: new FormControl(null),\r\n      commissionAccount: new FormControl(null),\r\n      rate: new FormControl(null),\r\n      description: new FormControl('', [\r\n        Validators.maxLength(this.descriptionMaxLength),\r\n        Validators.required,\r\n      ]),\r\n    });\r\n\r\n    this.listenFromAmount();\r\n    this.listenToAmount();\r\n\r\n    this.listenDescription();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const routeParamsSubscription = this.route.params.subscribe((params) => {\r\n      if (params.id) {\r\n        this.f.id.setValue(params.id);\r\n        this.isEditing = true;\r\n      }\r\n    });\r\n\r\n    this.subscription.add(routeParamsSubscription);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getPermission().then(() => {\r\n      if (this.isRestricted) {\r\n        this.isLoading = false;\r\n      } else {\r\n        this.initPage();\r\n      }\r\n    });\r\n  }\r\n\r\n  initPage() {\r\n    const routeStateSubscription = this.route.paramMap\r\n      .pipe(map(() => window.history.state))\r\n      .subscribe((state) => {\r\n        if (this.isEditing) {\r\n          this.loadEditConversion(this.f.id.value);\r\n        } else if (state.repeatPaymentId) {\r\n          this.loadRepeatConversion(state.repeatPaymentId);\r\n        } else {\r\n          this.loadNewConversion();\r\n        }\r\n      });\r\n\r\n    const formSubscription = this.conversionForm.valueChanges.subscribe(\r\n      (value) => {\r\n        this.isSubmitted = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(routeStateSubscription);\r\n    this.subscription.add(formSubscription);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  getItemCode(purpose: IConversionPurpose) {\r\n    return purpose.code || '';\r\n  }\r\n\r\n  getItemDescription(purpose: IConversionPurpose) {\r\n    return purpose.description || '';\r\n  }\r\n\r\n  get f() {\r\n    return this.conversionForm.controls;\r\n  }\r\n\r\n  get fromAccounts() {\r\n    if (this.toCurrency === CURRENCY.KZT) {\r\n      return this.accounts.filter(\r\n        (account) => account.balance.currency !== CURRENCY.KZT\r\n      );\r\n    }\r\n    return this.accounts;\r\n  }\r\n\r\n  get toAccounts() {\r\n    if (this.fromCurrency === CURRENCY.KZT) {\r\n      return this.accounts.filter(\r\n        (account) => account.balance.currency !== CURRENCY.KZT\r\n      );\r\n    }\r\n    return this.accounts;\r\n  }\r\n\r\n  get canSendAndSign() {\r\n    return (\r\n      this.companyService.isSecondaryAuthority() ||\r\n      (this.companyService.isPrimaryAuthority() &&\r\n        this.companyService.isSingleSignScheme())\r\n    );\r\n  }\r\n\r\n  get canSendOnly() {\r\n    return (\r\n      this.companyService.isNoSignAuthority() ||\r\n      (this.companyService.isPrimaryAuthority() &&\r\n        this.companyService.isMultipleSignScheme())\r\n    );\r\n  }\r\n\r\n  get isRateShown() {\r\n    return (this.rateFrom && this.rateTo) || this.isRateLoading;\r\n  }\r\n\r\n  get fromAmountError() {\r\n    if (!this.f.fromAmount.value) {\r\n      return null;\r\n    }\r\n    const numberedFromAmount = this.maskedService.getNumberedAmount(\r\n      this.f.fromAmount.value\r\n    );\r\n    return numberedFromAmount > this.f.from.value?.balance?.amount\r\n      ? 'ERRORS.NOT_ENOUGH_AMOUNT'\r\n      : null;\r\n  }\r\n\r\n  onFromSelect(selectedAccount: RegularAccount) {\r\n    if (!selectedAccount) {\r\n      return;\r\n    }\r\n\r\n    this.applyClearAmountsIfOnlyTwoAccountsRule();\r\n\r\n    this.applyClearOnFromSelectedRule(selectedAccount);\r\n    this.applySelectFromCompanionRule(selectedAccount);\r\n\r\n    this.selectFromAccount(selectedAccount);\r\n    this.recalculateToAmount();\r\n    this.commissionAccountDropdown.selectAccount(selectedAccount);\r\n    this.recalculateCommission();\r\n  }\r\n\r\n  onToSelect(selectedAccount: RegularAccount) {\r\n    if (!selectedAccount) {\r\n      return;\r\n    }\r\n\r\n    this.applyClearAmountsIfOnlyTwoAccountsRule();\r\n\r\n    this.applyClearOnToSelectedRule(selectedAccount);\r\n    this.applySelectToCompanionRule(selectedAccount);\r\n\r\n    this.selectToAccount(selectedAccount);\r\n    this.recalculateToAmount();\r\n  }\r\n\r\n  onPurposeSelect(purpose: IConversionPurpose) {\r\n    if (!purpose) {\r\n      return;\r\n    }\r\n\r\n    this.f.purpose.setValue(purpose);\r\n    this.recalculateCommission();\r\n  }\r\n\r\n  onCommissionAccountSelect(selectedAccount: RegularAccount) {\r\n    if (!selectedAccount) {\r\n      return;\r\n    }\r\n\r\n    this.f.commissionAccount.setValue(selectedAccount);\r\n    this.recalculateCommission();\r\n  }\r\n\r\n  reverseAccounts() {\r\n    const fromAccount = this.f.from.value;\r\n    const toAccount = this.f.to.value;\r\n\r\n    this.selectFromAccount(toAccount);\r\n    this.fromDropdown.selectAccount(toAccount);\r\n    this.f.fromAmount.setValue('', { emitEvent: false });\r\n\r\n    this.selectToAccount(fromAccount);\r\n    this.toDropdown.selectAccount(fromAccount);\r\n    this.f.toAmount.setValue('', { emitEvent: false });\r\n  }\r\n\r\n  updateRate(event: Event = null) {\r\n    event?.preventDefault();\r\n\r\n    if (this.hasAccountFromRateError) {\r\n      this.recalculateFromAmount();\r\n    } else {\r\n      this.recalculateToAmount();\r\n    }\r\n  }\r\n\r\n  mapDescriptionErrors() {\r\n    if (!this.f.description.errors) {\r\n      return null;\r\n    }\r\n\r\n    if (this.f.description.errors.maxlength) {\r\n      return 'ERRORS.MAX_LENGTH';\r\n    }\r\n  }\r\n\r\n  async retrievePurposeList() {\r\n    this.purposeList = await this.conversionService.getPurposeList();\r\n  }\r\n\r\n  async retrieveAccounts() {\r\n    this.isAccountsLoading = true;\r\n\r\n    try {\r\n      const retrieved = await this.accountsService.getAccounts();\r\n      this.accounts = retrieved.filter(\r\n        (account) =>\r\n          !!account.balance?.currency &&\r\n          account.accountType === ACCOUNT_TYPE.ACCOUNT\r\n      );\r\n    } catch (error) {\r\n    } finally {\r\n      this.isAccountsLoading = false;\r\n    }\r\n\r\n    this.applyTwoAccountsRule();\r\n  }\r\n\r\n  async createOnly() {\r\n    this.isSubmitted = true;\r\n    this.paymentNumberStore = this.paymentsService.conversionPaymentNumber;\r\n\r\n    if (this.conversionForm.invalid || this.fromAmountError) {\r\n      if (this.hasAccountFromRateError || this.hasAccountToRateError) {\r\n        this.showRateNotLoadedNotification();\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n    const formValue = this.conversionForm.getRawValue();\r\n\r\n    const isAllowed = await this.checkIfAllowedToCreate(formValue.amount);\r\n    if (!isAllowed) {\r\n      this.isSubmitting = false;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.conversionService.createConversion(formValue);\r\n      this.paymentNumberStore.entity = null;\r\n      this.showSuccessModal('CONVERSION.CREATE.SUCCESS');\r\n    } catch (error) {\r\n      const errorMessage = this.handleError(error);\r\n\r\n      if (errorMessage) {\r\n        this.showCreateError(errorMessage);\r\n      }\r\n    } finally {\r\n      this.isSubmitting = false;\r\n    }\r\n  }\r\n\r\n  async createAndSign() {\r\n    this.isSubmitted = true;\r\n    this.paymentNumberStore = this.paymentsService.conversionPaymentNumber;\r\n\r\n    if (this.conversionForm.invalid || this.fromAmountError) {\r\n      if (this.hasAccountFromRateError || this.hasAccountToRateError) {\r\n        this.showRateNotLoadedNotification();\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n    const formValue = this.conversionForm.getRawValue();\r\n\r\n    const isAllowed = await this.checkIfAllowedToCreate(formValue.amount);\r\n    if (!isAllowed) {\r\n      this.isSubmitting = false;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.conversionService.createAndSignConversion(formValue);\r\n\r\n      this.paymentNumberStore.entity = null;\r\n      let description;\r\n\r\n      if (\r\n        this.companyService.currentCompany.signatureScheme ===\r\n          SIGNATURE_SCHEME.SINGLE_SIGN &&\r\n        this.companyService.currentAuthority.authority ===\r\n          AUTHORITY_TYPE.PRIMARY_SIGNATURE\r\n      ) {\r\n        description = 'CONVERSION.CREATE_AND_SIGN.SUCCESS';\r\n      } else {\r\n        description = 'CONVERSION.SIGN_ONLY.SUCCESS';\r\n      }\r\n      this.showSuccessModal(description, true);\r\n    } catch (error) {\r\n      const errorMessage = this.handleError(error);\r\n\r\n      if (errorMessage) {\r\n        this.showCreateAndSignError(errorMessage);\r\n      }\r\n    } finally {\r\n      this.isSubmitting = false;\r\n    }\r\n  }\r\n\r\n  private async checkIfAllowedToCreate(amount: string) {\r\n    // const isWorkingTimeCheckPassed =\r\n    //   await this.paymentsApiService.checkWorkingTime();\r\n\r\n    const isAmountCheckPassed = await this.paymentsApiService.checkAmountLimit(\r\n      amount,\r\n      PAYMENT_TYPE.CONVERSION\r\n    );\r\n\r\n    return isAmountCheckPassed;\r\n    // return isWorkingTimeCheckPassed && isAmountCheckPassed;\r\n  }\r\n\r\n  async edit() {\r\n    this.isSubmitted = true;\r\n\r\n    if (this.conversionForm.invalid) {\r\n      if (this.hasAccountFromRateError || this.hasAccountToRateError) {\r\n        this.showRateNotLoadedNotification();\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n\r\n    try {\r\n      await this.conversionService.saveEditedConversion(\r\n        this.conversionForm.value,\r\n        this.originalPayment\r\n      );\r\n      this.showSuccessModal('CONVERSION.EDIT.SUCCESS');\r\n    } catch (error) {\r\n      if (error.code === ERRORS.RATE_CHANGED) {\r\n        this.showErrorNotification(error);\r\n        this.updateRate();\r\n      } else {\r\n        this.showEditError(this.mapError(error));\r\n      }\r\n    } finally {\r\n      this.isSubmitting = false;\r\n    }\r\n  }\r\n\r\n  async loadRepeatConversion(repeatConversionId: string) {\r\n    this.isLoading = true;\r\n\r\n    const values = await Promise.all([\r\n      this.conversionService.getConversionById(repeatConversionId),\r\n      this.retrievePurposeList(),\r\n      this.retrieveAccounts(),\r\n      this.setAutoNumeration(),\r\n    ]);\r\n\r\n    const [originalPayment] = values;\r\n    this.loadConversionFromPayment(originalPayment);\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async loadEditConversion(conversionId: string) {\r\n    this.isLoading = true;\r\n\r\n    const values = await Promise.all([\r\n      this.conversionService.getConversionById(conversionId),\r\n      this.retrievePurposeList(),\r\n      this.retrieveAccounts(),\r\n    ]);\r\n\r\n    const [originalPayment] = values;\r\n    this.f.documentNumber.setValue(originalPayment.details.documentId);\r\n    this.loadConversionFromPayment(originalPayment);\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private listenDescription() {\r\n    this.f.description.valueChanges.subscribe((description) => {\r\n      this.descriptionLengthMessage$.next(\r\n        `${description.length}/${this.descriptionMaxLength}`\r\n      );\r\n    });\r\n  }\r\n\r\n  private showRateNotLoadedNotification() {\r\n    const message = this.translateService.instant(`CONVERSION.RATE_NOT_LOADED`);\r\n\r\n    this.notifierService.hideAll();\r\n    this.notifierService.notify('default', message);\r\n  }\r\n\r\n  private showErrorNotification(error) {\r\n    if (error.code === ERRORS.RATE_CHANGED) {\r\n      const message = this.translateService.instant(`CONVERSION.RATE_CHANGED`);\r\n\r\n      this.notifierService.hideAll();\r\n      this.notifierService.notify('default', message);\r\n    }\r\n  }\r\n\r\n  private loadConversionFromPayment(originalPayment: Payment) {\r\n    this.originalPayment = originalPayment;\r\n\r\n    this.selectFromAccountByIban(originalPayment.details.payerIban);\r\n    this.selectToAccountByIban(\r\n      originalPayment.paymentRecipient.recipientAccount.iban\r\n    );\r\n\r\n    this.selectPurposeByCode(originalPayment.details.conversionPurpose.code);\r\n\r\n    const maskedAmount = this.maskedService.getMaskedAmount(\r\n      originalPayment.details.paymentAmount.amount,\r\n      this.curSymbolPipe.transform(\r\n        originalPayment.details.paymentAmount.currency\r\n      )\r\n    );\r\n\r\n    this.f.fromAmount.patchValue(maskedAmount);\r\n    this.f.description.patchValue(originalPayment.details.description);\r\n  }\r\n\r\n  private async getPermission() {\r\n    this.isRestricted = await this.authorityPermissionsService.isRestricted(\r\n      PAYMENT_TYPE.CONVERSION\r\n    );\r\n  }\r\n\r\n  private async loadNewConversion() {\r\n    this.isLoading = true;\r\n\r\n    await Promise.all([\r\n      this.retrievePurposeList(),\r\n      this.retrieveAccounts(),\r\n      this.setAutoNumeration(),\r\n    ]);\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private selectPurposeByCode(purposeCode: string) {\r\n    const foundPurpose = this.purposeList.find(\r\n      (purpose) => purpose.code === purposeCode\r\n    );\r\n    this.onPurposeSelect(foundPurpose);\r\n    this.purposeDropdown.selectItem(foundPurpose);\r\n  }\r\n\r\n  private selectToAccountByIban(iban: string) {\r\n    const foundAccount = this.findAccountByIban(iban);\r\n    this.selectToAccount(foundAccount);\r\n    this.toDropdown.selectAccount(foundAccount);\r\n  }\r\n\r\n  private selectFromAccountByIban(iban: string) {\r\n    const foundAccount = this.findAccountByIban(iban);\r\n    this.selectFromAccount(foundAccount);\r\n    this.fromDropdown.selectAccount(foundAccount);\r\n  }\r\n\r\n  private listenFromAmount() {\r\n    const amountSubscription = this.f.fromAmount.valueChanges\r\n      .pipe(debounceTime(INPUT_DEBOUNCE_TIME))\r\n      .subscribe((value) => {\r\n        if (!value) {\r\n          return;\r\n        }\r\n\r\n        this.recalculateToAmount();\r\n      });\r\n    this.subscription.add(amountSubscription);\r\n  }\r\n\r\n  private listenToAmount() {\r\n    const amountSubscription = this.f.toAmount.valueChanges\r\n      .pipe(debounceTime(INPUT_DEBOUNCE_TIME))\r\n      .subscribe((value) => {\r\n        if (!value) {\r\n          return;\r\n        }\r\n\r\n        this.recalculateFromAmount();\r\n      });\r\n    this.subscription.add(amountSubscription);\r\n  }\r\n\r\n  private applyTwoAccountsRule() {\r\n    if (\r\n      this.accounts.length === 2 &&\r\n      this.accounts[0].balance.currency !== this.accounts[1].balance.currency\r\n    ) {\r\n      const kztAccounts = this.accounts.filter(\r\n        (account) => account.balance.currency === CURRENCY.KZT\r\n      );\r\n\r\n      const fromToSelect = kztAccounts.length\r\n        ? kztAccounts[0]\r\n        : this.accounts[0];\r\n\r\n      this.selectFromAccount(fromToSelect);\r\n      this.fromDropdown.selectAccount(fromToSelect);\r\n      this.applySelectFromCompanionRule(fromToSelect);\r\n    }\r\n  }\r\n\r\n  private applySelectToCompanionRule(selectedAccount: RegularAccount) {\r\n    if (this.accounts?.length === 2) {\r\n      const unselected = this.findUnselectedAccount(selectedAccount);\r\n      this.selectFromAccount(unselected);\r\n      this.fromDropdown.selectAccount(unselected);\r\n    }\r\n  }\r\n\r\n  private applySelectFromCompanionRule(selectedAccount: RegularAccount) {\r\n    if (this.accounts?.length === 2) {\r\n      const unselected = this.findUnselectedAccount(selectedAccount);\r\n      this.selectToAccount(unselected);\r\n      this.toDropdown.selectAccount(unselected);\r\n    }\r\n  }\r\n\r\n  private applyClearAmountsIfOnlyTwoAccountsRule() {\r\n    if (this.accounts.length === 2) {\r\n      this.f.fromAmount.setValue('');\r\n      this.f.toAmount.setValue('');\r\n    }\r\n  }\r\n\r\n  private findUnselectedAccount(selectedAccount: RegularAccount) {\r\n    return this.accounts?.find((account) => {\r\n      return account !== selectedAccount;\r\n    });\r\n  }\r\n\r\n  private findAccountByIban(iban: string) {\r\n    return this.accounts?.find((account) => {\r\n      return account.iban === iban;\r\n    });\r\n  }\r\n\r\n  private setAutoNumeration() {\r\n    this.subscription.add(\r\n      this.paymentsService.conversionPaymentNumber$.subscribe(\r\n        (numberFromStore) => {\r\n          this.f.documentNumber.setValue(numberFromStore);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  private selectToAccount(selectedAccount: RegularAccount) {\r\n    this.toCurrency = selectedAccount.balance?.currency;\r\n    this.f.to.setValue(selectedAccount);\r\n  }\r\n\r\n  private selectFromAccount(selectedAccount: RegularAccount) {\r\n    this.fromCurrency = selectedAccount.balance?.currency;\r\n    this.f.from.setValue(selectedAccount);\r\n  }\r\n\r\n  private clearToAccount() {\r\n    this.toCurrency = null;\r\n    this.f.to.setValue(null);\r\n    this.toDropdown?.clearSelected();\r\n  }\r\n\r\n  private clearFromAccount() {\r\n    this.fromCurrency = null;\r\n    this.f.from.setValue(null);\r\n    this.fromDropdown?.clearSelected();\r\n  }\r\n\r\n  private applyClearOnFromSelectedRule(selectedAccount: RegularAccount) {\r\n    if (selectedAccount === this.f.to.value) {\r\n      this.clearToAccount();\r\n    }\r\n  }\r\n\r\n  private applyClearOnToSelectedRule(selectedAccount: RegularAccount) {\r\n    if (selectedAccount === this.f.from.value) {\r\n      this.clearFromAccount();\r\n    }\r\n  }\r\n\r\n  private recalculateAmount(config: {\r\n    source: AbstractControl;\r\n    target: AbstractControl;\r\n    sourceCurrency: CURRENCY;\r\n    targetCurrency: CURRENCY;\r\n    errorStateKey: string;\r\n  }) {\r\n    const { source, target, sourceCurrency, targetCurrency, errorStateKey } =\r\n      config;\r\n\r\n    if (!this.fromCurrency || !this.toCurrency || !source.value) {\r\n      return;\r\n    }\r\n\r\n    if (this.rateSubscription) {\r\n      this.rateSubscription.unsubscribe();\r\n    }\r\n\r\n    target.disable({ emitEvent: false });\r\n\r\n    this.hasAccountToRateError = false;\r\n    this.hasAccountFromRateError = false;\r\n\r\n    this.isRateLoading = true;\r\n    this.rateErrorDescription = '';\r\n\r\n    this.rateFrom = null;\r\n    this.rateTo = null;\r\n\r\n    const calculatingAmount = this.maskedService.getNumberedAmount(\r\n      source.value\r\n    );\r\n\r\n    this.rateSubscription = this.conversionService\r\n      .getRateObservable({\r\n        currencyFrom: this.fromCurrency,\r\n        currencyTo: this.toCurrency,\r\n        sum: {\r\n          amount: calculatingAmount,\r\n          currency: sourceCurrency,\r\n        },\r\n      })\r\n      .subscribe(\r\n        (rate) => {\r\n          this.f.rate.setValue(rate);\r\n\r\n          this.rateFrom = rate.equation.from;\r\n          this.rateTo = rate.equation.to;\r\n\r\n          const maskedAmount = this.maskedService.getMaskedAmount(\r\n            rate.calculatedSum,\r\n            this.curSymbolPipe.transform(targetCurrency)\r\n          );\r\n\r\n          target.patchValue(maskedAmount, {\r\n            emitEvent: false,\r\n          });\r\n          target.enable({ emitEvent: false });\r\n\r\n          this.recalculateCommission();\r\n\r\n          this.isRateLoading = false;\r\n          this.rateSubscription = null;\r\n        },\r\n        (error) => {\r\n          if (error.code === RATE_ERROR.RATE_NOT_LOADED) {\r\n            this.rateErrorDescription = error.description;\r\n          }\r\n\r\n          target.patchValue('', { emitEvent: false });\r\n          target.enable({ emitEvent: false });\r\n\r\n          this[errorStateKey] = true;\r\n\r\n          this.isRateLoading = false;\r\n          this.rateSubscription = null;\r\n        }\r\n      );\r\n  }\r\n\r\n  private async recalculateToAmount() {\r\n    this.recalculateAmount({\r\n      source: this.f.fromAmount,\r\n      target: this.f.toAmount,\r\n      sourceCurrency: this.fromCurrency,\r\n      targetCurrency: this.toCurrency,\r\n      errorStateKey: 'hasAccountToRateError',\r\n    });\r\n  }\r\n\r\n  private async recalculateFromAmount() {\r\n    this.recalculateAmount({\r\n      source: this.f.toAmount,\r\n      target: this.f.fromAmount,\r\n      sourceCurrency: this.toCurrency,\r\n      targetCurrency: this.fromCurrency,\r\n      errorStateKey: 'hasAccountFromRateError',\r\n    });\r\n  }\r\n\r\n  private async recalculateCommission() {\r\n    try {\r\n      this.commission = await this.conversionService.getCommission(\r\n        this.conversionForm.getRawValue()\r\n      );\r\n      this.f.commission.setValue(this.commission);\r\n      this.isCommissionAccountSelectable = this.commission?.amount > 0;\r\n      if (\r\n        this.isCommissionAccountSelectable &&\r\n        this.commissionAccountDropdown.selectedAccount === undefined\r\n      ) {\r\n        this.setSelectedDefaultCommissionAccount();\r\n      }\r\n    } catch (error) {\r\n      this.commission = null;\r\n    }\r\n  }\r\n\r\n  private setSelectedDefaultCommissionAccount() {\r\n    if (this.accounts.length === 1) {\r\n      this.commissionAccountDropdown?.selectAccount(this.accounts[0]);\r\n      this.onCommissionAccountSelect(this.accounts[0]);\r\n    }\r\n    const kztAccounts = this.accounts.filter(\r\n      (account) => account.balance.currency === CURRENCY.KZT\r\n    );\r\n    if (kztAccounts?.length === 1) {\r\n      this.commissionAccountDropdown?.selectAccount(kztAccounts[0]);\r\n      this.onCommissionAccountSelect(kztAccounts[0]);\r\n    }\r\n  }\r\n\r\n  private async showCreateError(error: string) {\r\n    try {\r\n      await this.showErrorModal('TRANSFERS.CREATE.ERROR', error);\r\n      this.createOnly();\r\n    } catch (error) {\r\n      this.navigateToHome();\r\n    }\r\n  }\r\n\r\n  private async showCreateAndSignError(error: string) {\r\n    try {\r\n      await this.showErrorModal('TRANSFERS.CREATE_AND_SIGN.ERROR', error);\r\n      this.createAndSign();\r\n    } catch (error) {\r\n      this.navigateToHome();\r\n    }\r\n  }\r\n\r\n  private async showEditError(error: string) {\r\n    try {\r\n      await this.showErrorModal('TRANSFERS.EDIT.ERROR', error);\r\n      this.edit();\r\n    } catch (error) {\r\n      this.navigateToHome();\r\n    }\r\n  }\r\n\r\n  private async showSuccessModal(description: string, hasSigned = false) {\r\n    const modal = this.modalService.open(\r\n      ConversionSuccessModalComponent,\r\n      MODAL_CONFIG\r\n    );\r\n    modal.componentInstance.description = description;\r\n\r\n    const fromAmount = this.maskedService.getNumberedAmount(\r\n      this.f.fromAmount.value\r\n    );\r\n    const toAmount = this.maskedService.getNumberedAmount(\r\n      this.f.toAmount.value\r\n    );\r\n\r\n    modal.componentInstance.fromBalance = {\r\n      amount: fromAmount,\r\n      currency: this.f.from.value?.balance?.currency,\r\n    };\r\n\r\n    modal.componentInstance.toBalance = {\r\n      amount: toAmount,\r\n      currency: this.f.to.value?.balance?.currency,\r\n    };\r\n\r\n    try {\r\n      await modal.result;\r\n      this.navigateToHistory(hasSigned);\r\n    } catch (error) {\r\n      this.navigateToHome();\r\n    }\r\n  }\r\n\r\n  private showErrorModal(description: string, error: string) {\r\n    const modal = this.modalService.open(\r\n      ConversionErrorModalComponent,\r\n      MODAL_CONFIG\r\n    );\r\n    modal.componentInstance.description = description;\r\n    modal.componentInstance.errorText = error;\r\n\r\n    return modal.result;\r\n  }\r\n\r\n  private navigateToHome() {\r\n    this.navService.retrieveContractBadges();\r\n    this.navService.retrieveLetterBadges();\r\n\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private navigateToHistory(hasSigned: boolean = false) {\r\n    this.navService.retrieveContractBadges();\r\n    this.navService.retrieveLetterBadges();\r\n\r\n    let paymentStatus = FILTER_PAYMENT_STATUS.FOR_SIGN;\r\n\r\n    if (\r\n      hasSigned &&\r\n      this.companyService.isPrimaryAuthority() &&\r\n      this.companyService.isSingleSignScheme()\r\n    ) {\r\n      paymentStatus = FILTER_PAYMENT_STATUS.IN_PROGRESS;\r\n    }\r\n\r\n    this.router.navigate([`/history/conversion`], {\r\n      queryParams: { paymentStatus },\r\n    });\r\n  }\r\n\r\n  private handleError(error) {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n    if (error.code === ERRORS.RATE_CHANGED) {\r\n      this.showErrorNotification(error);\r\n      this.updateRate();\r\n    } else {\r\n      this.paymentNumberStore.entity = this.f.documentNumber.value;\r\n      return this.mapError(error);\r\n    }\r\n  }\r\n\r\n  private mapError(error) {\r\n    let errorToShow = '';\r\n\r\n    if (error?.data) {\r\n      let i = 0;\r\n      for (const errorMessage in error.data) {\r\n        if (Object.prototype.hasOwnProperty.call(error.data, errorMessage)) {\r\n          if (i++ > 0) {\r\n            errorToShow += '<br>';\r\n          }\r\n\r\n          errorToShow += `${error.data[errorMessage]}`;\r\n        }\r\n      }\r\n    } else {\r\n      errorToShow = error.description || error.code || error;\r\n    }\r\n\r\n    return errorToShow;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConversionComponent } from './conversion.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConversionComponent,\n  },\n  {\n    path: ':id',\n    component: ConversionComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConversionRoutingModule {}\n","import { Location } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  FeatureFlagsService,\r\n  FEATURE_FLAG,\r\n} from '@feature-flags/index';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\n@Component({\r\n  selector: 'j-conversion',\r\n  templateUrl: './conversion.component.html',\r\n  styleUrls: ['./conversion.component.scss'],\r\n})\r\nexport class ConversionComponent {\r\n  constructor(\r\n    private navService: NavService,\r\n    private featureFlagsService: FeatureFlagsService,\r\n    private location: Location,\r\n  ) {\r\n    this.featureFlagsService.checkFeatureRoute(FEATURE_FLAG.CONVERSION);\r\n  }\r\n\r\n  onClose() {\r\n    this.navService.retrieveLetterBadges();\r\n    this.navService.retrieveContractBadges();\r\n\r\n    this.location.back();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg';\n\nimport { AccountsModule } from '@accounts/index';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { ConversionRoutingModule } from './conversion-routing.module';\nimport { ConversionComponent } from './conversion.component';\nimport { ConversionFormComponent } from './conversion-form/conversion-form.component';\n\nimport { ConversionSuccessModalComponent } from './modals/conversion-success-modal/conversion-success-modal.component';\nimport { ConversionErrorModalComponent } from './modals/conversion-error-modal/conversion-error-modal.component';\n\n@NgModule({\n  declarations: [\n    ConversionComponent,\n    ConversionFormComponent,\n    ConversionSuccessModalComponent,\n    ConversionErrorModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    NgxSkeletonLoaderModule,\n    TranslateModule,\n    InlineSVGModule,\n\n    ConversionRoutingModule,\n\n    AccountsModule,\n    SharedModule,\n  ],\n})\nexport class ConversionModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-conversion-error-modal',\n  templateUrl: './conversion-error-modal.component.html',\n  styleUrls: ['./conversion-error-modal.component.scss'],\n})\nexport class ConversionErrorModalComponent {\n  @Input() description: string;\n  @Input() errorText: string;\n\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { IMoney } from '@shared/currency/currency.model';\n\n@Component({\n  selector: 'j-conversion-success-modal',\n  templateUrl: './conversion-success-modal.component.html',\n  styleUrls: ['./conversion-success-modal.component.scss'],\n})\nexport class ConversionSuccessModalComponent {\n  @Input() fromBalance: IMoney;\n  @Input() toBalance: IMoney;\n  @Input() description: string;\n\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}