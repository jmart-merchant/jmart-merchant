{"version":3,"file":"src_app_history_history_module_ts.js","mappings":"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","sources":["./src/app/history/history-list/history-list.component.ts","./src/app/history/history-routing.module.ts","./src/app/history/history.component.ts","./src/app/history/history.module.ts","./src/app/history/history.service.ts","./src/app/history/modals/delete-error/delete-error.component.ts","./src/app/history/modals/delete-partial/delete-partial.component.ts","./src/app/history/modals/delete-success/delete-success.component.ts","./src/app/history/modals/index.ts","./src/app/history/modals/multiple-sign-error/multiple-sign-error.component.ts","./src/app/history/modals/multiple-sign-partial-error/multiple-sign-partial-error.component.ts","./src/app/history/modals/multiple-sign-partial-success/multiple-sign-partial-success.component.ts","./src/app/history/modals/multiple-sign-success/multiple-sign-success.component.ts","./src/app/history/modals/send-to-signed-error/send-to-signed-error.component.ts","./src/app/history/modals/send-to-signed-partial-error/send-to-signed-partial-error.component.ts","./src/app/history/modals/send-to-signed-partial/send-to-signed-partial.component.ts","./src/app/history/modals/send-to-signed-success/send-to-signed-success.component.ts","./src/app/history/modals/validation-error/validation-error.component.ts"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { combineLatest, Subscription, throwError, merge } from 'rxjs';\r\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\r\n\r\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\nimport { SMS_HEADERS } from '@api/api.service';\r\n\r\nimport { FILTER_MODE, FilterService } from '@filter/index';\r\nimport { IFilterScheme, FILTER_PAYMENT_STATUS } from '@filter/filter.model';\r\n\r\nimport {\r\n  IStatement,\r\n  ITransactionGroup,\r\n  StatementService,\r\n  Transaction,\r\n} from '@statement/index';\r\n\r\nimport { CompanyService } from '@company/company.service';\r\n\r\nimport {\r\n  BULK_OPERATION_STATUS,\r\n  IBulkOperationResult,\r\n  IHistoryPayment,\r\n  ISmsToken,\r\n  PAYMENT_CATEGORY,\r\n  PAYMENT_STATUS,\r\n  TOKEN_TYPE,\r\n} from '@shared/models';\r\nimport { CURRENCY, IMoney } from '@shared/currency/currency.model';\r\nimport { MaskedService } from '@shared/masked/masked.service';\r\nimport { FilesService } from '@shared/services/files.service';\r\nimport {\r\n  CONFIRM_SIGNATURE_TYPE,\r\n  ConfirmSmsModalComponent,\r\n} from '@shared/components';\r\n\r\nimport {\r\n  DeleteErrorComponent,\r\n  DeletePartialComponent,\r\n  DeleteSuccessComponent,\r\n  MultipleSignErrorComponent,\r\n  MultipleSignPartialErrorComponent,\r\n  MultipleSignPartialSuccessComponent,\r\n  MultipleSignSuccessComponent,\r\n  SendToSignedErrorComponent,\r\n  SendToSignedPartialComponent,\r\n  SendToSignedPartialErrorComponent,\r\n  SendToSignedSuccessComponent,\r\n  ValidationErrorComponent,\r\n} from '../modals';\r\n\r\nimport { HistoryService, MAX_PAGE_SIZE_FOR_SIGN } from '../history.service';\r\n\r\nconst PAGE_START = 1;\r\nconst PAGE_SIZE = 25;\r\nconst PAGE_SIZE_FOR_SIGN = MAX_PAGE_SIZE_FOR_SIGN;\r\n\r\ninterface ISignModalParams {\r\n  transactionIds: string[];\r\n  transactionsCount: number;\r\n  totalBalance: IMoney;\r\n}\r\n\r\n@Component({\r\n  selector: 'j-history-list',\r\n  templateUrl: './history-list.component.html',\r\n  styleUrls: ['./history-list.component.scss'],\r\n})\r\nexport class HistoryListComponent implements OnDestroy {\r\n  filterScheme: IFilterScheme = {\r\n    periodTo: null,\r\n    periodFrom: null,\r\n  };\r\n  filterCurrency = CURRENCY.KZT;\r\n  filterMode = FILTER_MODE.HISTORY;\r\n\r\n  modalConfigSmall: NgbModalOptions = {\r\n    backdropClass: 'backdrop_light',\r\n    windowClass: 'modal_light modal_sm',\r\n    backdrop: 'static',\r\n    centered: true,\r\n  };\r\n\r\n  modalConfigMedium: NgbModalOptions = {\r\n    backdropClass: 'backdrop_light',\r\n    windowClass: 'modal_light modal_md',\r\n    backdrop: 'static',\r\n    centered: true,\r\n  };\r\n\r\n  historyTypes = [\r\n    {\r\n      label: 'HISTORY.ALL',\r\n      url: '/history/all',\r\n    },\r\n    {\r\n      label: 'HISTORY.TENGE_PAYMENTS',\r\n      url: '/history/tenge',\r\n    },\r\n    {\r\n      label: 'HISTORY.CURRENCY_PAYMENTS',\r\n      url: '/history/foreign',\r\n    },\r\n    {\r\n      label: 'HISTORY.CONVERSION',\r\n      url: '/history/conversion',\r\n    },\r\n  ];\r\n\r\n  private subscription = new Subscription();\r\n\r\n  private pageNumber = PAGE_START;\r\n  private pageSize = PAGE_SIZE;\r\n  private pageSizeForSign = PAGE_SIZE_FOR_SIGN;\r\n\r\n  private paymentCategory: PAYMENT_CATEGORY;\r\n\r\n  hasMorePages = true;\r\n  errorText: string;\r\n\r\n  statement: IStatement;\r\n\r\n  isLoading = true;\r\n  isLoadingExtra = true;\r\n  isReady = false;\r\n\r\n  hasSignableSelected = false;\r\n\r\n  // Checkboxes\r\n  isAllSelected = false;\r\n\r\n  selectedTransactions: Transaction[] = [];\r\n  selectedBalance: IMoney;\r\n  selectedCount = 0;\r\n\r\n  SESSION_ROUTE_KEY = 'historyRouteQuery';\r\n\r\n  private cashedRouteQuery = JSON.parse(\r\n    sessionStorage.getItem(this.SESSION_ROUTE_KEY)\r\n  );\r\n\r\n  private canBeNavigatedToForSign: boolean = true;\r\n\r\n  constructor(\r\n    private company: CompanyService,\r\n    private filterService: FilterService,\r\n    private historyService: HistoryService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    private modalService: NgbModal,\r\n    private filesService: FilesService,\r\n    private maskedService: MaskedService,\r\n    private statementService: StatementService,\r\n    private notifierService: NotifierService\r\n  ) {\r\n    const routeSubscription = combineLatest([\r\n      this.route.queryParams,\r\n      this.route.data,\r\n    ])\r\n      .pipe(take(1))\r\n      .subscribe(([queryParams, dataParams]) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          this.canBeNavigatedToForSign = false;\r\n        }\r\n\r\n        this.paymentCategory = dataParams.category;\r\n\r\n        if (this.cashedRouteQuery && !queryParams) {\r\n          queryParams = this.cashedRouteQuery;\r\n        }\r\n\r\n        this.updateCashedRouteQuery(queryParams);\r\n        const mappedScheme = this.mapQueryParams(queryParams);\r\n\r\n        this.filterScheme = mappedScheme;\r\n        this.filterService.updateExtra(this.filterScheme);\r\n      });\r\n\r\n    this.subscription.add(routeSubscription);\r\n\r\n    const company$ = this.company.refresh$.pipe(\r\n      tap(() => this.historyService.updateStatusCounts(this.paymentCategory))\r\n    );\r\n\r\n    const filter$ = this.filterService.getScheme();\r\n\r\n    const changesSubscription = merge(filter$, company$)\r\n      .pipe(\r\n        switchMap((data) =>\r\n          this.init(!Array.isArray(data) ? data : this.filterScheme)\r\n        )\r\n      )\r\n      .subscribe(() => {});\r\n\r\n    const importSubscription = this.filesService.onImport().subscribe(() => {\r\n      this.init(this.filterScheme).toPromise();\r\n      this.historyService.updateStatusCounts(this.paymentCategory);\r\n    });\r\n\r\n    const filterStatusesSubscription = this.filterService\r\n      .getStatuses()\r\n      .subscribe((statuses) => {\r\n        const forSign = statuses.find(\r\n          (status) => status.value == FILTER_PAYMENT_STATUS.FOR_SIGN\r\n        );\r\n\r\n        if (\r\n          forSign.count > 0 &&\r\n          forSign.classList.includes('badge-primary') &&\r\n          this.canBeNavigatedToForSign\r\n        ) {\r\n          this.canBeNavigatedToForSign = false;\r\n\r\n          const updatedScheme = Object.assign(this.filterScheme, {\r\n            paymentStatus: FILTER_PAYMENT_STATUS.FOR_SIGN,\r\n          });\r\n\r\n          this.filterService.updateExtra(updatedScheme);\r\n        }\r\n      });\r\n\r\n    this.subscription.add(changesSubscription);\r\n    this.subscription.add(importSubscription);\r\n    this.subscription.add(filterStatusesSubscription);\r\n  }\r\n\r\n  init(\r\n    scheme: IFilterScheme = this.filterService.getDefaults(this.filterMode)\r\n  ) {\r\n    this.filterScheme = Object.assign({}, scheme);\r\n\r\n    this.pageNumber = 1;\r\n    this.hasMorePages = false; // думаю будет лучше если поставим по умолчанию false чтобы он не грузил пока нет response-а\r\n    this.isLoading = true;\r\n\r\n    this.updateQueryParams();\r\n    return this.loadStatement().pipe(tap(() => this.updateSelectable()));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onScroll() {\r\n    if (this.hasMorePages) {\r\n      this.pageNumber++;\r\n      this.loadStatement().toPromise();\r\n    }\r\n  }\r\n\r\n  async validateTransactionsByPaymentId(transactionIds) {\r\n    try {\r\n      const response =\r\n        await this.historyService.validateTransactionsByPaymentId(\r\n          this.company.currentId,\r\n          transactionIds\r\n        );\r\n      if (response.status !== BULK_OPERATION_STATUS.SUCCESS) {\r\n        this.showValidationError(response);\r\n      }\r\n      return response.status;\r\n    } catch (error) {\r\n      this.showValidationError(error);\r\n      return BULK_OPERATION_STATUS.FAILED;\r\n    }\r\n  }\r\n\r\n  async onSign(transaction: Transaction) {\r\n    const modalParams: ISignModalParams = {\r\n      transactionIds: [transaction.id],\r\n      totalBalance: transaction.balance,\r\n      transactionsCount: 1,\r\n    };\r\n\r\n    try {\r\n      if (transaction.paymentStatus.code === PAYMENT_STATUS.DRAFT) {\r\n        const validationStatus = await this.validateTransactionsByPaymentId(\r\n          modalParams.transactionIds\r\n        );\r\n        if (validationStatus === BULK_OPERATION_STATUS.FAILED) {\r\n          return;\r\n        }\r\n      }\r\n      await this.showSignModal(modalParams);\r\n      this.historyService.updateForSignCount(null, this.paymentCategory);\r\n    } catch (error) {}\r\n  }\r\n\r\n  async onSentForSign(transaction: Transaction) {\r\n    this.sendToSigned([transaction]);\r\n  }\r\n\r\n  onSelect() {\r\n    this.updateSelectable();\r\n  }\r\n\r\n  selectAll() {\r\n    this.currentTransactions.forEach((transaction) => {\r\n      transaction.isSelected = this.isAllSelected;\r\n    });\r\n    this.updateSelectable();\r\n    this.isAllSelected = true;\r\n  }\r\n\r\n  selectSignable() {\r\n    this.currentTransactions.forEach((transaction) => {\r\n      if (transaction.isSignable) {\r\n        transaction.isSelected = this.hasSignableSelected;\r\n      } else {\r\n        transaction.isSelected = false;\r\n      }\r\n    });\r\n    this.updateSelectable();\r\n    this.hasSignableSelected = true;\r\n  }\r\n\r\n  get isAllSignable() {\r\n    return (\r\n      this.currentTransactions.length > 0 &&\r\n      (this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN ||\r\n        this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT) &&\r\n      this.hasSignableInList(this.currentTransactions)\r\n    );\r\n  }\r\n\r\n  get isAllSendableForSign() {\r\n    return (\r\n      !this.isAllSignable &&\r\n      this.currentTransactions.length > 0 &&\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT &&\r\n      this.hasSendableForSignInList(this.currentTransactions)\r\n    );\r\n  }\r\n\r\n  get isSignable() {\r\n    return (\r\n      this.currentTransactions &&\r\n      (this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN ||\r\n        this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT) &&\r\n      this.isAllSignableInList(this.selectedTransactions)\r\n    );\r\n  }\r\n\r\n  get isSendableForSign() {\r\n    return (\r\n      !this.isSignable &&\r\n      this.currentTransactions &&\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT &&\r\n      this.isAllSendableForSignInList(this.selectedTransactions)\r\n    );\r\n  }\r\n\r\n  get isSelectable() {\r\n    return (\r\n      this.currentTransactions &&\r\n      (this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN ||\r\n        this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT)\r\n    );\r\n  }\r\n\r\n  get isSelectableForExport() {\r\n    return (\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.SUCCESS ||\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FAILED ||\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.IN_PROGRESS ||\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT\r\n    );\r\n  }\r\n\r\n  get isAllSelectableForExport() {\r\n    return (\r\n      this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.IN_PROGRESS\r\n    );\r\n  }\r\n\r\n  get totalBalance() {\r\n    if (this.selectedCount > 0) {\r\n      return this.selectedBalance;\r\n    } else {\r\n      return this.countTotalBalanceFromTransactionsList(\r\n        this.currentTransactions\r\n      );\r\n    }\r\n  }\r\n\r\n  get totalCount() {\r\n    if (this.selectedCount > 0) {\r\n      return this.selectedCount;\r\n    } else {\r\n      return this.currentTransactionsCount;\r\n    }\r\n  }\r\n\r\n  get currentTransactionsCount() {\r\n    return this.statement?.totalTransactionsCount || 0;\r\n  }\r\n\r\n  get currentTransactions() {\r\n    const totalTransactions = this.statement?.transactionGroups?.map(\r\n      (group) => {\r\n        return group.transactions;\r\n      }\r\n    );\r\n\r\n    return totalTransactions?.flat() || [];\r\n  }\r\n\r\n  get hasAnySelected() {\r\n    return this.selectedCount > 0;\r\n  }\r\n\r\n  get currencies() {\r\n    const currencies = {};\r\n    let transactions =\r\n      this.selectedCount > 0\r\n        ? this.selectedTransactions\r\n        : this.currentTransactions;\r\n\r\n    transactions.forEach((transaction) => {\r\n      if (transaction.balance?.currency) {\r\n        if (currencies[transaction.balance?.currency]) {\r\n          currencies[transaction.balance?.currency].count++;\r\n          currencies[transaction.balance?.currency].balance.amount +=\r\n            transaction.balance?.amount;\r\n        } else {\r\n          currencies[transaction.balance?.currency] = {\r\n            count: 1,\r\n            balance: {\r\n              amount: transaction.balance?.amount,\r\n              currency: transaction.balance?.currency,\r\n            },\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    return Object.values(currencies);\r\n  }\r\n\r\n  async signAll(event: Event) {\r\n    event.preventDefault();\r\n\r\n    const filterScheme: IFilterScheme = {\r\n      paymentStatus: this.filterScheme.paymentStatus,\r\n    };\r\n\r\n    const historyPaymentsResult = await this.historyService.getHistoryList(\r\n      this.paymentCategory,\r\n      filterScheme,\r\n      1,\r\n      this.pageSizeForSign // Указано максимально возможное кол-во платежей на подпись, увеличить при необходимости\r\n    );\r\n\r\n    const historyPaymentsList = historyPaymentsResult.body;\r\n    const signableList = historyPaymentsList.filter((payment) => {\r\n      return this.historyService.isSignable(payment);\r\n    });\r\n\r\n    const modalParams: ISignModalParams = {\r\n      transactionIds: this.retrieveIdsFromList(signableList),\r\n      totalBalance: this.countTotalBalanceFromPaymentsList(signableList),\r\n      transactionsCount: signableList.length,\r\n    };\r\n    if (this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT) {\r\n      const validationStatus = await this.validateTransactionsByPaymentId(\r\n        modalParams.transactionIds\r\n      );\r\n      if (validationStatus === BULK_OPERATION_STATUS.FAILED) {\r\n        return;\r\n      }\r\n    }\r\n    this.showSignModal(modalParams);\r\n  }\r\n\r\n  async sendAllForSign(event: Event) {\r\n    event.preventDefault();\r\n\r\n    const filterScheme: IFilterScheme = {\r\n      paymentStatus: FILTER_PAYMENT_STATUS.DRAFT,\r\n    };\r\n\r\n    const historyPaymentsResult = await this.historyService.getHistoryList(\r\n      this.paymentCategory,\r\n      filterScheme,\r\n      1,\r\n      this.pageSizeForSign // Указано максимально возможное кол-во платежей на подпись, увеличить при необходимости\r\n    );\r\n\r\n    const historyPaymentsList = historyPaymentsResult.body;\r\n    const sendableForSignList = historyPaymentsList.filter((payment) => {\r\n      return this.historyService.isSendableForSign(payment);\r\n    });\r\n\r\n    this.sendToSigned(sendableForSignList);\r\n  }\r\n\r\n  async signSelected(event: Event) {\r\n    event.preventDefault();\r\n    const modalParams: ISignModalParams = {\r\n      transactionIds: this.retrieveIdsFromList(this.selectedTransactions),\r\n      totalBalance: this.countTotalBalanceFromTransactionsList(\r\n        this.selectedTransactions\r\n      ),\r\n      transactionsCount: this.selectedTransactions.length,\r\n    };\r\n    if (this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.DRAFT) {\r\n      const validationStatus = await this.validateTransactionsByPaymentId(\r\n        modalParams.transactionIds\r\n      );\r\n      if (validationStatus !== BULK_OPERATION_STATUS.SUCCESS) {\r\n        return;\r\n      }\r\n    }\r\n    this.showSignModal(modalParams);\r\n  }\r\n\r\n  async sendForSignSelected(event: Event) {\r\n    event.preventDefault();\r\n    this.sendToSigned(this.selectedTransactions);\r\n  }\r\n\r\n  async deleteSelectedTransactions(event: Event = null) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.deleteTransactions(this.selectedTransactions as Transaction[]);\r\n  }\r\n\r\n  async exportSelectedTransactions(event: Event = null) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    const exportedTransactions = await this.statementService.exportTransactions(\r\n      this.selectedTransactions\r\n    );\r\n    const filename = `${this.selectedCount}_operations.pdf`;\r\n    this.filesService.downloadFile(exportedTransactions, filename);\r\n  }\r\n\r\n  async onDelete(transaction: Transaction) {\r\n    await this.deleteTransactions([transaction]);\r\n  }\r\n\r\n  async onRevoke(transaction: Transaction) {\r\n    transaction.isLoading = true;\r\n\r\n    try {\r\n      await this.historyService.revokePayment(\r\n        this.company.currentId,\r\n        transaction\r\n      );\r\n      await this.init(this.filterScheme).toPromise();\r\n    } catch (error) {\r\n      this.notifierService.notify('error', error.description || error.code);\r\n    } finally {\r\n      this.historyService.updateForSignCount(null, this.paymentCategory);\r\n      this.historyService.updateStatusCounts(this.paymentCategory);\r\n      this.resetSelectable();\r\n      this.updateSelectable();\r\n    }\r\n  }\r\n\r\n  async deleteTransactions(transactions: Transaction[]) {\r\n    transactions.forEach((transaction) => {\r\n      transaction.isLoading = true;\r\n    });\r\n\r\n    try {\r\n      const deleteResult = await this.historyService.deleteMultipleTransactions(\r\n        this.company.currentId,\r\n        transactions\r\n      );\r\n      await this.init(this.filterScheme).toPromise();\r\n\r\n      const successCount = deleteResult.length;\r\n      const failedCount = transactions.length - successCount;\r\n\r\n      if (successCount === 0) {\r\n        this.showDeleteError(transactions);\r\n      } else if (failedCount === 0) {\r\n        this.showDeleteSuccess(successCount);\r\n      } else {\r\n        this.showDeletePartial(successCount, failedCount);\r\n      }\r\n    } catch (error) {\r\n      this.showDeleteError(transactions);\r\n    } finally {\r\n      this.historyService.updateForSignCount(null, this.paymentCategory);\r\n      this.resetSelectable();\r\n      this.updateSelectable();\r\n    }\r\n  }\r\n\r\n  async sendToSigned(transactions: (Transaction | IHistoryPayment)[]) {\r\n    try {\r\n      const sendResult =\r\n        await this.historyService.sendMultipleTransactionsForSign(\r\n          transactions.map((transaction) => transaction.id)\r\n        );\r\n      switch (sendResult.status) {\r\n        case BULK_OPERATION_STATUS.SUCCESS:\r\n          this.showSendToSignedSuccess(sendResult);\r\n          await this.init(this.filterScheme).toPromise();\r\n          break;\r\n        case BULK_OPERATION_STATUS.PARTLY_SUCCESS:\r\n          this.showSendToSignedPartial(sendResult);\r\n          await this.init(this.filterScheme).toPromise();\r\n          break;\r\n        case BULK_OPERATION_STATUS.FAILED:\r\n          this.showSendToSignedPartialError(sendResult);\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.showSendToSignedError(transactions);\r\n    } finally {\r\n      this.resetSelectable();\r\n      this.updateSelectable();\r\n      this.historyService.updateForSignCount(null, this.paymentCategory);\r\n    }\r\n  }\r\n\r\n  async showSignModal(modalParams: ISignModalParams) {\r\n    const modal = this.modalService.open(\r\n      ConfirmSmsModalComponent,\r\n      this.modalConfigMedium\r\n    );\r\n\r\n    Object.assign(modal.componentInstance, {\r\n      additionalParams: {\r\n        actionIds: modalParams.transactionIds,\r\n      },\r\n    });\r\n\r\n    Object.assign(modal.componentInstance, {\r\n      headerParams: {\r\n        smsHeader: SMS_HEADERS.SIGNING_PAYMENT,\r\n      },\r\n    });\r\n\r\n    (modal.componentInstance as ConfirmSmsModalComponent).submitted.subscribe(\r\n      (smsToken: ISmsToken) => {\r\n        this.signMultipleTransactions(smsToken, modalParams)\r\n          .then(() => {\r\n            localStorage.setItem(\r\n              'preferredSignatureType',\r\n              smsToken.type === TOKEN_TYPE.OTP\r\n                ? CONFIRM_SIGNATURE_TYPE.OTP\r\n                : CONFIRM_SIGNATURE_TYPE.SMS\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            const errorText = error.description || error.code;\r\n            this.showMultipleSignError(errorText, modalParams);\r\n          })\r\n          .finally(() => {\r\n            this.historyService.updateForSignCount(null, this.paymentCategory);\r\n            modal.close();\r\n          });\r\n      }\r\n    );\r\n\r\n    (\r\n      modal.componentInstance as ConfirmSmsModalComponent\r\n    ).sentForRevision.subscribe(() => {\r\n      this.init(this.filterScheme).toPromise();\r\n      modal.close();\r\n    });\r\n  }\r\n\r\n  async signMultipleTransactions(\r\n    smsToken: ISmsToken,\r\n    modalParams: ISignModalParams\r\n  ) {\r\n    try {\r\n      const signResult = await this.historyService.signMultipleTransactions(\r\n        this.company.currentId,\r\n        smsToken,\r\n        modalParams.transactionIds\r\n      );\r\n      switch (signResult.status) {\r\n        case BULK_OPERATION_STATUS.SUCCESS:\r\n          this.showMultipleSignSuccess(signResult);\r\n          await this.init(this.filterScheme).toPromise();\r\n          break;\r\n        case BULK_OPERATION_STATUS.PARTLY_SUCCESS:\r\n          this.showMultipleSignPartialSuccess(signResult);\r\n          await this.init(this.filterScheme).toPromise();\r\n          break;\r\n        case BULK_OPERATION_STATUS.FAILED:\r\n          this.showMultipleSignPartialError(signResult);\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      this.showMultipleSignError(error, modalParams);\r\n    } finally {\r\n      this.updateSelectable();\r\n      this.historyService.updateForSignCount(null, this.paymentCategory);\r\n    }\r\n  }\r\n\r\n  loadStatement() {\r\n    this.isLoadingExtra = true;\r\n\r\n    if (this.pageNumber === PAGE_START) {\r\n      this.statement = null;\r\n    }\r\n\r\n    return this.historyService\r\n      .getTransactionGroup(\r\n        this.paymentCategory,\r\n        this.filterScheme,\r\n        this.pageNumber,\r\n        this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN\r\n          ? this.pageSizeForSign\r\n          : this.pageSize\r\n      )\r\n      .pipe(\r\n        tap((retrievedTransactionGroup) => {\r\n          this.hasMorePages =\r\n            this.pageSize * this.pageNumber <=\r\n            retrievedTransactionGroup.transactionsCount;\r\n\r\n          this.statement = {\r\n            totalTransactionsCount: retrievedTransactionGroup.transactionsCount,\r\n            transactionGroups:\r\n              this.filterScheme.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN\r\n                ? this.destructureForSignGroups(retrievedTransactionGroup)\r\n                : [retrievedTransactionGroup],\r\n          };\r\n        }),\r\n        catchError((err) => {\r\n          console.log(err);\r\n          this.statement = null;\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => {\r\n          this.isReady = true;\r\n          this.isLoading = false;\r\n          this.isLoadingExtra = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  private destructureForSignGroups(mergedGroup: ITransactionGroup) {\r\n    const forMeTransactions = mergedGroup.transactions.filter((transaction) => {\r\n      return transaction.isSignable;\r\n    });\r\n\r\n    const forOthersTransactions = mergedGroup.transactions.filter(\r\n      (transaction) => {\r\n        return transaction.isSignableByOthers;\r\n      }\r\n    );\r\n\r\n    const forMeToSign = {\r\n      title: this.historyService.generateGroupTitle(\r\n        FILTER_PAYMENT_STATUS.FOR_SIGN\r\n      ),\r\n      creditSum: null,\r\n      debitSum: this.historyService.getTotalAmount(forMeTransactions),\r\n      hasLargeTransactions:\r\n        this.statementService.checkListForLargeTransactions(forMeTransactions),\r\n      transactionsCount: forMeTransactions.length,\r\n      transactions: forMeTransactions,\r\n    };\r\n\r\n    const forOthersToSign = {\r\n      title: this.historyService.generateGroupTitle(\r\n        FILTER_PAYMENT_STATUS.FOR_SIGN_OTHERS\r\n      ),\r\n      creditSum: null,\r\n      debitSum: this.historyService.getTotalAmount(forOthersTransactions),\r\n      hasLargeTransactions: this.statementService.checkListForLargeTransactions(\r\n        forOthersTransactions\r\n      ),\r\n      transactionsCount: forOthersTransactions.length,\r\n      transactions: forOthersTransactions,\r\n    };\r\n\r\n    return [forMeToSign, forOthersToSign];\r\n  }\r\n\r\n  private async showValidationError(validationResult: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      ValidationErrorComponent,\r\n      this.modalConfigMedium\r\n    );\r\n    validationResult.results = validationResult.results.map((item) => {\r\n      item.documentNumber = this.getDocumentNumberById(item.itemId);\r\n      return item;\r\n    });\r\n    modal.componentInstance.result = validationResult;\r\n  }\r\n\r\n  private async showMultipleSignPartialSuccess(\r\n    signResult: IBulkOperationResult\r\n  ) {\r\n    const modal = this.modalService.open(\r\n      MultipleSignPartialSuccessComponent,\r\n      this.modalConfigMedium\r\n    );\r\n\r\n    signResult.results = signResult.results.map((signItem) => {\r\n      signItem.documentNumber = this.getDocumentNumberById(signItem.itemId);\r\n      return signItem;\r\n    });\r\n\r\n    modal.componentInstance.result = signResult;\r\n  }\r\n\r\n  private async showMultipleSignPartialError(signResult: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      MultipleSignPartialErrorComponent,\r\n      this.modalConfigMedium\r\n    );\r\n    signResult.results = signResult.results.map((signItem) => {\r\n      signItem.documentNumber = this.getDocumentNumberById(signItem.itemId);\r\n      return signItem;\r\n    });\r\n    modal.componentInstance.signResult = signResult;\r\n  }\r\n\r\n  private async showMultipleSignSuccess(result: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      MultipleSignSuccessComponent,\r\n      this.modalConfigSmall\r\n    );\r\n\r\n    modal.componentInstance.result = result;\r\n  }\r\n\r\n  private async showMultipleSignError(\r\n    errorText: string = null,\r\n    modalParams: ISignModalParams\r\n  ) {\r\n    const modal = this.modalService.open(\r\n      MultipleSignErrorComponent,\r\n      this.modalConfigSmall\r\n    );\r\n\r\n    modal.componentInstance.errorText = errorText;\r\n\r\n    try {\r\n      await modal.result;\r\n      this.showSignModal(modalParams);\r\n    } catch (error) {}\r\n  }\r\n\r\n  private async showDeleteSuccess(successCount: number) {\r\n    const modal = this.modalService.open(\r\n      DeleteSuccessComponent,\r\n      this.modalConfigSmall\r\n    );\r\n    modal.componentInstance.successCount = successCount;\r\n  }\r\n\r\n  private async showDeletePartial(successCount: number, failedCount: number) {\r\n    const modal = this.modalService.open(\r\n      DeletePartialComponent,\r\n      this.modalConfigMedium\r\n    );\r\n    modal.componentInstance.successCount = successCount;\r\n    modal.componentInstance.failedCount = failedCount;\r\n  }\r\n\r\n  private async showDeleteError(deletingTransactions: Transaction[]) {\r\n    const modal = this.modalService.open(\r\n      DeleteErrorComponent,\r\n      this.modalConfigSmall\r\n    );\r\n    modal.componentInstance.failedCount = deletingTransactions.length;\r\n    try {\r\n      await modal.result;\r\n      this.deleteTransactions(deletingTransactions);\r\n    } catch (error) {}\r\n  }\r\n\r\n  private async showSendToSignedSuccess(signResult: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      SendToSignedSuccessComponent,\r\n      this.modalConfigSmall\r\n    );\r\n\r\n    (modal.componentInstance as SendToSignedErrorComponent).signResult =\r\n      signResult;\r\n\r\n    // modal.componentInstance.successCount = successCount;\r\n  }\r\n\r\n  private async showSendToSignedPartial(signResult: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      SendToSignedPartialComponent,\r\n      this.modalConfigMedium\r\n    );\r\n\r\n    signResult.results = signResult.results.map((signItem) => {\r\n      signItem.documentNumber = this.getDocumentNumberById(signItem.itemId);\r\n      return signItem;\r\n    });\r\n\r\n    (modal.componentInstance as SendToSignedErrorComponent).signResult =\r\n      signResult;\r\n\r\n    // modal.componentInstance.successCount = successCount;\r\n    // modal.componentInstance.failedCount = failedCount;\r\n  }\r\n\r\n  private async showSendToSignedPartialError(signResult: IBulkOperationResult) {\r\n    const modal = this.modalService.open(\r\n      SendToSignedPartialErrorComponent,\r\n      this.modalConfigMedium\r\n    );\r\n\r\n    signResult.results = signResult.results.map((signItem) => {\r\n      signItem.documentNumber = this.getDocumentNumberById(signItem.itemId);\r\n      return signItem;\r\n    });\r\n\r\n    (modal.componentInstance as SendToSignedPartialErrorComponent).signResult =\r\n      signResult;\r\n\r\n    // modal.componentInstance.successCount = successCount;\r\n    // modal.componentInstance.failedCount = failedCount;\r\n  }\r\n\r\n  private async showSendToSignedError(\r\n    sendingTransactions: (Transaction | IHistoryPayment)[]\r\n  ) {\r\n    const modal = this.modalService.open(\r\n      SendToSignedErrorComponent,\r\n      this.modalConfigSmall\r\n    );\r\n\r\n    (modal.componentInstance as SendToSignedErrorComponent).signResult = {\r\n      numberOfFailed: sendingTransactions.length,\r\n      numberOfSuccess: 0,\r\n      status: BULK_OPERATION_STATUS.FAILED,\r\n    };\r\n\r\n    try {\r\n      await modal.result;\r\n      this.sendToSigned(sendingTransactions);\r\n    } catch (error) {}\r\n  }\r\n\r\n  private resetSelectable() {\r\n    this.selectedTransactions = [];\r\n    this.selectedCount = 0;\r\n    this.selectedBalance = {\r\n      amount: 0,\r\n      currency: null,\r\n    };\r\n\r\n    this.isAllSelected = false;\r\n    this.hasSignableSelected = false;\r\n  }\r\n\r\n  private updateSelectable() {\r\n    this.resetSelectable();\r\n    this.updateSelectedValues();\r\n  }\r\n\r\n  private retrieveIdsFromList(list) {\r\n    return list.map((item) => {\r\n      return item.id;\r\n    });\r\n  }\r\n\r\n  private updateSelectedValues() {\r\n    this.currentTransactions.forEach((item) => {\r\n      if (item.isSelected) {\r\n        this.selectedTransactions.push(item);\r\n        this.selectedCount++;\r\n      }\r\n    });\r\n\r\n    this.selectedBalance = this.countTotalBalanceFromTransactionsList(\r\n      this.selectedTransactions\r\n    );\r\n  }\r\n\r\n  private countTotalBalanceFromPaymentsList(payments: IHistoryPayment[]) {\r\n    const result = {\r\n      amount: 0,\r\n      currency: null,\r\n    };\r\n\r\n    payments.forEach((payment) => {\r\n      if (!result.currency) {\r\n        result.currency = payment.details.paymentAmount?.currency;\r\n      }\r\n      result.amount += payment.details.paymentAmount?.amount;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private countTotalBalanceFromTransactionsList(transactions: Transaction[]) {\r\n    const result = {\r\n      amount: 0,\r\n      currency: null,\r\n    };\r\n\r\n    transactions.forEach((item) => {\r\n      if (item.debit) {\r\n        if (!result.currency && item.debit.currency) {\r\n          result.currency = item.debit.currency;\r\n        }\r\n        result.amount += item.debit.amount;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private isAllSignableInList(transactions: Transaction[]) {\r\n    let result = true;\r\n    transactions.forEach((transaction) => {\r\n      if (result === false) {\r\n        return result;\r\n      }\r\n\r\n      if (!transaction.isSignable) {\r\n        result = false;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private isAllSendableForSignInList(transactions: Transaction[]) {\r\n    let result = true;\r\n    transactions.forEach((transaction) => {\r\n      if (result === false) {\r\n        return result;\r\n      }\r\n\r\n      if (!transaction.isSendableForSign) {\r\n        result = false;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private hasSignableInList(transactions: Transaction[]) {\r\n    return transactions.find((transaction) => {\r\n      return transaction.isSignable;\r\n    })\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  private hasSendableForSignInList(transactions: Transaction[]) {\r\n    return transactions.find((transaction) => {\r\n      return transaction.isSendableForSign;\r\n    })\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  private mapQueryParams(queryParams: any) {\r\n    let filter = Object.assign(\r\n      {},\r\n      this.filterService.getDefaults(this.filterMode)\r\n    );\r\n\r\n    for (const key in queryParams) {\r\n      if (Object.prototype.hasOwnProperty.call(queryParams, key)) {\r\n        const param = queryParams[key];\r\n\r\n        if (!param) {\r\n          continue;\r\n        }\r\n\r\n        if (key == 'periodFrom' || key == 'periodTo') {\r\n          filter[key] = new Date(param);\r\n        } else {\r\n          filter[key] = param;\r\n        }\r\n      }\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  private updateQueryParams() {\r\n    const queryParams: any = Object.assign({}, this.filterScheme);\r\n\r\n    const newFilter = {};\r\n\r\n    for (const key in queryParams) {\r\n      if (Object.prototype.hasOwnProperty.call(queryParams, key)) {\r\n        const param = queryParams[key];\r\n\r\n        if (param && param != null && param != 'null') {\r\n          if (key == 'periodFrom' || key == 'periodTo') {\r\n            newFilter[key] = this.datePipe.transform(param, 'yyyy-MM-dd');\r\n          } else {\r\n            newFilter[key] = param;\r\n          }\r\n\r\n          if (key == 'amountFrom' || key == 'amountTo') {\r\n            newFilter[key] = this.maskedService.getNumberedAmount(param);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateCashedRouteQuery(newFilter);\r\n    this.router.navigate([], {\r\n      queryParams: newFilter,\r\n      relativeTo: this.route,\r\n      skipLocationChange: false,\r\n    });\r\n  }\r\n\r\n  private updateCashedRouteQuery(queryParams) {\r\n    sessionStorage.setItem(this.SESSION_ROUTE_KEY, JSON.stringify(queryParams));\r\n  }\r\n\r\n  private getDocumentNumberById(transactionId: string) {\r\n    const found = this.currentTransactions.find((transaction) => {\r\n      return transaction.id == transactionId;\r\n    });\r\n    return (found && found.documentNumber) || null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HistoryComponent } from './history.component';\r\nimport { HistoryListComponent } from './history-list/history-list.component';\r\nimport { PAYMENT_CATEGORY } from '@shared/models';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HistoryComponent,\r\n    data: {\r\n      title: 'HISTORY.TITLE',\r\n    },\r\n    children: [\r\n      {\r\n        path: 'all',\r\n        component: HistoryListComponent,\r\n        data: {\r\n          category: PAYMENT_CATEGORY.ALL,\r\n        },\r\n      },\r\n      {\r\n        path: 'tenge',\r\n        component: HistoryListComponent,\r\n        data: {\r\n          category: PAYMENT_CATEGORY.DOMESTIC,\r\n        },\r\n      },\r\n      {\r\n        path: 'foreign',\r\n        component: HistoryListComponent,\r\n        data: {\r\n          category: PAYMENT_CATEGORY.FOREIGN,\r\n        },\r\n      },\r\n      {\r\n        path: 'conversion',\r\n        component: HistoryListComponent,\r\n        data: {\r\n          category: PAYMENT_CATEGORY.CONVERSION,\r\n        },\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'all',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HistoryRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { StatementModule } from '@statement/statement.module';\nimport { FilterModule } from '@filter/filter.module';\n\nimport { HISTORY_MODALS } from './modals';\n\nimport { HistoryRoutingModule } from './history-routing.module';\nimport { HistoryComponent } from './history.component';\nimport { HistoryListComponent } from './history-list/history-list.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\n\n@NgModule({\n  declarations: [HistoryComponent, HistoryListComponent, HISTORY_MODALS],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FilterModule,\n    FormsModule,\n    StatementModule,\n    HistoryRoutingModule,\n    InfiniteScrollModule,\n    TranslateModule,\n    NgxSkeletonLoaderModule,\n  ],\n})\nexport class HistoryModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpParams, HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ApiService, HEADERS } from '@api/index';\n\nimport {\n  IFilterScheme,\n  FILTER_PAYMENT_STATUS,\n  FILTER_SORT,\n} from '@filter/filter.model';\n\nimport { Transaction, ITransactionGroup } from '@statement/index';\nimport { StatementService } from '@statement/statement.service';\n\nimport { convertDateToApiFormat } from '@utils/index';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { FilterService } from '@filter/filter.service';\n\nimport { FeatureFlagsService, FEATURE_FLAG } from '@feature-flags/index';\n\nimport { IMoney } from '@shared/currency/currency.model';\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { CurSymbolPipe } from '@shared/pipes';\nimport {\n  PAYMENT_STATUS,\n  PAYMENT_TYPE,\n  ISmsToken,\n  TOKEN_TYPE,\n  PAYMENT_CATEGORY,\n  IHistoryPayment,\n  IBulkOperationResult,\n  HISTORY_PAYMENT_STATE,\n} from '@shared/models';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAX_PAGE_SIZE_FOR_SIGN = 100000;\nexport interface IBadge {\n  statusCode: PAYMENT_STATUS;\n  count: number;\n}\n\nexport interface IPaymentsSignAllRequest {\n  itemIds: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HistoryService {\n  private cashedCategory: PAYMENT_CATEGORY;\n  private cashedFilter: IFilterScheme;\n  private cashedTransactionGroup: ITransactionGroup;\n  private cashedPageNumber: number;\n  private cashedPageSize: number;\n\n  constructor(\n    private statementService: StatementService,\n    private companyService: CompanyService,\n    private api: ApiService,\n    private translateService: TranslateService,\n    private filterService: FilterService,\n    private maskedService: MaskedService,\n    private curSymbolPipe: CurSymbolPipe,\n    private featureFlagsService: FeatureFlagsService\n  ) {}\n\n  getTransactionGroup(\n    category: PAYMENT_CATEGORY = PAYMENT_CATEGORY.DOMESTIC,\n    filter: IFilterScheme,\n    pageNumber: number = 1,\n    pageSize: number = 50\n  ): Observable<ITransactionGroup> {\n    if (\n      // предлагаю кеширование на уровне interceptor-a делать\n      this.cashedCategory === category &&\n      this.cashedTransactionGroup &&\n      this.cashedFilter === filter &&\n      this.cashedPageNumber === pageNumber &&\n      this.cashedPageSize === pageSize\n    ) {\n      return of(this.cashedTransactionGroup);\n    }\n\n    const isNextPage =\n      this.cashedFilter === filter && pageNumber > this.cashedPageNumber;\n    return this.getHistoryListObservable(\n      category,\n      filter,\n      pageNumber,\n      pageSize\n    ).pipe(\n      map((historyPaymentsResult) => {\n        this.cashedCategory = category;\n        this.cashedFilter = filter;\n        this.cashedPageNumber = pageNumber;\n\n        this.cashedPageSize = pageSize;\n        const historyPaymentsList = historyPaymentsResult.body;\n        const mappedTransactions = this.mapHistoryPayments(historyPaymentsList);\n\n        let mergedTransactions = isNextPage\n          ? this.cashedTransactionGroup.transactions.concat(mappedTransactions)\n          : mappedTransactions;\n\n        if (filter.paymentStatus === FILTER_PAYMENT_STATUS.FOR_SIGN) {\n          mergedTransactions = mergedTransactions.sort(this.compareBySignature);\n          mergedTransactions = mergedTransactions.sort(this.compareByDate);\n        }\n\n        if (filter.paymentStatus === FILTER_PAYMENT_STATUS.FAILED) {\n          this.markFailedAsRead();\n        }\n\n        this.cashedTransactionGroup = {\n          title: this.generateGroupTitle(filter.paymentStatus),\n          creditSum: null,\n          debitSum: this.getTotalAmount(mergedTransactions),\n          hasLargeTransactions:\n            this.statementService.checkListForLargeTransactions(\n              mergedTransactions\n            ),\n          transactionsCount: mergedTransactions.length,\n          transactions: mergedTransactions,\n        };\n\n        return this.cashedTransactionGroup;\n      })\n    );\n  }\n\n  async getHistoryList(\n    category: PAYMENT_CATEGORY,\n    filter: IFilterScheme,\n    pageNumber: number = 1,\n    pageSize: number = 50\n  ) {\n    const url = `companies/${this.companyService.currentId}/payments`;\n    const headers = new HttpHeaders();\n\n    let params = new HttpParams();\n\n    params = this.appendCategoryParams(category, params);\n    params = params.append('page', `${pageNumber}`);\n    params = params.append('pageSize', `${pageSize}`);\n    params = this.appendFilterParams(filter, params);\n\n    return this.api.get<HttpResponse<IHistoryPayment[]>>(url, headers, params, {\n      observe: 'response',\n    });\n  }\n\n  getHistoryListObservable(\n    category: PAYMENT_CATEGORY,\n    filter: IFilterScheme,\n    pageNumber: number = 1,\n    pageSize: number = 50\n  ): Observable<HttpResponse<IHistoryPayment[]>> {\n    const url = `/companies/${this.companyService.currentId}/payments`;\n    const headers = new HttpHeaders();\n\n    let params = new HttpParams();\n\n    params = this.appendCategoryParams(category, params);\n    params = params.append('page', `${pageNumber}`);\n    params = params.append('pageSize', `${pageSize}`);\n    params = this.appendFilterParams(filter, params);\n\n    const extras = {\n      observe: 'response',\n    };\n\n    return this.api.getObservable<HttpResponse<IHistoryPayment[]>>(\n      url,\n      headers,\n      params,\n      extras\n    );\n  }\n\n  sendMultipleTransactionsForSign(transactionIds: string[]) {\n    const url = `companies/${this.companyService.currentId}/payments:to-created`;\n    let params = new HttpParams();\n    transactionIds.forEach((id) => {\n      params = params.append('paymentId', id);\n    });\n\n    return this.api.patch<IBulkOperationResult>(url, null, null, params);\n  }\n\n  async validateTransactionsByPaymentId(\n    companyId: string,\n    transactionIds: string[]\n  ) {\n    const url = `companies/${companyId}/payments/signatures/validate`;\n    let params = new HttpParams();\n    transactionIds.forEach((id) => {\n      params = params.append('paymentId', id);\n    });\n    const headers = new HttpHeaders().append(\n      'Content-Type',\n      'application/x-www-form-urlencoded;charset=UTF-8'\n    );\n    return this.api.post<IBulkOperationResult>(url, params, headers);\n  }\n\n  async signMultipleTransactions(\n    companyId: string,\n    smsToken: ISmsToken,\n    transactionIds: string[]\n  ) {\n    const url = `companies/${companyId}/payments/signatures`;\n    let headers = new HttpHeaders();\n\n    if (smsToken.type === TOKEN_TYPE.OTP) {\n      headers = headers.set(HEADERS.OTP, smsToken.signature);\n    } else {\n      headers = headers.set(HEADERS.PHONE, smsToken.signature);\n    }\n\n    const body: IPaymentsSignAllRequest = { itemIds: transactionIds };\n\n    return this.api.post<IBulkOperationResult>(url, body, headers);\n  }\n\n  async deleteTransaction(companyId: string, transaction: Transaction) {\n    const url = `companies/${companyId}/payments`;\n    const headers = new HttpHeaders();\n\n    let params = new HttpParams().set('id', transaction.id);\n\n    return this.api.delete<string[]>(url, headers, params);\n  }\n\n  async revokePayment(companyId: string, transaction: Transaction) {\n    const url = `companies/${companyId}/payments/${transaction.paymentId}:to-revoked`;\n    return this.api.patch<string[]>(url);\n  }\n\n  async deleteMultipleTransactions(\n    companyId: string,\n    transactions: Transaction[]\n  ) {\n    const url = `companies/${companyId}/payments`;\n    const headers = new HttpHeaders();\n\n    let params = new HttpParams();\n    transactions.forEach((transaction) => {\n      params = params.append('id', transaction.id);\n    });\n\n    return this.api.delete<string[]>(url, headers, params);\n  }\n\n  public isRemovable(payment: IHistoryPayment) {\n    return (\n      payment.status.code === PAYMENT_STATUS.CREATED ||\n      payment.status.code === PAYMENT_STATUS.DRAFT\n    );\n  }\n\n  public isEditable(payment: IHistoryPayment) {\n    if (\n      payment.type === PAYMENT_TYPE.CONVERSION &&\n      payment.status.code !== PAYMENT_STATUS.CREATED\n    ) {\n      return false;\n    }\n\n    return (\n      payment.status.code === PAYMENT_STATUS.DRAFT ||\n      payment.status.code === PAYMENT_STATUS.CREATED\n    );\n  }\n\n  public isRevokable(payment: IHistoryPayment) {\n    return payment.status.code === PAYMENT_STATUS.READY_TO_SEND;\n  }\n\n  public getSignsCountText(transaction: Transaction) {\n    const signed =\n      (transaction.signatures && transaction.signatures.length) || 0;\n    const total = this.companyService.isMultipleSignScheme(\n      transaction.signatureScheme\n    )\n      ? 2\n      : 1;\n    return `${signed}/${total}`;\n  }\n\n  private appendCategoryParams(category: PAYMENT_CATEGORY, params: HttpParams) {\n    switch (category) {\n      case PAYMENT_CATEGORY.ALL:\n        params = params.append('category', PAYMENT_CATEGORY.DOMESTIC);\n        params = params.append('category', PAYMENT_CATEGORY.FOREIGN);\n        params = params.append('category', PAYMENT_CATEGORY.CONVERSION);\n        break;\n\n      default:\n        params = params.append('category', category);\n        break;\n    }\n    return params;\n  }\n\n  private appendFilterParams(filter: IFilterScheme, params: HttpParams) {\n    params = this.appendStatusToParams(filter.paymentStatus, params);\n\n    if (filter.documentNumber) {\n      params = params.append('documentNumber', filter.documentNumber);\n    }\n\n    if (filter.periodFrom) {\n      params = params.append(\n        'dateFrom',\n        convertDateToApiFormat(filter.periodFrom)\n      );\n    }\n\n    if (filter.periodTo) {\n      params = params.append('dateTo', convertDateToApiFormat(filter.periodTo));\n    }\n\n    if (filter.amountFrom) {\n      params = params.append('amountFrom', `${filter.amountFrom}`);\n    }\n\n    if (filter.amountTo) {\n      params = params.append('amountTo', `${filter.amountTo}`);\n    }\n\n    if (filter.recipientIban) {\n      params = params.append('correspondentAccount', filter.recipientIban);\n    }\n\n    if (filter.recipientBin) {\n      params = params.append('correspondentBin', filter.recipientBin);\n    }\n\n    if (filter.type) {\n      params = params.append('type', filter.type);\n    }\n\n    switch (filter.sortBy) {\n      case FILTER_SORT.AMOUNT_ASC:\n        params = params.append('sortBy', 'AMOUNT');\n        break;\n\n      case FILTER_SORT.AMOUNT_DESC:\n        params = params.append('sortBy', '-AMOUNT');\n        break;\n    }\n\n    return params;\n  }\n\n  private appendStatusToParams(\n    filterStatus: FILTER_PAYMENT_STATUS,\n    params: HttpParams\n  ) {\n    switch (filterStatus) {\n      case FILTER_PAYMENT_STATUS.ALL:\n        params = params.append('status', PAYMENT_STATUS.DRAFT);\n\n        params = params.append('status', PAYMENT_STATUS.CREATED);\n\n        params = params.append('status', PAYMENT_STATUS.REJECTED);\n\n        params = params.append('status', PAYMENT_STATUS.BANK_COMPLETED);\n\n        params = params.append('status', PAYMENT_STATUS.BANK_PROCESSING);\n        params = params.append('status', PAYMENT_STATUS.BANK_SENT);\n        params = params.append('status', PAYMENT_STATUS.READY_TO_SEND);\n        params = params.append('status', PAYMENT_STATUS.IN_BANK);\n        break;\n\n      case FILTER_PAYMENT_STATUS.DRAFT:\n        params = params.append('status', PAYMENT_STATUS.DRAFT);\n        break;\n\n      case FILTER_PAYMENT_STATUS.FOR_SIGN:\n        params = params.append('status', PAYMENT_STATUS.CREATED);\n        break;\n\n      case FILTER_PAYMENT_STATUS.FAILED:\n        params = params.append('status', PAYMENT_STATUS.REJECTED);\n        break;\n\n      case FILTER_PAYMENT_STATUS.SUCCESS:\n        params = params.append('status', PAYMENT_STATUS.BANK_COMPLETED);\n        break;\n\n      case FILTER_PAYMENT_STATUS.IN_PROGRESS:\n        params = params.append('status', PAYMENT_STATUS.BANK_PROCESSING);\n        params = params.append('status', PAYMENT_STATUS.BANK_SENT);\n        params = params.append('status', PAYMENT_STATUS.READY_TO_SEND);\n        params = params.append('status', PAYMENT_STATUS.IN_BANK);\n        break;\n    }\n    return params;\n  }\n\n  private compareByDate(a: Transaction, b: Transaction) {\n    if (a.paymentStatus.timestamp < b.paymentStatus.timestamp) {\n      return 1;\n    }\n    if (a.paymentStatus.timestamp > b.paymentStatus.timestamp) {\n      return -1;\n    }\n    return 0;\n  }\n\n  async updateForSignCount(\n    payments: IHistoryPayment[] = null,\n    paymentCategory: PAYMENT_CATEGORY\n  ) {\n    this.filterService.updateForSignCount(null);\n    if (!payments) {\n      const result = await this.retrivePaymentsByStatus(\n        FILTER_PAYMENT_STATUS.FOR_SIGN,\n        paymentCategory\n      );\n      payments = result.payments;\n    }\n\n    let forSignMeCount = 0;\n    let forSignOthersCount = 0;\n\n    payments?.forEach((payment) => {\n      if (\n        this.companyService.isSignable(\n          payment.status.code,\n          payment.signatureScheme,\n          this.companyService.currentAuthority.authority,\n          payment.signatures?.length\n        )\n      ) {\n        forSignMeCount++;\n      } else {\n        forSignOthersCount++;\n      }\n    });\n\n    if (forSignMeCount == 0 && forSignOthersCount == 0) {\n      this.filterService.updateForSignCount(0);\n    } else if (forSignMeCount > 0) {\n      this.filterService.updateForSignCount(forSignMeCount, true);\n    } else {\n      this.filterService.updateForSignCount(forSignOthersCount);\n    }\n  }\n\n  private async retrivePaymentsByStatus(\n    paymentStatus: FILTER_PAYMENT_STATUS,\n    paymentCategory: PAYMENT_CATEGORY\n  ) {\n    let retrievedCount = 0;\n    let payments = null;\n\n    const url = `companies/${this.companyService.currentId}/payments`;\n    const headers = new HttpHeaders();\n\n    let params = new HttpParams();\n    params = this.appendStatusToParams(paymentStatus, params);\n    params = this.appendCategoryParams(paymentCategory, params);\n    params = params.append('pageSize', `${MAX_PAGE_SIZE_FOR_SIGN}`);\n\n    try {\n      const historyPaymentsResult = await this.api.get<\n        HttpResponse<IHistoryPayment[]>\n      >(url, headers, params, {\n        observe: 'response',\n      });\n      payments = historyPaymentsResult.body;\n      retrievedCount = +historyPaymentsResult.headers.get('X-Total-Count');\n    } catch (error) {\n    } finally {\n      return {\n        payments: payments,\n        count: retrievedCount,\n      };\n    }\n  }\n\n  updateStatusCounts(paymentCategory: PAYMENT_CATEGORY) {\n    this.updateForSignCount(null, paymentCategory);\n    this.updateCountsByBadges(paymentCategory);\n  }\n\n  public isSignable(payment: IHistoryPayment) {\n    const hasSignRights = this.companyService.isSignable(\n      payment.status.code,\n      payment.signatureScheme,\n      this.companyService.currentAuthority.authority,\n      payment.signatures?.length\n    );\n\n    if (payment.status.code === PAYMENT_STATUS.DRAFT) {\n      return hasSignRights && this.isCorrectlyFullfilled(payment);\n    }\n\n    return hasSignRights;\n  }\n\n  public isSignableByOthers(payment: IHistoryPayment) {\n    return this.companyService.isSignableByOthers(\n      payment.status.code,\n      payment.signatureScheme,\n      this.companyService.currentAuthority.authority,\n      payment.signatures?.length\n    );\n  }\n\n  public isSendableForSign(payment: IHistoryPayment) {\n    const isSignableByOthers = this.isSignableByOthers(payment);\n    const isSendableForSign = this.companyService.isSendableForSign(\n      payment.status.code,\n      payment.signatureScheme,\n      this.companyService.currentAuthority.authority\n    );\n\n    return !isSignableByOthers && isSendableForSign;\n  }\n\n  private isCorrectlyFullfilled(payment: IHistoryPayment) {\n    // TODO: [JSN-1755] Make this check)\n    return true;\n  }\n\n  private async markFailedAsRead() {\n    const url = `companies/${this.companyService.currentId}/payments/badges:mark-read-rejected`;\n\n    try {\n      await this.api.put(url);\n    } catch (error) {\n    } finally {\n      this.filterService.updateFailedCount(0);\n    }\n  }\n\n  private async updateCountsByBadges(paymentCategory: PAYMENT_CATEGORY) {\n    this.filterService.updateInProgressCount(null);\n    this.filterService.updateFailedCount(null);\n\n    let inProgressCount = 0;\n    let failedCount = 0;\n    const url = `companies/${this.companyService.currentId}/payments/badges`;\n\n    let params = new HttpParams();\n    params = this.appendCategoryParams(paymentCategory, params);\n\n    try {\n      const badges = await this.api.get<IBadge[]>(url, null, params);\n      badges.forEach((badge) => {\n        switch (badge.statusCode) {\n          case PAYMENT_STATUS.READY_TO_SEND:\n          case PAYMENT_STATUS.IN_BANK:\n          case PAYMENT_STATUS.BANK_PROCESSING:\n          case PAYMENT_STATUS.BANK_SENT:\n            inProgressCount += badge.count;\n            break;\n          case PAYMENT_STATUS.REJECTED:\n            failedCount += badge.count;\n            break;\n        }\n      });\n    } catch (error) {\n    } finally {\n      this.filterService.updateInProgressCount(inProgressCount);\n      this.filterService.updateFailedCount(failedCount);\n    }\n  }\n\n  getTotalAmount(transactions: Transaction[]): IMoney {\n    let total = 0;\n    let currency = null;\n    transactions.forEach((item) => {\n      if (item.balance) {\n        if (item.balance.currency && !currency) {\n          currency = item.balance.currency;\n        }\n        total += item.balance.amount;\n      }\n    });\n    return {\n      currency: currency,\n      amount: total,\n    };\n  }\n\n  private mapDescription(payment: IHistoryPayment) {\n    switch (payment.type) {\n      case PAYMENT_TYPE.CONVERSION:\n        const amount = this.maskedService.getMaskedAmount(\n          payment.details.exchangeRate?.calculatedSum\n        );\n        const currency = this.curSymbolPipe.transform(\n          payment.details.exchangeRate?.currencyTo\n        );\n\n        let mainDescription;\n        if (amount && currency) {\n          mainDescription = this.translateService.instant(\n            'CONVERSION.DESCRIPTION',\n            {\n              money: `${amount} ${currency}`,\n              iban: payment.paymentRecipient.recipientAccount.iban,\n            }\n          );\n        } else {\n          mainDescription = payment.details?.description || null;\n        }\n\n        if (mainDescription) {\n          return `${mainDescription} ${\n            payment.details.conversionPurpose?.description || ''\n          }`;\n        } else if (payment.details.conversionPurpose?.description) {\n          return `${payment.details.conversionPurpose?.description}`;\n        }\n        return null;\n\n      default:\n        return payment.details?.description || null;\n    }\n  }\n\n  private mapHistoryPayments(payments: IHistoryPayment[]): Transaction[] {\n    return payments.map((payment, index) => {\n      const transaction = {\n        id: payment.id || null,\n        iban: payment.details?.payerIban || null,\n        reference: payment.id || null,\n        documentNumber: payment.details?.documentId || null,\n        correspondentBankBic:\n          payment.paymentRecipient?.recipientAccount?.bic || null,\n        correspondentAccount:\n          payment.paymentRecipient?.recipientAccount?.iban || null,\n        correspondentName: payment.paymentRecipient?.name || null,\n        kbe: payment.paymentRecipient?.kbe || null,\n        correspondentBin: payment.paymentRecipient?.iinOrBin || null,\n        debit: payment.details?.paymentAmount || null,\n        credit: null,\n        description: this.mapDescription(payment),\n        documentDate: payment.details?.issueDate || null,\n        valueDate: payment.details?.valueDate || null,\n        knp: payment.details?.knp || null,\n        kbk: payment.details?.kbk || null,\n        signHead: null,\n        signBuch: null,\n        isPayment: true,\n        paymentId: payment.id,\n        paymentStatus: payment.status || null,\n        paymentType: payment.type || null,\n        paymentEmployees: payment.paymentEmployees,\n        createDate: payment.details?.createDate || null,\n        foreignPaymentDetails: payment.details.foreignPaymentDetails || null,\n        foreignRecipient: {\n          country: payment.paymentRecipient?.country,\n          countryCode: payment.paymentRecipient?.countryCode,\n          cityName: payment.paymentRecipient?.cityName,\n          bic: payment.paymentRecipient?.recipientAccount?.bic,\n          bankName: payment.paymentRecipient?.recipientAccount?.bankName,\n        },\n\n        emailOnSuccess: payment.emailOnSuccess || null,\n\n        signatureScheme: payment.signatureScheme || null,\n        signatures: payment.signatures || [],\n      };\n\n      const newTransaction = new Transaction(\n        transaction,\n        this.translateService\n      );\n\n      if (this.isFeatureDisabled(payment.type)) {\n        newTransaction.isExportable = false;\n        newTransaction.isRepeatable = false;\n        newTransaction.isEditable = false;\n        newTransaction.isRemovable = false;\n        newTransaction.isSignable = false;\n        newTransaction.isSendableForSign = false;\n        newTransaction.isRevokable = false;\n      } else {\n        newTransaction.isExportable = this.isExportable(payment);\n        newTransaction.isRepeatable = this.isRepeatable(payment);\n        newTransaction.isEditable = this.isEditable(payment);\n        newTransaction.isRemovable = this.isRemovable(payment);\n        newTransaction.isSignable = this.isSignable(payment);\n        newTransaction.isSendableForSign = this.isSendableForSign(payment);\n        newTransaction.isRevokable = this.isRevokable(payment);\n      }\n\n      newTransaction.associatedField =\n        payment.details?.associatedField?.parameters;\n\n      newTransaction.isSignableByOthers = this.isSignableByOthers(payment);\n      newTransaction.signsCountText = this.getSignsCountText(newTransaction);\n\n      return newTransaction;\n    });\n  }\n\n  private isFeatureDisabled(paymentType: PAYMENT_TYPE) {\n    const isTypeConversionAndDisabled =\n      paymentType == PAYMENT_TYPE.CONVERSION &&\n      this.featureFlagsService.isDisabled(FEATURE_FLAG.CONVERSION);\n    const isTypeForeignAndDisabled =\n      paymentType == PAYMENT_TYPE.FOREIGN &&\n      this.featureFlagsService.isDisabled(FEATURE_FLAG.FOREIGN_PAYMENT);\n\n    return isTypeConversionAndDisabled || isTypeForeignAndDisabled || false;\n  }\n\n  private isRepeatable(payment: IHistoryPayment) {\n    if (\n      (payment.status.state == HISTORY_PAYMENT_STATE.MIGRATED &&\n        payment.category === PAYMENT_CATEGORY.CONVERSION) ||\n      payment.status.code == PAYMENT_STATUS.DRAFT\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private isExportable(payment: IHistoryPayment) {\n    if (\n      (payment.status.state === HISTORY_PAYMENT_STATE.MIGRATED &&\n        payment.category === PAYMENT_CATEGORY.CONVERSION) ||\n      payment.status.code === PAYMENT_STATUS.CREATED\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  generateGroupTitle(filterStatus: FILTER_PAYMENT_STATUS) {\n    switch (filterStatus) {\n      case FILTER_PAYMENT_STATUS.ALL:\n        return 'HISTORY.LISTS.ALL';\n      case FILTER_PAYMENT_STATUS.FOR_SIGN:\n        return 'HISTORY.LISTS.FOR_SIGN';\n      case FILTER_PAYMENT_STATUS.FOR_SIGN_OTHERS:\n        return 'HISTORY.LISTS.FOR_SIGN_OTHERS';\n      case FILTER_PAYMENT_STATUS.SUCCESS:\n        return 'HISTORY.LISTS.SUCCESS';\n      case FILTER_PAYMENT_STATUS.FAILED:\n        return 'HISTORY.LISTS.FAILED';\n      case FILTER_PAYMENT_STATUS.IN_PROGRESS:\n        return 'HISTORY.LISTS.IN_PROGRESS';\n      case FILTER_PAYMENT_STATUS.DRAFT:\n        return 'HISTORY.LISTS.DRAFT';\n    }\n  }\n\n  private compareBySignature(a: Transaction, b: Transaction) {\n    if (a.isSignable && b.isSignable) {\n      return 0;\n    } else if (a.isSignable && b.isSignableByOthers) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DeletePartialComponent } from '../delete-partial/delete-partial.component';\n\n@Component({\n  selector: 'j-delete-error',\n  templateUrl: './delete-error.component.html',\n  styleUrls: ['./delete-error.component.scss'],\n})\nexport class DeleteErrorComponent extends DeletePartialComponent {\n  constructor(public modal: NgbActiveModal) {\n    super(modal);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-delete-partial',\n  templateUrl: './delete-partial.component.html',\n  styleUrls: ['./delete-partial.component.scss'],\n})\nexport class DeletePartialComponent {\n  @Input()\n  failedCount: number;\n  @Input()\n  successCount: number;\n\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n\n  get failedText() {\n    switch (this.failedCount % 20) {\n      case 1:\n        return 'HISTORY.DELETE.FAILED.ONE';\n      case 2:\n      case 3:\n      case 4:\n        return 'HISTORY.DELETE.FAILED.FEW';\n      default:\n        return 'HISTORY.DELETE.FAILED.OTHER';\n    }\n  }\n\n  get failedParams() {\n    return {\n      transactionsCount: this.failedCount,\n    };\n  }\n\n  get successText() {\n    switch (this.successCount % 10) {\n      case 1:\n        return 'HISTORY.DELETE.SUCCESS.ONE';\n      case 2:\n      case 3:\n      case 4:\n        return 'HISTORY.DELETE.SUCCESS.FEW';\n      default:\n        return 'HISTORY.DELETE.SUCCESS.OTHER';\n    }\n  }\n\n  get successParams() {\n    return {\n      transactionsCount: this.successCount,\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DeletePartialComponent } from '../delete-partial/delete-partial.component';\n\n@Component({\n  selector: 'j-delete-success',\n  templateUrl: './delete-success.component.html',\n  styleUrls: ['./delete-success.component.scss'],\n})\nexport class DeleteSuccessComponent extends DeletePartialComponent {\n  constructor(public modal: NgbActiveModal) {\n    super(modal);\n  }\n}\n","import { DeletePartialComponent } from './delete-partial/delete-partial.component';\nimport { DeleteErrorComponent } from './delete-error/delete-error.component';\nimport { DeleteSuccessComponent } from './delete-success/delete-success.component';\n\nimport { MultipleSignPartialErrorComponent } from './multiple-sign-partial-error/multiple-sign-partial-error.component';\nimport { MultipleSignPartialSuccessComponent } from './multiple-sign-partial-success/multiple-sign-partial-success.component';\nimport { MultipleSignErrorComponent } from './multiple-sign-error/multiple-sign-error.component';\nimport { MultipleSignSuccessComponent } from './multiple-sign-success/multiple-sign-success.component';\n\nimport { SendToSignedSuccessComponent } from './send-to-signed-success/send-to-signed-success.component';\nimport { SendToSignedErrorComponent } from './send-to-signed-error/send-to-signed-error.component';\nimport { SendToSignedPartialComponent } from './send-to-signed-partial/send-to-signed-partial.component';\nimport { SendToSignedPartialErrorComponent } from './send-to-signed-partial-error/send-to-signed-partial-error.component';\nimport { ValidationErrorComponent } from './validation-error/validation-error.component';\n\nexport const HISTORY_MODALS = [\n  DeleteSuccessComponent,\n  DeleteErrorComponent,\n  DeletePartialComponent,\n\n  MultipleSignSuccessComponent,\n  MultipleSignErrorComponent,\n  MultipleSignPartialSuccessComponent,\n  MultipleSignPartialErrorComponent,\n\n  SendToSignedSuccessComponent,\n  SendToSignedErrorComponent,\n  SendToSignedPartialComponent,\n  SendToSignedPartialErrorComponent,\n\n  ValidationErrorComponent,\n];\n\nexport * from './delete-error/delete-error.component';\nexport * from './delete-partial/delete-partial.component';\nexport * from './delete-success/delete-success.component';\n\nexport * from './multiple-sign-error/multiple-sign-error.component';\nexport * from './multiple-sign-success/multiple-sign-success.component';\nexport * from './multiple-sign-partial-error/multiple-sign-partial-error.component';\nexport * from './multiple-sign-partial-success/multiple-sign-partial-success.component';\n\nexport * from './send-to-signed-success/send-to-signed-success.component';\nexport * from './send-to-signed-error/send-to-signed-error.component';\nexport * from './send-to-signed-partial/send-to-signed-partial.component';\nexport * from './send-to-signed-partial-error/send-to-signed-partial-error.component';\n\nexport * from './validation-error/validation-error.component';\n","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-multiple-sign-error',\n  templateUrl: './multiple-sign-error.component.html',\n  styleUrls: ['./multiple-sign-error.component.scss'],\n})\nexport class MultipleSignErrorComponent {\n  @Input() errorText: string;\n\n  constructor(public modal: NgbActiveModal) {}\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IBulkOperationItem, IBulkOperationResult } from '@shared/models';\r\n\r\n@Component({\r\n  selector: 'j-multiple-sign-partial-error',\r\n  templateUrl: './multiple-sign-partial-error.component.html',\r\n  styleUrls: ['./multiple-sign-partial-error.component.scss'],\r\n})\r\nexport class MultipleSignPartialErrorComponent {\r\n  @Input() signResult: IBulkOperationResult;\r\n\r\n  constructor(public modal: NgbActiveModal) {}\r\n\r\n  dismissModal() {\r\n    this.modal.dismiss();\r\n  }\r\n\r\n  closeModal() {\r\n    this.modal.close();\r\n  }\r\n\r\n  retrieveErrors(transaction: IBulkOperationItem) {\r\n    let mappedErrors;\r\n\r\n    if (transaction.errorData) {\r\n      const errors = Object.entries(transaction.errorData);\r\n      mappedErrors = errors.map((item) => {\r\n        return item[1];\r\n      });\r\n    } else if (transaction.errorMsg) {\r\n      mappedErrors = [transaction.errorMsg];\r\n    } else {\r\n      mappedErrors = [];\r\n    }\r\n\r\n    return mappedErrors;\r\n  }\r\n\r\n  get failedText() {\r\n    switch (this.signResult && this.signResult.numberOfFailed % 20) {\r\n      case 1:\r\n        return 'HISTORY.PARTIAL.FAILED.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.PARTIAL.FAILED.FEW';\r\n      default:\r\n        return 'HISTORY.PARTIAL.FAILED.OTHER';\r\n    }\r\n  }\r\n\r\n  get failedParams() {\r\n    return {\r\n      transactionsCount: this.signResult && this.signResult.numberOfFailed,\r\n    };\r\n  }\r\n\r\n  get failedTransactions() {\r\n    return this.signResult?.results;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IMoney } from '@shared/currency/currency.model';\r\nimport {\r\n  BULK_OPERATION_STATUS,\r\n  IBulkOperationItem,\r\n  IBulkOperationResult,\r\n} from '@shared/models';\r\n\r\n@Component({\r\n  selector: 'j-multiple-sign-partial-success',\r\n  templateUrl: './multiple-sign-partial-success.component.html',\r\n  styleUrls: ['./multiple-sign-partial-success.component.scss'],\r\n})\r\nexport class MultipleSignPartialSuccessComponent implements OnInit {\r\n  @Input() result: IBulkOperationResult;\r\n\r\n  groups: {\r\n    money: IMoney;\r\n    count: number;\r\n  }[];\r\n\r\n  constructor(public modal: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n    this.generateGroups();\r\n  }\r\n\r\n  dismissModal() {\r\n    this.modal.dismiss();\r\n  }\r\n\r\n  closeModal() {\r\n    this.modal.close();\r\n  }\r\n\r\n  retrieveErrors(transaction: IBulkOperationItem) {\r\n    let mappedErrors;\r\n\r\n    if (transaction.errorData) {\r\n      const errors = Object.entries(transaction.errorData);\r\n      mappedErrors = errors.map((item) => {\r\n        return item[1];\r\n      });\r\n    } else if (transaction.errorMsg) {\r\n      mappedErrors = [transaction.errorMsg];\r\n    } else {\r\n      mappedErrors = [];\r\n    }\r\n\r\n    return mappedErrors;\r\n  }\r\n\r\n  get successText() {\r\n    switch (this.result && this.result.numberOfSuccess % 10) {\r\n      case 1:\r\n        return 'HISTORY.PARTIAL.SUCCESS.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.PARTIAL.SUCCESS.FEW';\r\n      default:\r\n        return 'HISTORY.PARTIAL.SUCCESS.OTHER';\r\n    }\r\n  }\r\n\r\n  get totalBalance() {\r\n    return this.result && this.result.totalBalance;\r\n  }\r\n\r\n  get successCount() {\r\n    return this.result && this.result.numberOfSuccess;\r\n  }\r\n\r\n  get totalCount() {\r\n    return this.result && this.result.results.length;\r\n  }\r\n\r\n  get successParams() {\r\n    return {\r\n      transactionsCount: this.successCount,\r\n    };\r\n  }\r\n\r\n  get failedText() {\r\n    switch (this.result && this.result.numberOfFailed % 10) {\r\n      case 1:\r\n        return 'HISTORY.PARTIAL.FAILED.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.PARTIAL.FAILED.FEW';\r\n      default:\r\n        return 'HISTORY.PARTIAL.FAILED.OTHER';\r\n    }\r\n  }\r\n\r\n  get failedParams() {\r\n    return {\r\n      transactionsCount: this.result && this.result.numberOfFailed,\r\n    };\r\n  }\r\n\r\n  get failedTransactions() {\r\n    return (\r\n      this.result &&\r\n      this.result.results &&\r\n      this.result.results.filter((signItem) => {\r\n        return signItem.status === BULK_OPERATION_STATUS.FAILED;\r\n      })\r\n    );\r\n  }\r\n\r\n  mapCountLabel(count: number) {\r\n    switch (count % 20) {\r\n      case 1:\r\n        return 'HISTORY.OPERATION.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.OPERATION.FEW';\r\n      default:\r\n        return 'HISTORY.OPERATION.OTHER';\r\n    }\r\n  }\r\n\r\n  private generateGroups() {\r\n    let groups = {};\r\n\r\n    this.result.results.forEach((item) => {\r\n      const itemBalance = item.result.amount;\r\n\r\n      if (groups[itemBalance.currency]) {\r\n        groups[itemBalance.currency].money.amount += itemBalance.amount;\r\n        groups[itemBalance.currency].count++;\r\n      } else {\r\n        groups[itemBalance.currency] = {\r\n          money: {\r\n            currency: itemBalance.currency,\r\n            amount: itemBalance.amount,\r\n          },\r\n          count: 1,\r\n        };\r\n      }\r\n    });\r\n\r\n    this.groups = Object.values(groups);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { IMoney } from '@shared/currency/currency.model';\nimport { IBulkOperationResult } from '@shared/models';\n\n@Component({\n  selector: 'j-multiple-sign-success',\n  templateUrl: './multiple-sign-success.component.html',\n  styleUrls: ['./multiple-sign-success.component.scss'],\n})\nexport class MultipleSignSuccessComponent implements OnInit {\n  @Input() result: IBulkOperationResult;\n\n  groups: {\n    money: IMoney;\n    count: number;\n  }[];\n\n  constructor(public modal: NgbActiveModal) {}\n\n  ngOnInit() {\n    this.generateGroups();\n  }\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n\n  mapCountLabel(count: number) {\n    switch (count % 20) {\n      case 1:\n        return 'HISTORY.OPERATION.ONE';\n      case 2:\n      case 3:\n      case 4:\n        return 'HISTORY.OPERATION.FEW';\n      default:\n        return 'HISTORY.OPERATION.OTHER';\n    }\n  }\n\n  private generateGroups() {\n    let groups = {};\n\n    this.result.results.forEach((item) => {\n      const itemBalance = item.result.amount;\n\n      if (groups[itemBalance.currency]) {\n        groups[itemBalance.currency].money.amount += itemBalance.amount;\n        groups[itemBalance.currency].count++;\n      } else {\n        groups[itemBalance.currency] = {\n          money: {\n            currency: itemBalance.currency,\n            amount: itemBalance.amount,\n          },\n          count: 1,\n        };\n      }\n    });\n\n    this.groups = Object.values(groups);\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SendToSignedPartialComponent } from '../send-to-signed-partial/send-to-signed-partial.component';\n\n@Component({\n  selector: 'j-send-to-signed-error',\n  templateUrl: './send-to-signed-error.component.html',\n  styleUrls: ['./send-to-signed-error.component.scss'],\n})\nexport class SendToSignedErrorComponent extends SendToSignedPartialComponent {\n  constructor(public modal: NgbActiveModal) {\n    super(modal);\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SendToSignedPartialComponent } from '../send-to-signed-partial/send-to-signed-partial.component';\n\n@Component({\n  selector: 'j-send-to-signed-partial-error',\n  templateUrl: './send-to-signed-partial-error.component.html',\n  styleUrls: ['./send-to-signed-partial-error.component.scss'],\n})\nexport class SendToSignedPartialErrorComponent extends SendToSignedPartialComponent {\n  constructor(public modal: NgbActiveModal) {\n    super(modal);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BULK_OPERATION_STATUS, IBulkOperationItem, IBulkOperationResult } from '@shared/models';\r\n\r\n@Component({\r\n  selector: 'j-send-to-signed-partial',\r\n  templateUrl: './send-to-signed-partial.component.html',\r\n  styleUrls: ['./send-to-signed-partial.component.scss'],\r\n})\r\nexport class SendToSignedPartialComponent {\r\n  @Input() signResult: IBulkOperationResult;\r\n\r\n  constructor(public modal: NgbActiveModal) {}\r\n\r\n  dismissModal() {\r\n    this.modal.dismiss();\r\n  }\r\n\r\n  closeModal() {\r\n    this.modal.close();\r\n  }\r\n\r\n  retrieveErrors(transaction: IBulkOperationItem) {\r\n    let mappedErrors;\r\n\r\n    if (transaction.errorData) {\r\n      const errors = Object.entries(transaction.errorData);\r\n      mappedErrors = errors.map((item) => {\r\n        return item[1];\r\n      });\r\n    } else if (transaction.errorMsg) {\r\n      mappedErrors = [transaction.errorMsg];\r\n    } else {\r\n      mappedErrors = [];\r\n    }\r\n\r\n    return mappedErrors;\r\n  }\r\n\r\n  get failedCount() {\r\n    return this.signResult?.numberOfFailed || 0;\r\n  }\r\n\r\n  get successCount() {\r\n    return this.signResult?.numberOfSuccess || 0;\r\n  }\r\n\r\n  get failedText() {\r\n    switch (this.failedCount % 20) {\r\n      case 1:\r\n        return 'HISTORY.SEND_TO_SIGNED.FAILED.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.SEND_TO_SIGNED.FAILED.FEW';\r\n      default:\r\n        return 'HISTORY.SEND_TO_SIGNED.FAILED.OTHER';\r\n    }\r\n  }\r\n\r\n  get failedParams() {\r\n    return {\r\n      transactionsCount: this.failedCount,\r\n    };\r\n  }\r\n\r\n  get failedTransactions() {\r\n    return (\r\n      this.signResult &&\r\n      this.signResult.results &&\r\n      this.signResult.results.filter((signItem) => {\r\n        return signItem.status === BULK_OPERATION_STATUS.FAILED;\r\n      })\r\n    );\r\n  }\r\n\r\n  get successText() {\r\n    switch (this.successCount % 10) {\r\n      case 1:\r\n        return 'HISTORY.SEND_TO_SIGNED.SUCCESS.ONE';\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n        return 'HISTORY.SEND_TO_SIGNED.SUCCESS.FEW';\r\n      default:\r\n        return 'HISTORY.SEND_TO_SIGNED.SUCCESS.OTHER';\r\n    }\r\n  }\r\n\r\n  get successParams() {\r\n    return {\r\n      transactionsCount: this.successCount,\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SendToSignedPartialComponent } from '../send-to-signed-partial/send-to-signed-partial.component';\n\n@Component({\n  selector: 'j-send-to-signed-success',\n  templateUrl: './send-to-signed-success.component.html',\n  styleUrls: ['./send-to-signed-success.component.scss'],\n})\nexport class SendToSignedSuccessComponent extends SendToSignedPartialComponent {\n  constructor(public modal: NgbActiveModal) {\n    super(modal);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { IMoney } from '@shared/currency/currency.model';\nimport { BULK_OPERATION_STATUS, IBulkOperationResult } from '@shared/models';\n\n@Component({\n  selector: 'j-validation-error',\n  templateUrl: './validation-error.component.html',\n  styleUrls: ['./validation-error.component.scss'],\n})\nexport class ValidationErrorComponent implements OnInit {\n  @Input() result: IBulkOperationResult;\n\n  groups: {\n    money: IMoney;\n    count: number;\n  }[];\n\n  constructor(public modal: NgbActiveModal) {}\n\n  ngOnInit() {\n    this.generateGroups();\n  }\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n\n  retrieveErrors(errorData) {\n    const errors = Object.entries(errorData);\n    const mappedErrors = errors.map((item) => {\n      return item[1];\n    });\n    return mappedErrors;\n  }\n\n  get totalBalance() {\n    return this.result && this.result.totalBalance;\n  }\n\n  get successCount() {\n    return this.result && this.result.numberOfSuccess;\n  }\n\n  get totalCount() {\n    return this.result && this.result.results.length;\n  }\n\n  get successParams() {\n    return {\n      transactionsCount: this.successCount,\n    };\n  }\n\n  get failedText() {\n    if (!this.result) {\n      return 'HISTORY.VALIDATION.ERROR';\n    }\n    switch (this.result && this.result.numberOfFailed % 10) {\n      case 1:\n        return 'HISTORY.VALIDATION.ONE';\n      case 2:\n      case 3:\n      case 4:\n        return 'HISTORY.VALIDATION.FEW';\n      default:\n        return 'HISTORY.VALIDATION.OTHER';\n    }\n  }\n\n  get failedParams() {\n    return {\n      transactionsCount: this.result && this.result.numberOfFailed,\n    };\n  }\n\n  get failedTransactions() {\n    return (\n      this.result &&\n      this.result.results &&\n      this.result.results.filter((signItem) => {\n        return signItem.status === BULK_OPERATION_STATUS.FAILED;\n      })\n    );\n  }\n\n  mapCountLabel(count: number) {\n    switch (count % 20) {\n      case 1:\n        return 'HISTORY.OPERATION.ONE';\n      default:\n        return 'HISTORY.OPERATION.OTHER';\n    }\n  }\n\n  private generateGroups() {\n    let groups = {};\n\n    this.result.results.forEach((item) => {\n      const itemBalance = item.result?.amount;\n      if (!itemBalance) { return; }\n\n      if (groups[itemBalance.currency]) {\n        groups[itemBalance.currency].money.amount += itemBalance.amount;\n        groups[itemBalance.currency].count++;\n      } else {\n        groups[itemBalance.currency] = {\n          money: {\n            currency: itemBalance.currency,\n            amount: itemBalance.amount,\n          },\n          count: 1,\n        };\n      }\n    });\n\n    this.groups = Object.values(groups);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}