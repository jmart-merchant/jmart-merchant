{"version":3,"file":"default-src_app_filter_filter_module_ts.js","mappings":"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","sources":["./src/app/company/company.module.ts","./src/app/company/pipes/authority-level.pipe.ts","./src/app/company/recipient/recipient-account/recipient-account.component.ts","./src/app/company/recipient/recipient-list/recipient-list.component.ts","./src/app/company/recipient/recipient/recipient.component.ts","./src/app/filter/filter-aside/filter-aside.component.ts","./src/app/filter/filter-comission/filter-comission.component.ts","./src/app/filter/filter-download/filter-download.component.ts","./src/app/filter/filter-extra/filter-extra.component.ts","./src/app/filter/filter-operations/filter-operations.component.ts","./src/app/filter/filter-period-dropdown/filter-period-dropdown.component.ts","./src/app/filter/filter-period/filter-period.component.ts","./src/app/filter/filter-print/filter-print.component.ts","./src/app/filter/filter-search/filter-search.component.ts","./src/app/filter/filter-sort/filter-sort.component.ts","./src/app/filter/filter-status/filter-status.component.ts","./src/app/filter/filter-tags/filter-tags.component.ts","./src/app/filter/filter.component.ts","./src/app/filter/filter.module.ts","./src/app/filter/filter.service.ts","./src/app/filter/index.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { RecipientComponent } from './recipient/recipient/recipient.component';\nimport { RecipientListComponent } from './recipient/recipient-list/recipient-list.component';\nimport { RecipientAccountComponent } from './recipient/recipient-account/recipient-account.component';\nimport { AuthorityLevelPipe } from './pipes/authority-level.pipe';\n\n@NgModule({\n  declarations: [\n    RecipientComponent,\n    RecipientListComponent,\n    RecipientAccountComponent,\n    AuthorityLevelPipe,\n  ],\n  imports: [CommonModule, SharedModule],\n  exports: [\n    RecipientComponent,\n    RecipientListComponent,\n    RecipientAccountComponent,\n  ],\n})\nexport class CompanyModule {}\n","import {\n  Pipe,\n  PipeTransform,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CompanyService } from '@company/company.service';\nimport { AUTHORITY_TYPE } from '@shared/models';\nimport {\n  isAnyActive,\n  isMatchingExpression,\n  isAnExpression,\n} from '@utils/index';\n\nconst level = {\n  0: AUTHORITY_TYPE.NO_SIGNATURE,\n  1: AUTHORITY_TYPE.SECONDARY_SIGNATURE,\n  2: AUTHORITY_TYPE.PRIMARY_SIGNATURE,\n};\n\nconst levelsArr = Object.values(level);\n\n@Pipe({\n  name: 'authorityLevel',\n})\nexport class AuthorityLevelPipe implements PipeTransform, OnDestroy {\n  lastResult: boolean;\n  lastParam: string;\n  lastValue: string;\n  subs: Subscription;\n\n  constructor(\n    private company: CompanyService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  get currentLevel() {\n    return this.company.authorityLevel;\n  }\n\n  transform(value: string | number, ...args: any[]): boolean {\n    let newValue: string;\n\n    if (typeof value !== 'string') {\n      newValue = value.toString();\n    }\n\n    if (this.lastParam === value) {\n      return this.lastResult;\n    }\n    if (!this.subs) {\n      this.subs = this.company.authorityLevel$.subscribe(\n        (event: AUTHORITY_TYPE) => {\n          this.updateValue(newValue, event);\n        }\n      );\n    }\n    return this.updateValue(newValue);\n  }\n\n  private updateValue(value: string, newValue?: AUTHORITY_TYPE): boolean {\n    this.lastParam = value;\n    if (newValue) {\n      this.lastValue = newValue;\n    }\n    this.lastResult = this.is(level[value]);\n    this.ref.markForCheck();\n    return this.lastResult;\n  }\n\n  is(str: string): boolean {\n    if (isAnExpression(str)) {\n      return isAnyActive(\n        this.currentLevel,\n        isMatchingExpression(str, levelsArr)\n      );\n    }\n    return this.currentLevel.includes(str);\n  }\n\n  current() {\n    let name;\n    levelsArr.some((alias) => {\n      if (this.is(alias)) {\n        name = alias;\n        return true;\n      }\n    });\n    return name;\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipientAccount } from '../recipient.model';\n\n@Component({\n  selector: 'j-recipient-account',\n  templateUrl: './recipient-account.component.html',\n  styleUrls: ['./recipient-account.component.scss'],\n})\nexport class RecipientAccountComponent implements OnInit {\n  @Input() account: RecipientAccount;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nimport {\r\n  Recipient,\r\n  RecipientAccount,\r\n  RecipientSelectResult,\r\n} from '../recipient.model';\r\nimport { RecipientsService } from '@company/recipients.service';\r\n\r\n@Component({\r\n  selector: 'j-recipient-list',\r\n  templateUrl: './recipient-list.component.html',\r\n  styleUrls: ['./recipient-list.component.scss'],\r\n})\r\nexport class RecipientListComponent implements OnChanges, OnInit {\r\n  recipientList: Recipient[] = [];\r\n  hasNoRecipients: boolean = false;\r\n\r\n  errorText: string;\r\n\r\n  @Input() query: string;\r\n  @Output() selected = new EventEmitter<RecipientSelectResult>();\r\n\r\n  constructor(private recipients: RecipientsService) {}\r\n\r\n  ngOnChanges(change: SimpleChanges) {\r\n    if (change?.query?.currentValue !== change?.query?.previousValue) {\r\n      this.searchRecipients(change.query.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchRecipients();\r\n  }\r\n\r\n  onAccountSelect(selectResult: RecipientSelectResult) {\r\n    this.selected.emit(selectResult);\r\n  }\r\n\r\n  public async fetchRecipients() {\r\n    if (!this.hasNoRecipients) {\r\n      this.errorText = '';\r\n    }\r\n    try {\r\n      this.recipientList = await this.recipients.getRecipients(undefined, true);\r\n\r\n      if (this.recipientList.length === 0) {\r\n        this.hasNoRecipients = true;\r\n      }\r\n    } catch (error) {\r\n      this.errorText = 'PAYMENTS.RECIPIENTS.LIST_FETCH_ERROR';\r\n    }\r\n  }\r\n\r\n  async searchRecipients(query: string = null) {\r\n    this.recipientList = await this.recipients.getRecipients(query);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport {\r\n  Recipient,\r\n  RecipientAccount,\r\n  RecipientSelectResult,\r\n} from '../recipient.model';\r\n\r\n@Component({\r\n  selector: 'j-recipient',\r\n  templateUrl: './recipient.component.html',\r\n  styleUrls: ['./recipient.component.scss'],\r\n})\r\nexport class RecipientComponent {\r\n  @Input() recipient: Recipient;\r\n  @Output() selected = new EventEmitter<RecipientSelectResult>();\r\n\r\n  constructor() {}\r\n\r\n  onAccountSelect(account: RecipientAccount) {\r\n    this.selected.emit({\r\n      recipient: this.recipient,\r\n      account: account,\r\n    });\r\n  }\r\n\r\n  onBinSelect(event: Event) {\r\n    event.preventDefault();\r\n    this.selected.emit({\r\n      recipient: this.recipient,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  EventEmitter,\r\n  Output,\r\n  Input,\r\n  Inject,\r\n  OnChanges,\r\n  HostListener,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { FILTER_MODE } from '../filter.model';\r\n\r\n@Component({\r\n  selector: 'j-filter-aside',\r\n  templateUrl: './filter-aside.component.html',\r\n  styleUrls: ['./filter-aside.component.scss'],\r\n})\r\nexport class FilterAsideComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input()\r\n  heading: string;\r\n\r\n  @Input()\r\n  isShown: boolean = false;\r\n\r\n  @Input() mode = FILTER_MODE.ACCOUNTS;\r\n  readonly FILTER_MODE = FILTER_MODE;\r\n\r\n  @Output()\r\n  closed = new EventEmitter();\r\n  \r\n  @Output()\r\n  submitted = new EventEmitter();\r\n\r\n  private innerWidth: any;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {}\r\n\r\n  ngOnInit() {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.isShown && this.isMobile) {\r\n      this.document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      this.document.body.classList.remove('overflow-hidden');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.document.body.classList.remove('overflow-hidden');\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  onClose(event: Event) {\r\n    event.preventDefault();\r\n    this.closed.emit();\r\n  }\r\n\r\n  onClickOutside(event) {\r\n    if (this.isShown) {\r\n      this.closed.emit();\r\n    }\r\n  }\r\n\r\n  // TODO: переделать на уже созданный сервис\r\n  private get isMobile() {\r\n    return this.innerWidth < 670;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport {\n  IFilterOption,\n  FILTER_COMISSION_LIST,\n  FILTER_COMISSION,\n} from '../filter.model';\n\n@Component({\n  selector: 'j-filter-comission',\n  templateUrl: './filter-comission.component.html',\n  styleUrls: ['./filter-comission.component.scss'],\n})\nexport class FilterComissionComponent implements OnInit {\n  comissionList: IFilterOption[] = FILTER_COMISSION_LIST;\n\n  @Input() control: FormControl = new FormControl(\n    FILTER_COMISSION.WITH_COMISSION\n  );\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { downloadLabel, DownloadList } from '@shared/models/download';\r\n\r\n@Component({\r\n  selector: 'j-filter-download',\r\n  templateUrl: './filter-download.component.html',\r\n  styleUrls: ['./filter-download.component.scss'],\r\n})\r\nexport class FilterDownloadComponent implements OnInit {\r\n  @Output() downloaded = new EventEmitter<string>();\r\n\r\n  @Input()\r\n  downloadList: DownloadList = [\r\n    // TODO: Включить когда будет готово на бэке\r\n    {\r\n      label: 'PDF',\r\n      value: 'application/pdf',\r\n    },\r\n    // {\r\n    //   label: 'MT940',\r\n    // },\r\n    {\r\n      label: 'EXL',\r\n      value: 'application/xls',\r\n    },\r\n    {\r\n      label: '1C',\r\n      value: 'application/1c',\r\n    },\r\n    {\r\n      label: 'XML',\r\n      value: 'application/xml',\r\n    },\r\n    {\r\n      label: 'MT940',\r\n      value: 'application/mt940',\r\n    },\r\n  ];\r\n  @Input() allowedDownloadList?: Array<downloadLabel>;\r\n\r\n  get availableDownloads(): DownloadList {\r\n    if (this.allowedDownloadList && this.allowedDownloadList.length > 0) {\r\n      return this.downloadList.filter(item => this.allowedDownloadList.includes(item.label));\r\n    }\r\n\r\n    return this.downloadList;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onDownload(value: string, event: Event = null) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.downloaded.emit(value);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport {\r\n  OPERATION_CODE,\r\n  IFilterScheme,\r\n  PERIOD_FORMAT_INPUT,\r\n  FILTER_PERIOD_TYPE,\r\n  FILTER_PAYMENT_STATUS,\r\n} from '../filter.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as moment from 'moment';\r\n\r\n// import { convertDateToString } from '@utils/index';\r\n\r\nimport { CURRENCY } from '@shared/currency/currency.model';\r\nimport { MaskedService } from '@shared/masked/masked.service';\r\nimport { PAYMENT_TYPE } from '@shared/models';\r\nimport { IMultiSelectDropdownOption } from '@shared/input';\r\n\r\nimport { FILTER_MODE } from '../filter.model';\r\nimport { FilterService } from '../filter.service';\r\n\r\n\r\nexport const FILTER_PAYMENT_TYPES_LIST: IMultiSelectDropdownOption[] = [\r\n  {\r\n    value: PAYMENT_TYPE.CONVERSION,\r\n    label: 'PAYMENTS.TYPE.CONVERSION',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.FOREIGN,\r\n    label: 'PAYMENTS.TYPE.FOREIGN',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.IN_BETWEEN,\r\n    label: 'PAYMENTS.TYPE.IN_BETWEEN',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.MEDICAL,\r\n    label: 'PAYMENTS.TYPE.MEDICAL',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.PENSION,\r\n    label: 'PAYMENTS.TYPE.PENSION',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.SALARY,\r\n    label: 'PAYMENTS.TYPE.SALARY',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.SOCIAL,\r\n    label: 'PAYMENTS.TYPE.SOCIAL',\r\n  },\r\n  {\r\n    value: PAYMENT_TYPE.TAX,\r\n    label: 'PAYMENTS.TYPE.TAX',\r\n  },\r\n];\r\n\r\n@Component({\r\n  selector: 'j-filter-extra',\r\n  templateUrl: './filter-extra.component.html',\r\n  styleUrls: ['./filter-extra.component.scss'],\r\n})\r\nexport class FilterExtraComponent implements OnInit, OnDestroy {\r\n  @Input() currency: CURRENCY;\r\n  @Input() mode: FILTER_MODE;\r\n\r\n  readonly FILTER_MODE = FILTER_MODE;\r\n  readonly FILTER_PAYMENT_TYPES_LIST = FILTER_PAYMENT_TYPES_LIST;\r\n\r\n  @Output() toggled = new EventEmitter<boolean>();\r\n  @Output() submitted = new EventEmitter<Partial<IFilterScheme>>();\r\n\r\n  scheme: IFilterScheme = {};\r\n  isFilterShown = false;\r\n  isSubmitted = false;\r\n\r\n  extraForm: FormGroup;\r\n\r\n  subscription = new Subscription();\r\n\r\n  errors = {\r\n    amountFrom: false,\r\n    amountTo: false,\r\n    dateFrom: false,\r\n    dateTo: false,\r\n  };\r\n\r\n  hasAmountErrors = false;\r\n  hasChangedStatus = false;\r\n  cashedPaymentStatus: FILTER_PAYMENT_STATUS;\r\n\r\n  constructor(\r\n    private filterService: FilterService,\r\n    private maskedService: MaskedService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const DEFAULTS = this.filterService.getDefaults(this.mode);\r\n\r\n    this.extraForm = new FormGroup({\r\n      operationType: new FormControl(DEFAULTS.operationType),\r\n      documentNumber: new FormControl(DEFAULTS.documentNumber || ''),\r\n      amountFrom: new FormControl(DEFAULTS.amountFrom || ''),\r\n      amountTo: new FormControl(DEFAULTS.amountTo || ''),\r\n      type: new FormControl(DEFAULTS.type),\r\n\r\n      periodType: new FormControl(DEFAULTS.periodType),\r\n      periodFrom: new FormControl(DEFAULTS.periodFrom || ''),\r\n      periodTo: new FormControl(DEFAULTS.periodTo || ''),\r\n\r\n      sortBy: new FormControl(DEFAULTS.sortBy),\r\n      comission: new FormControl(DEFAULTS.comission),\r\n    });\r\n\r\n    this.scheme = this.extraForm.value;\r\n\r\n    const formSubscription = this.extraForm.valueChanges.subscribe((values) => {\r\n      this.isSubmitted = false;\r\n\r\n      if (\r\n        values.periodType != FILTER_PERIOD_TYPE.CUSTOM &&\r\n        this.mode == FILTER_MODE.ACCOUNTS\r\n      ) {\r\n        const period = this.filterService.findPeriod(values.periodType);\r\n        values.periodFrom = period.dates.from || '';\r\n        values.periodTo = period.dates.to || '';\r\n      } else {\r\n        values.periodFrom = this.convertStringToDate(values.periodFrom);\r\n        values.periodTo = this.convertStringToDate(values.periodTo);\r\n      }\r\n\r\n      if (values.amountFrom) {\r\n        values.amountFrom = this.maskedService.getNumberedAmount(\r\n          values.amountFrom\r\n        );\r\n      }\r\n\r\n      if (values.amountTo) {\r\n        values.amountTo = this.maskedService.getNumberedAmount(values.amountTo);\r\n      }\r\n\r\n      this.scheme = Object.assign(this.scheme, values);\r\n    });\r\n\r\n    const filterSubscription = this.filterService\r\n      .getScheme()\r\n      .subscribe((scheme) => {\r\n        if (\r\n          this.cashedPaymentStatus &&\r\n          this.cashedPaymentStatus != scheme.paymentStatus\r\n        ) {\r\n          this.hasChangedStatus = true;\r\n        } else {\r\n          this.cashedPaymentStatus = scheme.paymentStatus;\r\n        }\r\n\r\n        this.isSubmitted = false;\r\n        this.scheme = Object.assign(this.scheme, scheme);\r\n        this.updateFormByScheme(this.scheme);\r\n      });\r\n\r\n    this.subscription.add(formSubscription);\r\n    this.subscription.add(filterSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  toggleFilterAside(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.isFilterShown = !this.isFilterShown;\r\n    this.toggled.emit(this.isFilterShown);\r\n  }\r\n\r\n  hideFilterAside() {\r\n    this.isFilterShown = false;\r\n    this.toggled.emit(this.isFilterShown);\r\n  }\r\n\r\n  onOperationChange(code: OPERATION_CODE) {\r\n    this.scheme.operationType = code;\r\n  }\r\n\r\n  onDocNumberChange(documentNumber: string) {\r\n    this.scheme.documentNumber = documentNumber;\r\n  }\r\n\r\n  onClickOutside(event) {\r\n    this.hideFilterAside();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isSubmitted = true;\r\n\r\n    if (this.validateErrors()) {\r\n      this.filterService.updateExtra(this.scheme);\r\n      this.submitted.emit({ ...this.scheme });\r\n      this.hideFilterAside();\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.setDefaults();\r\n    this.filterService.updateExtra(this.scheme);\r\n    this.submitted.emit({ ...this.scheme });\r\n    this.hideFilterAside();\r\n  }\r\n\r\n  // get isDefaultValues() {\r\n  //   if (this.hasChangedStatus) {\r\n  //     return false;\r\n  //   }\r\n\r\n  //   let result = true;\r\n  //   const CURRENT = this.extraForm.getRawValue();\r\n  //   const DEFAULTS = this.filterService.getDefaults(this.mode);\r\n\r\n  //   for (const key in CURRENT) {\r\n  //     if (Object.prototype.hasOwnProperty.call(CURRENT, key)) {\r\n  //       if (key === 'periodFrom' || key === 'periodTo') {\r\n  //         if (\r\n  //           convertDateToString(CURRENT[key]) !==\r\n  //           convertDateToString(DEFAULTS[key])\r\n  //         ) {\r\n  //           result = false;\r\n  //         }\r\n  //       } else if (CURRENT[key] !== DEFAULTS[key]) {\r\n  //         result = false;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return result;\r\n  // }\r\n\r\n  private validateErrors() {\r\n    const amountFrom = this.maskedService.getNumberedAmount(\r\n      this.extraForm.value.amountFrom\r\n    );\r\n    const amountTo = this.maskedService.getNumberedAmount(\r\n      this.extraForm.value.amountTo\r\n    );\r\n\r\n    if (amountFrom > amountTo) {\r\n      this.hasAmountErrors = true;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private setDefaults() {\r\n    const DEFAULTS = this.filterService.getDefaults(this.mode);\r\n    this.updateFormByScheme(DEFAULTS);\r\n  }\r\n\r\n  private updateFormByScheme(scheme: IFilterScheme) {\r\n    this.extraForm.setValue({\r\n      operationType: scheme.operationType,\r\n      documentNumber: scheme.documentNumber,\r\n      amountFrom: scheme.amountFrom,\r\n      amountTo: scheme.amountTo,\r\n      periodType: scheme.periodType,\r\n      periodFrom: scheme.periodFrom,\r\n      periodTo: scheme.periodTo,\r\n      sortBy: scheme.sortBy,\r\n      comission: scheme.comission,\r\n      type: scheme.type,\r\n    });\r\n  }\r\n\r\n  private convertStringToDate(dateString: string) {\r\n    if (!dateString || dateString.length == 0) {\r\n      return '';\r\n    }\r\n\r\n    const convertedDate = moment(dateString, PERIOD_FORMAT_INPUT);\r\n    return convertedDate.isValid() ? convertedDate.toDate() : '';\r\n  }\r\n\r\n  private removeEmpty(obj) {\r\n    Object.keys(obj).forEach((key) => {\r\n      if (obj[key] && typeof obj[key] === 'object') this.removeEmpty(obj[key]);\r\n      // recurse\r\n      else if (obj[key] == null || obj[key] == '') delete obj[key]; // delete\r\n    });\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { OPERATION_CODE, FILTER_MODE } from '../filter.model';\nimport { FilterService } from '../filter.service';\n\ninterface IOperationType {\n  label: string;\n  code: OPERATION_CODE;\n}\n\n@Component({\n  selector: 'j-filter-operations',\n  templateUrl: './filter-operations.component.html',\n  styleUrls: ['./filter-operations.component.scss'],\n})\nexport class FilterOperationsComponent implements OnDestroy {\n  @Input() isUpdateEnabled = true;\n  @Input() mode: FILTER_MODE;\n  @Input() value: OPERATION_CODE;\n  @Output() changed = new EventEmitter();\n\n  operationTypeList: IOperationType[] = [\n    {\n      label: 'FILTER.OPERATION.ALL',\n      code: OPERATION_CODE.ALL,\n    },\n    {\n      label: 'FILTER.OPERATION.INCOME',\n      code: OPERATION_CODE.INCOME,\n    },\n    {\n      label: 'FILTER.OPERATION.OUTCOME',\n      code: OPERATION_CODE.OUTCOME,\n    },\n  ];\n\n  selected: IOperationType = this.operationTypeList[0];\n\n  subscription = new Subscription();\n\n  constructor(private filterService: FilterService) {\n    const filterSubscription = this.filterService\n      .getScheme()\n      .subscribe((scheme) => {\n        if (\n          scheme.operationType &&\n          scheme.operationType !== this.selected.code\n        ) {\n          this.setSelected(scheme.operationType);\n        }\n      });\n\n    this.subscription.add(filterSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  isSelected(type: IOperationType) {\n    return type === this.selected;\n  }\n\n  onSelect(code: OPERATION_CODE) {\n    // if (this.isUpdateEnabled) {\n    this.setSelected(code);\n    this.filterService.updateOperation(code);\n    this.changed.emit(code);\n    // } else {\n    // this.changed.emit(code);\n    // }\n  }\n\n  private setSelected(code: OPERATION_CODE) {\n    this.selected = this.operationTypeList.find((item) => code === item.code);\n  }\n}\n","import {\r\n  Component,\r\n  ViewChild,\r\n  OnDestroy,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as moment from 'moment';\r\nimport dayjs from 'dayjs';\r\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {\r\n  IStatementPeriod,\r\n  PERIOD_FORMAT_INPUT,\r\n  PERIOD_FORMAT,\r\n  FILTER_MODE,\r\n  IStatementDates,\r\n  FILTER_PERIOD_TYPE,\r\n  IFilterScheme,\r\n} from '../filter.model';\r\nimport { FilterService } from '../filter.service';\r\n\r\n@Component({\r\n  selector: 'j-filter-period-dropdown',\r\n  templateUrl: './filter-period-dropdown.component.html',\r\n  styleUrls: ['./filter-period-dropdown.component.scss'],\r\n})\r\nexport class FilterPeriodDropdownComponent implements OnDestroy {\r\n  @Input() mode: FILTER_MODE;\r\n  @Input() placement = 'bottom bottom-right';\r\n  @Input() hasClearButton = true;\r\n\r\n  @Input() customDates: IStatementDates;\r\n\r\n  @Input() periodList: IStatementPeriod[] = this.filterService.PERIOD_LIST;\r\n  @Input() defaultPeriod: IStatementPeriod = this.periodList[0];\r\n  @Input() selectedPeriod: IStatementPeriod = this.defaultPeriod;\r\n\r\n  schemeDefaults: IFilterScheme;\r\n  scheme: IFilterScheme;\r\n\r\n  inputForm: FormGroup;\r\n\r\n  rangeSelection: boolean = false;\r\n\r\n  @ViewChild('dropdown') dropdown: NgbDropdown;\r\n  @Output() submitted = new EventEmitter();\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(private filterService: FilterService) {}\r\n\r\n  ngOnInit() {\r\n    this.schemeDefaults = this.filterService.getDefaults(this.mode);\r\n\r\n    const filterSubscription = this.filterService\r\n      .getScheme()\r\n      .subscribe((scheme) => {\r\n        if (scheme.periodType) {\r\n          this.updateByType(scheme.periodType);\r\n        }\r\n\r\n        this.scheme = scheme;\r\n      });\r\n\r\n    this.inputForm = new FormGroup({\r\n      from: new FormControl(''),\r\n      to: new FormControl(''),\r\n    });\r\n\r\n    if (this.mode === FILTER_MODE.DEPOSITS) {\r\n      const dates = {\r\n        from: this.schemeDefaults.periodFrom,\r\n        to: this.schemeDefaults.periodTo,\r\n      };\r\n\r\n      this.defaultPeriod = {\r\n        type: this.schemeDefaults.periodType,\r\n        dates,\r\n      };\r\n\r\n      this.onCustomSelect(dates);\r\n    }\r\n\r\n    if (this.customDates) {\r\n      this.defaultPeriod = {\r\n        type: FILTER_PERIOD_TYPE.CUSTOM,\r\n        dates: this.customDates,\r\n      };\r\n      this.onCustomSelect(this.customDates);\r\n    }\r\n\r\n    this.subscription.add(filterSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onDropdownToggle() {\r\n    this.rangeSelection = false;\r\n  }\r\n\r\n  onCustomCancel() {\r\n    this.rangeSelection = false;\r\n    this.dropdown?.close();\r\n  }\r\n\r\n  onCustomSelect(dates: IStatementDates) {\r\n    this.selectedPeriod = this.periodList.find((item) => {\r\n      return item.type == FILTER_PERIOD_TYPE.CUSTOM;\r\n    });\r\n    this.rangeSelection = false;\r\n    this.updateInputs(dates);\r\n    this.selectedPeriod.dates = dates;\r\n    this.onSubmit();\r\n  }\r\n\r\n  onPeriodSelect(period: IStatementPeriod) {\r\n    if (period.type == FILTER_PERIOD_TYPE.CUSTOM) {\r\n      this.rangeSelection = true;\r\n    } else {\r\n      this.selectedPeriod = period;\r\n      this.onSubmit();\r\n    }\r\n  }\r\n\r\n  updateByType(type: FILTER_PERIOD_TYPE) {\r\n    const period = this.periodList?.find((item) => {\r\n      return item.type == type;\r\n    });\r\n    this.selectedPeriod = period;\r\n  }\r\n\r\n  onSubmit() {\r\n    const type = this.selectedPeriod.type;\r\n    const dates = this.selectedPeriod.dates;\r\n\r\n    this.filterService.updatePeriod(type, dates.from, dates.to);\r\n\r\n    this.submitted.emit(dates);\r\n    this.dropdown?.close();\r\n  }\r\n\r\n  onClearPeriod() {\r\n    if (this.defaultPeriod.type == FILTER_PERIOD_TYPE.CUSTOM) {\r\n      this.onCustomSelect(this.defaultPeriod.dates);\r\n    } else {\r\n      this.onPeriodSelect(this.defaultPeriod);\r\n    }\r\n  }\r\n\r\n  isSelectedPeriod(period: IStatementPeriod) {\r\n    return period.type == this.selectedPeriod?.type;\r\n  }\r\n\r\n  get isClearable() {\r\n    return this.selectedPeriod?.type !== this.defaultPeriod?.type;\r\n  }\r\n\r\n  get formatPeriod() {\r\n    if (!this.selectedPeriod?.showDates) {\r\n      return this.selectedPeriod.label;\r\n    }\r\n\r\n    let formattedFrom = null;\r\n    let formattedTo = null;\r\n\r\n    if (this.selectedPeriod.type != FILTER_PERIOD_TYPE.CUSTOM) {\r\n      if (this.selectedPeriod.dates.from) {\r\n        formattedFrom = moment(\r\n          this.selectedPeriod.dates.from,\r\n          PERIOD_FORMAT_INPUT\r\n        ).format(PERIOD_FORMAT);\r\n      }\r\n\r\n      if (this.selectedPeriod.dates.to) {\r\n        formattedTo = moment(\r\n          this.selectedPeriod.dates.to,\r\n          PERIOD_FORMAT_INPUT\r\n        ).format(PERIOD_FORMAT);\r\n      }\r\n    } else {\r\n      if (this.scheme?.periodFrom) {\r\n        formattedFrom = moment(\r\n          this.scheme.periodFrom,\r\n          PERIOD_FORMAT_INPUT\r\n        ).format(PERIOD_FORMAT);\r\n      }\r\n      if (this.scheme?.periodTo) {\r\n        formattedTo = moment(this.scheme.periodTo, PERIOD_FORMAT_INPUT).format(\r\n          PERIOD_FORMAT\r\n        );\r\n      }\r\n    }\r\n\r\n    if (formattedFrom && formattedTo) {\r\n      return `${formattedFrom} - ${formattedTo}`;\r\n    } else if (formattedFrom) {\r\n      return `${formattedFrom}`;\r\n    } else if (formattedTo) {\r\n      return `${formattedTo}`;\r\n    }\r\n  }\r\n\r\n  private updateInputs(dates) {\r\n    const formattedFrom = moment(dates.from).format(PERIOD_FORMAT_INPUT);\r\n    this.inputForm.controls?.from.setValue(formattedFrom);\r\n\r\n    const formattedTo = moment(dates.to).format(PERIOD_FORMAT_INPUT);\r\n    this.inputForm.controls?.to.setValue(formattedTo);\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment from 'moment';\n\nimport { Subscription } from 'rxjs';\n\nimport {\n  FILTER_PERIOD_TYPE,\n  IStatementPeriod,\n  PERIOD_FORMAT_INPUT,\n  FILTER_MODE,\n} from '../filter.model';\nimport { FilterService } from '../filter.service';\n\n@Component({\n  selector: 'j-filter-period',\n  templateUrl: './filter-period.component.html',\n  styleUrls: ['./filter-period.component.scss'],\n})\nexport class FilterPeriodComponent implements OnInit, OnDestroy {\n  @Input() mode: FILTER_MODE;\n  readonly FILTER_MODE = FILTER_MODE;\n\n  periodList: IStatementPeriod[] = this.filterService.PERIOD_LIST;\n\n  @Input() periodType: FormControl = new FormControl(FILTER_PERIOD_TYPE.TODAY);\n  @Input() periodFrom: FormControl = new FormControl('');\n  @Input() periodTo: FormControl = new FormControl('');\n\n  fromInput: FormControl;\n  toInput: FormControl;\n\n  fromMinDate = moment('1991-01-01', 'YYYY-MM-DD').toDate();\n  fromMaxDate = new Date();\n\n  toMinDate = moment('1991-01-01', 'YYYY-MM-DD').toDate();\n  toMaxDate = new Date();\n\n  subscription = new Subscription();\n\n  constructor(private filterService: FilterService) {}\n\n  ngOnInit() {\n    this.fromInput = new FormControl(this.formatDate(this.periodFrom.value));\n    this.toInput = new FormControl(this.formatDate(this.periodTo.value));\n\n    const filterSubscription = this.filterService\n      .getScheme()\n      .subscribe((scheme) => {\n        if (scheme.periodType) {\n          this.periodType.setValue(scheme.periodType);\n        }\n\n        if (scheme.periodFrom) {\n          this.toMinDate = scheme.periodFrom;\n          this.fromInput.setValue(this.formatDate(scheme.periodFrom));\n        } else {\n          this.fromInput.setValue('');\n        }\n\n        if (scheme.periodTo) {\n          this.fromMaxDate = scheme.periodTo;\n          this.toInput.setValue(this.formatDate(scheme.periodTo));\n        } else {\n          this.toInput.setValue('');\n        }\n      });\n\n    const fromInputSubscription = this.fromInput.valueChanges.subscribe(\n      (from) => {\n        this.toMinDate = this.formatInput(from);\n        this.periodFrom.setValue(this.formatInput(from));\n      }\n    );\n\n    const toInputSubscription = this.toInput.valueChanges.subscribe((to) => {\n      this.fromMaxDate = this.formatInput(to);\n      this.periodTo.setValue(this.formatInput(to));\n    });\n\n    this.subscription.add(filterSubscription);\n    this.subscription.add(fromInputSubscription);\n    this.subscription.add(toInputSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  get fromLabel() {\n    return this.mode == FILTER_MODE.ACCOUNTS\n      ? 'FILTER.PERIOD_FROM'\n      : 'FILTER.DATE_FROM';\n  }\n\n  get toLabel() {\n    return this.mode == FILTER_MODE.ACCOUNTS\n      ? 'FILTER.PERIOD_TO'\n      : 'FILTER.DATE_TO';\n  }\n\n  get isInputsHidden() {\n    return (\n      this.periodType.value != FILTER_PERIOD_TYPE.CUSTOM &&\n      this.mode == FILTER_MODE.ACCOUNTS\n    );\n  }\n\n  private formatDate(date: Date) {\n    if (!date) {\n      return '';\n    }\n    return moment(date).format(PERIOD_FORMAT_INPUT);\n  }\n\n  private formatInput(dateString: string) {\n    return moment(dateString, PERIOD_FORMAT_INPUT).toDate();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-filter-print',\n  templateUrl: './filter-print.component.html',\n  styleUrls: ['./filter-print.component.scss']\n})\nexport class FilterPrintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\n  Component,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { CURRENCY } from '@shared/currency/currency.model';\nimport { ResponsiveToolkitService } from '@shared/responsive-toolkit/responsive-toolkit.service';\n\nimport { RecipientSelectResult } from '@company/recipient/recipient.model';\n\nimport { IFilterScheme, FILTER_MODE } from '../filter.model';\nimport { FilterService } from '../filter.service';\n\n@Component({\n  selector: 'j-filter-search',\n  templateUrl: './filter-search.component.html',\n  styleUrls: ['./filter-search.component.scss'],\n})\nexport class FilterSearchComponent implements OnDestroy {\n  @Input() currency: CURRENCY;\n  @Input() mode: FILTER_MODE;\n\n  scheme: IFilterScheme;\n  searchQuery: string;\n\n  isDropdownShown: boolean = false;\n\n  subscription: Subscription = new Subscription();\n\n  @Output() submitted = new EventEmitter<Partial<IFilterScheme>>();\n\n  constructor(\n    private filterService: FilterService,\n    private responsiveToolkit: ResponsiveToolkitService\n  ) {\n    const filterSubscription = this.filterService\n      .getScheme()\n      .subscribe((scheme) => {\n        this.scheme = scheme;\n      });\n\n    this.subscription.add(filterSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onFocus() {\n    this.showDropdown();\n  }\n\n  onClickOutside() {\n    this.hideDropdown();\n  }\n\n  onExtraToggle(isExtraShown: boolean) {\n    if (isExtraShown) {\n      this.hideDropdown();\n    }\n  }\n\n  onSearch(scheme: Partial<IFilterScheme>) {\n    this.submitted.emit({ ...scheme });\n  }\n\n  onRecipientSelect(recipientResult: RecipientSelectResult) {\n    this.filterService.updateRecipient(recipientResult);\n    this.submitted.emit({\n      recipientIban: recipientResult.account.iban,\n      recipientBin: recipientResult.recipient.iinOrBin,\n    });\n    this.hideDropdown();\n  }\n\n  onQueryChange(query: string) {\n    this.searchQuery = query;\n  }\n\n  get placeholder() {\n    switch (this.responsiveToolkit.current()) {\n      case 'xs':\n        return 'FILTER.SEARCH.SMALL';\n      default:\n        return 'FILTER.SEARCH.LARGE';\n    }\n  }\n\n  private showDropdown() {\n    this.isDropdownShown = true;\n  }\n\n  private hideDropdown() {\n    this.isDropdownShown = false;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { FILTER_SORT_LIST, IFilterOption, FILTER_SORT } from '../filter.model';\n\n@Component({\n  selector: 'j-filter-sort',\n  templateUrl: './filter-sort.component.html',\n  styleUrls: ['./filter-sort.component.scss'],\n})\nexport class FilterSortComponent implements OnInit {\n  sortOptionList: IFilterOption[] = FILTER_SORT_LIST;\n\n  @Input() control: FormControl = new FormControl(FILTER_SORT.DEFAULT);\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { FilterService } from '@filter/filter.service';\nimport { FILTER_PAYMENT_STATUS, IFilterStatus } from '@filter/filter.model';\n\n@Component({\n  selector: 'j-filter-status',\n  templateUrl: './filter-status.component.html',\n  styleUrls: ['./filter-status.component.scss'],\n})\nexport class FilterStatusComponent implements OnDestroy {\n  statuses: IFilterStatus[];\n\n  subscription = new Subscription();\n\n  constructor(private filterService: FilterService) {\n    const statusSubscription = this.filterService\n      .getStatuses()\n      .subscribe((statuses) => {\n        this.statuses = statuses;\n      });\n\n    this.subscription.add(statusSubscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onSelect(status: FILTER_PAYMENT_STATUS) {\n    this.filterService.updateStatus(status);\n    this.filterService.updateScheme();\n  }\n\n  get selected() {\n    return this.statuses.find((status) => {\n      return status.isSelected === true;\n    });\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { CURRENCY } from '@shared/currency/currency.model';\r\n\r\nimport { IFilterScheme, FILTER_MODE } from '../filter.model';\r\nimport { FilterService } from '../filter.service';\r\n\r\n@Component({\r\n  selector: 'j-filter-tags',\r\n  templateUrl: './filter-tags.component.html',\r\n  styleUrls: ['./filter-tags.component.scss'],\r\n})\r\nexport class FilterTagsComponent implements OnDestroy, OnInit {\r\n  @Input() mode: FILTER_MODE;\r\n  filter: IFilterScheme;\r\n  DEFAULTS;\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(private filterService: FilterService) {\r\n    const filterSubscription = this.filterService\r\n      .getScheme()\r\n      .subscribe((scheme) => {\r\n        this.filter = Object.assign({}, scheme);\r\n      });\r\n\r\n    this.subscription.add(filterSubscription);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.DEFAULTS = this.filterService.getDefaults(this.mode);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onTagRemove(event: Event, key: string) {\r\n    event.preventDefault();\r\n\r\n    if (key == 'amounts') {\r\n      this.filter.amountFrom = this.DEFAULTS.amountFrom;\r\n      this.filter.amountTo = this.DEFAULTS.amountTo;\r\n    } else if (key == 'periods') {\r\n      this.filter.periodType = this.DEFAULTS.periodType;\r\n      this.filter.periodFrom = this.DEFAULTS.periodFrom;\r\n      this.filter.periodTo = this.DEFAULTS.periodTo;\r\n    } else {\r\n      this.filter[key] = this.DEFAULTS[key];\r\n    }\r\n    this.filterService.updateExtra(this.filter);\r\n  }\r\n\r\n  get isPeriodsShown() {\r\n    return (\r\n      this.mode === FILTER_MODE.HISTORY &&\r\n      (((this.filter.periodFrom as any) !== '' &&\r\n        this.filter.periodFrom !== this.DEFAULTS.periodFrom) ||\r\n        ((this.filter.periodTo as any) !== '' &&\r\n          this.filter.periodTo !== this.DEFAULTS.periodTo))\r\n    );\r\n  }\r\n\r\n  get amountFromMoney() {\r\n    return {\r\n      amount: this.filter.amountFrom,\r\n      currency: CURRENCY.KZT,\r\n    };\r\n  }\r\n\r\n  get amountToMoney() {\r\n    return {\r\n      amount: this.filter.amountTo,\r\n      currency: CURRENCY.KZT,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\nimport { CURRENCY } from '@shared/currency/currency.model';\r\n\r\nimport { FilterService } from './filter.service';\r\nimport {\r\n  IFilterScheme,\r\n  IStatementDates,\r\n  OPERATION_CODE,\r\n  FILTER_MODE,\r\n} from './filter.model';\r\nimport { downloadLabel } from '@shared/models/download';\r\n\r\n@Component({\r\n  selector: 'j-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  @Input() currency: CURRENCY;\r\n\r\n  @Input() mode = FILTER_MODE.ACCOUNTS;\r\n  @Input() downloads?: Array<downloadLabel>;\r\n  readonly FILTER_MODE = FILTER_MODE;\r\n\r\n  scheme: IFilterScheme;\r\n\r\n  @Output() filtered = new EventEmitter<IFilterScheme>();\r\n  @Output() downloaded = new EventEmitter<string>();\r\n\r\n  isDownloadAsideShown = false;\r\n\r\n  constructor(private filterService: FilterService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.scheme = this.filterService.getDefaults(this.mode);\r\n  }\r\n\r\n  get downloadAllowed(): boolean {\r\n    return this.mode === FILTER_MODE.ACCOUNTS\r\n      || this.mode === FILTER_MODE.DEPOSITS\r\n      || this.mode === FILTER_MODE.CARDS;\r\n  }\r\n\r\n  toggleDownloadAside(\r\n    event: Event = null,\r\n    newValue: boolean = !this.isDownloadAsideShown\r\n  ) {\r\n    if (event) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n    this.isDownloadAsideShown = newValue;\r\n  }\r\n\r\n  onSearch(search: Partial<IFilterScheme>) {\r\n    this.filtered.emit({ ...this.scheme, ...search });\r\n  }\r\n\r\n  onDownload(exportType: string) {\r\n    this.downloaded.emit(exportType);\r\n  }\r\n\r\n  onPeriodChanged(statementDates: IStatementDates) {\r\n    this.filtered.emit({\r\n      ...this.scheme,\r\n      periodFrom: statementDates.from,\r\n      periodTo: statementDates.to,\r\n    });\r\n  }\r\n\r\n  onOperationChanged(operationType: OPERATION_CODE) {\r\n    this.filtered.emit({ ...this.scheme, operationType });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  NgbDatepickerModule,\n  NgbDropdownModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { CompanyModule } from '@company/company.module';\n\nimport { FILTER_COMPONENTS } from './';\n\n@NgModule({\n  declarations: [FILTER_COMPONENTS],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    SharedModule,\n    CompanyModule,\n\n    NgxMaskModule.forChild(),\n    NgbDropdownModule,\n    NgbDatepickerModule,\n    TranslateModule,\n  ],\n  exports: [FILTER_COMPONENTS],\n})\nexport class FilterModule {}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport { RecipientSelectResult } from '@company/recipient/recipient.model';\r\n\r\nimport {\r\n  IFilterScheme,\r\n  OPERATION_CODE,\r\n  FILTER_PERIOD_TYPE,\r\n  FILTER_SORT,\r\n  FILTER_COMISSION,\r\n  FILTER_PAYMENT_STATUS,\r\n  IFilterStatus,\r\n  FILTER_MODE,\r\n} from './filter.model';\r\nimport dayjs from 'dayjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FilterService {\r\n  private readonly DEFAULT_SCHEME: IFilterScheme = {\r\n    paymentStatus: FILTER_PAYMENT_STATUS.ALL,\r\n    recipientIban: null,\r\n    recipientBin: null,\r\n    operationType: OPERATION_CODE.ALL,\r\n    documentNumber: '',\r\n    amountFrom: '',\r\n    amountTo: '',\r\n    periodType: FILTER_PERIOD_TYPE.TODAY,\r\n    periodFrom: this.todayPeriod.from,\r\n    periodTo: this.todayPeriod.to,\r\n    sortBy: FILTER_SORT.DEFAULT,\r\n    comission: FILTER_COMISSION.WITH_COMISSION,\r\n  };\r\n\r\n  private scheme: IFilterScheme = this.getDefaults(FILTER_MODE.ACCOUNTS);\r\n  private scheme$ = new BehaviorSubject<IFilterScheme>(this.scheme);\r\n\r\n  public readonly PERIOD_LIST = [\r\n    {\r\n      type: FILTER_PERIOD_TYPE.TODAY,\r\n      label: 'FILTER.PERIOD.TODAY',\r\n      showDates: false,\r\n      dates: this.todayPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.YESTERDAY,\r\n      label: 'FILTER.PERIOD.YESTERDAY',\r\n      showDates: false,\r\n      dates: this.yesterdayPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.CURRENT_WEEK,\r\n      label: 'FILTER.PERIOD.CURRENT_WEEK',\r\n      showDates: true,\r\n      dates: this.currentWeekPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.CURRENT_MONTH,\r\n      label: 'FILTER.PERIOD.CURRENT_MONTH',\r\n      showDates: true,\r\n      dates: this.currentMonthPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.CURRENT_QUARTER,\r\n      label: 'FILTER.PERIOD.CURRENT_QUARTER',\r\n      showDates: true,\r\n      dates: this.currentQuarterPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.PREVIOUS_QUARTER,\r\n      label: 'FILTER.PERIOD.PREVIOUS_QUARTER',\r\n      showDates: true,\r\n      dates: this.previousQuarterPeriod,\r\n    },\r\n    {\r\n      type: FILTER_PERIOD_TYPE.CUSTOM,\r\n      label: 'FILTER.PERIOD.CUSTOM',\r\n      showDates: true,\r\n      hasCalendarIcon: true,\r\n      dates: null,\r\n    },\r\n  ];\r\n\r\n  private STATUSES = [\r\n    // В будущем включим\r\n    {\r\n      label: 'HISTORY.LISTS.ALL',\r\n      value: FILTER_PAYMENT_STATUS.ALL,\r\n      count: 0,\r\n      classList: 'badge-primary',\r\n      isSelected: true,\r\n      isDisabled: false,\r\n    },\r\n    // TODO: Как будет закончена логика на бэке нужно будет подключить счетчики\r\n    {\r\n      label: 'HISTORY.LISTS.FOR_SIGN',\r\n      value: FILTER_PAYMENT_STATUS.FOR_SIGN,\r\n      count: 0,\r\n      classList: 'badge-primary',\r\n      isSelected: false,\r\n      isDisabled: false,\r\n    },\r\n    {\r\n      label: 'HISTORY.LISTS.SUCCESS',\r\n      value: FILTER_PAYMENT_STATUS.SUCCESS,\r\n      count: 0,\r\n      classList: 'badge-light',\r\n      isSelected: false,\r\n      isDisabled: false,\r\n    },\r\n    {\r\n      label: 'HISTORY.LISTS.FAILED',\r\n      value: FILTER_PAYMENT_STATUS.FAILED,\r\n      count: 0,\r\n      classList: 'badge-primary',\r\n      isSelected: false,\r\n      isDisabled: false,\r\n    },\r\n    {\r\n      label: 'HISTORY.LISTS.IN_PROGRESS',\r\n      value: FILTER_PAYMENT_STATUS.IN_PROGRESS,\r\n      count: 0,\r\n      classList: 'badge-light',\r\n      isSelected: false,\r\n      isDisabled: false,\r\n    },\r\n    {\r\n      label: 'HISTORY.LISTS.DRAFT',\r\n      value: FILTER_PAYMENT_STATUS.DRAFT,\r\n      count: 0,\r\n      classList: 'badge-light',\r\n      isSelected: false,\r\n      isDisabled: false,\r\n    },\r\n  ];\r\n  private statuses$ = new BehaviorSubject<IFilterStatus[]>(this.STATUSES);\r\n\r\n  constructor() {}\r\n\r\n  getStatuses() {\r\n    return this.statuses$.asObservable();\r\n  }\r\n\r\n  getDefaults(filterMode: FILTER_MODE) {\r\n    const defaults = Object.assign({}, this.DEFAULT_SCHEME);\r\n\r\n    switch (filterMode) {\r\n      case FILTER_MODE.HISTORY:\r\n        defaults.periodType = FILTER_PERIOD_TYPE.NONE;\r\n        defaults.periodFrom = null;\r\n        defaults.periodTo = null;\r\n        break;\r\n\r\n      case FILTER_MODE.DEPOSITS:\r\n        defaults.periodType = FILTER_PERIOD_TYPE.CUSTOM;\r\n        defaults.periodFrom = dayjs().subtract(3, 'months').toDate();\r\n        defaults.periodTo = dayjs().toDate();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return defaults;\r\n  }\r\n\r\n  getScheme() {\r\n    return this.scheme$.asObservable();\r\n  }\r\n\r\n  updateStatus(paymentStatus: FILTER_PAYMENT_STATUS) {\r\n    this.scheme.paymentStatus = paymentStatus;\r\n    this.STATUSES.forEach((status) => {\r\n      if (status.value === paymentStatus) {\r\n        status.isSelected = true;\r\n      } else {\r\n        status.isSelected = false;\r\n      }\r\n    });\r\n    this.statuses$.next(this.STATUSES);\r\n  }\r\n\r\n  updateOperation(operationType: OPERATION_CODE) {\r\n    this.scheme.operationType = operationType;\r\n    this.updateScheme();\r\n  }\r\n\r\n  updatePeriod(\r\n    periodType: FILTER_PERIOD_TYPE,\r\n    periodFrom: Date = null,\r\n    periodTo: Date = null\r\n  ) {\r\n    this.scheme.periodType = periodType;\r\n    if (periodFrom) {\r\n      this.scheme.periodFrom = periodFrom;\r\n    }\r\n    if (periodTo) {\r\n      this.scheme.periodTo = periodTo;\r\n    }\r\n    this.updateScheme();\r\n  }\r\n\r\n  findPeriod(type: FILTER_PERIOD_TYPE) {\r\n    return this.PERIOD_LIST.find((item) => {\r\n      return item.type == type;\r\n    });\r\n  }\r\n\r\n  updateRecipient(recipientResult: RecipientSelectResult) {\r\n    const { recipient, account } = recipientResult;\r\n    this.scheme.recipientBin = recipient.iinOrBin;\r\n\r\n    if (account) {\r\n      this.scheme.recipientIban = account.iban;\r\n    }\r\n    this.updateScheme();\r\n  }\r\n\r\n  updateExtra(scheme: IFilterScheme) {\r\n    this.scheme = scheme;\r\n    this.updateStatus(this.scheme.paymentStatus);\r\n    this.updateScheme();\r\n  }\r\n\r\n  updateFailedCount(count: number) {\r\n    const failedStatus = this.STATUSES.find((status) => {\r\n      return status.value == FILTER_PAYMENT_STATUS.FAILED;\r\n    });\r\n\r\n    failedStatus.count = count;\r\n\r\n    this.statuses$.next(this.STATUSES);\r\n  }\r\n\r\n  updateInProgressCount(count: number) {\r\n    const inProgressStatus = this.STATUSES.find((status) => {\r\n      return status.value == FILTER_PAYMENT_STATUS.IN_PROGRESS;\r\n    });\r\n\r\n    inProgressStatus.count = count;\r\n\r\n    this.statuses$.next(this.STATUSES);\r\n  }\r\n\r\n  updateForSignCount(count: number, isDanger: boolean = false) {\r\n    const forSignStatus = this.STATUSES.find((status) => {\r\n      return status.value == FILTER_PAYMENT_STATUS.FOR_SIGN;\r\n    });\r\n\r\n    forSignStatus.count = count;\r\n    forSignStatus.classList = isDanger ? 'badge-primary' : 'badge-light';\r\n\r\n    this.statuses$.next(this.STATUSES);\r\n  }\r\n\r\n  updateScheme() {\r\n    if (this.scheme) {\r\n      this.scheme$.next(this.scheme);\r\n    }\r\n  }\r\n\r\n  private get todayPeriod() {\r\n    const todayEnd = this.now;\r\n    const todayStart = this.startOfTheDay().toDate();\r\n\r\n    return { from: todayStart, to: todayEnd };\r\n  }\r\n\r\n  private get yesterdayPeriod() {\r\n    const yesterdayEnd = this.startOfTheDay()\r\n      .subtract(1, 'millisecond')\r\n      .toDate();\r\n    const yesterdayStart = this.startOfTheDay().subtract(1, 'day').toDate();\r\n\r\n    return { from: yesterdayStart, to: yesterdayEnd };\r\n  }\r\n\r\n  private get currentWeekPeriod() {\r\n    const weekEnd = this.now;\r\n    const weekStart = this.startOfTheWeek().toDate();\r\n\r\n    return { from: weekStart, to: weekEnd };\r\n  }\r\n\r\n  private get currentMonthPeriod() {\r\n    const monthEnd = this.now;\r\n    const monthStart = this.startOfTheMonth().toDate();\r\n\r\n    return { from: monthStart, to: monthEnd };\r\n  }\r\n\r\n  private get currentQuarterPeriod() {\r\n    const quarterEnd = this.now;\r\n    const quarterStart = this.startOfTheQuarter().toDate();\r\n\r\n    return { from: quarterStart, to: quarterEnd };\r\n  }\r\n\r\n  private get previousQuarterPeriod() {\r\n    const quarterStart = this.startOfTheQuarter()\r\n      .subtract(1, 'quarter')\r\n      .toDate();\r\n    const quarterEnd = this.startOfTheQuarter()\r\n      .subtract(1, 'millisecond')\r\n      .toDate();\r\n\r\n    return { from: quarterStart, to: quarterEnd };\r\n  }\r\n\r\n  private startOfTheYear() {\r\n    return this.startOfTheMonth(moment().month(0));\r\n  }\r\n\r\n  private startOfTheQuarter() {\r\n    const currentQuarter = moment().quarter();\r\n    return this.startOfTheYear().quarter(currentQuarter);\r\n  }\r\n\r\n  private startOfTheMonth(momentObject = moment()) {\r\n    return this.startOfTheDay(momentObject.date(1));\r\n  }\r\n\r\n  private startOfTheWeek() {\r\n    return this.startOfTheDay(moment().isoWeekday(1));\r\n  }\r\n\r\n  private startOfTheDay(momentObject = moment()) {\r\n    return momentObject.hours(0).minutes(0).seconds(0).milliseconds(0);\r\n  }\r\n\r\n  private get now() {\r\n    return new Date();\r\n  }\r\n}\r\n","// Filter\nimport { FilterOperationsComponent } from './filter-operations/filter-operations.component';\nimport { FilterPeriodComponent } from './filter-period/filter-period.component';\nimport { FilterDownloadComponent } from './filter-download/filter-download.component';\nimport { FilterPrintComponent } from './filter-print/filter-print.component';\nimport { FilterComissionComponent } from './filter-comission/filter-comission.component';\nimport { FilterSortComponent } from './filter-sort/filter-sort.component';\nimport { FilterAsideComponent } from './filter-aside/filter-aside.component';\nimport { FilterExtraComponent } from './filter-extra/filter-extra.component';\nimport { FilterSearchComponent } from './filter-search/filter-search.component';\nimport { FilterPeriodDropdownComponent } from './filter-period-dropdown/filter-period-dropdown.component';\nimport { FilterComponent } from './filter.component';\nimport { FilterTagsComponent } from './filter-tags/filter-tags.component';\nimport { FilterStatusComponent } from './filter-status/filter-status.component';\n\n// Filter\nexport const FILTER_COMPONENTS = [\n  FilterComponent,\n  FilterOperationsComponent,\n  FilterPeriodComponent,\n  FilterDownloadComponent,\n  FilterPrintComponent,\n  FilterComissionComponent,\n  FilterSortComponent,\n  FilterAsideComponent,\n  FilterExtraComponent,\n  FilterSearchComponent,\n  FilterPeriodDropdownComponent,\n  FilterTagsComponent,\n  FilterStatusComponent,\n];\n\n// Filter\nexport * from './filter.component';\nexport * from './filter-operations/filter-operations.component';\nexport * from './filter-period/filter-period.component';\nexport * from './filter-download/filter-download.component';\nexport * from './filter-print/filter-print.component';\nexport * from './filter-comission/filter-comission.component';\nexport * from './filter-sort/filter-sort.component';\nexport * from './filter-aside/filter-aside.component';\nexport * from './filter-extra/filter-extra.component';\nexport * from './filter-period-dropdown/filter-period-dropdown.component';\nexport * from './filter-tags/filter-tags.component';\nexport * from './filter-status/filter-status.component';\n\nexport * from './filter.service';\nexport * from './filter.model';\n"],"names":[],"sourceRoot":"webpack:///"}