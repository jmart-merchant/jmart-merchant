{"version":3,"file":"src_app_letters_letters_module_ts.js","mappings":"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","sources":["./src/app/letters/components/index.ts","./src/app/letters/components/letters-certificates-modal/letters-certificates-modal.component.ts","./src/app/letters/components/letters-certificates/letters-certificates.component.ts","./src/app/letters/components/letters-create-content/letters-create-content.component.ts","./src/app/letters/components/letters-create-form/letters-create-form.component.ts","./src/app/letters/components/letters-create-group/letters-create-group.component.ts","./src/app/letters/components/letters-details-content/letters-details-content.component.ts","./src/app/letters/components/letters-group/letters-group.component.ts","./src/app/letters/components/letters-list-base/letters-list-base.component.ts","./src/app/letters/components/letters-loading/letters-loading.component.ts","./src/app/letters/components/letters-nav/letters-nav.component.ts","./src/app/letters/components/letters-on-sign/letters-on-sign.component.ts","./src/app/letters/components/letters-outbox/letters-outbox.component.ts","./src/app/letters/containers/index.ts","./src/app/letters/containers/letters-aside/letters-aside.component.ts","./src/app/letters/containers/letters-create/letters-create.component.ts","./src/app/letters/containers/letters-list/letters-list.component.ts","./src/app/letters/letters-routing.module.ts","./src/app/letters/letters.component.ts","./src/app/letters/letters.module.ts","./src/app/letters/modals/index.ts","./src/app/letters/modals/letters-modal/letters-modal.component.ts","./src/app/letters/models/index.ts","./src/app/letters/models/letters-certificates.ts","./src/app/letters/models/letters-search.ts","./src/app/letters/models/letters-topic.ts","./src/app/letters/models/letters.ts","./src/app/letters/services/certificates.service.ts","./src/app/letters/services/index.ts","./src/app/letters/services/letters.service.ts"],"sourcesContent":["import { LettersCreateFormComponent } from './letters-create-form/letters-create-form.component';\nimport { LettersNavComponent } from './letters-nav/letters-nav.component';\nimport { LettersOutboxComponent } from './letters-outbox/letters-outbox.component';\nimport { LettersGroupComponent } from './letters-group/letters-group.component';\nimport { LettersOnSignComponent } from './letters-on-sign/letters-on-sign.component';\nimport { LettersLoadingComponent } from './letters-loading/letters-loading.component';\nimport { LettersDetailsContentComponent } from './letters-details-content/letters-details-content.component';\nimport { LettersCreateContentComponent } from './letters-create-content/letters-create-content.component';\nimport { LettersListBaseComponent } from './letters-list-base/letters-list-base.component';\nimport { LettersCreateGroupComponent } from './letters-create-group/letters-create-group.component';\nimport { LettersCertificatesComponent } from './letters-certificates/letters-certificates.component';\nimport { LettersCertificatesModalComponent } from './letters-certificates-modal/letters-certificates-modal.component';\n\nexport const LETTERS_COMPONENTS = [\n  LettersCreateFormComponent,\n  LettersGroupComponent,\n  LettersLoadingComponent,\n  LettersNavComponent,\n  LettersOnSignComponent,\n  LettersOutboxComponent,\n  LettersDetailsContentComponent,\n  LettersCreateContentComponent,\n  LettersListBaseComponent,\n  LettersCreateGroupComponent,\n  LettersCertificatesComponent,\n  LettersCertificatesModalComponent\n];\n\nexport * from './letters-nav/letters-nav.component';\nexport * from './letters-create-form/letters-create-form.component';\nexport * from './letters-outbox/letters-outbox.component';\nexport * from './letters-group/letters-group.component';\nexport * from './letters-on-sign/letters-on-sign.component';\nexport * from './letters-details-content/letters-details-content.component';\nexport * from './letters-create-content/letters-create-content.component';\nexport * from './letters-list-base/letters-list-base.component';\nexport * from './letters-create-group/letters-create-group.component';\nexport * from './letters-certificates/letters-certificates.component';\nexport * from './letters-certificates-modal/letters-certificates-modal.component';\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nconst TRANSLATE_PREFIX = 'LETTERS.CERTIFICATES.MODAL';\n\n@Component({\n  selector: 'j-letters-certificates-modal',\n  templateUrl: './letters-certificates-modal.component.html',\n  styleUrls: ['./letters-certificates-modal.component.scss'],\n})\nexport class LettersCertificatesModalComponent implements OnInit {\n  constructor(public modal: NgbActiveModal) {}\n\n  onClose() {\n    this.modal.dismiss();\n  }\n\n  onSubmit(result) {\n    this.modal.close(result);\n  }\n\n  ngOnInit() {}\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_PREFIX}.${value}`;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { combineLatest } from 'rxjs';\n\nimport { NotifierService } from 'angular-notifier';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { FilesService } from '@shared/services';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { AccountDropdownComponent } from '@accounts/components';\nimport { AccountsService } from '@accounts/services/accounts.service';\nimport { ACCOUNT_TYPE, IAccountDropdownOption } from '@accounts/account.model';\n\nimport { CertificatesService } from '@letters/services';\nimport { CERTIFICATE_TYPE, ICertificateType } from '@letters/models';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { LettersCertificatesModalComponent } from '../letters-certificates-modal/letters-certificates-modal.component';\nimport { convertDateToApiFormat } from '@utils/dates';\n\nconst TRANSLATE_PREFIX = 'LETTERS.CERTIFICATES';\nconst MODAL_CONFIG: Partial<NgbModalConfig> = {\n  backdropClass: 'backdrop_light',\n  windowClass: 'modal_light modal_dictionary',\n  backdrop: 'static',\n  centered: true,\n};\n\n@Component({\n  selector: 'j-letters-certificates',\n  templateUrl: './letters-certificates.component.html',\n  styleUrls: ['./letters-certificates.component.scss'],\n})\nexport class LettersCertificatesComponent implements OnInit {\n  types;\n  isLoading: boolean = true;\n  accounts: IAccountDropdownOption[];\n\n  params;\n  companyName;\n\n  @ViewChild('accountDropdown') accountDropdown: AccountDropdownComponent;\n\n  constructor(\n    private companyService: CompanyService,\n    private certificatesService: CertificatesService,\n    private accountsService: AccountsService,\n    private filesService: FilesService,\n    private notifierService: NotifierService,\n    private translateService: TranslateService,\n    private modalService: NgbModal\n  ) {\n    combineLatest([\n      this.accountsService.getAccountsList(),\n      this.certificatesService.getCertificateTypes(),\n    ]).subscribe((values) => {\n      const [accounts, types] = values;\n\n      this.mapAccounts(accounts);\n      this.types = types;\n\n      this.isLoading = false;\n    });\n  }\n\n  ngOnInit() {}\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_PREFIX}.${value}`;\n  }\n\n  async onTypeSelect(type: ICertificateType) {\n    if (type.code === CERTIFICATE_TYPE.ACCOUNT_TURNOVER) {\n      this.showSertificatesModal(type);\n    } else {\n      this.downloadCertificate(type, this.params);\n    }\n  }\n\n  onAccountSelect(account: IAccountDropdownOption) {\n    if (account.accountType === ACCOUNT_TYPE.ALL) {\n      this.params = null;\n    } else {\n      this.params = {\n        iban: account.iban,\n      };\n    }\n  }\n\n  private async showSertificatesModal(type: ICertificateType) {\n    const modalRef = this.modalService.open(\n      LettersCertificatesModalComponent,\n      MODAL_CONFIG\n    );\n\n    try {\n      const range = await modalRef.result;\n\n      this.downloadCertificate(type, {\n        ...this.params,\n        dateFrom: convertDateToApiFormat(range.from),\n        dateTo: convertDateToApiFormat(range.to),\n      });\n    } catch (error) {}\n  }\n\n  private async downloadCertificate(\n    type: ICertificateType,\n    params: any = null\n  ) {\n    try {\n      const certificate = await this.certificatesService.getCertificate(\n        type.code,\n        params\n      );\n\n      this.filesService.downloadFile(\n        certificate,\n        `${type.description} - ${this.companyService.currentCompany.name}.pdf`\n      );\n    } catch (error) {\n      this.mapError(error);\n    }\n  }\n\n  private async mapError(errorPromise) {\n    const error = await errorPromise;\n    const errorMessage =\n      error.description ||\n      error.code ||\n      this.translateService.instant(this.mapTranslate('ERROR'));\n\n    this.notifierService.notify('error', errorMessage);\n  }\n\n  private mapAccounts(accounts) {\n    const filtered = accounts.filter(\n      (account) => account.accountType === ACCOUNT_TYPE.ACCOUNT\n    );\n\n    if (filtered.length > 1) {\n      this.accounts = [\n        ...filtered,\n        {\n          accountType: ACCOUNT_TYPE.ALL,\n        },\n      ];\n    } else {\n      this.accounts = filtered;\n    }\n\n    setTimeout(() => {\n      this.accountDropdown.selectAccount(\n        this.accounts[this.accounts.length - 1]\n      );\n    }, 0);\n  }\n}\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { LETTER_TOPIC_TYPE } from '@letters/models';\nimport { CertificatesService } from '@letters/services';\n\nconst TRANSLATE_PREFIX = 'LETTERS.CREATE_CONTENT';\n\n@Component({\n  selector: 'j-letters-create-content',\n  templateUrl: './letters-create-content.component.html',\n  styleUrls: ['./letters-create-content.component.scss'],\n})\nexport class LettersCreateContentComponent implements OnDestroy {\n  @Output() closed = new EventEmitter();\n\n  LETTER_TOPIC_TYPE = LETTER_TOPIC_TYPE;\n\n  subscription = new Subscription();\n  isCertificatesShown = false;\n\n  constructor(private certificatesService: CertificatesService) {\n    const certificatesSubscription = this.certificatesService\n      .getCertificateTypes()\n      .subscribe((certificates) => {\n        this.isCertificatesShown = certificates?.length > 0;\n      });\n\n    this.subscription.add(certificatesSubscription);\n  }\n  \n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_PREFIX}.${value}`;\n  }\n\n  onClose() {\n    this.closed.emit();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NotifierService } from 'angular-notifier';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { IUploadingFile, LETTER_STATUS } from '@shared/models';\nimport { FilesService } from '@shared/services';\n\nimport { ILetter, ILetterCreateForm } from '../../models';\nimport { LettersService } from '../../services';\n\nconst TRANSLATE_PREFIX = 'LETTERS.CREATE';\nconst BODY_MAX_LENGTH = 10000;\n\nenum NOTIFICATIONS {\n  SAVED_TO_DRAFT = 'NOTIFICATIONS.SAVED_TO_DRAFT',\n  SENT_FOR_SIGN = 'NOTIFICATIONS.SENT_FOR_SIGN',\n  SAVED_EDITING = 'NOTIFICATIONS.SAVED_EDITING',\n  SIGNED = 'NOTIFICATIONS.SIGNED',\n  SAVED_TO_DRAFT_ERROR = 'NOTIFICATIONS.SAVED_TO_DRAFT_ERROR',\n  SENT_FOR_SIGN_ERROR = 'NOTIFICATIONS.SENT_FOR_SIGN_ERROR',\n  SAVED_EDITING_ERROR = 'NOTIFICATIONS.SAVED_EDITING_ERROR',\n  SIGNED_ERROR = 'NOTIFICATIONS.SIGNED_ERROR',\n}\n\n@Component({\n  selector: 'j-letters-create-form',\n  templateUrl: './letters-create-form.component.html',\n  styleUrls: ['./letters-create-form.component.scss'],\n})\nexport class LettersCreateFormComponent implements OnDestroy {\n  acceptedFormats = '.doc, .docx, .pdf, .jpg, .jpeg, .png, .xls, .xlsx';\n  maxSize = 5000000;\n\n  topics: string[];\n  form: FormGroup;\n\n  isSubmitted = false;\n\n  isLoading = false;\n  isSubmitting = false;\n\n  isEditing = false;\n\n  uploadingFiles: IUploadingFile[] = [];\n\n  bodyMaxLength = BODY_MAX_LENGTH;\n  bodyLengthMessage$ = new BehaviorSubject(`0/${this.bodyMaxLength}`);\n\n  subscription = new Subscription();\n  originalLetter: ILetter;\n\n  createAndSignLabel: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private lettersService: LettersService,\n    private companyService: CompanyService,\n    private filesService: FilesService,\n    private notifierService: NotifierService,\n    private translateService: TranslateService\n  ) {\n    const routeSubscription = combineLatest([\n      this.route.paramMap.pipe(map(() => window.history.state)),\n      this.route.params,\n    ]).subscribe((values) => {\n      const [state, params] = values;\n\n      if (state.letter) {\n        this.isEditing = true;\n        this.loadEditLetterByBody(state.letter, state.topics, state.files);\n      } else if (params.id) {\n        this.isEditing = true;\n        this.loadEditLetterById(params.id);\n      } else {\n        this.loadNewLetter(state.title);\n      }\n    });\n\n    this.subscription.add(routeSubscription);\n\n    this.createAndSignLabel = this.companyService.isSecondaryAuthority()\n      ? 'SIGN'\n      : 'CREATE_AND_SIGN';\n  }\n\n  ngOnDestroy() {\n    this.lettersService.clearFiles();\n    this.subscription.unsubscribe();\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  get canSendAndSign() {\n    return (\n      this.companyService.isSecondaryAuthority() ||\n      (this.companyService.isPrimaryAuthority() &&\n        this.companyService.isSingleSignScheme())\n    );\n  }\n\n  get canSendOnly() {\n    return (\n      this.companyService.isNoSignAuthority() ||\n      (this.companyService.isPrimaryAuthority() &&\n        this.companyService.isMultipleSignScheme())\n    );\n  }\n\n  loadEditLetter(letter: ILetter) {\n    this.originalLetter = letter;\n\n    setTimeout(() => {\n      const { id, title, body } = letter;\n\n      this.form.setValue({\n        id,\n        title,\n        body,\n        uploadModel: null,\n      });\n\n      if (letter.files?.length > 0) {\n        this.uploadingFiles = letter.files.map((file) => {\n          return {\n            isLoading: false,\n            file: file,\n          };\n        });\n      }\n    }, 0);\n  }\n\n  async loadEditLetterByBody(\n    letter: ILetter,\n    topics: string[],\n    files: IUploadingFile[] = []\n  ) {\n    this.uploadingFiles = files;\n    this.topics = topics;\n    this.loadEditLetter(letter);\n    this.initForm(letter);\n  }\n\n  async loadEditLetterById(letterId: string) {\n    this.isLoading = true;\n\n    try {\n      const letter = await this.lettersService.getById(letterId);\n      await this.loadTopics();\n\n      this.loadEditLetter(letter);\n      this.initForm(letter);\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async loadNewLetter(title: string = '') {\n    this.isLoading = true;\n\n    try {\n      await this.loadTopics();\n      this.initForm({ title });\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async loadTopics() {\n    this.topics = await this.lettersService.getTopicValues();\n  }\n\n  initForm(initialValues: Partial<ILetterCreateForm> = null) {\n    const { id, title, body } = {\n      id: initialValues.id || null,\n      title: initialValues.title || '',\n      body: initialValues.body || '',\n    };\n\n    this.form = new FormGroup({\n      id: new FormControl(id),\n      title: new FormControl(title, Validators.required),\n      body: new FormControl(body, [\n        Validators.required,\n        Validators.maxLength(this.bodyMaxLength),\n      ]),\n      uploadModel: new FormControl(''),\n    });\n\n    const formSubscription = this.form.valueChanges.subscribe((value) => {\n      this.isSubmitted = false;\n    });\n\n    const bodySubscription = this.f.body.valueChanges.subscribe((body) => {\n      this.bodyLengthMessage$.next(`${body.length}/${this.bodyMaxLength}`);\n    });\n\n    this.subscription.add(bodySubscription);\n    this.subscription.add(formSubscription);\n  }\n\n  prepareCreate() {\n    this.isSubmitted = true;\n\n    if (this.form.invalid) {\n      return false;\n    }\n\n    if (this.filesService.hasLoadingFiles(this.uploadingFiles)) {\n      this.notifierService.notify(\n        'default',\n        this.translateService.instant('FILES.PLEASE_WAIT')\n      );\n      return false;\n    }\n\n    const hasErroredFiles = this.filesService.hasErroredFiles(\n      this.uploadingFiles\n    );\n\n    if (hasErroredFiles) {\n      this.notifierService.notify(\n        'default',\n        this.translateService.instant('FILES.HAS_ERRORED_FILES')\n      );\n    }\n\n    return true;\n  }\n\n  async saveToDraft() {\n    if (this.isSubmitting) {\n      return;\n    }\n\n    this.isSubmitting = true;\n\n    try {\n      const result = await this.createDraft();\n\n      this.showNotification(NOTIFICATIONS.SAVED_TO_DRAFT);\n\n      this.router.navigate(['/letters/drafts'], {\n        state: {\n          highlighted: result.id,\n        },\n      });\n      this.isSubmitting = false;\n    } catch (error) {\n      this.showNotification(NOTIFICATIONS.SAVED_TO_DRAFT_ERROR, 'error');\n      this.isSubmitting = false;\n    }\n  }\n\n  async createAndSendForSign() {\n    if (this.isSubmitting) {\n      return;\n    }\n\n    const canBeCreated = this.prepareCreate();\n\n    if (!canBeCreated) {\n      return;\n    }\n\n    this.isSubmitting = true;\n\n    try {\n      const result = await this.lettersService.create({\n        ...this.mapLetterBody(),\n        statusCode: LETTER_STATUS.ON_SIGN,\n      });\n\n      this.showNotification(NOTIFICATIONS.SENT_FOR_SIGN);\n\n      this.router.navigate(['/letters/outbox/on-sign'], {\n        state: {\n          highlighted: result.id,\n        },\n      });\n    } catch (error) {\n      this.showNotification(NOTIFICATIONS.SENT_FOR_SIGN_ERROR, 'error');\n      this.isSubmitting = false;\n    }\n  }\n\n  async createDraftAndNavigate() {\n    try {\n      this.originalLetter = await this.createDraft();\n\n      this.router.navigate(['edit', this.originalLetter.id], {\n        relativeTo: this.route.parent,\n        state: {\n          letter: this.originalLetter,\n          topics: this.topics,\n          files: this.uploadingFiles,\n        },\n      });\n    } catch (error) {}\n  }\n\n  async createAndSign() {\n    if (this.isSubmitting) {\n      return;\n    }\n\n    const canBeCreated = this.prepareCreate();\n\n    if (!canBeCreated) {\n      return;\n    }\n\n    this.isSubmitting = true;\n\n    try {\n      await this.createDraftAndNavigate();\n      await this.lettersService.sign(this.originalLetter.id);\n\n      this.showNotification(NOTIFICATIONS.SIGNED);\n\n      if (this.companyService.isSecondaryAuthority()) {\n        this.router.navigate(['/letters/outbox/on-sign'], {\n          state: {\n            highlighted: this.originalLetter.id,\n          },\n        });\n      } else {\n        this.router.navigate(['/letters/outbox/sent'], {\n          state: {\n            highlighted: this.originalLetter.id,\n          },\n        });\n      }\n    } catch (error) {\n      this.showNotification(NOTIFICATIONS.SIGNED_ERROR, 'error');\n      this.isSubmitting = false;\n    }\n  }\n\n  async edit() {\n    this.isSubmitting = true;\n\n    try {\n      await this.lettersService.edit({\n        ...this.originalLetter,\n        ...this.mapLetterBody(),\n      });\n\n      this.showNotification(NOTIFICATIONS.SAVED_EDITING);\n\n      this.router.navigate(['/letters/drafts'], {\n        state: {\n          highlighted: this.originalLetter.id,\n        },\n      });\n    } catch (error) {\n      this.showNotification(NOTIFICATIONS.SAVED_EDITING_ERROR, 'error');\n      this.isSubmitting = false;\n    }\n  }\n\n  createDraft() {\n    return this.lettersService.create({\n      ...this.mapLetterBody(),\n      statusCode: LETTER_STATUS.DRAFT,\n    });\n  }\n\n  mapTranslate(key: string) {\n    return `${TRANSLATE_PREFIX}.${key}`;\n  }\n\n  mapBodyErrors() {\n    if (!this.f.body.errors) {\n      return null;\n    }\n\n    if (this.f.body.errors.maxlength) {\n      return 'ERRORS.MAX_LENGTH';\n    }\n  }\n\n  onTitleSelect(title) {\n    this.f.title.setValue(title);\n  }\n\n  onAddFile(event) {\n    if (!event?.target?.files) {\n      return;\n    }\n\n    this.lettersService.onFileDrop(event.target.files);\n    this.f.uploadModel.setValue(null);\n  }\n\n  onUploadingFilesUpdate(uploadingFiles: IUploadingFile[]) {\n    this.uploadingFiles = uploadingFiles;\n  }\n\n  private showNotification(key: string, type: string = 'default') {\n    const translateKey = this.mapTranslate(key);\n    const message = this.translateService.instant(translateKey);\n\n    this.notifierService.notify(type, message);\n  }\n\n  private mapLetterBody() {\n    return {\n      ...this.form.getRawValue(),\n      fileIds: this.uploadingFiles\n        .filter((item) => {\n          return !item.error && item.file?.id;\n        })\n        .map((item) => {\n          return item.file.id;\n        }),\n    };\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ILetterTopic, LETTER_TOPIC_TYPE } from '@letters/models';\nimport { LettersService } from '@letters/services';\n\nconst TRANSLATE_PREFIX = 'LETTERS.CREATE_CONTENT';\n\n@Component({\n  selector: 'j-letters-create-group',\n  templateUrl: './letters-create-group.component.html',\n  styleUrls: ['./letters-create-group.component.scss'],\n})\nexport class LettersCreateGroupComponent implements OnInit {\n  @Input() topicType: LETTER_TOPIC_TYPE;\n\n  topics: ILetterTopic[];\n  isLoading: boolean = true;\n\n  constructor(private lettersService: LettersService, private router: Router) {}\n\n  ngOnInit() {\n    this.loadTopics();\n  }\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_PREFIX}.${value}`;\n  }\n\n  onLinkSelect(topic: ILetterTopic) {\n    this.router.navigate(['/letters/create'], {\n      state: {\n        title: topic.displayName,\n      },\n    });\n  }\n\n  private async loadTopics() {\n    try {\n      this.topics = await this.lettersService.getTopics(this.topicType);\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyService } from '@company/company.service';\r\n\r\nimport { IFile, ISignature } from '@shared/models';\r\nimport { FilesService } from '@shared/services';\r\n\r\nimport { ILetter } from '../../models';\r\nimport { LettersService } from '../../services';\r\n\r\nconst TRANSLATE_PREFIX = 'LETTERS.DETAILS';\r\n\r\n@Component({\r\n  selector: 'j-letters-details-content',\r\n  templateUrl: './letters-details-content.component.html',\r\n  styleUrls: ['./letters-details-content.component.scss'],\r\n})\r\nexport class LettersDetailsContentComponent implements OnInit {\r\n  @Input() letter: ILetter;\r\n  @Output() closed = new EventEmitter();\r\n\r\n  signers;\r\n  isFilesLoading = true;\r\n\r\n  dateText: string;\r\n  date: {\r\n    key: string;\r\n    params: {\r\n      time: string;\r\n    };\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private lettersService: LettersService,\r\n    private filesService: FilesService,\r\n    private companyService: CompanyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.mapDateText();\r\n    this.loadAttachments();\r\n  }\r\n\r\n  onClose() {\r\n    this.closed.emit();\r\n  }\r\n\r\n  onFileClick(file: IFile) {\r\n    this.filesService.downloadFileById(file.id, file.name);\r\n  }\r\n\r\n  onReply() {\r\n    this.router.navigate(['/letters/create'], {\r\n      state: {\r\n        title: this.mapTranslate('TITLE'),\r\n      },\r\n    });\r\n  }\r\n\r\n  mapTranslate(key: string) {\r\n    return `${TRANSLATE_PREFIX}.${key}`;\r\n  }\r\n\r\n  private async loadAttachments() {\r\n    this.isFilesLoading = true;\r\n\r\n    try {\r\n      const letter = await this.lettersService.getById(this.letter.id);\r\n      this.letter = { ...this.letter, ...letter };\r\n\r\n      this.loadSignatures();\r\n    } catch (error) {\r\n    } finally {\r\n      this.isFilesLoading = false;\r\n    }\r\n  }\r\n\r\n  private async loadSignatures() {\r\n    if (this.letter.incoming) {\r\n      return;\r\n    }\r\n\r\n    this.signers = this.companyService.generateSignersList(\r\n      this.letter.statusCode,\r\n      this.letter.signatureScheme,\r\n      this.letter.signatures\r\n    );\r\n  }\r\n\r\n  private mapDateText() {\r\n    const mapped = this.lettersService.mapLetterDate(this.letter);\r\n\r\n    if (typeof mapped === 'string') {\r\n      this.dateText = mapped;\r\n    } else {\r\n      this.date = mapped;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { LETTER_STATUS } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { ILetter } from '../../models';\nimport { LettersService } from '../../services';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'j-letters-group',\n  templateUrl: './letters-group.component.html',\n  styleUrls: ['./letters-group.component.scss'],\n})\nexport class LettersGroupComponent {\n  @Input() title: string;\n  @Input() list: ILetter[];\n\n  @Input() highlighted: string;\n  @Input() isDeletable: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSignable: boolean = false;\n\n  @Output() detailsShown = new EventEmitter<ILetter>();\n  @Output() scrolled = new EventEmitter();\n\n  translatePrefix = 'LETTERS.LIST';\n  urlPath = 'letters';\n\n  modalPartialTitleFn = this.mapModalPartialTitle.bind(this);\n  highlightedFn = this.shouldBeHighlighted.bind(this);\n  highlightedTemporarilyFn = this.shouldBeHighlightedTemporarily.bind(this);\n\n  constructor(\n    private lettersService: LettersService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private navService: NavService,\n    private companyService: CompanyService,\n    private translateService: TranslateService\n  ) {}\n\n  onClick(letter: ILetter) {\n    letter.read = true;\n    \n    if (letter.statusCode === LETTER_STATUS.DRAFT) {\n      this.router.navigate(['edit', letter.id], {\n        relativeTo: this.route.parent,\n      });\n    } else {\n      this.detailsShown.emit(letter);\n    }\n  }\n\n  onScroll() {\n    this.scrolled.emit();\n  }\n\n  shouldBeHighlighted(item: ILetter) {\n    return !item.read;\n  }\n\n  shouldBeHighlightedTemporarily(item: ILetter) {\n    return this.highlighted === item.id;\n  }\n\n  mapModalPartialTitle(item: ILetter) {\n    return `№ ${item.letterNumber}:`;\n  }\n\n  onClear() {\n    this.navService.retrieveLetterBadges();\n  }\n\n  onSign() {\n    if (\n      this.companyService.isSingleSignScheme() ||\n      (this.companyService.isMultipleSignScheme() &&\n        this.companyService.isPrimaryAuthority())\n    ) {\n      this.router.navigate(['sent'], { relativeTo: this.route.parent });\n    }\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  mapDateText(letter: ILetter) {\n    const mapped = this.lettersService.mapLetterDate(letter);\n    return typeof mapped === 'string'\n      ? of(mapped)\n      : this.translateService.stream(mapped.key, mapped.params);\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { FilterService } from '@filter/filter.service';\nimport { FILTER_PERIOD_TYPE } from '@filter/filter.model';\n\nimport { LettersService } from '../../services';\nimport { ILetter, ILettersSearch } from '../../models';\n\nconst TRANSLATE_PREFIX = 'LETTERS.LIST';\nconst PAGE_START = 1;\nconst PAGE_SIZE = 10;\n\n@Component({\n  selector: 'j-letters-list-base',\n  templateUrl: './letters-list-base.component.html',\n  styleUrls: ['./letters-list-base.component.scss'],\n})\nexport class LettersListBaseComponent implements OnDestroy, OnInit {\n  isLoading: boolean = true;\n  hasMorePages: boolean = true;\n  list: ILetter[] = [];\n\n  @Input() emptyNotFound: string = 'LETTERS.EMPTY.NOT_FOUND';\n  @Input() emptyLabel: string = 'LETTERS.EMPTY.DEFAULT';\n  @Input() highlighted: string;\n  @Input() listParams: Partial<ILettersSearch>;\n  @Input() isSelectable: boolean = false;\n  @Input() isSignable: boolean = false;\n  @Input() isDeletable: boolean = false;\n  @Input() hasDateFilter: boolean = false;\n\n  @Output() retrieved = new EventEmitter<number>();\n  @Output() detailsShown = new EventEmitter<ILetter>();\n\n  page = PAGE_START;\n  pageSize = PAGE_SIZE;\n\n  currentDates = null;\n  errorText: string = null;\n\n  subscription = new Subscription();\n\n  constructor(\n    private lettersService: LettersService,\n    private companyService: CompanyService,\n    private navService: NavService,\n    private filterService: FilterService\n  ) {}\n\n  ngOnInit() {\n    this.filterService.updatePeriod(FILTER_PERIOD_TYPE.NONE);\n    this.subscription.add(\n      this.companyService.refresh$.subscribe((companyRefresh) => {\n        const [user, company, isAuthorized] = companyRefresh;\n\n        if (isAuthorized) {\n          this.onClearPeriod();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onRetry() {\n    this.retrieveLetters({ page: PAGE_START });\n  }\n\n  onFilter(dates: { to: Date; from: Date }) {\n    this.currentDates = dates;\n    this.retrieveLetters({\n      page: PAGE_START,\n      dateFrom: dates.from,\n      dateTo: dates.to,\n    });\n  }\n\n  onClearPeriod() {\n    this.currentDates = null;\n    this.filterService.updatePeriod(FILTER_PERIOD_TYPE.NONE);\n    this.retrieveLetters({ page: PAGE_START });\n  }\n\n  onScroll() {\n    if (this.isLoading || !this.hasMorePages) {\n      return;\n    }\n\n    this.retrieveLetters({ page: ++this.page });\n  }\n\n  onDetailsShown(letter: ILetter) {\n    this.detailsShown.emit(letter);\n  }\n\n  mapTranslate(key: string) {\n    return `${TRANSLATE_PREFIX}.${key}`;\n  }\n\n  async retrieveLetters(search: ILettersSearch) {\n    this.isLoading = true;\n    this.errorText = null;\n\n    try {\n      let filter = {\n        ...this.listParams,\n        ...search,\n        pageSize: this.pageSize,\n      };\n\n      const letterList = await this.lettersService.getList(filter);\n\n      this.hasMorePages = letterList.totalCount > search.page * this.pageSize;\n      this.page = search.page;\n      this.list =\n        search.page > PAGE_START\n          ? [...this.list, ...letterList.items]\n          : letterList.items;\n\n      this.retrieved.emit(this.list.length);\n      this.navService.retrieveLetterBadges();\n    } catch (error) {\n      this.errorText = error.description || error;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'j-letters-loading',\n  templateUrl: './letters-loading.component.html',\n  styleUrls: ['./letters-loading.component.scss'],\n})\nexport class LettersLoadingComponent {\n  @Input() hasTitle = false;\n  \n  constructor() {}\n\n  get loadingCount() {\n    return Array(5);\n  }\n}\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { NavService } from '@shared/nav/nav.service';\n\n@Component({\n  selector: 'j-letters-nav',\n  templateUrl: './letters-nav.component.html',\n  styleUrls: ['./letters-nav.component.scss'],\n})\nexport class LettersNavComponent implements OnDestroy {\n  isOutboxRoute: boolean;\n  letterTypes = [\n    {\n      id: 'outbox',\n      label: 'LETTERS.TYPES.OUTBOX',\n      url: '/letters/outbox',\n      badge: null,\n      badgeClass: 'badge-primary',\n    },\n    {\n      id: 'inbox',\n      label: 'LETTERS.TYPES.INBOX',\n      url: '/letters/inbox',\n      badge: null,\n      badgeClass: 'badge-primary',\n    },\n    {\n      id: 'draft',\n      label: 'LETTERS.TYPES.DRAFT',\n      url: '/letters/drafts',\n      badge: null,\n      badgeClass: 'badge-light',\n    },\n  ];\n\n  @Output() createShown = new EventEmitter();\n\n  subscription = new Subscription();\n\n  constructor(\n    private navService: NavService,\n    private route: ActivatedRoute\n  ) {\n    this.route.data.subscribe((data) => {\n      this.isOutboxRoute = data.isOutbox || false;\n    });\n\n    this.subscription.add(\n      this.navService.getLetterBadges().subscribe((badges) => {\n        this.setBadge('outbox', badges.onSignForMe);\n        this.setBadge('inbox', badges.unread);\n        this.setBadge('draft', badges.draft);\n      })\n    );\n  }\n\n  isBadgesShown(id: string) {\n    switch (id) {\n      case 'inbox':\n      case 'draft':\n        return true;\n      case 'outbox':\n        return !this.isOutboxRoute;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private setBadge(type: string, count: number) {\n    this.letterTypes.find((item) => item.id === type).badge = count;\n  }\n\n  onCreateShown() {\n    this.createShown.emit();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { LETTER_STATUS } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { ILetter, ILettersSearch, IOnSignCounts } from '../../models';\nimport { LettersService } from '../../services';\n\nconst TRANSLATE_PREFIX = 'LETTERS.LIST';\nconst PAGE_SIZE = 100000;\n\n@Component({\n  selector: 'j-letters-on-sign',\n  templateUrl: './letters-on-sign.component.html',\n  styleUrls: ['./letters-on-sign.component.scss'],\n})\nexport class LettersOnSignComponent implements OnDestroy {\n  @Input() highlighted: string;\n\n  @Output() retrieved = new EventEmitter<IOnSignCounts>();\n  @Output() detailsShown = new EventEmitter<ILetter>();\n\n  isLoading: boolean = true;\n\n  onSignForMeList: ILetter[] = [];\n  onSignForOthersList: ILetter[] = [];\n\n  lettersSearch: ILettersSearch = {\n    incoming: false,\n    statusCode: [LETTER_STATUS.ON_SIGN],\n    pageSize: PAGE_SIZE,\n  };\n\n  errorText: string = null;\n\n  subscription = new Subscription();\n\n  constructor(\n    private lettersService: LettersService,\n    private navService: NavService,\n    private companyService: CompanyService\n  ) {\n    this.subscription.add(\n      this.companyService.refresh$.subscribe((companyRefresh) => {\n        const [user, company, isAuthorized] = companyRefresh;\n\n        if (isAuthorized) {\n          this.retrieveLetters();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  mapTranslate(key: string) {\n    return `${TRANSLATE_PREFIX}.${key}`;\n  }\n\n  onDetailsShown(letter: ILetter) {\n    this.detailsShown.emit(letter);\n  }\n\n  onRetry() {\n    this.retrieveLetters();\n  }\n\n  async retrieveLetters() {\n    this.errorText = null;\n    this.navService.retrieveLetterBadges();\n\n    try {\n      await Promise.all([\n        this.retrieveOnSignForMe(),\n        this.retrieveOnSignForOthers(),\n      ]);\n\n      this.retrieved.emit({\n        onSignForMe: this.onSignForMeList.length,\n        onSignForOthers: this.onSignForOthersList.length,\n      });\n    } catch (error) {\n      this.errorText = error.description || error;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async retrieveOnSignForMe() {\n    const letterList = await this.lettersService.getList({\n      ...this.lettersSearch,\n      onSignForMe: true,\n    });\n\n    this.onSignForMeList = letterList.items;\n  }\n\n  async retrieveOnSignForOthers() {\n    const letterList = await this.lettersService.getList({\n      ...this.lettersSearch,\n      onSignForOthers: true,\n    });\n\n    this.onSignForOthersList = letterList.items;\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { combineLatest, of, Subscription } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { IStatus, LETTER_STATUS } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport {\n  ILetter,\n  ILettersSearch,\n  IOnSignCounts,\n  LETTER_OUTBOX_STATUS,\n} from '../../models';\nimport { LettersService } from '../../services';\n\nconst TRANSLATE_PREFIX = 'LETTERS.STATUSES';\n\n@Component({\n  selector: 'j-letters-outbox',\n  templateUrl: './letters-outbox.component.html',\n  styleUrls: ['./letters-outbox.component.scss'],\n})\nexport class LettersOutboxComponent implements OnDestroy {\n  @Input() highlighted: string;\n  @Output() detailsShown = new EventEmitter<ILetter>();\n\n  statuses: IStatus[] = [\n    {\n      label: this.mapTranslate('ON_SIGN'),\n      value: LETTER_OUTBOX_STATUS.ON_SIGN,\n      count: null,\n      isSelected: true,\n      isDisabled: false,\n    },\n    {\n      label: this.mapTranslate('SENT'),\n      value: LETTER_OUTBOX_STATUS.SENT,\n      count: 0,\n      isSelected: false,\n      isDisabled: false,\n    },\n  ];\n\n  sentParams: Partial<ILettersSearch> = {\n    incoming: false,\n    statusCode: [LETTER_STATUS.SENT, LETTER_STATUS.READY_TO_SEND],\n  };\n\n  outboxStatus = this.statuses[0].value;\n  LETTER_OUTBOX_STATUS = LETTER_OUTBOX_STATUS;\n  isOnSignHidden: boolean = false;\n\n  subscription = new Subscription();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private lettersService: LettersService,\n    private navService: NavService,\n    private companyService: CompanyService\n  ) {\n    this.subscription.add(\n      combineLatest([\n        this.route.data,\n        this.companyService.getAuthorizedPersons().pipe(\n          catchError((err, caught) => {\n            return of([]);\n          })\n        ),\n      ]).subscribe((values) => {\n        const [routeData, persons] = values;\n\n        this.isOnSignHidden = persons\n          ? this.companyService.hasOnlyPrimaryAuthorities(persons) &&\n            this.companyService.isSingleSignScheme()\n          : false;\n\n        if (\n          this.isOnSignHidden &&\n          routeData.status === LETTER_OUTBOX_STATUS.ON_SIGN\n        ) {\n          this.router.navigate(['sent'], {\n            relativeTo: this.route.parent,\n          });\n\n          return;\n        }\n\n        this.onInit(routeData.status);\n        this.lettersService.lastLettersListPath$.next(routeData.lastPath);\n      })\n    );\n\n    const badgesSubscription = this.navService\n      .getLetterBadges()\n      .subscribe((badges) => {\n        const { onSignForMe, onSignForOthers } = badges;\n        const hasOnSignForMe = onSignForMe > 0;\n\n        Object.assign(\n          this.statuses.find(\n            (status) => status.value === LETTER_OUTBOX_STATUS.ON_SIGN\n          ),\n          {\n            count: hasOnSignForMe ? onSignForMe : onSignForOthers,\n            classList: hasOnSignForMe ? 'badge-primary' : 'badge-light',\n          }\n        );\n      });\n\n    this.subscription.add(badgesSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onSignableRetrieved(counts: IOnSignCounts) {}\n\n  onSentRetrieved(count: number) {}\n\n  onDetailsShown(letter: ILetter) {\n    this.detailsShown.emit(letter);\n  }\n\n  onInit(value: LETTER_OUTBOX_STATUS = LETTER_OUTBOX_STATUS.ON_SIGN) {\n    this.outboxStatus = value;\n    this.statuses = this.statuses.map((status) => {\n      return { ...status, isSelected: status.value === value };\n    });\n  }\n\n  onStatusSelect(value: LETTER_OUTBOX_STATUS) {\n    let path = '';\n\n    switch (value) {\n      case LETTER_OUTBOX_STATUS.ON_SIGN:\n        path = 'on-sign';\n        break;\n      case LETTER_OUTBOX_STATUS.SENT:\n        path = 'sent';\n        break;\n    }\n    this.router.navigate([path], { relativeTo: this.route.parent });\n  }\n\n  mapTranslate(key: string) {\n    return `${TRANSLATE_PREFIX}.${key}`;\n  }\n}\n","import { LettersAsideComponent } from './letters-aside/letters-aside.component';\nimport { LettersCreateComponent } from './letters-create/letters-create.component';\nimport { LettersListComponent } from './letters-list/letters-list.component';\n\nexport const LETTERS_CONTAINERS = [\n  LettersAsideComponent,\n  LettersCreateComponent,\n  LettersListComponent,\n];\n\nexport * from './letters-aside/letters-aside.component';\nexport * from './letters-create/letters-create.component';\nexport * from './letters-list/letters-list.component';\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  OnDestroy,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ILetter } from '@letters/models';\r\n\r\nconst BODY_OVERFLOW_CLASS = 'overflow-hidden';\r\n\r\n@Component({\r\n  selector: 'j-letters-aside',\r\n  templateUrl: './letters-aside.component.html',\r\n  styleUrls: ['./letters-aside.component.scss'],\r\n  animations: [\r\n    trigger('wrapper', [\r\n      state(\r\n        'shown',\r\n        style({\r\n          transform: 'scale(1)',\r\n          visibility: 'visible',\r\n          opacity: '1',\r\n        })\r\n      ),\r\n      state(\r\n        'hidden',\r\n        style({\r\n          transform: 'scale(0.9)',\r\n          visibility: 'hidden',\r\n          opacity: '0',\r\n        })\r\n      ),\r\n      transition('shown<=>hidden', animate('250ms')),\r\n    ]),\r\n    trigger('content', [\r\n      state(\r\n        'shown',\r\n        style({\r\n          right: '0%',\r\n        })\r\n      ),\r\n      state(\r\n        'hidden',\r\n        style({\r\n          right: '-25%',\r\n        })\r\n      ),\r\n      transition('shown<=>hidden', animate('500ms ease-in-out')),\r\n    ]),\r\n  ],\r\n})\r\nexport class LettersAsideComponent implements OnDestroy {\r\n  isContentShown = false;\r\n  letter: ILetter;\r\n\r\n  isDetailsShowing = false;\r\n  isCreateShowing = false;\r\n\r\n  @Output() closed = new EventEmitter();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document) {}\r\n\r\n  ngOnDestroy() {\r\n    this.document.body.classList.remove(BODY_OVERFLOW_CLASS);\r\n  }\r\n\r\n  public showDetails(letter: ILetter) {\r\n    this.isDetailsShowing = true;\r\n    this.isCreateShowing = false;\r\n\r\n    this.letter = letter;\r\n    this.showContent();\r\n  }\r\n\r\n  public showCreate() {\r\n    this.isCreateShowing = true;\r\n    this.isDetailsShowing = false;\r\n\r\n    this.showContent();\r\n  }\r\n\r\n  public hideAside() {\r\n    this.letter = null;\r\n    this.isCreateShowing = false;\r\n    this.isDetailsShowing = false;\r\n\r\n    this.document.body.classList.remove(BODY_OVERFLOW_CLASS);\r\n    this.isContentShown = false;\r\n\r\n    this.closed.emit();\r\n  }\r\n\r\n  private showContent() {\r\n    this.document.body.classList.add(BODY_OVERFLOW_CLASS);\r\n    this.isContentShown = true;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LettersService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'j-letters-create',\r\n  templateUrl: './letters-create.component.html',\r\n  styleUrls: ['./letters-create.component.scss'],\r\n})\r\nexport class LettersCreateComponent implements OnInit, OnDestroy {\r\n  title: string;\r\n  subscription = new Subscription();\r\n  lastLetterListPath: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private lettersService: LettersService\r\n  ) {\r\n    this.lettersService.lastLettersListPath$.subscribe((path) => {\r\n      this.lastLetterListPath = path;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const routeParamsSubscription = this.route.params.subscribe((params) => {\r\n      if (params.id) {\r\n        this.title = 'LETTERS.CREATE.EDIT';\r\n      } else {\r\n        this.title = 'LETTERS.CREATE.TITLE';\r\n      }\r\n    });\r\n\r\n    this.subscription.add(routeParamsSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.lettersService.clearFiles();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onFileDropped(fileList) {\r\n    this.lettersService.onFileDrop(fileList);\r\n  }\r\n\r\n  onClose() {\r\n    this.lettersService.clearFiles();\r\n    this.router.navigate(['/letters', this.lastLetterListPath]);\r\n  }\r\n}\r\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\nimport { combineLatest, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LETTER_STATUS } from '@shared/models';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\nimport { LettersService } from '../../services';\r\nimport { ILetter, ILettersSearch, LETTERS_CATEGORY } from '../../models';\r\nimport { LettersAsideComponent } from '../letters-aside/letters-aside.component';\r\n\r\n@Component({\r\n  selector: 'j-letters-list',\r\n  templateUrl: './letters-list.component.html',\r\n  styleUrls: ['./letters-list.component.scss'],\r\n})\r\nexport class LettersListComponent implements OnDestroy {\r\n  lettersCategory: LETTERS_CATEGORY;\r\n  LETTERS_CATEGORY = LETTERS_CATEGORY;\r\n\r\n  subscription = new Subscription();\r\n\r\n  inboxParams: Partial<ILettersSearch> = {\r\n    incoming: true,\r\n  };\r\n\r\n  draftsParams: Partial<ILettersSearch> = {\r\n    statusCode: [LETTER_STATUS.DRAFT],\r\n  };\r\n\r\n  highlighted: string;\r\n\r\n  @ViewChild('lettersAside', { static: false })\r\n  lettersAside: LettersAsideComponent;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private navService: NavService,\r\n    private lettersService: LettersService\r\n  ) {\r\n    const routeSubscription = combineLatest([\r\n      this.route.paramMap.pipe(map(() => window.history.state)),\r\n      this.route.data,\r\n    ]).subscribe((values) => {\r\n      const [state, data] = values;\r\n\r\n      this.lettersCategory = data.category;\r\n      this.lettersService.lastLettersListPath$.next(data.lastPath);\r\n\r\n      if (state.highlighted) {\r\n        this.highlighted = state.highlighted;\r\n      }\r\n    });\r\n\r\n    this.subscription.add(routeSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onDetailsShown(letter: ILetter) {\r\n    this.lettersAside.showDetails(letter);\r\n  }\r\n\r\n  onCreateShown() {\r\n    this.lettersAside.showCreate();\r\n  }\r\n\r\n  onAsideClose() {\r\n    this.navService.retrieveLetterBadges();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LETTERS_CATEGORY, LETTER_OUTBOX_STATUS } from './models';\nimport { LettersCreateComponent, LettersListComponent } from './containers';\nimport { LettersComponent } from './letters.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LettersComponent,\n    data: {\n      title: 'CONTRACTS.TITLE',\n    },\n    children: [\n      {\n        path: 'outbox',\n        children: [\n          {\n            path: 'on-sign',\n            component: LettersListComponent,\n            data: {\n              category: LETTERS_CATEGORY.OUTBOX,\n              status: LETTER_OUTBOX_STATUS.ON_SIGN,\n              lastPath: 'outbox/on-sign',\n              isOutbox: true,\n            },\n          },\n          {\n            path: 'sent',\n            component: LettersListComponent,\n            data: {\n              category: LETTERS_CATEGORY.OUTBOX,\n              status: LETTER_OUTBOX_STATUS.SENT,\n              lastPath: 'outbox/sent',\n              isOutbox: true,\n            },\n          },\n          {\n            path: '**',\n            redirectTo: 'on-sign',\n          },\n        ],\n      },\n      {\n        path: 'inbox',\n        component: LettersListComponent,\n        data: {\n          category: LETTERS_CATEGORY.INBOX,\n          lastPath: 'inbox',\n        },\n      },\n      {\n        path: 'drafts',\n        component: LettersListComponent,\n        data: {\n          category: LETTERS_CATEGORY.DRAFTS,\n          lastPath: 'drafts',\n        },\n      },\n      {\n        path: 'create',\n        component: LettersCreateComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: LettersCreateComponent,\n      },\n      {\n        path: '**',\n        // redirectTo: 'create',\n        redirectTo: 'outbox',\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LettersRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport {\r\n  FeatureFlagsService,\r\n  FEATURE_FLAG,\r\n} from '@feature-flags/index';\r\n\r\n@Component({\r\n  selector: 'j-letters',\r\n  templateUrl: './letters.component.html',\r\n  styleUrls: ['./letters.component.scss'],\r\n})\r\nexport class LettersComponent implements OnDestroy, OnInit {\r\n  subscription = new Subscription();\r\n\r\n  constructor(private featureFlagsService: FeatureFlagsService) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      this.featureFlagsService.featureFlags$.subscribe((flags) => {\r\n        this.featureFlagsService.checkFeatureRoute(FEATURE_FLAG.LETTER);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { NgxFileDropModule } from 'ngx-file-drop';\n\nimport { FilterModule } from '@filter/filter.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { AccountsModule } from '@accounts/accounts.module';\n\nimport { LETTERS_CONTAINERS } from './containers';\nimport { LETTERS_COMPONENTS } from './components';\nimport { LETTERS_MODALS } from './modals';\n\nimport { LettersRoutingModule } from './letters-routing.module';\nimport { LettersComponent } from './letters.component';\n\nconst LETTERS_IMPORT_MODULES = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n\n  NgxSkeletonLoaderModule,\n  NgxFileDropModule,\n  InfiniteScrollModule,\n\n  FilterModule,\n  SharedModule,\n  AccountsModule,\n\n  LettersRoutingModule,\n];\n\n@NgModule({\n  declarations: [\n    LETTERS_CONTAINERS,\n    LETTERS_COMPONENTS,\n    LETTERS_MODALS,\n    LettersComponent,\n  ],\n  imports: [LETTERS_IMPORT_MODULES],\n})\nexport class LettersModule {}\n","import { LettersModalComponent } from './letters-modal/letters-modal.component';\n\nexport const LETTERS_MODALS = [LettersModalComponent];\n\nexport { LettersModalComponent } from './letters-modal/letters-modal.component';\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  BULK_OPERATION_STATUS,\n  IBulkOperationItem,\n  IBulkOperationResult,\n} from '@shared/models/bulk';\n\nimport { ILetter } from '../../models';\n\nconst IMAGE_PREFIX = '/assets/img/history/modals';\nconst TRANSLATE_KEY = 'LETTERS.MODAL';\n\n@Component({\n  selector: 'j-letters-modal',\n  templateUrl: './letters-modal.component.html',\n  styleUrls: ['./letters-modal.component.scss'],\n})\nexport class LettersModalComponent implements OnInit {\n  @Input() key: string;\n  @Input() result: IBulkOperationResult;\n  @Input() list: ILetter[];\n\n  BULK_OPERATION_STATUS = BULK_OPERATION_STATUS;\n\n  title: string;\n  imgSrc: string;\n\n  constructor(public modal: NgbActiveModal) {}\n\n  ngOnInit() {\n    switch (this.result.status) {\n      case BULK_OPERATION_STATUS.FAILED:\n        this.title = this.mapTranslate(`${this.key}.FAILED.TITLE`);\n        this.imgSrc = `${IMAGE_PREFIX}/error.svg`;\n        break;\n\n      case BULK_OPERATION_STATUS.PARTLY_SUCCESS:\n        this.title = this.mapTranslate(`${this.key}.PARTIAL`);\n        this.imgSrc = `${IMAGE_PREFIX}/partial.svg`;\n        break;\n\n      case BULK_OPERATION_STATUS.SUCCESS:\n        this.title = this.mapTranslate(`${this.key}.SUCCESS.TITLE`);\n        this.imgSrc = `${IMAGE_PREFIX}/success.svg`;\n        break;\n    }\n  }\n\n  get successText() {\n    switch (this.result?.numberOfSuccess % 10) {\n      case 1:\n        return this.mapTranslate(`${this.key}.SUCCESS.ONE`);\n      case 2:\n      case 3:\n      case 4:\n        return this.mapTranslate(`${this.key}.SUCCESS.FEW`);\n      default:\n        return this.mapTranslate(`${this.key}.SUCCESS.OTHER`);\n    }\n  }\n\n  get successParams() {\n    return {\n      count: this.result?.numberOfSuccess,\n    };\n  }\n\n  get failedText() {\n    switch (this.result?.numberOfFailed % 10) {\n      case 1:\n        return this.mapTranslate(`${this.key}.FAILED.ONE`);\n      case 2:\n      case 3:\n      case 4:\n        return this.mapTranslate(`${this.key}.FAILED.FEW`);\n      default:\n        return this.mapTranslate(`${this.key}.FAILED.OTHER`);\n    }\n  }\n\n  get failedParams() {\n    return {\n      count: this.result?.numberOfFailed,\n    };\n  }\n\n  get failedLetters() {\n    return this.result?.results?.filter((item) => {\n      return item.status === BULK_OPERATION_STATUS.FAILED;\n    });\n  }\n\n  getLetterNumber(bulkItem: IBulkOperationItem) {\n    return (\n      this.list.find((item) => item.id === bulkItem.itemId)?.letterNumber || ''\n    );\n  }\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n\n  retrieveErrors(bulkItem: IBulkOperationItem) {\n    if (bulkItem.errorData) {\n      const errors = Object.entries(bulkItem.errorData);\n      const mappedErrors = errors.map((item) => {\n        return item[1];\n      });\n\n      return mappedErrors;\n    } else if (bulkItem.errorMsg) {\n      return [bulkItem.errorMsg];\n    }\n  }\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_KEY}.${value}`;\n  }\n}\n","export * from './letters';\nexport * from './letters-search';\nexport * from './letters-topic';\nexport * from './letters-certificates';\n","export enum CERTIFICATE_TYPE {\n  ACCOUNT_AVAILABILITY = 'ACCOUNT_AVAILABILITY',\n  ACCOUNT_BALANCES = 'ACCOUNT_BALANCES',\n  ACCOUNT_DETAILS = 'ACCOUNT_DETAILS',\n  ACCOUNT_TURNOVER = 'ACCOUNT_TURNOVER',\n}\n\nexport interface ICertificateType {\n  code: CERTIFICATE_TYPE;\n  description: string;\n  id: string;\n}\n","import { IStatus, LETTER_STATUS } from '@shared/models';\n\nexport enum LETTERS_SORT {\n  CREATED_ASC = 'created',\n  CREATED_DESC = '-created',\n}\n\nexport interface ILettersSearch {\n  incoming?: boolean;\n  onSignForMe?: boolean;\n  onSignForOthers?: boolean;\n\n  page?: number;\n  pageSize?: number;\n\n  dateFrom?: Date;\n  dateTo?: Date;\n\n  sortBy?: LETTERS_SORT;\n  statusCode?: LETTER_STATUS[];\n}\n\nexport interface ILetterStatus extends IStatus {\n  value: LETTER_STATUS[];\n}\n","export enum LETTER_TOPIC_TYPE {\n  CERTIFICATE = 'CERTIFICATE',\n  APPLICATION = 'APPLICATION',\n}\n\nexport interface ILetterTopic {\n  description: string;\n  displayName: string;\n  id: string;\n  type: LETTER_TOPIC_TYPE;\n}\n\nexport const TOPIC_BACKUPS = [\n  {\n    id: '919fbae5-ca24-4b3a-9323-a5b0c96a4512',\n    displayName: 'Произвольное письмо',\n    description: 'Произвольное письмо',\n    type: 'APPLICATION',\n  },\n  {\n    id: 'd61a02d0-50ea-4867-9c3b-ec318cb569ac',\n    displayName: 'Обращение по валютным контрактам',\n    description: 'Обращение по вопросу валютного контракта',\n    type: 'APPLICATION',\n  },\n  {\n    id: 'fba22715-756c-41d7-b100-e29f80ab0ea9',\n    displayName: 'На выдачу наличных денег',\n    description: 'Заявка на выдачу наличных денег в отделении',\n    type: 'APPLICATION',\n  },\n  {\n    id: 'fa1be069-e728-4a2f-950f-ec4893dc42ac',\n    displayName: 'На частичное изъятие с депозита',\n    description: 'Заявка на частичное изъятие с депозита',\n    type: 'APPLICATION',\n  },\n  {\n    id: 'd6d2fb09-6d94-4be1-b75c-f4f3dbfd0d75',\n    displayName: 'Смена руководителя, адреса, учредителей и т.д',\n    description:\n      'Заявка на смену руководителя, адреса, учредителей и т.д. с вложением учредительных документов (приказы, решения, протокола)',\n    type: 'APPLICATION',\n  },\n  {\n    id: '4a7c08ee-f640-4feb-a012-15f99084f8a1',\n    displayName: 'На зачисление валюты на счет',\n    description: 'Заявление о зачислении валюты на счет',\n    type: 'APPLICATION',\n  },\n  {\n    id: '07e410d5-3283-4f8c-902c-6c86e2436677',\n    displayName: 'О наличии счета',\n    description: 'Справка о наличии банковского счета',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: '8295913a-b8ba-472f-af7c-8e12195b8ddf',\n    displayName: 'Об остатках на счете',\n    description: 'Справка об остатках на банковском счете',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: 'a66d0329-8956-4bce-89ee-bdc9e3571349',\n    displayName: 'Об оборотах на счете',\n    description: 'Справка об оборотах банковского счета',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: 'affb46a1-2012-47d2-9222-96b12603771c',\n    displayName: 'О реквизитах счета',\n    description: 'Справка о реквизитах банковского счета',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: '48e07781-bc49-4e04-b24c-3136366b913f',\n    displayName: 'Для аудиторских компаний',\n    description: 'Справка для аудиторских компаний',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: '903dabe2-5b6a-405a-93ab-5df77f8c1b7f',\n    displayName: 'Для участия в тендере',\n    description: 'Справка для участия в тендере',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: '34ce1113-6f15-4f64-92af-fc97db0599be',\n    displayName: 'Об отсутствии просроченной задолженности',\n    description: 'Справка об отсутствии просроченной задолженности',\n    type: 'CERTIFICATE',\n  },\n  {\n    id: 'e4da4358-f6fe-42dc-8099-07026932f2cf',\n    displayName: 'О наличии не исполненных требований 3-их лиц',\n    description: 'Справка о наличии не исполненных требований 3-их лиц (ЕКО)',\n    type: 'CERTIFICATE',\n  },\n];\n","import {\n  AUTHORITY_TYPE,\n  IFile,\n  ISignature,\n  LETTER_STATUS,\n  SIGNATURE_SCHEME,\n} from '@shared/models';\n\nexport enum LETTERS_CATEGORY {\n  INBOX = 'inbox',\n  OUTBOX = 'outbox',\n  DRAFTS = 'drafts',\n}\n\nexport enum LETTER_SIGNATURE_TYPE {\n  LETTER = 'LETTER',\n  PAYMENT = 'PAYMENT',\n}\n\nexport interface ILetterCreateForm {\n  id: string;\n  title: string;\n  body: string;\n  fileIds: string[];\n\n  statusCode?: LETTER_STATUS;\n}\n\nexport interface ILetter extends ILetterCreateForm {\n  colvirId: string;\n  companyId: string;\n\n  created: Date;\n  letterNumber: number;\n  read: boolean;\n  incoming: boolean;\n\n  files: IFile[];\n\n  onSignAuthority: AUTHORITY_TYPE;\n  signatureScheme: SIGNATURE_SCHEME;\n  signatures: ISignature[];\n\n  statusCode: LETTER_STATUS;\n}\n\nexport enum LETTER_OUTBOX_STATUS {\n  ON_SIGN = 'ON_SIGN',\n  SENT = 'SENT',\n}\n\nexport interface IOnSignCounts {\n  onSignForMe: number;\n  onSignForOthers: number;\n}\n\nexport interface ILettersList {\n  totalCount: number;\n  items: ILetter[];\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { ApiService } from '@api/api.service';\nimport { CompanyService } from '@company/company.service';\n\nimport { CERTIFICATE_TYPE, ICertificateType } from '@letters/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CertificatesService {\n  private cashedCertificateTypes$ = new BehaviorSubject<ICertificateType[]>([]);\n\n  constructor(\n    private apiService: ApiService,\n    private companyService: CompanyService\n  ) {\n    this.retrieveCertificateTypes();\n  }\n\n  async getCertificate(certificateType: CERTIFICATE_TYPE, params = null) {\n    try {\n      const url = this.mapUrl();\n      const body = {\n        certificateTypeCode: certificateType,\n        params,\n      };\n\n      return await this.apiService.post(url, body, null, null, {\n        responseType: 'blob',\n      });\n    } catch (error) {\n      const reader: FileReader = new FileReader();\n\n      const result = new Promise((resolve) => {\n        reader.onloadend = () => {\n          resolve(JSON.parse(reader.result as string));\n        };\n      });\n\n      reader.readAsText(error.error);\n\n      throw result;\n    }\n  }\n\n  getCertificateTypes() {\n    return this.cashedCertificateTypes$.asObservable();\n  }\n\n  private async retrieveCertificateTypes() {\n    const url = this.mapUrl(`/types`);\n\n    let types;\n\n    try {\n      types = await this.apiService.get<ICertificateType[]>(url);\n    } catch (error) {\n      types = [];\n    }\n\n    this.cashedCertificateTypes$.next(types);\n    return types;\n  }\n\n  private mapUrl(path: string = '') {\n    return `companies/${this.companyService.currentId}/certificates${path}`;\n  }\n}\n","export * from './letters.service';\nexport * from './certificates.service';\n","import { Inject, Injectable, LOCALE_ID } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\nimport { HttpParams, HttpResponse } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport dayjs from 'dayjs';\r\n\r\nimport { convertDateToApiFormat } from '@utils/dates';\r\nimport { ApiService } from '@api/api.service';\r\nimport { CompanyService } from '@company/company.service';\r\n\r\nimport { IBulkOperationResult, ISignature } from '@shared/models';\r\nimport { FilesService } from '@shared/services';\r\n\r\nimport {\r\n  ILetter,\r\n  ILetterCreateForm,\r\n  ILetterTopic,\r\n  LETTER_TOPIC_TYPE,\r\n  TOPIC_BACKUPS,\r\n  ILettersSearch,\r\n  ILettersList,\r\n} from '../models';\r\n\r\nimport { ListService } from '@shared/services/list.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LettersService {\r\n  private files: File[] = [];\r\n  cashedTopics: ILetterTopic[];\r\n\r\n  lastLettersListPath$ = new BehaviorSubject('outbox');\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private filesService: FilesService,\r\n    private apiService: ApiService,\r\n    private listService: ListService,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.retrieveTopics();\r\n  }\r\n\r\n  clearFiles() {\r\n    this.files = [];\r\n    this.filesService.uploading$.next([]);\r\n  }\r\n\r\n  onFileDrop(fileList) {\r\n    const dropped = [];\r\n\r\n    for (const droppedFile of fileList) {\r\n      dropped.push(droppedFile);\r\n    }\r\n\r\n    if (dropped.length > 0) {\r\n      this.files = [...dropped];\r\n      this.filesService.uploading$.next(this.files);\r\n    }\r\n  }\r\n\r\n  mapLetterDate(letter: ILetter) {\r\n    const dateTime = letter.created;\r\n\r\n    const isToday = dayjs().isSame(dateTime, 'day');\r\n    const isYesterday = dayjs().subtract(1, 'date').isSame(dateTime, 'day');\r\n\r\n    const time = dayjs(dateTime).format('HH:mm');\r\n\r\n    if (isToday) {\r\n      return {\r\n        key: 'LETTERS.DATE.TODAY',\r\n        params: {\r\n          time,\r\n        },\r\n      };\r\n    } else if (isYesterday) {\r\n      return {\r\n        key: 'LETTERS.DATE.YESTERDAY',\r\n        params: {\r\n          time,\r\n        },\r\n      };\r\n    } else {\r\n      const format = dayjs().isSame(dateTime, 'year')\r\n        ? 'd MMMM HH:mm'\r\n        : 'd MMMM yyyy HH:mm';\r\n      return formatDate(dateTime, format, this.translateService.currentLang);\r\n    }\r\n  }\r\n\r\n  getById(id: string) {\r\n    const url = this.mapUrl(`/${id}`);\r\n    return this.apiService.get<ILetter>(url);\r\n  }\r\n\r\n  getLetterSignatures(id: string) {\r\n    const url = this.mapUrl(`/${id}/signatures`);\r\n    return this.apiService.get<ISignature[]>(url);\r\n  }\r\n\r\n  sign(id: string) {\r\n    return this.listService.sign('letters', id);\r\n  }\r\n\r\n  async getList(searchParams: ILettersSearch = {}): Promise<ILettersList> {\r\n    const url = this.mapUrl();\r\n\r\n    let params = new HttpParams();\r\n\r\n    for (const key in searchParams) {\r\n      if (Object.prototype.hasOwnProperty.call(searchParams, key)) {\r\n        let value = searchParams[key];\r\n\r\n        if (value) {\r\n          if (key == 'dateFrom' || key == 'dateTo') {\r\n            value = convertDateToApiFormat(value);\r\n          }\r\n\r\n          params = params.append(key, value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const extras = {\r\n      observe: 'response',\r\n    };\r\n\r\n    const response = await this.apiService.get<HttpResponse<ILetter[]>>(\r\n      url,\r\n      null,\r\n      params,\r\n      extras\r\n    );\r\n\r\n    return {\r\n      items: response.body,\r\n      totalCount: +response.headers.get('X-Total-Count'),\r\n    };\r\n  }\r\n\r\n  async retrieveTopics() {\r\n    const url = this.mapUrl(`/topics`);\r\n    let topics;\r\n\r\n    try {\r\n      topics = await this.apiService.get<ILetterTopic[]>(url);\r\n    } catch (error) {\r\n      topics = TOPIC_BACKUPS;\r\n    }\r\n\r\n    this.cashedTopics = topics;\r\n    return this.cashedTopics;\r\n  }\r\n\r\n  async getTopics(topicType: LETTER_TOPIC_TYPE) {\r\n    if (this.cashedTopics) {\r\n      return this.filterTopicsByType(topicType);\r\n    }\r\n\r\n    this.cashedTopics = await this.retrieveTopics();\r\n    return this.filterTopicsByType(topicType);\r\n  }\r\n\r\n  async getTopicValues() {\r\n    if (this.cashedTopics) {\r\n      return this.mapTopicValues();\r\n    }\r\n\r\n    this.cashedTopics = await this.retrieveTopics();\r\n    return this.mapTopicValues();\r\n  }\r\n\r\n  edit(body: ILetter) {\r\n    const url = this.mapUrl(`/${body.id}`);\r\n    return this.apiService.put<ILetter>(url, body);\r\n  }\r\n\r\n  create(body: ILetterCreateForm) {\r\n    const url = this.mapUrl();\r\n    return this.apiService.post<ILetter>(url, body);\r\n  }\r\n\r\n  sendToSign(itemIds: string | string[]) {\r\n    const isBulk = Array.isArray(itemIds);\r\n\r\n    const url = this.mapUrl(isBulk ? ':on-sign' : `/${itemIds}:on-sign`);\r\n    const body = isBulk\r\n      ? {\r\n          itemIds,\r\n        }\r\n      : null;\r\n\r\n    return this.apiService.patch<IBulkOperationResult>(url, body);\r\n  }\r\n\r\n  private filterTopicsByType(topicType: LETTER_TOPIC_TYPE) {\r\n    return this.cashedTopics.filter((topic) => topic.type === topicType);\r\n  }\r\n\r\n  private mapTopicValues() {\r\n    return this.cashedTopics.map((topic) => topic.displayName);\r\n  }\r\n\r\n  private mapUrl(path: string = '') {\r\n    return `companies/${this.companyService.currentId}/letters${path}`;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}