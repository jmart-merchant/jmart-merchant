(self["webpackChunkjysan"] = self["webpackChunkjysan"] || []).push([["main"],{

/***/ 5157:
/*!*******************************************!*\
  !*** ./src/app/accounts/account.model.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACCOUNT_TYPE": () => (/* binding */ ACCOUNT_TYPE),
/* harmony export */   "ACCOUNT_STATE": () => (/* binding */ ACCOUNT_STATE),
/* harmony export */   "ACCOUNT_BLOCK_TYPE": () => (/* binding */ ACCOUNT_BLOCK_TYPE),
/* harmony export */   "ACCOUNT_STATUS": () => (/* binding */ ACCOUNT_STATUS),
/* harmony export */   "GRANTS": () => (/* binding */ GRANTS),
/* harmony export */   "RegularAccount": () => (/* binding */ RegularAccount),
/* harmony export */   "Deposit": () => (/* binding */ Deposit),
/* harmony export */   "IUserGrant": () => (/* binding */ IUserGrant)
/* harmony export */ });
var ACCOUNT_TYPE;
(function (ACCOUNT_TYPE) {
    ACCOUNT_TYPE["ACCOUNT"] = "ACCOUNT";
    ACCOUNT_TYPE["DEPOSIT"] = "DEPOSIT";
    ACCOUNT_TYPE["CARD"] = "CARD";
    ACCOUNT_TYPE["ALL"] = "ALL";
})(ACCOUNT_TYPE || (ACCOUNT_TYPE = {}));
var ACCOUNT_STATE;
(function (ACCOUNT_STATE) {
    ACCOUNT_STATE["OPENED"] = "OPENED";
    ACCOUNT_STATE["CLOSED"] = "CLOSED";
})(ACCOUNT_STATE || (ACCOUNT_STATE = {}));
var ACCOUNT_BLOCK_TYPE;
(function (ACCOUNT_BLOCK_TYPE) {
    ACCOUNT_BLOCK_TYPE["LOCK"] = "LOCK";
    ACCOUNT_BLOCK_TYPE["NOLOCK"] = "NOLOCK";
    ACCOUNT_BLOCK_TYPE["LIMLOCK"] = "LIMLOCK";
    ACCOUNT_BLOCK_TYPE["PARTLOCK"] = "PARTLOCK";
})(ACCOUNT_BLOCK_TYPE || (ACCOUNT_BLOCK_TYPE = {}));
var ACCOUNT_STATUS;
(function (ACCOUNT_STATUS) {
    ACCOUNT_STATUS["OPENED"] = "OPENED";
    ACCOUNT_STATUS["CLOSED"] = "CLOSED";
    ACCOUNT_STATUS["MIGRATED"] = "MIGRATED";
})(ACCOUNT_STATUS || (ACCOUNT_STATUS = {}));
var GRANTS;
(function (GRANTS) {
    GRANTS["AVAILABLE"] = "AVAILABLE";
    GRANTS["UNAVAILABLE"] = "UNAVAILABLE";
})(GRANTS || (GRANTS = {}));
// TODO: Переделать на Account и заменить в платежах
class RegularAccount {
    constructor(account) {
        this.isFirstAtfInTheList = false;
        Object.assign(this, account);
    }
    get hasAtfIban() {
        if (!this.alterCode) {
            return false;
        }
        return (this.alterCode.length === 20 &&
            this.alterCode.substring(0, 2) === 'KZ' &&
            this.alterCode.substring(4, 7) === '826');
    }
    get maskedIban() {
        return this.maskIban(this.iban);
    }
    get maskedAlterCode() {
        return this.maskIban(this.alterCode);
    }
    get hasLockedState() {
        return this.blockType !== ACCOUNT_BLOCK_TYPE.NOLOCK;
    }
    get isMigrated() {
        return this.status === ACCOUNT_STATUS.MIGRATED;
    }
    get isLocked() {
        return this.blockType === ACCOUNT_BLOCK_TYPE.LOCK;
    }
    get isClosed() {
        return this.state === ACCOUNT_STATE.CLOSED;
    }
    maskIban(iban) {
        if (!iban) {
            return '';
        }
        return `${iban.substring(0, 4)} •••• ${iban.substring(iban.length - 4, iban.length)}`;
    }
}
class Deposit extends RegularAccount {
    constructor(account) {
        super(account);
        this.accountType = ACCOUNT_TYPE.DEPOSIT;
    }
}
class IUserGrant {
}


/***/ }),

/***/ 76759:
/*!*******************************************************!*\
  !*** ./src/app/accounts/services/accounts.service.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccountsService": () => (/* binding */ AccountsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 59095);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../account.model */ 5157);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _statement_statement_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @statement/statement.service */ 78232);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/models */ 63157);














let AccountsService = class AccountsService {
    constructor(company, api, datePipe, translateService, statementService) {
        this.company = company;
        this.api = api;
        this.datePipe = datePipe;
        this.translateService = translateService;
        this.statementService = statementService;
        this.store = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.SimpleStore([]);
        this.storeForTotal = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.SingleEntityStore(0);
        this.accountsList$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.BehaviorSubject([]);
        this.mergeDate$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subject();
        this.company.refresh$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.switchMap)(([user, userAuthority, isAuthorized]) => {
            if (user &&
                userAuthority &&
                userAuthority.companyId &&
                isAuthorized) {
                return this.getAccountsAsObservable(userAuthority.companyId);
                //from(this.getAccounts(userAuthority.companyId));
            }
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.of)(null);
        }))
            .subscribe((accountsList) => {
            if (accountsList) {
                this.store.setState(accountsList);
            }
            else {
                this.store.purge();
            }
        });
    }
    retrieveAccounts() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/accounts`;
            const accountsList = yield this.api.get(url);
            return accountsList.map((account) => {
                switch (account.accountType) {
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.DEPOSIT:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.Deposit(account);
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.ACCOUNT:
                    default:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.RegularAccount(account);
                }
            });
        });
    }
    getAccounts(companyId = this.company.currentId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            this.store.fetching = true;
            const url = `companies/${companyId}/accounts`;
            const accountsList = yield this.api.get(url);
            this.accountsList = accountsList.map((account) => {
                switch (account.accountType) {
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.DEPOSIT:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.Deposit(account);
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.ACCOUNT:
                    default:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.RegularAccount(account);
                }
            });
            this.store.fetching = false;
            this.store.fetched = true;
            this.store.setState(this.accountsList);
            this.accountsList$.next(this.accountsList);
            return this.accountsList;
        });
    }
    getAccountsList() {
        return this.accountsList$.asObservable();
    }
    getDepositName(deposit) {
        var _a, _b;
        return (((_b = (_a = deposit.depositType) === null || _a === void 0 ? void 0 : _a.descriptionTranslations) === null || _b === void 0 ? void 0 : _b.translations[this.translateService.currentLang]) || this.translateService.instant('DEPOSITS.DEFAULT_NAME'));
    }
    getAccountsAsObservable(companyId = this.company.currentId) {
        this.store.fetching = true;
        const url = `companies/${companyId}/accounts`;
        return this.api.getObservable(url).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.map)((retrievedList) => {
            this.accountsList = retrievedList.map((account) => {
                switch (account.accountType) {
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.DEPOSIT:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.Deposit(account);
                    case _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.ACCOUNT:
                    default:
                        return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.RegularAccount(account);
                }
            });
            this.store.fetching = false;
            this.store.fetched = true;
            this.store.setState(this.accountsList);
            this.accountsList$.next(this.accountsList);
            return this.accountsList;
        }));
    }
    getAccountByIban(companyId, iban) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            if (this.accountsList) {
                return this.findByIban(iban, this.accountsList);
            }
            else {
                const list = yield this.getAccounts(companyId);
                return this.findByIban(iban, list);
            }
        });
    }
    getDeposits(companyId = this.company.currentId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/deposits`;
            const depositsList = yield this.api.get(url);
            return depositsList.map((deposit) => {
                return new _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.Deposit(deposit);
            });
        });
    }
    fetchStatement(companyId, iban, filter) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/accounts/${iban}/statements`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpHeaders();
            const body = {
                account: iban,
                from: this.datePipe.transform(filter.periodFrom, 'yyyy-MM-dd'),
                to: this.datePipe.transform(filter.periodTo, 'yyyy-MM-dd'),
            };
            const statement = yield this.api.post(url, body, headers);
            return statement;
        });
    }
    getStatement(iban, filter, pageNumber = 1, pageSize = 50, exportType = null, companyId = this.company.currentId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            if (this.cashedStatement &&
                this.cashedFilter === filter &&
                this.cashedPageNumber === pageNumber &&
                this.cashedPageSize === pageSize &&
                !exportType) {
                return this.cashedStatement;
            }
            const url = `companies/${companyId}/accounts/${iban}/statements`;
            let isNextPage;
            if (exportType) {
                isNextPage = false;
            }
            else {
                isNextPage =
                    this.cashedFilter === filter && pageNumber > this.cashedPageNumber;
            }
            try {
                const accountStatement = yield this.statementService.getStatement(url, filter, this.cashedStatement, isNextPage, pageNumber, pageSize, false, exportType);
                if (exportType) {
                    return accountStatement;
                }
                this.cashedFilter = filter;
                this.cashedPageNumber = pageNumber;
                this.cashedPageSize = pageSize;
                this.cashedStatement = accountStatement;
                return this.cashedStatement;
            }
            catch (error) {
                throw error;
            }
        });
    }
    getQrPrint(companyId, companyiban, companykbe, companyknp) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/account/qr/print`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpHeaders();
            headers = headers.set('Content-Type', 'application/octet-stream');
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpParams();
            params = params.append('iban', companyiban);
            params = params.append('knp', companyknp);
            params = params.append('kbe', companykbe);
            const extras = {
                responseType: 'blob',
            };
            return this.api.get(url, headers, params, extras);
        });
    }
    getPdf(companyId, iban) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/accounts/${iban}/requisites`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpParams();
            const extras = {
                responseType: 'blob',
            };
            return this.api.get(url, headers, params, extras);
        });
    }
    getPdfWithMultipleIbans(companyId, ibans) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/accounts/ibans/requisites`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpParams();
            ibans.forEach((iban) => {
                params = params.append('iban', iban);
            });
            const extras = {
                responseType: 'blob',
            };
            return this.api.get(url, headers, params, extras);
        });
    }
    getMergeDate() {
        return this.mergeDate$.asObservable();
    }
    retrieveMergeDate() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `properties/merge-day`;
            const mergeDate = yield this.api.get(url);
            this.mergeDate$.next(mergeDate);
        });
    }
    findByIban(iban, list) {
        const found = list.find((account) => {
            return account.iban === iban;
        });
        return found;
    }
    retrieveTotalLimitations(companyId = this.company.currentId, accountId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            this.storeForTotal.fetching = true;
            const url = `companies/${companyId}/accounts/${accountId}/grants/blocked-users/count`;
            const total = yield this.api.get(url);
            this.storeForTotal.fetching = false;
            this.storeForTotal.fetched = true;
            this.storeForTotal.entity = total;
            return total;
        });
    }
    get storeForTotal$() {
        return this.storeForTotal.entity$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.filter)((n) => {
            return n !== null;
        }));
    }
    getAccountsGrants(companyId = this.company.currentId, accountId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/accounts/${accountId}/grants`;
            return (yield this.api.get(url)).map((user) => (Object.assign(Object.assign({}, user), { initials: this.retrieveInitials(user), role: this.mapRole(user), sign: this.mapSignText(user), color: this.mapInitialsColor(user) })));
        });
    }
    setAccountGrant(companyId = this.company.currentId, accountId, body) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/accounts/${accountId}/grants`;
            return yield this.api.put(url, body);
        });
    }
    mapRole(person) {
        switch (person.authority) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.PRIMARY_SIGNATURE:
                return this.mapAuthoritiesPrefix('HEAD');
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.SECONDARY_SIGNATURE:
                return this.mapAuthoritiesPrefix('MAIN_ACCOUNTANT');
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.NO_SIGNATURE:
            default:
                return this.mapAuthoritiesPrefix('ACCOUNTANT');
        }
    }
    mapAuthoritiesPrefix(key) {
        return this.mapTranslatePrefix('AUTHORITIES', key);
    }
    mapTranslatePrefix(domain, key) {
        return `SETTINGS.${domain}.${key}`;
    }
    mapSignText(person) {
        switch (person.authority) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.PRIMARY_SIGNATURE:
                return this.mapAuthoritiesPrefix('FIRST_SIGN');
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.SECONDARY_SIGNATURE:
                return this.mapAuthoritiesPrefix('SECOND_SIGN');
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.NO_SIGNATURE:
            default:
                return this.mapAuthoritiesPrefix('NO_SIGN');
        }
    }
    mapInitialsColor(person) {
        switch (person.authority) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.PRIMARY_SIGNATURE:
                return 'first-sign';
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.SECONDARY_SIGNATURE:
                return 'second-sign';
            case _shared_models__WEBPACK_IMPORTED_MODULE_5__.AUTHORITY_TYPE.NO_SIGNATURE:
            default:
                return 'no-sign';
        }
    }
    retrieveInitials(person) {
        return `${person.lastname[0]}${person.firstname[0]}`;
    }
};
AccountsService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_3__.CompanyService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_1__.ApiService },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_14__.DatePipe },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_15__.TranslateService },
    { type: _statement_statement_service__WEBPACK_IMPORTED_MODULE_4__.StatementService }
];
AccountsService = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_16__.Injectable)({
        providedIn: 'root',
    })
], AccountsService);



/***/ }),

/***/ 8419:
/*!***********************************************!*\
  !*** ./src/app/analytics/analytics.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyticsModule": () => (/* binding */ AnalyticsModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _services_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/manager */ 46155);




let AnalyticsModule = class AnalyticsModule {
};
AnalyticsModule = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        declarations: [],
        providers: [
            {
                provide: _services_manager__WEBPACK_IMPORTED_MODULE_0__.AnalyticsManagerAbstract,
                useClass: _services_manager__WEBPACK_IMPORTED_MODULE_0__.AnalyticsManager
            }
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,
        ]
    })
], AnalyticsModule);



/***/ }),

/***/ 67667:
/*!***********************************************************!*\
  !*** ./src/app/analytics/services/instances/amplitude.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AmplitudeAnalytics": () => (/* binding */ AmplitudeAnalytics)
/* harmony export */ });
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environments/environment */ 92340);
/* harmony import */ var amplitude_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! amplitude-js */ 65670);
/* harmony import */ var amplitude_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(amplitude_js__WEBPACK_IMPORTED_MODULE_1__);


class AmplitudeAnalytics {
    constructor() {
        this.instance = amplitude_js__WEBPACK_IMPORTED_MODULE_1___default().getInstance();
        const apiKey = window && window['env'] && window['env']['AmplitudeApiKey'] || _environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.amplitudeApiKey;
        this.instance.init(apiKey);
    }
    logEvent(eventName, params) {
        this.instance.logEvent(eventName, params);
    }
    setUserProperties(props) {
        const identify = new (amplitude_js__WEBPACK_IMPORTED_MODULE_1___default().Identify)();
        Object.entries(props).forEach((key, value) => {
            identify.set(key, value);
        });
        this.instance.indentify(identify);
    }
    setUserId(id) {
        this.instance.setUserId(id);
    }
}


/***/ }),

/***/ 84378:
/*!******************************************************!*\
  !*** ./src/app/analytics/services/instances/gtag.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GtagAnalytics": () => (/* binding */ GtagAnalytics)
/* harmony export */ });
class GtagAnalytics {
    constructor() {
        this.gtag = window && window['gtag'] || (() => { });
        this.gtag('config', window && window['env'] && window['env']['gaTrackingId']);
    }
    logEvent(eventName, params = {}) {
        this.gtag('event', eventName, params);
    }
    setUserProperties(props) {
        this.gtag('set', 'user_properties', props);
    }
    setUserId(user_id) {
        this.gtag('config', window && window['env'] && window['env']['gaTrackingId'], {
            user_id
        });
    }
}


/***/ }),

/***/ 12967:
/*!*******************************************************!*\
  !*** ./src/app/analytics/services/instances/index.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "analyticsInstances": () => (/* binding */ analyticsInstances)
/* harmony export */ });
/* harmony import */ var _amplitude__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amplitude */ 67667);
/* harmony import */ var _gtag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gtag */ 84378);


const analyticsInstances = {
    amplitude: new _amplitude__WEBPACK_IMPORTED_MODULE_0__.AmplitudeAnalytics(),
    gtag: new _gtag__WEBPACK_IMPORTED_MODULE_1__.GtagAnalytics(),
};


/***/ }),

/***/ 46155:
/*!*****************************************************!*\
  !*** ./src/app/analytics/services/manager/index.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyticsManager": () => (/* reexport safe */ _manager_service__WEBPACK_IMPORTED_MODULE_0__.AnalyticsManager),
/* harmony export */   "AnalyticsManagerAbstract": () => (/* reexport safe */ _manager_service_abstract__WEBPACK_IMPORTED_MODULE_1__.AnalyticsManagerAbstract)
/* harmony export */ });
/* harmony import */ var _manager_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./manager.service */ 20785);
/* harmony import */ var _manager_service_abstract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.service.abstract */ 13431);




/***/ }),

/***/ 13431:
/*!************************************************************************!*\
  !*** ./src/app/analytics/services/manager/manager.service.abstract.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyticsManagerAbstract": () => (/* binding */ AnalyticsManagerAbstract)
/* harmony export */ });
class AnalyticsManagerAbstract {
    constructor() {
        /**
         * field to store analytics instances, each instance must implelemnt common AnalyticInstance interface
         */
        this.instances = new Map();
    }
}
;


/***/ }),

/***/ 20785:
/*!***************************************************************!*\
  !*** ./src/app/analytics/services/manager/manager.service.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyticsManager": () => (/* binding */ AnalyticsManager)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../instances */ 12967);
/* harmony import */ var _manager_service_abstract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.service.abstract */ 13431);




let AnalyticsManager = class AnalyticsManager extends _manager_service_abstract__WEBPACK_IMPORTED_MODULE_1__.AnalyticsManagerAbstract {
    constructor() {
        super();
        this.instances = new Map(Object.entries(_instances__WEBPACK_IMPORTED_MODULE_0__.analyticsInstances));
    }
    logEvent(eventName, params, instanceKey) {
        if (!instanceKey) {
            this.instances.forEach((instance) => {
                instance.logEvent(eventName, params);
            });
        }
        else {
            const instance = this.getInstance(instanceKey);
            instance.logEvent(eventName, params);
        }
    }
    getInstance(key) {
        return this.instances.get(key);
    }
    setUserProperties(props) {
        this.instances.forEach(instance => instance.setUserProperties(props));
    }
    setUserId(id) {
        this.instances.forEach(instance => instance.setUserId(id));
    }
};
AnalyticsManager.ctorParameters = () => [];
AnalyticsManager = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)()
], AnalyticsManager);

;


/***/ }),

/***/ 19809:
/*!***********************************!*\
  !*** ./src/app/api/api.module.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiModule": () => (/* binding */ ApiModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.service */ 82524);
var ApiModule_1;





let ApiModule = ApiModule_1 = class ApiModule {
    static forRoot(config) {
        return {
            ngModule: ApiModule_1,
            providers: [_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService, { provide: 'config', useValue: config }],
        };
    }
};
ApiModule = ApiModule_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        declarations: [],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClientModule],
        exports: [_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClientModule],
    })
], ApiModule);



/***/ }),

/***/ 82524:
/*!************************************!*\
  !*** ./src/app/api/api.service.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HEADERS": () => (/* binding */ HEADERS),
/* harmony export */   "SMS_HEADERS": () => (/* binding */ SMS_HEADERS),
/* harmony export */   "ApiService": () => (/* binding */ ApiService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 66587);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ 32146);







var HEADERS;
(function (HEADERS) {
    HEADERS["AUTHORIZATION"] = "Authorization";
    HEADERS["SMS"] = "SMSAuthorization";
    HEADERS["PHONE"] = "PhoneAuthorization";
    HEADERS["EMAIL"] = "EmailAuthorization";
    HEADERS["DEVICE"] = "DeviceAuthorization";
    HEADERS["OTP"] = "OTPAuthorization";
    HEADERS["SKIP_OFFLINE_INTERCEPTOR"] = "X-Skip-Interceptor";
})(HEADERS || (HEADERS = {}));
var SMS_HEADERS;
(function (SMS_HEADERS) {
    SMS_HEADERS["REGISTER"] = "REGISTRATION_JB";
    SMS_HEADERS["RESTORE"] = "RECOVERY_ACCESS_JB";
    SMS_HEADERS["SIGNING_PAYMENT"] = "SIGNING_PAYMENT";
    SMS_HEADERS["AUTHORIZATION"] = "AUTHORIZATION_JB";
    SMS_HEADERS["SIGNING_PACKAGE"] = "SIGNING_PACKAGE";
    SMS_HEADERS["OPENING_ACCOUNT"] = "OPENING_ACCOUNT";
})(SMS_HEADERS || (SMS_HEADERS = {}));
let ApiService = class ApiService {
    constructor(config, http, router) {
        this.config = config;
        this.http = http;
        this.router = router;
        this.baseUrl = config.baseUrl;
    }
    // resolve(url: string, params?) {
    //   if (!params) {
    //     return url;
    //   }
    //   const resolved = Object.keys(params).reduce((acc, param) => {
    //     return acc.replace(`::${param}`, params[param]);
    //   }, url);
    //   return resolved;
    // }
    /**
     * Performs GET request via http client
     *
     * @param url request url. Empty by default.
     */
    get(urlPath = '', headers = null, params = null, extras = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                const getResult = yield this.http
                    .get(url, this.getOptions(headers, params, extras))
                    .toPromise();
                return getResult;
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    /**
     * Performs GET request via http client with body
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    getWithBody(urlPath = '', body = {}, headers = null, params = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .request('get', url, Object.assign({ body }, this.getOptions(headers, params)))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    getV2Observable(urlPath = '', headers = null, params = null, extras = null) {
        const url = `${this.baseUrl.replace('/v1', '')}/${urlPath}`;
        return this.http.get(url, this.getOptions(headers, params, extras)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.catchError)((response, caught) => {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.throwError)(this.mapError(response));
        }));
    }
    postV2Observable(urlPath = '', body = {}, headers = null, params = null, extras = null) {
        const url = `${this.baseUrl.replace('/v1', '')}/${urlPath}`;
        return this.http
            .post(url, body, this.getOptions(headers, params, extras))
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.catchError)((response, caught) => {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.throwError)(this.mapError(response));
        }));
    }
    getObservable(urlPath = '', headers = null, params = null, extras = null) {
        const url = `${this.baseUrl}/${urlPath}`;
        return this.http.get(url, this.getOptions(headers, params, extras)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.catchError)((response, caught) => {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.throwError)(this.mapError(response));
        }));
    }
    /**
     * Performs POST request via http client
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    post(urlPath = '', body = {}, headers = null, params = null, extras = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .post(url, body, this.getOptions(headers, params, extras, body instanceof FormData ? true : false))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response, extras);
            }
        });
    }
    postObservable(urlPath = '', body = {}, headers = null, params = null, extras = null) {
        const url = `${this.baseUrl}/${urlPath}`;
        return this.http
            .post(url, body, this.getOptions(headers, params, extras, body instanceof FormData ? true : false))
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.catchError)((response, caught) => {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.throwError)(this.mapError(response));
        }));
    }
    /**
     * Performs PATCH request via http client
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    patch(urlPath = '', body = {}, headers = null, params = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .patch(url, body, this.getOptions(headers, params))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    /**
     * Performs PUT request via http client
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    put(urlPath = '', body = {}, headers = null, params = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .put(url, body, this.getOptions(headers, params))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    /**
     * Performs PUT request via http client
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    deleteWithBody(urlPath = '', body = {}, headers = null, params = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .request('delete', url, Object.assign({ body }, this.getOptions(headers, params)))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    /**
     * Performs PUT request via http client
     *
     * @param url request url. Empty by default.
     * @param body request body
     */
    delete(urlPath = '', headers = null, params = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.baseUrl}/${urlPath}`;
            try {
                return yield this.http
                    .delete(url, this.getOptions(headers, params))
                    .toPromise();
            }
            catch (response) {
                throw this.mapError(response);
            }
        });
    }
    /**
     * Extracts data from Error response and return as IError object
     *
     * @param errorResponse HttpErrorResponse
     */
    mapError(errorResponse, extras = null) {
        var _a;
        if ((extras === null || extras === void 0 ? void 0 : extras.responseType) == 'blob') {
            return errorResponse;
        }
        else {
            const error = errorResponse.error;
            let code = _errors__WEBPACK_IMPORTED_MODULE_0__.ERRORS.UNKNOWN;
            code =
                _errors__WEBPACK_IMPORTED_MODULE_0__.ERRORS[(_a = error === null || error === void 0 ? void 0 : error.code) === null || _a === void 0 ? void 0 : _a.toUpperCase()] ||
                    (error === null || error === void 0 ? void 0 : error.code) ||
                    (error === null || error === void 0 ? void 0 : error.error) ||
                    null;
            if (code == _errors__WEBPACK_IMPORTED_MODULE_0__.ERRORS.INVALID_TOKEN) {
                this.router.navigateByUrl('auth');
            }
            const data = (error === null || error === void 0 ? void 0 : error.data) || null;
            const description = (error === null || error === void 0 ? void 0 : error.description) ||
                (error === null || error === void 0 ? void 0 : error.error_description) ||
                (error === null || error === void 0 ? void 0 : error.message) ||
                null;
            return {
                status: errorResponse.status,
                code,
                data,
                description,
            };
        }
    }
    /**
     * Updates http options for matching type
     *
     * @param headers http headers
     * @param params http params
     */
    getOptions(headers, params, extras = null, disableContentType = false) {
        let options = {};
        if (params) {
            options.params = params;
        }
        if (headers) {
            if (!headers.has('Content-Type') && !disableContentType) {
                headers = headers.append('Content-Type', 'application/json');
            }
            options.headers = headers;
        }
        else if (!disableContentType) {
            headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders();
            headers = headers.append('Content-Type', 'application/json');
            options.headers = headers;
        }
        if (extras) {
            for (const key in extras) {
                if (Object.prototype.hasOwnProperty.call(extras, key)) {
                    options[key] = extras[key];
                }
            }
        }
        return options;
    }
};
ApiService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject, args: ['config',] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.Router }
];
ApiService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], ApiService);



/***/ }),

/***/ 32146:
/*!*******************************!*\
  !*** ./src/app/api/errors.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ERRORS": () => (/* binding */ ERRORS),
/* harmony export */   "STATUSES": () => (/* binding */ STATUSES)
/* harmony export */ });
const ERRORS = {
    IDENTICAL_PASSWORDS: 'New password can not be same as previous',
    USED_PASSWORD: 'Can not set old passwords',
    ARGUMENT_MISSING: 'Body argument missing',
    HEADER_MISSING: 'Header argument missing',
    BAD_RESOURCE_ID: 'Bad resource id',
    RESOURCE_NOT_FOUND: 'No resource found',
    RESOURCE_BLOCKED: 'Too much attempts, please try later',
    RESOURCE_EXISTS: 'Such resource already exists',
    FORBIDDEN: 'Forbidden',
    BAD_REQUEST: 'Bad Request',
    DEVICE_NOT_AUTHORIZED: 'Device is not authorized',
    DEVICE_TOKEN_INVALID: 'Device token is invalid',
    INVALID_SIGNATURE: 'Invalid signature',
    SERVICE_UNAVAILABLE: 'Third part api failed to response',
    INTERNAL_SERVER_ERROR: 'Internal server error',
    INTEGRATION_ERROR: 'Integration server error',
    SERVICE_NOT_IMPLEMENTED: 'Service not implemented',
    DATA_INTEGRITY_VIOLATION: 'Data retrieven from two or more core systems does not match. Please contact support.',
    INVALID_GRANT: 'Bad credentials',
    AUTHORIZATION_ERROR: 'Bad credentials',
    PHONE_TOKEN_EXPIRED: 'Phone token is expired',
    TOKEN_EXPIRED: 'Token is expired',
    INVALID_PASSWORD: 'Invalid password',
    USER_BLOCKED: 'User is blocked',
    INVALID_CODE: 'Invalid code',
    LIMIT_EXEEDED: 'Limit exeeded',
    UNAUTHORIZED: 'Full authentication is required to access this resource',
    INVALID_DATA: "Can't fetch user by iin: recieved empty email from colvir",
    INVALID_PHONE_FORMAT: 'The string supplied did not seem to be a phone number',
    INVALID_TOKEN: 'Invalid access token',
    ACCESS_DENIED: 'Access is denied',
    RATE_CHANGED: 'rate_changed',
    OTP_NOT_FOUND: 'No resource found',
    UNKNOWN: 'Произошла непредвиденная ошибка. Пожалуйста, попробуйте еще раз',
};
const STATUSES = {
    ENTITY_TOO_LARGE: 413,
};


/***/ }),

/***/ 39354:
/*!******************************!*\
  !*** ./src/app/api/index.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiModule": () => (/* reexport safe */ _api_module__WEBPACK_IMPORTED_MODULE_0__.ApiModule),
/* harmony export */   "ApiService": () => (/* reexport safe */ _api_service__WEBPACK_IMPORTED_MODULE_1__.ApiService),
/* harmony export */   "HEADERS": () => (/* reexport safe */ _api_service__WEBPACK_IMPORTED_MODULE_1__.HEADERS),
/* harmony export */   "SMS_HEADERS": () => (/* reexport safe */ _api_service__WEBPACK_IMPORTED_MODULE_1__.SMS_HEADERS),
/* harmony export */   "ERRORS": () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_2__.ERRORS),
/* harmony export */   "STATUSES": () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_2__.STATUSES),
/* harmony export */   "STATUS": () => (/* reexport safe */ _status__WEBPACK_IMPORTED_MODULE_3__.STATUS)
/* harmony export */ });
/* harmony import */ var _api_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.module */ 19809);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.service */ 82524);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ 32146);
/* harmony import */ var _status__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./status */ 30247);






/***/ }),

/***/ 30247:
/*!*******************************!*\
  !*** ./src/app/api/status.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "STATUS": () => (/* binding */ STATUS)
/* harmony export */ });
var STATUS;
(function (STATUS) {
    STATUS["REJECTED"] = "REJECTED";
    STATUS["BANK_PROCESSING"] = "BANK_PROCESSING";
})(STATUS || (STATUS = {}));


/***/ }),

/***/ 90158:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppRoutingModule": () => (/* binding */ AppRoutingModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environments/environment */ 92340);
/* harmony import */ var _shared_guards_is_not_authenticated_guard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/guards/is-not-authenticated.guard */ 14085);
/* harmony import */ var _shared_guards_is_authenticated_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/guards/is-authenticated.guard */ 44017);
/* harmony import */ var _home_home_routes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./home/home-routes */ 12351);







const routes = [
    {
        path: 'jmart-cabinet',
        loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_jmart-cabinet_jmart-cabinet_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./jmart-cabinet/jmart-cabinet.module */ 35898)).then((m) => m.JmartCabinetModule),
    },
    {
        path: 'auth',
        canActivate: [_shared_guards_is_not_authenticated_guard__WEBPACK_IMPORTED_MODULE_1__.IsNotAuthenticatedGuard],
        loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_auth_auth_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./auth/auth.module */ 71674)).then((m) => m.AuthModule),
    },
    {
        canActivate: [_shared_guards_is_authenticated_guard__WEBPACK_IMPORTED_MODULE_2__.IsAuthenticatedGuard],
        path: _home_home_routes__WEBPACK_IMPORTED_MODULE_3__.homeRoutes.root,
        loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_filter_filter_module_ts"), __webpack_require__.e("src_app_home_home_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./home/home.module */ 3467)).then((m) => m.HomeModule),
    },
    {
        path: '**',
        redirectTo: _home_home_routes__WEBPACK_IMPORTED_MODULE_3__.homeRoutes.root,
    },
];
if (!_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.production) {
    routes.unshift({
        path: 'theme',
        loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_theme_theme_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./theme/theme.module */ 85056)).then((m) => m.ThemeModule),
    });
}
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule)({
        imports: [
            _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule.forRoot(routes, {
            //  enableTracing: !environment.production
            }),
        ],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule],
    })
], AppRoutingModule);



/***/ }),

/***/ 55041:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppComponent": () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _app_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.component.html?ngResource */ 33383);
/* harmony import */ var _app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.component.scss?ngResource */ 79259);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/animations */ 31631);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _shared_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/animations */ 73510);
/* harmony import */ var _shared_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services */ 17253);
/* harmony import */ var _heartbeat_heartbeat_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @heartbeat/heartbeat.service */ 24559);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _authorities_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @authorities/services */ 30285);
/* harmony import */ var _shared_services_lang_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/services/lang.service */ 52848);
/* harmony import */ var _company__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./company */ 98316);
/* harmony import */ var _analytics_services_manager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @analytics/services/manager */ 46155);
/* harmony import */ var _shared_token_token_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/token/token.service */ 47083);

















// import { FeatureFlagsService } from './feature-flags/feature-flags.service';
// import { CurrencyPaymentService } from '@payments/services';
// import { CompanyService } from '@company/company.service';
let AppComponent = class AppComponent {
    constructor(tokenService, apiService, heartbeatService, translateService, userService, authorityPermissionsService, langService, companyService, analytics) {
        this.tokenService = tokenService;
        this.apiService = apiService;
        this.heartbeatService = heartbeatService;
        this.translateService = translateService;
        this.userService = userService;
        this.authorityPermissionsService = authorityPermissionsService;
        this.langService = langService;
        this.companyService = companyService;
        this.analytics = analytics;
        this.title = 'Jusan';
        this.isReady = false;
        this.lottieOptions = {
            path: '/assets/lottie/primary.json',
        };
        this.eventHandler = new _angular_core__WEBPACK_IMPORTED_MODULE_11__.EventEmitter();
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_12__.Subscription();
        this.updateBaseUrlIfNeeded();
        this.langService.init();
        this.appInit();
        this.setUserId();
    }
    onEvent(event) {
        this.eventHandler.emit(event);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    updateBaseUrlIfNeeded() {
        const baseUrl = localStorage.getItem('baseUrl');
        if (baseUrl) {
            this.apiService.baseUrl = baseUrl;
        }
    }
    appInit() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, function* () {
            try {
                yield this.heartbeatService.beatRequest();
            }
            catch (error) {
                console.log(error);
                // this.router.navigate(['auth', 'login'], {
                //   queryParamsHandling: 'preserve',
                // });
            }
            finally {
                this.isReady = true;
            }
        });
    }
    prepareRoute(outlet) {
        return (outlet &&
            outlet.activatedRouteData &&
            outlet.activatedRouteData['animation']);
    }
    setUserId() {
        const authorizedPersons$ = this.companyService
            .getAuthorizedPersons()
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.filter)((arr) => (arr === null || arr === void 0 ? void 0 : arr.length) > 0));
        const currentUser$ = this.userService.getUser();
        const userIdSubscribtion = (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.combineLatest)([
            authorizedPersons$,
            currentUser$,
        ]).subscribe(([authorizedPersons, { firstname: userFirstname, lastname: userLastname },]) => {
            const { userColvirId } = authorizedPersons.find((person) => {
                return ((person === null || person === void 0 ? void 0 : person.firstname) === userFirstname &&
                    (person === null || person === void 0 ? void 0 : person.lastname) === userLastname);
            }) || { userColvirId: null };
            if (userColvirId) {
                this.analytics.setUserId(userColvirId);
                userIdSubscribtion.unsubscribe();
            }
        });
    }
};
AppComponent.ctorParameters = () => [
    { type: _shared_token_token_service__WEBPACK_IMPORTED_MODULE_10__.TokenService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_5__.ApiService },
    { type: _heartbeat_heartbeat_service__WEBPACK_IMPORTED_MODULE_4__.HeartbeatService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_16__.TranslateService },
    { type: _shared_services__WEBPACK_IMPORTED_MODULE_3__.UserService },
    { type: _authorities_services__WEBPACK_IMPORTED_MODULE_6__.AuthorityPermissionsService },
    { type: _shared_services_lang_service__WEBPACK_IMPORTED_MODULE_7__.LangService },
    { type: _company__WEBPACK_IMPORTED_MODULE_8__.CompanyService },
    { type: _analytics_services_manager__WEBPACK_IMPORTED_MODULE_9__.AnalyticsManagerAbstract }
];
AppComponent.propDecorators = {
    eventHandler: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Output }],
    onEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['document:keydown', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['document:keyup', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['document:keypress', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['click', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['mousemove', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['mouseup', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['mousedown', ['$event'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.HostListener, args: ['document:scroll', ['$event'],] }]
};
AppComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_13__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
        selector: 'j-root',
        template: _app_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewEncapsulation.None,
        animations: [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_17__.trigger)('routeAnimations', [
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_17__.transition)('* => routerFadeFromBottom', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_17__.useAnimation)(_shared_animations__WEBPACK_IMPORTED_MODULE_2__.moveFromBottomFade)),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_17__.transition)('* => void', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_17__.useAnimation)(_shared_animations__WEBPACK_IMPORTED_MODULE_2__.moveFromBottomFadeReverse)),
            ]),
        ],
        styles: [_app_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], AppComponent);



/***/ }),

/***/ 36747:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppModule": () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/locales/ru */ 17954);
/* harmony import */ var _angular_common_locales_kk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/locales/kk */ 46906);
/* harmony import */ var _api_api_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/api.module */ 19809);
/* harmony import */ var _core_core_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/core.module */ 40294);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environments/environment */ 92340);
/* harmony import */ var _heartbeat_heartbeat_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @heartbeat/heartbeat.module */ 48806);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/shared.module */ 44466);
/* harmony import */ var _shared_components_mobile_mobile_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/components/mobile/mobile.component */ 94361);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./app-routing.module */ 90158);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./app.component */ 55041);













(0,_angular_common__WEBPACK_IMPORTED_MODULE_10__.registerLocaleData)(_angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_0__["default"]);
(0,_angular_common__WEBPACK_IMPORTED_MODULE_10__.registerLocaleData)(_angular_common_locales_kk__WEBPACK_IMPORTED_MODULE_1__["default"]);
let AppModule = class AppModule {
};
AppModule = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_12__.NgModule)({
        declarations: [_app_component__WEBPACK_IMPORTED_MODULE_9__.AppComponent, _shared_components_mobile_mobile_component__WEBPACK_IMPORTED_MODULE_7__.MobileComponent],
        imports: [
            _core_core_module__WEBPACK_IMPORTED_MODULE_3__.CoreModule,
            _app_routing_module__WEBPACK_IMPORTED_MODULE_8__.AppRoutingModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__.SharedModule,
            _heartbeat_heartbeat_module__WEBPACK_IMPORTED_MODULE_5__.HeartbeatModule,
            _api_api_module__WEBPACK_IMPORTED_MODULE_2__.ApiModule.forRoot({
                baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_4__.environment.baseUrl,
            }),
        ],
        providers: [
            // tmp, need to find the way to share this value between lazy modules
            // cause each lazy module is a separate child of app injector
            // one of a possible ways is to add interceptor to handle requests to jmart and clone them with value from env
            {
                provide: 'JMART_CABINET_BASE_URL',
                useValue: _environments_environment__WEBPACK_IMPORTED_MODULE_4__.environment.jmartCabinetBaseUrl,
            },
        ],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_9__.AppComponent],
    })
], AppModule);



/***/ }),

/***/ 90377:
/*!************************************!*\
  !*** ./src/app/auth/auth.model.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PHONE_STATUS": () => (/* binding */ PHONE_STATUS),
/* harmony export */   "IIN_STATUS": () => (/* binding */ IIN_STATUS),
/* harmony export */   "IIN_AND_PHONE_STATUS": () => (/* binding */ IIN_AND_PHONE_STATUS),
/* harmony export */   "AUTH_TYPE": () => (/* binding */ AUTH_TYPE),
/* harmony export */   "DEVICE_STATUS": () => (/* binding */ DEVICE_STATUS),
/* harmony export */   "DEFAULT_COUNTRY": () => (/* binding */ DEFAULT_COUNTRY),
/* harmony export */   "DEFAULT_COUNTRY_CODE": () => (/* binding */ DEFAULT_COUNTRY_CODE)
/* harmony export */ });
var PHONE_STATUS;
(function (PHONE_STATUS) {
    PHONE_STATUS["CAN_RESTORE"] = "already_registered";
    PHONE_STATUS["CAN_REGISTER"] = "can_register";
    PHONE_STATUS["NOT_EXIST"] = "not_exist";
    PHONE_STATUS["NEED_EMAIL_CONFIRMATION"] = "need_email_confirmation";
})(PHONE_STATUS || (PHONE_STATUS = {}));
var IIN_STATUS;
(function (IIN_STATUS) {
    IIN_STATUS["ALREADY_REGISTERED"] = "ALREADY_REGISTERED";
    IIN_STATUS["CAN_REGISTER"] = "CAN_REGISTER";
    IIN_STATUS["INCORRECT_DATA"] = "INCORRECT_DATA";
    IIN_STATUS["INVALID_DATA"] = "INVALID_DATA";
    IIN_STATUS["DOES_NOT_EXIST"] = "DOES_NOT_EXIST";
    IIN_STATUS["BLOCKED"] = "BLOCKED";
})(IIN_STATUS || (IIN_STATUS = {}));
var IIN_AND_PHONE_STATUS;
(function (IIN_AND_PHONE_STATUS) {
    IIN_AND_PHONE_STATUS["DATA_MISMATCH"] = "DATA_MISMATCH";
    IIN_AND_PHONE_STATUS["ALREADY_REGISTERED"] = "ALREADY_REGISTERED";
    IIN_AND_PHONE_STATUS["CAN_REGISTER"] = "CAN_REGISTER";
    IIN_AND_PHONE_STATUS["DOES_NOT_EXIST"] = "DOES_NOT_EXIST";
    IIN_AND_PHONE_STATUS["INCORRECT_DATA"] = "INCORRECT_DATA";
    IIN_AND_PHONE_STATUS["INVALID_DATA"] = "INVALID_DATA";
    IIN_AND_PHONE_STATUS["BLOCKED"] = "BLOCKED";
})(IIN_AND_PHONE_STATUS || (IIN_AND_PHONE_STATUS = {}));
var AUTH_TYPE;
(function (AUTH_TYPE) {
    AUTH_TYPE["REGISTER"] = "register";
    AUTH_TYPE["RESTORE"] = "restore";
})(AUTH_TYPE || (AUTH_TYPE = {}));
var DEVICE_STATUS;
(function (DEVICE_STATUS) {
    DEVICE_STATUS["VERIFIED"] = "VERIFIED";
})(DEVICE_STATUS || (DEVICE_STATUS = {}));
var DEFAULT_COUNTRY;
(function (DEFAULT_COUNTRY) {
    DEFAULT_COUNTRY["KAZAKHSTAN"] = "Kazakhstan";
})(DEFAULT_COUNTRY || (DEFAULT_COUNTRY = {}));
var DEFAULT_COUNTRY_CODE;
(function (DEFAULT_COUNTRY_CODE) {
    DEFAULT_COUNTRY_CODE["KAZAKHSTAN"] = "KZ";
})(DEFAULT_COUNTRY_CODE || (DEFAULT_COUNTRY_CODE = {}));


/***/ }),

/***/ 50384:
/*!**************************************!*\
  !*** ./src/app/auth/auth.service.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HttpUrlEncodingCodec": () => (/* binding */ HttpUrlEncodingCodec),
/* harmony export */   "AuthService": () => (/* binding */ AuthService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _shared_token_token_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/token/token.service */ 47083);
/* harmony import */ var _shared_services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/services/user.service */ 98613);









class HttpUrlEncodingCodec {
    encodeKey(k) {
        return standardEncoding(k);
    }
    encodeValue(v) {
        return standardEncoding(v);
    }
    decodeKey(k) {
        return decodeURIComponent(k);
    }
    decodeValue(v) {
        return decodeURIComponent(v);
    }
}
function standardEncoding(v) {
    return encodeURIComponent(v);
}
let AuthService = class AuthService {
    constructor(api, userService, tokenService, router, modalService) {
        this.api = api;
        this.userService = userService;
        this.tokenService = tokenService;
        this.router = router;
        this.modalService = modalService;
        this.authEvents$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(false);
        if (this.tokenService.getUserToken()) {
            this.changeAuthState(true);
        }
        else {
            this.changeAuthState(false);
        }
    }
    // Auth
    authEvents() {
        return this.authEvents$.asObservable();
    }
    changeAuthState(value) {
        if (value !== this.currentAuthState) {
            this.currentAuthState = value;
            this.authEvents$.next(this.currentAuthState);
        }
    }
    setSmsToken(smsToken) {
        this.smsToken = smsToken;
    }
    get isAuthenticated() {
        return this.authEvents$.getValue() || false;
    }
    // Login
    login(phone, password) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `oauth/token`;
            const body = new FormData();
            body.append('username', phone);
            body.append('password', password);
            let headers = this.tokenService.getBasicHeaders();
            headers = this.tokenService.applyDeviceHeaders(headers, password);
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpParams().set('grant_type', 'password');
            const result = yield this.api.post(url, body, headers, params);
            this.tokenService.setUserToken(result.access_token);
            this.userService.setUser(result.user);
            this.changeAuthState(true);
            return result;
        });
    }
    // Logout
    logout() {
        this.changeAuthState(false);
        this.userService.setUser(null);
        this.tokenService.clearUserToken();
        this.router.navigateByUrl('auth/login');
        this.modalService.dismissAll();
    }
    // Server-side logout
    revokeSession() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `oauth/revoke`;
            const headers = this.tokenService.getBasicHeaders();
            yield this.api.post(url, null, headers);
        });
    }
    // Device
    requestDevice(phone, authType) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `auth/device/token`;
            const body = {
                phone,
            };
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS[authType], this.smsToken.signature);
            this.deviceToken = yield this.api.post(url, body, headers);
            return this.deviceToken;
        });
    }
    // Sms
    requestSms(phone) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `auth/phone/token`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders()
                .set('code', _api_index__WEBPACK_IMPORTED_MODULE_0__.SMS_HEADERS.AUTHORIZATION)
                .set('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
            const body = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpParams().set('phone', encodeURIComponent(phone));
            this.smsToken = yield this.api.post(url, body, headers);
            return this.smsToken;
        });
    }
    submitSms(smsCode) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.smsToken || !this.smsToken.signature) {
                Promise.reject({
                    code: _api_index__WEBPACK_IMPORTED_MODULE_0__.ERRORS.ARGUMENT_MISSING,
                    description: `Has no token saved`,
                });
            }
            this.smsToken.code = smsCode;
            const url = `auth/phone/token/${this.smsToken.id}`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.SMS, this.smsToken.signature);
            this.smsToken = yield this.api.put(url, this.smsToken, headers);
            return this.smsToken;
        });
    }
    // Email
    requestEmail(phone, iin) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.smsToken || !this.smsToken.signature) {
                return Promise.reject({
                    code: _api_index__WEBPACK_IMPORTED_MODULE_0__.ERRORS.ARGUMENT_MISSING,
                });
            }
            const url = `auth/email/token`;
            const body = {
                phone: phone,
                iin: iin,
            };
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders()
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.PHONE, this.smsToken.signature)
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.SMS, this.smsToken.signature);
            this.emailToken = yield this.api.post(url, body, headers);
            return this.emailToken;
        });
    }
    submitEmail(emailCode, phone, iin) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            this.emailToken.phone = phone;
            this.emailToken.iin = iin;
            this.emailToken.code = emailCode;
            const url = `auth/email/token/${this.emailToken.id}`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders()
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.PHONE, this.smsToken.signature)
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.EMAIL, this.emailToken.signature);
            this.emailToken = yield this.api.put(url, this.emailToken, headers);
            return this.emailToken;
        });
    }
    // Register
    register(phone, password, iin) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `users`;
            const body = {
                phone: phone,
                password: password,
                iin: iin,
            };
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders()
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.PHONE, this.smsToken.signature)
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.EMAIL, this.emailToken.signature);
            const registerResult = yield this.api.post(url, body, headers);
            return registerResult;
        });
    }
    // Restore
    restore(phone, password, iin) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `users/password`;
            const body = {
                phone: phone,
                password: password,
                iin: iin,
            };
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders()
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.PHONE, this.smsToken.signature)
                .set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.EMAIL, this.emailToken.signature);
            const restoreResult = yield this.api.put(url, body, headers);
            return restoreResult;
        });
    }
    // // Iin inline
    // async searchIin(iin: string): Promise<string> {
    //   return new Promise((resolve, reject) => {
    //     setTimeout(() => {
    //       resolve('ИП Курманов Манар');
    //     }, 1000);
    //   });
    // }
    // Check phone
    checkPhone(phone) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `auth/check`;
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpParams({ encoder: new HttpUrlEncodingCodec() });
            params = params.append('phone', encodeURI(phone));
            return this.api.get(url, null, params);
        });
    }
    // // Iin step
    // async checkIin(iin: string): Promise<ICheckIinStatus> {
    //   const url = `auth/check`;
    //   const params = new HttpParams().set('iin', iin);
    //   return this.api.get(url, null, params);
    // }
    // Iin step
    checkIinAndPhone(iin, phone) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `auth/check`;
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpParams();
            params = params.append('iin', iin);
            params = params.append('phone', phone);
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.PHONE, this.smsToken.signature);
            return this.api.get(url, headers, params);
        });
    }
};
AuthService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _shared_services_user_service__WEBPACK_IMPORTED_MODULE_2__.UserService },
    { type: _shared_token_token_service__WEBPACK_IMPORTED_MODULE_1__.TokenService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.Router },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbModal }
];
AuthService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)({
        providedIn: 'root',
    })
], AuthService);



/***/ }),

/***/ 99316:
/*!*********************************************************!*\
  !*** ./src/app/authorities/models/authorities.model.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 58328:
/*!*********************************************!*\
  !*** ./src/app/authorities/models/index.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LIMIT_MAX_AMOUNT": () => (/* reexport safe */ _permissions_model__WEBPACK_IMPORTED_MODULE_1__.LIMIT_MAX_AMOUNT),
/* harmony export */   "PERMISSION": () => (/* reexport safe */ _permissions_model__WEBPACK_IMPORTED_MODULE_1__.PERMISSION)
/* harmony export */ });
/* harmony import */ var _authorities_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authorities.model */ 99316);
/* harmony import */ var _permissions_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permissions.model */ 5269);




/***/ }),

/***/ 5269:
/*!*********************************************************!*\
  !*** ./src/app/authorities/models/permissions.model.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PERMISSION": () => (/* binding */ PERMISSION),
/* harmony export */   "LIMIT_MAX_AMOUNT": () => (/* binding */ LIMIT_MAX_AMOUNT)
/* harmony export */ });
var PERMISSION;
(function (PERMISSION) {
    PERMISSION["READ"] = "READ";
    PERMISSION["EDIT"] = "EDIT";
    PERMISSION["CREATE"] = "CREATE";
    PERMISSION["DELETE"] = "DELETE";
    PERMISSION["EXPORT"] = "EXPORT";
    PERMISSION["SIGN"] = "SIGN";
    PERMISSION["REVOKE"] = "REVOKE";
})(PERMISSION || (PERMISSION = {}));
const LIMIT_MAX_AMOUNT = 999999999999;


/***/ }),

/***/ 88352:
/*!*************************************************************!*\
  !*** ./src/app/authorities/services/authorities.service.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthoritiesService": () => (/* binding */ AuthoritiesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);






let AuthoritiesService = class AuthoritiesService {
    constructor(companyService, apiService) {
        this.companyService = companyService;
        this.apiService = apiService;
        this.otpDevices$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject([]);
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
        this.initCompanySubscription();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    getOtpDevices() {
        return this.otpDevices$.asObservable();
    }
    fetchOtpDevices() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const url = `companies/${this.companyService.currentId}/otp-devices`;
                this.otpDevices = yield this.apiService.get(url);
                this.otpDevices$.next(this.otpDevices);
            }
            catch (error) {
                this.otpDevices$.next(null);
            }
        });
    }
    fetchRestrictions() {
        const url = `companies/${this.companyService.currentId}/otp-devices`;
        return this.apiService.get(url);
    }
    initCompanySubscription() {
        this.subscription.add(this.companyService.refresh$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.filter)(([, , isAuthorized]) => isAuthorized))
            .subscribe(() => {
            this.fetchOtpDevices();
        }));
    }
};
AuthoritiesService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
AuthoritiesService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)({
        providedIn: 'root',
    })
], AuthoritiesService);



/***/ }),

/***/ 41558:
/*!******************************************************************!*\
  !*** ./src/app/authorities/services/authority-limits.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthorityLimitsService": () => (/* binding */ AuthorityLimitsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);






const LIMITS_MOCK = [
    {
        id: '06392710-7bf1-4eab-8cdc-75d1a3e967e8',
        paymentType: _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.FOREIGN,
        limit: {
            amount: 100.0,
            currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__.CURRENCY.KZT,
        },
    },
    {
        id: '06392710-7bf1-4eab-8cdc-75d1a3e967e8',
        paymentType: _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION,
        limit: {
            amount: 100.0,
            currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__.CURRENCY.KZT,
        },
    },
    {
        id: '06392710-7bf1-4eab-8cdc-75d1a3e967e8',
        paymentType: _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.IN_BETWEEN,
        limit: {
            amount: 100.0,
            currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__.CURRENCY.KZT,
        },
    },
];
let AuthorityLimitsService = class AuthorityLimitsService {
    constructor(companyService, apiService) {
        this.companyService = companyService;
        this.apiService = apiService;
    }
    getPaymentLimit(paymentType, authorityId = this.companyService.currentAuthority.id) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const limits = yield this.getLimits(authorityId);
            return limits.find((limit) => limit.paymentType === paymentType) || null;
        });
    }
    getLimits(authorityId) {
        const url = this.mapUrl(authorityId);
        return this.apiService.get(url);
    }
    createLimit(authorityId, limit) {
        const url = this.mapUrl(authorityId);
        return this.apiService.post(url, limit);
    }
    updateLimit(authorityId, limit) {
        const url = `${this.mapUrl(authorityId)}/${limit.id}`;
        return this.apiService.put(url, limit);
    }
    deleteLimit(authorityId, limit) {
        const url = `${this.mapUrl(authorityId)}/${limit.id}`;
        return this.apiService.delete(url);
    }
    mapUrl(authorityId) {
        return `companies/${this.companyService.currentId}/authorities/${authorityId}/limits`;
    }
};
AuthorityLimitsService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
AuthorityLimitsService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], AuthorityLimitsService);



/***/ }),

/***/ 56777:
/*!***********************************************************************!*\
  !*** ./src/app/authorities/services/authority-permissions.service.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthorityPermissionsService": () => (/* binding */ AuthorityPermissionsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _authorities_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @authorities/models */ 58328);






const PERMISSIONS_ALL = [
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.READ,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.EDIT,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.CREATE,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.DELETE,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.EXPORT,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.SIGN,
    _authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.REVOKE,
];
let AuthorityPermissionsService = class AuthorityPermissionsService {
    constructor(companyService, apiService) {
        this.companyService = companyService;
        this.apiService = apiService;
        this.companyService.refresh$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(([, , isAuthorized]) => isAuthorized))
            .subscribe(() => {
            this.updatePermissions();
        });
    }
    grantPermission(person, payment) {
        if (payment.permissionId) {
            return this.updatePermission(payment.permissionId, person.id, PERMISSIONS_ALL);
        }
        else {
            return this.createPermission(person, payment.type, PERMISSIONS_ALL);
        }
    }
    refusePermission(person, payment) {
        if (payment.permissionId) {
            return this.updatePermission(payment.permissionId, person.id, []);
        }
        else {
            return this.createPermission(person, payment.type, []);
        }
    }
    createPermission(person, paymentType, permissions) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = this.mapUrl(person.id);
            const body = {
                paymentType,
                iin: person.iin,
                bin: this.companyService.currentCompany.bin,
                permissions,
            };
            const result = yield this.apiService.post(url, body);
            if (!this.cashedPermissions) {
                yield this.getPermissions();
            }
            this.cashedPermissions.push(Object.assign(Object.assign({}, body), { id: result.id }));
            return result;
        });
    }
    updatePermission(permissionId, authorityId, permissions) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${this.mapUrl(authorityId)}/${permissionId}`;
            const result = yield this.apiService.patch(url, {
                permissions,
            });
            const permissionIndex = this.cashedPermissions.findIndex((permission) => permission.id === permissionId);
            if (this.cashedPermissions && permissionIndex > -1) {
                this.cashedPermissions[permissionIndex].permissions = permissions;
            }
            return result;
        });
    }
    getPermissions(authorityId) {
        var _a;
        if (authorityId === void 0) { authorityId = (_a = this.companyService.currentAuthority) === null || _a === void 0 ? void 0 : _a.id; }
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const url = this.mapUrl(authorityId);
                const permissions = yield this.apiService.get(url);
                return permissions || [];
            }
            catch (error) {
                return [];
            }
        });
    }
    updatePermissions() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            try {
                this.cashedPermissions = yield this.getPermissions();
            }
            catch (error) {
                console.log(error);
                this.cashedPermissions = [];
            }
        });
    }
    isRestricted(paymentType) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.cashedPermissions) {
                this.cashedPermissions = yield this.getPermissions();
            }
            const permissions = this.cashedPermissions;
            const paymentPermission = permissions.find((permission) => permission.paymentType === paymentType);
            return paymentPermission
                ? !(paymentPermission.permissions.includes(_authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.CREATE) ||
                    paymentPermission.permissions.includes(_authorities_models__WEBPACK_IMPORTED_MODULE_2__.PERMISSION.EDIT))
                : false;
        });
    }
    mapUrl(authorityId) {
        return `access-control/companies/${this.companyService.currentId}/authorities/${authorityId}/payment-permissions`;
    }
};
AuthorityPermissionsService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
AuthorityPermissionsService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], AuthorityPermissionsService);



/***/ }),

/***/ 30285:
/*!***********************************************!*\
  !*** ./src/app/authorities/services/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthoritiesService": () => (/* reexport safe */ _authorities_service__WEBPACK_IMPORTED_MODULE_0__.AuthoritiesService),
/* harmony export */   "AuthorityLimitsService": () => (/* reexport safe */ _authority_limits_service__WEBPACK_IMPORTED_MODULE_1__.AuthorityLimitsService),
/* harmony export */   "AuthorityPermissionsService": () => (/* reexport safe */ _authority_permissions_service__WEBPACK_IMPORTED_MODULE_2__.AuthorityPermissionsService)
/* harmony export */ });
/* harmony import */ var _authorities_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authorities.service */ 88352);
/* harmony import */ var _authority_limits_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./authority-limits.service */ 41558);
/* harmony import */ var _authority_permissions_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authority-permissions.service */ 56777);





/***/ }),

/***/ 43120:
/*!******************************************!*\
  !*** ./src/app/company/company.model.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COMPANY_ID_KEY": () => (/* binding */ COMPANY_ID_KEY),
/* harmony export */   "COMPANY_TYPE": () => (/* binding */ COMPANY_TYPE),
/* harmony export */   "Company": () => (/* binding */ Company),
/* harmony export */   "OTP_STATUS": () => (/* binding */ OTP_STATUS)
/* harmony export */ });
const COMPANY_ID_KEY = 'companyId';
var COMPANY_TYPE;
(function (COMPANY_TYPE) {
    COMPANY_TYPE["ENTREPRENEUR"] = "ENTREPRENEUR";
    COMPANY_TYPE["CORPORATE"] = "CORPORATE";
})(COMPANY_TYPE || (COMPANY_TYPE = {}));
class Company {
}
var OTP_STATUS;
(function (OTP_STATUS) {
    OTP_STATUS["ASSIGNED"] = "ASSIGNED";
    OTP_STATUS["UNASSIGNED"] = "UNASSIGNED";
    OTP_STATUS["NOT_ENOUGH_DATA"] = "NOT_ENOUGH_DATA";
    OTP_STATUS["BLOCKED"] = "BLOCKED";
})(OTP_STATUS || (OTP_STATUS = {}));


/***/ }),

/***/ 26164:
/*!********************************************!*\
  !*** ./src/app/company/company.service.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompanyService": () => (/* binding */ CompanyService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var _shared_models_user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/models/user */ 90193);
/* harmony import */ var _shared_services_user_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/services/user.service */ 98613);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var _company_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./company.model */ 43120);
/* harmony import */ var _shared_token_token_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/token/token.service */ 47083);











const FROM_ATF_QUERY_PARAM = 'fromAtf';
let CompanyService = class CompanyService {
    constructor(userService, api, authService, tokenService) {
        this.userService = userService;
        this.api = api;
        this.authService = authService;
        this.tokenService = tokenService;
        this.currentAuthoritySubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject(undefined);
        this.currentAuthority$ = this.currentAuthoritySubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.distinctUntilChanged)());
        this.authorizedPersons$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject([]);
        this.userService
            .getUser()
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)((u) => !!u))
            .subscribe((user) => this.initializeAuthority());
        this.refresh$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.combineLatest)([
            this.userService.getUser().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.distinctUntilChanged)()),
            this.currentAuthoritySubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.distinctUntilChanged)()),
            this.authService.authEvents$,
        ]);
        this.refresh$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.filter)(([user, company, isAuthorized]) => isAuthorized))
            .subscribe(() => {
            this.fetchAuthorizedPersons();
        });
        // combineLatest([this.userService.getUser(), this.currentCompanySubjet$])
        //   .pipe(
        //     filter(([u, c]) => !!(u && u.userAuthorities && c && c.id)),
        //     map(
        //       ([u, c]) =>
        //         u.userAuthorities.find((authority) => authority.companyId === c.id)
        //           .authority
        //     )
        //   )
        //   .subscribe(this.authorityLevelSubject$);
    }
    get currentAuthority() {
        return this.currentAuthoritySubject$.getValue();
    }
    set currentAuthority(authority) {
        if (authority) {
            localStorage.setItem(_shared_services_user_service__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_ID, authority.id);
            localStorage.setItem(_company_model__WEBPACK_IMPORTED_MODULE_5__.COMPANY_ID_KEY, authority.companyId);
            this.currentAuthoritySubject$.next(authority);
        }
    }
    get currentCompany$() {
        return this.currentAuthority$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.map)((a) => a && a.company));
    }
    get currentCompany() {
        return this.currentAuthority && this.currentAuthority.company;
    }
    get authorityLevel$() {
        return this.currentAuthority$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.map)((a) => a && a.authority));
    }
    get authorityLevel() {
        return this.currentAuthority && this.currentAuthority.authority;
    }
    get currentId() {
        return ((this.currentCompany && this.currentCompany.id) ||
            localStorage.getItem(_company_model__WEBPACK_IMPORTED_MODULE_5__.COMPANY_ID_KEY));
    }
    isFromAtf(queryParams = null) {
        return (queryParams &&
            queryParams[FROM_ATF_QUERY_PARAM] &&
            JSON.parse(queryParams[FROM_ATF_QUERY_PARAM]) === true);
    }
    hasOnlyPrimaryAuthorities(persons = this.authorizedPersons) {
        return persons.every((person) => person.authority === _shared_models_user__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_TYPE.PRIMARY_SIGNATURE);
    }
    isNoSignAuthority(authority) {
        var _a;
        if (authority === void 0) { authority = (_a = this.currentAuthority) === null || _a === void 0 ? void 0 : _a.authority; }
        return authority === _shared_models_user__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_TYPE.NO_SIGNATURE;
    }
    isPrimaryAuthority(authority) {
        var _a;
        if (authority === void 0) { authority = (_a = this.currentAuthority) === null || _a === void 0 ? void 0 : _a.authority; }
        return authority === _shared_models_user__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_TYPE.PRIMARY_SIGNATURE;
    }
    isSecondaryAuthority(authority) {
        var _a;
        if (authority === void 0) { authority = (_a = this.currentAuthority) === null || _a === void 0 ? void 0 : _a.authority; }
        return authority === _shared_models_user__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_TYPE.SECONDARY_SIGNATURE;
    }
    fetchAuthorizedPersons() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.authService.isAuthenticated) {
                return;
            }
            try {
                const url = `companies/${this.currentId}/authorized-persons`;
                this.authorizedPersons = yield this.api.get(url);
                if (this.authorizedPersons$.thrownError) {
                    this.authorizedPersons$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject(this.authorizedPersons);
                }
                else {
                    this.authorizedPersons$.next(this.authorizedPersons);
                }
            }
            catch (error) {
                this.authorizedPersons$.error(error);
            }
        });
    }
    getAuthorizedPersons() {
        return this.authorizedPersons$.asObservable();
    }
    isSignable(status = null, signatureScheme = this.currentAuthority.company
        .signatureScheme, authority = this.currentAuthority.authority, signaturesCount = 0) {
        if (!signatureScheme) {
            signatureScheme = this.currentAuthority.company.signatureScheme;
        }
        if (status &&
            !(status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.CREATED ||
                status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.DRAFT ||
                status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.LETTER_STATUS.DRAFT ||
                status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.LETTER_STATUS.ON_SIGN)) {
            return false;
        }
        if (this.isNoSignAuthority(authority)) {
            return false;
        }
        if (this.isSingleSignScheme(signatureScheme) &&
            this.isPrimaryAuthority(authority)) {
            return true;
        }
        if (this.isMultipleSignScheme(signatureScheme) &&
            this.isPrimaryAuthority(authority)) {
            return signaturesCount > 0;
        }
        if (this.isMultipleSignScheme(signatureScheme) &&
            this.isSecondaryAuthority(authority)) {
            return signaturesCount === 0;
        }
        return false;
    }
    isSendableForSign(paymentStatus, signatureScheme, authority = this.currentAuthority.authority) {
        if (!signatureScheme) {
            signatureScheme = this.currentAuthority.company.signatureScheme;
        }
        if (!(paymentStatus === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.CREATED ||
            paymentStatus === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.DRAFT)) {
            return false;
        }
        if (this.isNoSignAuthority(authority)) {
            return true;
        }
        if (this.isMultipleSignScheme(signatureScheme) &&
            this.isPrimaryAuthority(authority)) {
            return true;
        }
        return false;
    }
    isSignableByOthers(paymentStatus, signatureScheme, authority = this.currentAuthority.authority, signaturesCount = 0) {
        return (paymentStatus === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.CREATED &&
            this.isSignable(paymentStatus, signatureScheme, authority, signaturesCount) === false);
    }
    isSingleSignScheme(signatureScheme = this.currentCompany.signatureScheme) {
        return signatureScheme === _shared_models__WEBPACK_IMPORTED_MODULE_2__.SIGNATURE_SCHEME.SINGLE_SIGN;
    }
    isMultipleSignScheme(signatureScheme = this.currentCompany.signatureScheme) {
        return signatureScheme === _shared_models__WEBPACK_IMPORTED_MODULE_2__.SIGNATURE_SCHEME.MULTIPLE_SIGN;
    }
    retrieveShortName(person) {
        const firstName = person.firstname ? `${person.firstname[0]}.` : '';
        const middlename = person.middlename ? `${person.middlename[0]}.` : '';
        return `${person.lastname} ${firstName}${middlename}`;
    }
    generateSignersList(status = null, signatureScheme, signatures) {
        var _a;
        const signers = [];
        (_a = this.authorizedPersons) === null || _a === void 0 ? void 0 : _a.forEach((person) => {
            const canSign = this.isSignable(status, signatureScheme, person.authority, signatures === null || signatures === void 0 ? void 0 : signatures.length);
            const signed = !!(signatures === null || signatures === void 0 ? void 0 : signatures.find((signature) => {
                return signature.userId !== null && signature.userId === person.userId;
            }));
            const name = this.retrieveShortName(person);
            if (signed) {
                signers.push({
                    name,
                    label: 'SHARED.SIGNED',
                    classList: 'text-success',
                });
            }
            else if (canSign) {
                signers.push({
                    name,
                    label: 'SHARED.FOR_SIGN',
                    classList: 'text-muted',
                });
            }
        });
        return signers;
    }
    initializeAuthority() {
        const authorityId = localStorage.getItem(_shared_services_user_service__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_ID);
        let foundAuthority;
        if (authorityId) {
            foundAuthority = this.userService.user.userAuthorities.find((authority) => authority.id === authorityId);
        }
        this.currentAuthority =
            foundAuthority || this.userService.user.userAuthorities[0];
    }
    getCompany(companyId) {
        const url = `/companies/${companyId}`;
        return this.api.get(url);
    }
};
CompanyService.ctorParameters = () => [
    { type: _shared_services_user_service__WEBPACK_IMPORTED_MODULE_1__.UserService },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_3__.ApiService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_4__.AuthService },
    { type: _shared_token_token_service__WEBPACK_IMPORTED_MODULE_6__.TokenService }
];
CompanyService = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_13__.Injectable)({
        providedIn: 'root',
    })
], CompanyService);



/***/ }),

/***/ 98316:
/*!**********************************!*\
  !*** ./src/app/company/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COMPANY_ID_KEY": () => (/* reexport safe */ _company_model__WEBPACK_IMPORTED_MODULE_0__.COMPANY_ID_KEY),
/* harmony export */   "COMPANY_TYPE": () => (/* reexport safe */ _company_model__WEBPACK_IMPORTED_MODULE_0__.COMPANY_TYPE),
/* harmony export */   "Company": () => (/* reexport safe */ _company_model__WEBPACK_IMPORTED_MODULE_0__.Company),
/* harmony export */   "OTP_STATUS": () => (/* reexport safe */ _company_model__WEBPACK_IMPORTED_MODULE_0__.OTP_STATUS),
/* harmony export */   "CompanyService": () => (/* reexport safe */ _company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService),
/* harmony export */   "RecipientsService": () => (/* reexport safe */ _recipients_service__WEBPACK_IMPORTED_MODULE_2__.RecipientsService)
/* harmony export */ });
/* harmony import */ var _company_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company.model */ 43120);
/* harmony import */ var _company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company.service */ 26164);
/* harmony import */ var _recipients_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recipients.service */ 45736);





/***/ }),

/***/ 45736:
/*!***********************************************!*\
  !*** ./src/app/company/recipients.service.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RecipientsService": () => (/* binding */ RecipientsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _utils_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils/pick */ 2694);
/* harmony import */ var _company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./company.service */ 26164);










const endpoints = {
    recipients: 'companies/::companyId/recipients',
    recipient: 'companies/::companyId/recipients/::recipientId',
    recipientsAccounts: 'companies/::companyId/recipients/::recipientId/accounts',
    prevNotifications: 'companies/::companyId/recipients/::iinOrBin/emails',
};
let RecipientsService = class RecipientsService {
    constructor(company, notifer, api, translateService) {
        this.company = company;
        this.notifer = notifer;
        this.api = api;
        this.translateService = translateService;
        this.store = new _utils_index__WEBPACK_IMPORTED_MODULE_1__.EntitiesStore([]);
        this.foreignStore = new _utils_index__WEBPACK_IMPORTED_MODULE_1__.EntitiesStore([]);
        this.reqInProgress = {
            foreign: undefined,
            local: undefined,
        };
        this.company.refresh$.subscribe((v) => {
            this.store.fetched && this.store.purge();
            this.getRecipients('', true);
            this.getForeignRecipients('', true);
        });
    }
    createRecipient(body) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipients, {
                companyId: this.company.currentId,
            });
            return this.api.post(url, body);
        });
    }
    updateRecipient(body) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipient, {
                companyId: this.company.currentId,
                recipientId: body.id,
            });
            return this.api.put(url, body);
        });
    }
    deleteRecipient(recipientId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            let url;
            if (Array.isArray(recipientId)) {
                url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipients, {
                    companyId: this.company.currentId,
                });
                url += `?id=${recipientId.join(',')}`;
            }
            else {
                url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipient, {
                    companyId: this.company.currentId,
                    recipientId,
                });
            }
            return this.api.delete(url);
        });
    }
    checkCounterParty(bin) {
        const url = `counterparty-reports`;
        const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__.HttpHeaders();
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__.HttpParams().set('bin', bin);
        return this.api.get(url, headers, params);
    }
    createRecipientAccount(body, params) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipientsAccounts, params);
            return this.api.post(url, body);
        });
    }
    getRecipients(query = '', force) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            let req;
            if (!query && this.reqInProgress.local) {
                return yield this.reqInProgress.local;
            }
            else if (!query) {
                this.reqInProgress.local = req = this.searchInStore(this.store, query, force).finally(() => {
                    if (req === this.reqInProgress.local) {
                        this.reqInProgress.local = null;
                    }
                });
                return yield this.reqInProgress.local;
            }
            return yield this.searchInStore(this.store, query, force);
        });
    }
    getForeignRecipients(query = '', force) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            return yield this.searchInStore(this.foreignStore, query, force, _shared_models__WEBPACK_IMPORTED_MODULE_0__.PAYMENT_CATEGORY.FOREIGN);
        });
    }
    checkAndInjectRecipientOrAccount(recipient, rawAccount) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const processForCompany = recipient.companyId;
            let existingRecipient;
            let newAccount;
            let newRecipient;
            try {
                const account = Object.assign({}, (0,_utils_pick__WEBPACK_IMPORTED_MODULE_3__.pick)(rawAccount, ['iban', 'bic']));
                if ((existingRecipient = this.isRecipientExist(recipient))) {
                    if (this.isRecipientAccountExist(account.iban, existingRecipient.id)) {
                        return null;
                    }
                    newAccount = yield this.createRecipientAccount(account, {
                        companyId: existingRecipient.companyId,
                        recipientId: existingRecipient.id,
                    });
                }
                else {
                    newRecipient = yield this.createRecipient(recipient);
                    newAccount = yield this.createRecipientAccount(account, {
                        companyId: newRecipient.companyId,
                        recipientId: newRecipient.id,
                    });
                }
                if (processForCompany === this.company.currentId) {
                    if (newRecipient) {
                        newRecipient.accounts = [newAccount];
                        this.store.upsertItem(newRecipient);
                    }
                    else if (newAccount) {
                        this.store.upsertItem(Object.assign(Object.assign({}, existingRecipient), { accounts: existingRecipient.accounts.concat(newAccount) }));
                    }
                }
            }
            catch (e) {
                this.notifer.notify('error', JSON.stringify(e));
                throw e;
            }
        });
    }
    createOrUpdateRecipientPipeline(recipient) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            let newAccounts;
            let result;
            const processForCompany = this.company.currentCompany.id;
            try {
                if (recipient.id) {
                    result = yield this.updateRecipient(recipient);
                }
                else {
                    const rawAccounts = recipient.accounts;
                    delete recipient.accounts;
                    result = yield this.createRecipient(recipient);
                    newAccounts = yield Promise.all(rawAccounts.map((rawAccount) => this.createRecipientAccount(rawAccount, {
                        companyId: result.companyId,
                        recipientId: result.id,
                    })));
                }
                if (processForCompany === this.company.currentId) {
                    if (result && newAccounts) {
                        result.accounts = newAccounts;
                        this.store.upsertItem(result, true);
                    }
                    else if (result) {
                        this.store.upsertItem(result);
                    }
                }
            }
            catch (e) {
                this.notifer.notify('error', JSON.stringify(e));
                throw e;
            }
        });
    }
    getPrevNotifications(iinOrBin) {
        return this.api.get((0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.prevNotifications, {
            companyId: this.company.currentCompany.id,
            iinOrBin,
        }));
    }
    isRecipientExist(recipient) {
        const keys = [
            'iinOrBin',
            'kbe',
            'name',
            'companyId',
        ];
        return this.store.items.find((item) => keys.every((k) => item[k] == recipient[k]));
    }
    isRecipientAccountExist(accountIban, recipientId) {
        let r;
        if (recipientId && (r = this.store.entities[recipientId])) {
            return r.accounts && r.accounts.find((a) => a.iban === accountIban);
        }
        let account;
        this.store.items.find((item) => {
            account = item.accounts.find((a) => a.iban === accountIban);
            if (account) {
                return true;
            }
        });
        return account;
    }
    filterRecipients(recipients, query) {
        if (!query) {
            return recipients;
        }
        return recipients === null || recipients === void 0 ? void 0 : recipients.filter((recipient) => {
            return this.filterRecipient(recipient, query);
        });
    }
    filterRecipient(recipient, query) {
        if (!query) {
            return true;
        }
        return (this.containsQuery(recipient.iinOrBin, query) ||
            this.containsQuery(recipient.name, query) ||
            this.searchByCountry(recipient, query) ||
            this.getAccountByQuery(recipient.accounts, query).length);
    }
    fetchRecipients(companyId, paymentCategory = _shared_models__WEBPACK_IMPORTED_MODULE_0__.PAYMENT_CATEGORY.DOMESTIC) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.resolveURL)(endpoints.recipients, {
                companyId,
            });
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__.HttpParams().set('paymentCategory', paymentCategory);
            try {
                const retrievedRecipients = yield this.api.get(url, null, params);
                return this.filterEmptyRecipients(retrievedRecipients);
            }
            catch (error) {
                throw error;
            }
        });
    }
    searchInStore(store = this.store, query, force, category) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            const companyId = this.company.currentId;
            let source;
            if (store.fetched && !force) {
                source = store.items;
            }
            else {
                try {
                    store.fetching = true;
                    source = yield this.fetchRecipients(companyId, category);
                    // prevent override if req resolved after company change
                    if (this.company.currentId === companyId) {
                        store.items = source;
                        store.fetching = false;
                        store.fetched = true;
                    }
                    return source;
                }
                catch (error) {
                    throw error;
                }
            }
            if (query) {
                return this.filterRecipients(source, query);
            }
            else {
                return source;
            }
        });
    }
    searchByCountry(recipient, query) {
        var _a;
        let fieldToSearch;
        switch (this.translateService.currentLang) {
            case 'ru':
            default:
                fieldToSearch = 'nameRu';
                break;
            case 'kk':
                fieldToSearch = 'nameKk';
                break;
            case 'en':
                fieldToSearch = 'nameEn';
                break;
        }
        return (this.containsQuery(recipient[fieldToSearch], query) ||
            ((_a = recipient.countryCode) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(query)));
    }
    filterEmptyRecipients(recipients) {
        return recipients === null || recipients === void 0 ? void 0 : recipients.filter((recipient) => {
            var _a;
            return ((_a = recipient.accounts) === null || _a === void 0 ? void 0 : _a.length) > 0;
        });
    }
    getAccountByQuery(accounts, query) {
        if (!accounts) {
            return [];
        }
        return accounts.filter((account) => {
            return (this.containsQuery(account.iban, query) ||
                this.containsQuery(account.bic, query) ||
                this.containsQuery(account.bankName, query));
        });
    }
    containsQuery(input, query) {
        if (!query) {
            return true;
        }
        const search = query.toLowerCase();
        return input === null || input === void 0 ? void 0 : input.toLowerCase().includes(search);
    }
};
RecipientsService.ctorParameters = () => [
    { type: _company_service__WEBPACK_IMPORTED_MODULE_4__.CompanyService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_7__.NotifierService },
    { type: _api_index__WEBPACK_IMPORTED_MODULE_2__.ApiService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__.TranslateService }
];
RecipientsService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Injectable)({
        providedIn: 'root',
    })
], RecipientsService);



/***/ }),

/***/ 97186:
/*!*************************************************!*\
  !*** ./src/app/config/circleProgress.config.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CIRCLE_PROGRESS_CONFIG": () => (/* binding */ CIRCLE_PROGRESS_CONFIG)
/* harmony export */ });
const CIRCLE_PROGRESS_CONFIG = {
    radius: 18,
    innerStrokeWidth: 2,
    outerStrokeWidth: 2,
    showTitle: false,
    showUnits: false,
    showSubtitle: false,
    showInnerStroke: true,
    showZeroOuterStroke: true,
    startFromZero: false,
    space: -2,
    outerStrokeColor: '#1586BB',
    innerStrokeColor: '#C4C4C4',
    animationDuration: 300,
    backgroundPadding: 0
};


/***/ }),

/***/ 55433:
/*!********************************************!*\
  !*** ./src/app/config/heartbeat.config.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HEARTBEAT_CONFIG": () => (/* binding */ HEARTBEAT_CONFIG)
/* harmony export */ });
const HEARTBEAT_CONFIG = {
    countdown: 60000,
    notificationIndex: 4,
    expirationIndex: 5, // heartbeat expire period
};


/***/ }),

/***/ 87947:
/*!*****************************************!*\
  !*** ./src/app/config/ngxMaskConfig.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ngxMaskConfig": () => (/* binding */ ngxMaskConfig)
/* harmony export */ });
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-mask */ 7038);

const ngxMaskConfig = Object.assign({}, ngx_mask__WEBPACK_IMPORTED_MODULE_0__.initialConfig, {
    // suffix: string,
    // prefix: string,
    thousandSeparator: ' ',
    decimalMarker: ',',
    // clearIfNotMatch: boolean,
    showTemplate: false,
    // showMaskTyped: boolean,
    // placeHolderCharacter: string,
    // shownMaskExpression: string,
    // dropSpecialCharacters: false,
    // specialCharacters: string[],
    // hiddenInput: boolean | undefined,
    // validation: boolean,
    // separatorLimit: string,
    // allowNegativeNumbers: boolean,
    patterns: Object.assign(Object.assign({}, ngx_mask__WEBPACK_IMPORTED_MODULE_0__.initialConfig.patterns), { c: {
            pattern: /^[a-zA-Z0-9!@#\$%\^\&*\)\(+=.,_-]/,
        }, S: {
            pattern: new RegExp('[A-Z]'),
        }, s: {
            pattern: new RegExp('[a-zA-Z]'),
        }, A: {
            pattern: new RegExp('[A-Z0-9]'),
        }, a: {
            pattern: new RegExp('[a-zA-Z0-9]'),
        }, r: {
            pattern: new RegExp('[А-Я]'),
        }, R: {
            pattern: new RegExp('[А-Я0-9]'),
        }, f: {
            pattern: /^[a-zA-Z0-9\/\-?:().,\'+\ ]/,
        }, F: {
            pattern: /^[а-яА-Яa-zA-Z0-9\/\-?:().,\'+\ ]/,
        }, I: {
            pattern: new RegExp('[a-hj-npr-zA-HJ-NPR-Z0-9]'),
        } }),
});


/***/ }),

/***/ 6442:
/*!*************************************!*\
  !*** ./src/app/config/translate.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HttpLoaderFactory": () => (/* binding */ HttpLoaderFactory)
/* harmony export */ });
/* harmony import */ var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngx-translate/http-loader */ 32202);

function HttpLoaderFactory(http) {
    return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_0__.TranslateHttpLoader(http, './assets/i18n/', '.json');
}


/***/ }),

/***/ 1657:
/*!******************************************!*\
  !*** ./src/app/core/components/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomDatepickerI18n": () => (/* reexport safe */ _ngb_datepicker_i18n_ngb_datepicker_i18n_component__WEBPACK_IMPORTED_MODULE_0__.CustomDatepickerI18n),
/* harmony export */   "NgbdDatepickerI18n": () => (/* reexport safe */ _ngb_datepicker_i18n_ngb_datepicker_i18n_component__WEBPACK_IMPORTED_MODULE_0__.NgbdDatepickerI18n)
/* harmony export */ });
/* harmony import */ var _ngb_datepicker_i18n_ngb_datepicker_i18n_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ngb-datepicker-i18n/ngb-datepicker-i18n.component */ 68873);



/***/ }),

/***/ 68873:
/*!**************************************************************************************!*\
  !*** ./src/app/core/components/ngb-datepicker-i18n/ngb-datepicker-i18n.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomDatepickerI18n": () => (/* binding */ CustomDatepickerI18n),
/* harmony export */   "NgbdDatepickerI18n": () => (/* binding */ NgbdDatepickerI18n)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _ngb_datepicker_i18n_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ngb-datepicker-i18n.component.html?ngResource */ 39715);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ 33935);





const I18N_VALUES = {
    ru: {
        weekdays: [
            'понедельник',
            'вторник',
            'среда',
            'четверг',
            'пятница',
            'суббота',
            'воскресенье',
        ],
        weekdaysShort: ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'],
        months: [
            'янв.',
            'фев.',
            'мар.',
            'апр.',
            'май',
            'июнь',
            'июль',
            'авг.',
            'сент.',
            'окт.',
            'нояб.',
            'дек.',
        ],
        monthsLong: [
            'Январь',
            'Февраль',
            'Март',
            'Апрель',
            'Май',
            'Июнь',
            'Июль',
            'Август',
            'Сентябрь',
            'Октябрь',
            'Ноябрь',
            'Декабрь',
        ],
        week: 'нед.',
    },
    kk: {
        weekdays: [
            'дүйсенбі',
            'сейсенбі',
            'сәрсенбі',
            'бейсенбі',
            'жұма',
            'сенбі',
            'жексенбі',
        ],
        weekdaysShort: ['дс', 'сс', 'ср', 'бс', 'жм', 'сб', 'жс'],
        months: [
            'қаң.',
            'ақп.',
            'нау.',
            'сәу.',
            'мам.',
            'мау.',
            'шіл.',
            'там.',
            'қыр.',
            'қаз.',
            'қар.',
            'жел.',
        ],
        monthsLong: [
            'Қаңтар',
            'Ақпан',
            'Наурыз',
            'Сәуір',
            'Мамыр',
            'Маусым',
            'Шілде',
            'Тамыз',
            'Қыркүйек',
            'Қазан',
            'Қараша',
            'Желтоқсан',
        ],
        week: 'апт.',
    },
    en: {
        weekdays: [
            'monday',
            'tuesday',
            'wednesday',
            'thursday',
            'friday',
            'saturday',
            'sunday',
        ],
        weekdaysShort: ['mo', 'tu', 'we', 'th', 'fr', 'sa', 'su'],
        months: [
            'jan.',
            'feb.',
            'mar.',
            'apr.',
            'may.',
            'jun',
            'jul.',
            'aug.',
            'sep.',
            'oct.',
            'nov.',
            'dec.',
        ],
        monthsLong: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
        ],
        week: 'апт.',
    },
    // other languages you would support
};
// Define custom service providing the months and weekdays translations
let CustomDatepickerI18n = class CustomDatepickerI18n extends _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__.NgbDatepickerI18n {
    constructor(translateService) {
        super();
        this.translateService = translateService;
    }
    getWeekdayShortName(weekday) {
        return I18N_VALUES[this.translateService.currentLang].weekdaysShort[weekday - 1];
    }
    getWeekdayLabel(weekday) {
        return I18N_VALUES[this.translateService.currentLang].weekdays[weekday - 1];
    }
    getWeekLabel() {
        return I18N_VALUES[this.translateService.currentLang].week;
    }
    getMonthShortName(month) {
        return I18N_VALUES[this.translateService.currentLang].months[month - 1];
    }
    getMonthFullName(month) {
        return I18N_VALUES[this.translateService.currentLang].monthsLong[month - 1];
    }
    getDayAriaLabel(date) {
        return `${date.day}-${date.month}-${date.year}`;
    }
};
CustomDatepickerI18n.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__.TranslateService }
];
CustomDatepickerI18n = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)()
], CustomDatepickerI18n);

let NgbdDatepickerI18n = class NgbdDatepickerI18n {
};
NgbdDatepickerI18n = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'ngbd-datepicker-i18n',
        template: _ngb_datepicker_i18n_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [{ provide: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__.NgbDatepickerI18n, useClass: CustomDatepickerI18n }], // define custom NgbDatepickerI18n provider
    })
], NgbdDatepickerI18n);



/***/ }),

/***/ 40294:
/*!*************************************!*\
  !*** ./src/app/core/core.module.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "playerFactory": () => (/* binding */ playerFactory),
/* harmony export */   "CoreModule": () => (/* binding */ CoreModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser/animations */ 73598);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var ng_circle_progress__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ng-circle-progress */ 68072);
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-clipboard */ 21131);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-lottie */ 23875);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var lottie_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lottie-web */ 89023);
/* harmony import */ var lottie_web__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lottie_web__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_circleProgress_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/circleProgress.config */ 97186);
/* harmony import */ var _config_ngxMaskConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config/ngxMaskConfig */ 87947);
/* harmony import */ var _config_translate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/translate */ 6442);
/* harmony import */ var _http_interceptors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../http-interceptors */ 71122);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components */ 1657);




















// Note we need a separate function as it's required
// by the AOT compiler.
function playerFactory() {
    return (lottie_web__WEBPACK_IMPORTED_MODULE_1___default());
}
let CoreModule = class CoreModule {
};
CoreModule = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.NgModule)({
        declarations: [],
        imports: [
            // Angular
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__.BrowserAnimationsModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__.BrowserModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_11__.RouterModule,
            // 3rd-party
            angular_notifier__WEBPACK_IMPORTED_MODULE_12__.NotifierModule.withConfig({
                behaviour: {
                    autoHide: 2500,
                },
            }),
            ngx_clipboard__WEBPACK_IMPORTED_MODULE_13__.ClipboardModule,
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__.TranslateModule.forRoot({
                defaultLanguage: 'ru',
                loader: {
                    provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__.TranslateLoader,
                    useFactory: _config_translate__WEBPACK_IMPORTED_MODULE_4__.HttpLoaderFactory,
                    deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_15__.HttpClient],
                },
            }),
            ngx_mask__WEBPACK_IMPORTED_MODULE_16__.NgxMaskModule.forRoot(_config_ngxMaskConfig__WEBPACK_IMPORTED_MODULE_3__.ngxMaskConfig),
            ngx_lottie__WEBPACK_IMPORTED_MODULE_0__.LottieModule.forRoot({ player: playerFactory }),
            ng_circle_progress__WEBPACK_IMPORTED_MODULE_17__.NgCircleProgressModule.forRoot(_config_circleProgress_config__WEBPACK_IMPORTED_MODULE_2__.CIRCLE_PROGRESS_CONFIG),
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__.NgbModule,
        ],
        exports: [angular_notifier__WEBPACK_IMPORTED_MODULE_12__.NotifierModule],
        providers: [
            _http_interceptors__WEBPACK_IMPORTED_MODULE_5__.httpInterceptorProviders,
            _angular_common__WEBPACK_IMPORTED_MODULE_19__.DatePipe,
            { provide: _angular_core__WEBPACK_IMPORTED_MODULE_8__.LOCALE_ID, useValue: 'ru-RU' },
            { provide: _angular_core__WEBPACK_IMPORTED_MODULE_8__.LOCALE_ID, useValue: 'kk-KZ' },
            { provide: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__.NgbDatepickerI18n, useClass: _components__WEBPACK_IMPORTED_MODULE_6__.CustomDatepickerI18n },
            { provide: Window, useValue: window },
        ],
    })
], CoreModule);



/***/ }),

/***/ 41064:
/*!******************************************************!*\
  !*** ./src/app/feature-flags/feature-flags.model.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FEATURE_FLAG": () => (/* binding */ FEATURE_FLAG)
/* harmony export */ });
var FEATURE_FLAG;
(function (FEATURE_FLAG) {
    FEATURE_FLAG["OPEN_ACCOUNT"] = "open_account";
    FEATURE_FLAG["FOREIGN_PAYMENT"] = "foreign_payment";
    FEATURE_FLAG["RUB_BUDGET_PAYMENT"] = "rub_budget_payment";
    FEATURE_FLAG["CONVERSION"] = "conversion";
    FEATURE_FLAG["P2P"] = "p2p";
    FEATURE_FLAG["BRANCH_MAP"] = "branch_map";
    FEATURE_FLAG["RATE_APP"] = "rate_app";
    FEATURE_FLAG["FX_CONTRACTS"] = "fx_contracts";
    FEATURE_FLAG["COMMISSION"] = "commission";
    FEATURE_FLAG["LETTER"] = "letter";
    FEATURE_FLAG["ACCOUNT_QR"] = "account_qr";
    FEATURE_FLAG["CERTIFICATE"] = "certificate";
    FEATURE_FLAG["TARIFF_PACKAGES"] = "tariff_packages";
    FEATURE_FLAG["POS"] = "pos";
    FEATURE_FLAG["PAYMENT_TEMPLATE"] = "payment_template";
    FEATURE_FLAG["ADDITIONAL_OPTIONS_PACKAGES"] = "additional_options_packages";
    FEATURE_FLAG["LOAN_APPLICATION"] = "loan_application";
    FEATURE_FLAG["JPAY_CHECK_JMART_CONNECTION"] = "jpay_check_jmart_connection";
    FEATURE_FLAG["FOREIGN_CONTRACT"] = "foreign_contract";
    FEATURE_FLAG["EXTRA_PACKAGES"] = "extra_packages";
    FEATURE_FLAG["PAYMENT_PERMISSIONS"] = "payment_permissions";
    FEATURE_FLAG["MICROCREDIT"] = "microcredit";
    FEATURE_FLAG["JUSAN_MARKET"] = "jusan_market";
    FEATURE_FLAG["PUSH_NOTIFICATIONS"] = "push_notifications";
    FEATURE_FLAG["LOANS_VIEW"] = "loans_view";
    FEATURE_FLAG["JUSAN_MARKET_MERCHANT_CABINET"] = "jusan_market_merchant_cabinet";
    FEATURE_FLAG["REGISTRATION_FACETEC"] = "registration_facetec";
    FEATURE_FLAG["CARD_TRANSFERS"] = "card_transfers";
    FEATURE_FLAG["OPEN_ADDITIONAL_ACCOUNT"] = "open_additional_account";
    FEATURE_FLAG["JPAY_STATEMENTS"] = "jpay_statements";
    FEATURE_FLAG["CURRENCY_RATES"] = "currency_rates";
    FEATURE_FLAG["JPAY_CONNECTION"] = "jpay_connection";
    FEATURE_FLAG["OPEN_ACCOUNT_V3"] = "open_account_v3";
    FEATURE_FLAG["DEPOSIT_REWARDS"] = "deposit_rewards";
    FEATURE_FLAG["JMART_CONNECTION"] = "jmart_connection";
    FEATURE_FLAG["DEPOSIT_OPERATIONS"] = "deposit_operations";
    FEATURE_FLAG["PACKAGES_CHANGE_ACCOUNT"] = "packages_change_account";
    FEATURE_FLAG["PACKAGES_MAIN_SCREEN"] = "packages_main_screen";
})(FEATURE_FLAG || (FEATURE_FLAG = {}));


/***/ }),

/***/ 54821:
/*!*******************************************************!*\
  !*** ./src/app/feature-flags/feature-flags.module.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureFlagsModule": () => (/* binding */ FeatureFlagsModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 36362);



let FeatureFlagsModule = class FeatureFlagsModule {
};
FeatureFlagsModule = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule],
        declarations: [],
    })
], FeatureFlagsModule);



/***/ }),

/***/ 20794:
/*!********************************************************!*\
  !*** ./src/app/feature-flags/feature-flags.service.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FeatureFlagsService": () => (/* binding */ FeatureFlagsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 86942);








let FeatureFlagsService = class FeatureFlagsService {
    constructor(apiService, router, companyService) {
        this.apiService = apiService;
        this.router = router;
        this.companyService = companyService;
        this.isPending = false;
        this.featureFlags$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject([]);
        this.loadFeatureFlags();
        this.companyService.refresh$.subscribe((companyRefresh) => {
            const [user, company, isAuthorized] = companyRefresh;
            if (isAuthorized) {
                this.loadFeatureFlags();
            }
        });
    }
    getFeatureFlags() {
        return this.featureFlags$
            .asObservable()
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)((flags) => flags.length > 0));
    }
    checkFeatureRoute(key) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (this.isDisabled(key)) {
                this.router.navigateByUrl('/');
            }
        });
    }
    loadFeatureFlags() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (this.isPending) {
                return;
            }
            this.isPending = true;
            const url = `feature-flags`;
            try {
                this.featureFlags = yield this.apiService.get(url, new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders({ [_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.SKIP_OFFLINE_INTERCEPTOR]: 'true' }));
            }
            catch (error) {
                this.featureFlags = [];
            }
            finally {
                this.isPending = false;
            }
            this.featureFlags$.next(this.featureFlags);
            // this.featureFlags$.complete();
            return this.featureFlags;
        });
    }
    isDisabled(key) {
        var _a, _b;
        return (((_b = (_a = this.featureFlags) === null || _a === void 0 ? void 0 : _a.find((featureFlag) => featureFlag.key === key)) === null || _b === void 0 ? void 0 : _b.active) === false || false);
    }
    isDisabledStream(key) {
        return this.getFeatureFlags().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(() => this.isDisabled(key)));
    }
    isDisabledPromise(key) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.featureFlags) {
                yield this.loadFeatureFlags();
            }
            return this.isDisabled(key);
        });
    }
};
FeatureFlagsService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__.Router },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService }
];
FeatureFlagsService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)({
        providedIn: 'root',
    })
], FeatureFlagsService);



/***/ }),

/***/ 15057:
/*!****************************************!*\
  !*** ./src/app/feature-flags/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FEATURE_FLAG": () => (/* reexport safe */ _feature_flags_model__WEBPACK_IMPORTED_MODULE_0__.FEATURE_FLAG),
/* harmony export */   "FeatureFlagsService": () => (/* reexport safe */ _feature_flags_service__WEBPACK_IMPORTED_MODULE_1__.FeatureFlagsService)
/* harmony export */ });
/* harmony import */ var _feature_flags_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature-flags.model */ 41064);
/* harmony import */ var _feature_flags_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature-flags.service */ 20794);




/***/ }),

/***/ 41359:
/*!****************************************!*\
  !*** ./src/app/filter/filter.model.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OPERATION_CODE": () => (/* binding */ OPERATION_CODE),
/* harmony export */   "FILTER_PERIOD_TYPE": () => (/* binding */ FILTER_PERIOD_TYPE),
/* harmony export */   "FILTER_PAYMENT_STATUS": () => (/* binding */ FILTER_PAYMENT_STATUS),
/* harmony export */   "FILTER_SORT": () => (/* binding */ FILTER_SORT),
/* harmony export */   "FILTER_COMISSION": () => (/* binding */ FILTER_COMISSION),
/* harmony export */   "FILTER_MODE": () => (/* binding */ FILTER_MODE),
/* harmony export */   "FILTER_COMISSION_LIST": () => (/* binding */ FILTER_COMISSION_LIST),
/* harmony export */   "FILTER_SORT_LIST": () => (/* binding */ FILTER_SORT_LIST),
/* harmony export */   "PERIOD_FORMAT": () => (/* binding */ PERIOD_FORMAT),
/* harmony export */   "PERIOD_FORMAT_INPUT": () => (/* binding */ PERIOD_FORMAT_INPUT)
/* harmony export */ });
var OPERATION_CODE;
(function (OPERATION_CODE) {
    OPERATION_CODE["ALL"] = "all";
    OPERATION_CODE["INCOME"] = "CREDIT";
    OPERATION_CODE["OUTCOME"] = "DEBIT";
})(OPERATION_CODE || (OPERATION_CODE = {}));
var FILTER_PERIOD_TYPE;
(function (FILTER_PERIOD_TYPE) {
    FILTER_PERIOD_TYPE["NONE"] = "none";
    FILTER_PERIOD_TYPE["TODAY"] = "today";
    FILTER_PERIOD_TYPE["YESTERDAY"] = "yesterday";
    FILTER_PERIOD_TYPE["CURRENT_WEEK"] = "currentWeek";
    FILTER_PERIOD_TYPE["CURRENT_MONTH"] = "currentMonth";
    FILTER_PERIOD_TYPE["CURRENT_QUARTER"] = "currentQuarter";
    FILTER_PERIOD_TYPE["PREVIOUS_QUARTER"] = "previousQuarter";
    FILTER_PERIOD_TYPE["CUSTOM"] = "custom";
})(FILTER_PERIOD_TYPE || (FILTER_PERIOD_TYPE = {}));
var FILTER_PAYMENT_STATUS;
(function (FILTER_PAYMENT_STATUS) {
    FILTER_PAYMENT_STATUS["ALL"] = "all";
    FILTER_PAYMENT_STATUS["FOR_SIGN"] = "forSign";
    FILTER_PAYMENT_STATUS["FOR_SIGN_OTHERS"] = "forSignOthers";
    FILTER_PAYMENT_STATUS["SUCCESS"] = "success";
    FILTER_PAYMENT_STATUS["FAILED"] = "failed";
    FILTER_PAYMENT_STATUS["IN_PROGRESS"] = "inProgress";
    FILTER_PAYMENT_STATUS["DRAFT"] = "draft";
})(FILTER_PAYMENT_STATUS || (FILTER_PAYMENT_STATUS = {}));
var FILTER_SORT;
(function (FILTER_SORT) {
    FILTER_SORT["DEFAULT"] = "none";
    FILTER_SORT["AMOUNT_ASC"] = "amount";
    FILTER_SORT["AMOUNT_DESC"] = "-amount";
})(FILTER_SORT || (FILTER_SORT = {}));
var FILTER_COMISSION;
(function (FILTER_COMISSION) {
    FILTER_COMISSION["WITH_COMISSION"] = "with_comission";
    FILTER_COMISSION["WITHOUT_COMISSION"] = "without_comission";
    FILTER_COMISSION["ONLY_COMISSION"] = "only_comission";
})(FILTER_COMISSION || (FILTER_COMISSION = {}));
var FILTER_MODE;
(function (FILTER_MODE) {
    FILTER_MODE["ACCOUNTS"] = "ACCOUNTS";
    FILTER_MODE["DEPOSITS"] = "DEPOSITS";
    FILTER_MODE["HISTORY"] = "HISTORY";
    FILTER_MODE["CARDS"] = "CARDS";
})(FILTER_MODE || (FILTER_MODE = {}));
const FILTER_COMISSION_LIST = [
    {
        label: 'FILTER.COMMISSION_OPTIONS.WITH_COMISSION',
        value: FILTER_COMISSION.WITH_COMISSION,
    },
    {
        label: 'FILTER.COMMISSION_OPTIONS.WITHOUT_COMISSION',
        value: FILTER_COMISSION.WITHOUT_COMISSION,
    },
    // {
    //   label: 'FILTER.COMMISSION_OPTIONS.ONLY_COMISSION',
    //   value: FILTER_COMISSION.ONLY_COMISSION,
    // },
];
const FILTER_SORT_LIST = [
    {
        label: 'FILTER.SORT_OPTIONS.DEFAULT',
        value: FILTER_SORT.DEFAULT,
    },
    {
        label: 'FILTER.SORT_OPTIONS.AMOUNT_DESC',
        value: FILTER_SORT.AMOUNT_DESC,
    },
    {
        label: 'FILTER.SORT_OPTIONS.AMOUNT_ASC',
        value: FILTER_SORT.AMOUNT_ASC,
    },
];
const PERIOD_FORMAT = 'D.MM.YY';
const PERIOD_FORMAT_INPUT = 'DD.MM.YYYY';


/***/ }),

/***/ 91013:
/*!**************************************************!*\
  !*** ./src/app/heartbeat/heartbeat.component.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeartbeatComponent": () => (/* binding */ HeartbeatComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _heartbeat_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./heartbeat.component.html?ngResource */ 59031);
/* harmony import */ var _heartbeat_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./heartbeat.component.scss?ngResource */ 90637);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var _heartbeat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./heartbeat.service */ 24559);







let HeartbeatComponent = class HeartbeatComponent {
    /**
     * Component constructor
     */
    constructor(heartbeatService, notifierService) {
        this.heartbeatService = heartbeatService;
        this.notifierService = notifierService;
        /**
         * Orientation changing counter
         */
        this.orientationChangedCount = 0;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
    }
    /**
     * Component Initialization
     */
    ngOnInit() {
        this.heartbeatService.initSubscribe();
        const eventSubscription = this.event.subscribe((event) => {
            this.orientationChangedCount = 0;
            this.heartbeatService.eventTrigger();
        });
        this.subscription.add(eventSubscription);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    /**
     * Easter egg: shows notification if user changes orientation too many times
     */
    onOrientationChange(event) {
        this.orientationChangedCount++;
        if (this.orientationChangedCount > 10) {
            this.notifierService.notify('error', 'У банкинга закружилась голова, просим вас успокоиться.');
            this.orientationChangedCount = 0;
        }
    }
};
HeartbeatComponent.ctorParameters = () => [
    { type: _heartbeat_service__WEBPACK_IMPORTED_MODULE_2__.HeartbeatService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_4__.NotifierService }
];
HeartbeatComponent.propDecorators = {
    event: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    onOrientationChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.HostListener, args: ['window:orientationchange', ['$event'],] }]
};
HeartbeatComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-heartbeat',
        template: _heartbeat_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_heartbeat_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], HeartbeatComponent);



/***/ }),

/***/ 48806:
/*!***********************************************!*\
  !*** ./src/app/heartbeat/heartbeat.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeartbeatModule": () => (/* binding */ HeartbeatModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _heartbeat_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./heartbeat.component */ 91013);




let HeartbeatModule = class HeartbeatModule {
};
HeartbeatModule = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        declarations: [_heartbeat_component__WEBPACK_IMPORTED_MODULE_0__.HeartbeatComponent],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule],
        exports: [_heartbeat_component__WEBPACK_IMPORTED_MODULE_0__.HeartbeatComponent],
    })
], HeartbeatModule);



/***/ }),

/***/ 24559:
/*!************************************************!*\
  !*** ./src/app/heartbeat/heartbeat.service.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeartbeatService": () => (/* binding */ HeartbeatService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/heartbeat.config */ 55433);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);








let HeartbeatService = class HeartbeatService {
    constructor(api, authService, notifierService, translateService) {
        this.api = api;
        this.authService = authService;
        this.notifierService = notifierService;
        this.translateService = translateService;
        /**
         * User active flag
         */
        this.isActive = true;
        /**
         * User inactive minutes count
         */
        this.inactiveCount = 0;
        /**
         * Interval countdown
         */
        this.countdown = _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_CONFIG.countdown;
        /**
         * Interval notification count.
         * Index to show notification after given amount of inactive loops.
         */
        this.notificationIndex = _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_CONFIG.notificationIndex;
        /**
         * Interval expiration count
         * Index to logout after given amount of inactive loops.
         */
        this.expirationIndex = _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_CONFIG.expirationIndex;
        this.subscribed = false;
    }
    /**
     * Hearbeat initializer constructor
     * Listens authService.authorized event.
     */
    initSubscribe() {
        this.authService.authEvents().subscribe((isAuthorized) => {
            if (isAuthorized) {
                this.startTimer();
            }
            else {
                this.stopTimer();
            }
        });
        this.subscribed = true;
    }
    /**
     * Used to update heartbeat active flag
     */
    eventTrigger() {
        this.isActive = true;
        this.inactiveCount = 0;
        if (!this.subscribed) {
            this.initSubscribe();
        }
    }
    /**
     * Starts heartbeat timer
     */
    startTimer() {
        this.interval = setInterval(() => {
            if (this.isActive) {
                this.beat();
            }
            else {
                this.inactiveCount++;
                if (this.inactiveCount === this.notificationIndex) {
                    this.notifierService.notify('warning', this.translateService.instant('SESSION.ABOUT_TO_EXPIRE'));
                }
                else if (this.inactiveCount >= this.expirationIndex) {
                    this.handleExpiration();
                }
            }
            this.isActive = false;
        }, this.countdown);
    }
    /**
     * Stops heartbeat timer
     */
    stopTimer() {
        clearInterval(this.interval);
    }
    /**
     * Heartbeat update request
     */
    beat() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            try {
                yield this.beatRequest();
                this.inactiveCount = 0;
                this.notificationIndex = _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_CONFIG.notificationIndex;
                this.expirationIndex = _config_heartbeat_config__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_CONFIG.expirationIndex;
            }
            catch (error) {
                this.handleExpiration();
            }
        });
    }
    beatRequest() {
        const url = `heartbeat`;
        const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
            'X-Language': this.translateService.currentLang,
        });
        return this.api.put(url, {}, headers);
    }
    /**
     * Heartbeat expire handler
     */
    handleExpiration() {
        this.notifierService.hideAll();
        this.notifierService.notify('error', this.translateService.instant('SESSION.EXPIRED'));
        this.authService.logout();
    }
};
HeartbeatService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_1__.ApiService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__.AuthService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_5__.NotifierService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService }
];
HeartbeatService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)({
        providedIn: 'root',
    })
], HeartbeatService);



/***/ }),

/***/ 12351:
/*!*************************************!*\
  !*** ./src/app/home/home-routes.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HomeRoutes": () => (/* binding */ HomeRoutes),
/* harmony export */   "homeRoutes": () => (/* binding */ homeRoutes)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ 96530);
/* harmony import */ var _payments_payments_routes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../payments/payments-routes */ 38114);


class HomeRoutes {
    constructor() {
        this.root = '';
        this.dashboard = 'dashboard';
        this.transfers = 'transfers';
        this.history = 'history';
        this.settings = 'settings';
        this.conversion = 'conversion';
        this.directory = 'directory';
        this.contracts = 'contracts';
        this.letters = 'letters';
        this.authorities = 'authorities';
        this.extraSettings = 'extraSettings';
        this.jmart = 'jmart';
        this.payments = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.makeChildren)('/' + _payments_payments_routes__WEBPACK_IMPORTED_MODULE_1__.paymentsRoutes.root, _payments_payments_routes__WEBPACK_IMPORTED_MODULE_1__.paymentsRoutes);
    }
}
const homeRoutes = new HomeRoutes();


/***/ }),

/***/ 29111:
/*!*******************************************************!*\
  !*** ./src/app/http-interceptors/auth.interceptor.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthInterceptor": () => (/* binding */ AuthInterceptor)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 66587);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 59095);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environments/environment */ 92340);
/* harmony import */ var _shared_token_token_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/token/token.service */ 47083);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @auth/auth.service */ 50384);








let AuthInterceptor = class AuthInterceptor {
    constructor(tokenService, authService, http) {
        this.tokenService = tokenService;
        this.authService = authService;
        this.http = http;
        this.refreshSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
    }
    intercept(req, next) {
        if (req.url.endsWith('/oauth/token')) {
            return next.handle(req);
        }
        else {
            return next.handle(this.updateHeader(req)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error, caught) => {
                if (error instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpErrorResponse) {
                    if (req.url.includes('authorized-persons') ||
                        req.url.includes('access-control')) {
                        return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.throwError)(error);
                    }
                    else if (this.isAccessDenied(error)) {
                        this.authService.logout();
                        return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.throwError)(error);
                    }
                    else if (this.isTokenExpired(error)) {
                        this.tokenService.clearUserToken();
                        return this.checkTokenExpired().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.switchMap)(() => {
                            return next.handle(this.updateHeader(req));
                        }));
                    }
                    else {
                        return (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.throwError)(error);
                    }
                }
                return caught;
            }));
        }
    }
    isTokenExpired(errorResponse) {
        return errorResponse.status && errorResponse.status === 401;
    }
    isAccessDenied(errorResponse) {
        return (errorResponse.status &&
            errorResponse.status === 403 &&
            errorResponse.error.error === 'access_denied');
    }
    checkTokenExpired() {
        this.refreshSubject.subscribe({
            next: (data) => {
                this.tokenService.clientToken = data.access_token;
            },
            complete: () => {
                this.refreshSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
            },
        });
        if (this.refreshSubject.observers.length === 1) {
            this.refreshToken().subscribe(this.refreshSubject);
        }
        return this.refreshSubject;
    }
    updateHeader(req) {
        const authHeaders = this.tokenService.applyAuthHeaders(req.headers);
        req = req.clone({
            headers: authHeaders,
        });
        return req;
    }
    refreshToken() {
        const baseUrl = localStorage.getItem('baseUrl') || _environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.baseUrl;
        const url = `${baseUrl}/oauth/token`;
        const headers = this.tokenService.getBasicHeaders();
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpParams().set('grant_type', 'client_credentials');
        return this.http.post(url, {}, {
            headers: headers,
            params: params,
        });
    }
};
AuthInterceptor.ctorParameters = () => [
    { type: _shared_token_token_service__WEBPACK_IMPORTED_MODULE_1__.TokenService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpClient }
];
AuthInterceptor = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Injectable)()
], AuthInterceptor);



/***/ }),

/***/ 71122:
/*!********************************************!*\
  !*** ./src/app/http-interceptors/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "httpInterceptorProviders": () => (/* binding */ httpInterceptorProviders)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _prevent_send_request_before_response_interceptor_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prevent-send-request-before-response-interceptor.service */ 23638);
/* harmony import */ var _jmart_cabinet_interceptor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jmart-cabinet.interceptor */ 49419);
/* harmony import */ var _auth_interceptor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth.interceptor */ 29111);




// import { OfflineInterceptor } from './offline.interceptor';
const httpInterceptorProviders = [
    // Angular applies interceptors in the order that you provide them.
    // If you provide interceptors A, then B, then C,
    // requests will flow in A->B->C and responses will flow out C->B->A.
    // {
    //   provide: HTTP_INTERCEPTORS,
    //   useClass: OfflineInterceptor,
    //   multi: true,
    // },
    {
        provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HTTP_INTERCEPTORS,
        useClass: _prevent_send_request_before_response_interceptor_service__WEBPACK_IMPORTED_MODULE_0__.PreventSendRequestBeforeResponseInterceptor,
        multi: true,
    },
    {
        provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HTTP_INTERCEPTORS,
        useClass: _auth_interceptor__WEBPACK_IMPORTED_MODULE_2__.AuthInterceptor,
        multi: true,
    },
    {
        provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HTTP_INTERCEPTORS,
        useClass: _jmart_cabinet_interceptor__WEBPACK_IMPORTED_MODULE_1__.JmartCabinetInterceptor,
        multi: true,
    },
];


/***/ }),

/***/ 49419:
/*!****************************************************************!*\
  !*** ./src/app/http-interceptors/jmart-cabinet.interceptor.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JmartCabinetInterceptor": () => (/* binding */ JmartCabinetInterceptor)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 66587);
/* harmony import */ var _jmart_cabinet_services_jmart_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jmart-cabinet/services/jmart-auth.service */ 17798);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);








let JmartCabinetInterceptor = class JmartCabinetInterceptor {
    constructor(jmartAuthService, JBAuthService, router, baseUrl, injector) {
        this.jmartAuthService = jmartAuthService;
        this.JBAuthService = JBAuthService;
        this.router = router;
        this.baseUrl = baseUrl;
        this.injector = injector;
        this.hasHeartBeatStopped = false;
    }
    intercept(request, next) {
        var _a;
        const authToken = (_a = this.jmartAuthService.jmartCabinetAuthData.tokens) === null || _a === void 0 ? void 0 : _a.auth.token;
        const isJmartRequest = request.url.includes(this.baseUrl);
        // way to handle preflight hearbeat request and fake it, cause this request will cause redirect to jb login
        // location.pathname is not the angular way to solve this kind of issues, but heartbeat request started at
        // constructor so we don't have an ability to determine the route, also injecting the Location service here
        // will cause cyclic dependency issue, because Location service uses http service under the hood
        if (request.url.includes('heartbeat') &&
            location.pathname.includes('jmart-cabinet') &&
            !this.hasHeartBeatStopped) {
            this.hasHeartBeatStopped = true;
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpResponse({
                status: 200,
                body: {},
            }));
        }
        if (authToken && !this.JBAuthService.isAuthenticated && isJmartRequest) {
            request = request.clone({
                setHeaders: {
                    'Request-Name-Strategy': 'true',
                    'Response-Name-Strategy': 'true',
                    'Accept-Language': 'ru',
                    'User-Id': '85',
                    'Current-Company-Id': String(this.jmartAuthService.jmartCabinetAuthData.companyId),
                    'Company-Id': String(this.jmartAuthService.jmartCabinetAuthData.companyId),
                    'Company-Ids': String(this.jmartAuthService.jmartCabinetAuthData.companyId),
                    Authorization: `Bearer ${authToken}`,
                },
            });
            return next.handle(request).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((err) => {
                if (err instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpErrorResponse &&
                    [401, 403].includes(err.status)) {
                    this.router.navigate(['jmart-cabinet', 'auth']);
                }
                console.log(err);
                return (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.throwError)(err);
            }));
        }
        return next.handle(request);
    }
};
JmartCabinetInterceptor.ctorParameters = () => [
    { type: _jmart_cabinet_services_jmart_auth_service__WEBPACK_IMPORTED_MODULE_0__.JmartAuthService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_1__.AuthService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.Router },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Inject, args: ['JMART_CABINET_BASE_URL',] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Injector }
];
JmartCabinetInterceptor = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)()
], JmartCabinetInterceptor);



/***/ }),

/***/ 23638:
/*!***********************************************************************************************!*\
  !*** ./src/app/http-interceptors/prevent-send-request-before-response-interceptor.service.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PreventSendRequestBeforeResponseInterceptor": () => (/* binding */ PreventSendRequestBeforeResponseInterceptor)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 66587);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 88759);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 44661);





let PreventSendRequestBeforeResponseInterceptor = class PreventSendRequestBeforeResponseInterceptor {
    constructor() {
        this.cache = new Map();
    }
    intercept(req, next) {
        const requestKey = req.urlWithParams;
        let subject = this.cache.get(requestKey);
        if (req.method !== "GET") {
            return next.handle(req);
        }
        if (subject) {
            return subject;
        }
        subject = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
        this.cache.set(requestKey, subject);
        const subs = next.handle(req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.catchError)(err => {
            subject.error(err);
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.throwError)(err);
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.tap)(stateEvent => {
            if (stateEvent instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpResponse) {
                subject.next(stateEvent);
            }
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.finalize)(() => {
            subject.complete();
            this.cache.delete(requestKey);
            subs.unsubscribe();
        })).subscribe();
        return subject;
    }
};
PreventSendRequestBeforeResponseInterceptor = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)({
        providedIn: 'root',
    })
], PreventSendRequestBeforeResponseInterceptor);



/***/ }),

/***/ 17798:
/*!**************************************************************!*\
  !*** ./src/app/jmart-cabinet/services/jmart-auth.service.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JmartAuthService": () => (/* binding */ JmartAuthService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 92218);






let JmartAuthService = class JmartAuthService {
    constructor(baseUrl, http, router) {
        this.baseUrl = baseUrl;
        this.http = http;
        this.router = router;
        this.jmartCabinetAuthData = {
            tokens: null,
            companyId: null,
        };
        this.refreshSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
        this.localStorageAuthKey = "jmart-cabinet-auth";
        this.synchronizeAuthData();
    }
    auth(credentials, observer = null) {
        return this.http.post(`${this.baseUrl}/gw/user/v1/auth/sign-in`, credentials).subscribe(Object.assign(Object.assign({}, observer), { next: (res) => {
                if (res.success) {
                    if (observer.next) {
                        observer.next(res);
                    }
                    // tmp, token parsing will move to api request
                    function parseJwt(token) {
                        const base64Url = token.split('.')[1];
                        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                        }).join(''));
                        return JSON.parse(jsonPayload);
                    }
                    ;
                    this.jmartCabinetAuthData.companyId = parseJwt(res.data.tokens.auth.token).company_id;
                    this.setAuthTokens(res.data);
                    // should move navigate data to router to make it more declarative
                    this.router.navigate(['jmart-cabinet']);
                }
                else {
                    //    handle auth error here
                    //  throw new Error()
                }
            } }));
    }
    refresh() {
        if (this.getRemainigTokenTime() < -1800000) {
            this.refreshSubject$.next();
            return;
        }
        this.http.post(`${this.baseUrl}/gw/user/v1/auth/refresh`, {
            token: this.jmartCabinetAuthData.tokens.refresh.token,
        }).subscribe((res) => {
            if (res.success) {
                this.setAuthTokens(res.data);
                this.refreshSubject$.next();
            }
            else {
                //    handle auth error here
            }
        });
    }
    setAuthTokens(res) {
        this.jmartCabinetAuthData.tokens = res.tokens;
        this.storeAuthData();
    }
    storeAuthData() {
        localStorage.setItem(this.localStorageAuthKey, JSON.stringify(this.jmartCabinetAuthData));
    }
    synchronizeAuthData() {
        const authData = localStorage.getItem(this.localStorageAuthKey);
        if (authData) {
            this.jmartCabinetAuthData = JSON.parse(authData);
        }
    }
    checkLastUserActivityTime() {
        const remainingTime = this.getRemainigTokenTime();
        const remainFiveMinutes = -300000;
        const isTokenExpired = this.isTokenExpired();
        const hasLess5Minutes = !isTokenExpired && remainingTime >= remainFiveMinutes;
        if (hasLess5Minutes) {
            this.refresh();
        }
        if (isTokenExpired) {
            this.router.navigate(['jmart-cabinet', 'auth']);
        }
    }
    getRemainigTokenTime() {
        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()().diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(this.jmartCabinetAuthData.tokens.auth.expired));
    }
    isTokenExpired() {
        return this.getRemainigTokenTime() > 0;
    }
    isUserLogged() {
        return this.jmartCabinetAuthData.tokens && !this.isTokenExpired();
    }
    logout() {
        localStorage.removeItem(this.localStorageAuthKey);
        this.jmartCabinetAuthData = {
            tokens: null,
            companyId: null,
        };
    }
};
JmartAuthService.ctorParameters = () => [
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject, args: ['JMART_CABINET_BASE_URL',] }] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__.Router }
];
JmartAuthService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
        providedIn: 'root'
    })
], JmartAuthService);



/***/ }),

/***/ 59596:
/*!************************************************************************************************!*\
  !*** ./src/app/payments/components/limit-not-passed-modal/limit-not-passed-modal.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LimitNotPassedModalComponent": () => (/* binding */ LimitNotPassedModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _limit_not_passed_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-not-passed-modal.component.html?ngResource */ 87206);
/* harmony import */ var _limit_not_passed_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./limit-not-passed-modal.component.scss?ngResource */ 63485);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_pipes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/pipes */ 39843);






let LimitNotPassedModalComponent = class LimitNotPassedModalComponent {
    constructor(modal, moneyPipe) {
        this.modal = modal;
        this.moneyPipe = moneyPipe;
    }
    ngOnInit() {
        this.translateParams = {
            amount: this.moneyPipe.transform(this.amount),
        };
    }
    closeModal() {
        this.modal.close();
    }
};
LimitNotPassedModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _shared_pipes__WEBPACK_IMPORTED_MODULE_2__.MoneyPipe }
];
LimitNotPassedModalComponent.propDecorators = {
    amount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
LimitNotPassedModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-limit-not-passed-modal',
        template: _limit_not_passed_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_limit_not_passed_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], LimitNotPassedModalComponent);



/***/ }),

/***/ 77462:
/*!****************************************************************************************!*\
  !*** ./src/app/payments/components/working-time-modal/working-time-modal.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WORKING_TIME_MODAL": () => (/* binding */ WORKING_TIME_MODAL),
/* harmony export */   "WorkingTimeModalComponent": () => (/* binding */ WorkingTimeModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _working_time_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./working-time-modal.component.html?ngResource */ 44593);
/* harmony import */ var _working_time_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./working-time-modal.component.scss?ngResource */ 49661);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ 33935);






var WORKING_TIME_MODAL;
(function (WORKING_TIME_MODAL) {
    WORKING_TIME_MODAL["TODAY"] = "TODAY";
    WORKING_TIME_MODAL["AUTO"] = "AUTO";
    WORKING_TIME_MODAL["HOLIDAY"] = "HOLIDAY";
})(WORKING_TIME_MODAL || (WORKING_TIME_MODAL = {}));
const TRANSLATE_PREFIX = `PAYMENTS.TIME_MODALS`;
let WorkingTimeModalComponent = class WorkingTimeModalComponent {
    constructor(modal, translateService) {
        this.modal = modal;
        this.translateService = translateService;
    }
    get title() {
        switch (this.type) {
            case WORKING_TIME_MODAL.TODAY:
            case WORKING_TIME_MODAL.AUTO:
                return this.translateService.instant(`${TRANSLATE_PREFIX}.${this.type}.TITLE`, { endTime: this.workingHoursEnd });
            case WORKING_TIME_MODAL.HOLIDAY:
                return this.translateService.instant(`${TRANSLATE_PREFIX}.${this.type}.TITLE`);
            default:
                return ``;
        }
    }
    get description() {
        return this.translateService.instant(`${TRANSLATE_PREFIX}.${this.type}.DESCRIPTION`);
    }
    get closeText() {
        switch (this.type) {
            case WORKING_TIME_MODAL.TODAY:
                return this.translateService.instant(`SHARED.OK`).toUpperCase();
            case WORKING_TIME_MODAL.AUTO:
            case WORKING_TIME_MODAL.HOLIDAY:
            default:
                return this.translateService.instant(`SHARED.CANCEL`);
        }
    }
    get canBeSubmitted() {
        return (this.type === WORKING_TIME_MODAL.AUTO ||
            this.type === WORKING_TIME_MODAL.HOLIDAY);
    }
    onSubmit() {
        this.modal.close();
    }
    onClose() {
        this.modal.dismiss();
    }
};
WorkingTimeModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbActiveModal },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.TranslateService }
];
WorkingTimeModalComponent.propDecorators = {
    type: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    workingHoursEnd: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
WorkingTimeModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-working-time-modal',
        template: _working_time_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_working_time_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], WorkingTimeModalComponent);



/***/ }),

/***/ 13389:
/*!******************************************!*\
  !*** ./src/app/payments/models/steps.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PAYMENTS_STEPS": () => (/* binding */ PAYMENTS_STEPS),
/* harmony export */   "PAYMENT_SELECT_TYPE": () => (/* binding */ PAYMENT_SELECT_TYPE),
/* harmony export */   "PAYMENT_TYPES": () => (/* binding */ PAYMENT_TYPES)
/* harmony export */ });
/* harmony import */ var _home_home_routes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @home/home-routes */ 12351);

const PAYMENTS_STEPS = {
    NONE: 0,
    SELECT: 1,
    TENGE: 2,
    CURRENCY: 3,
    OWN_TRANSFERS: 4,
    CONVERSION: 5,
};
var PAYMENT_SELECT_TYPE;
(function (PAYMENT_SELECT_TYPE) {
    PAYMENT_SELECT_TYPE["TENGE"] = "tenge";
    PAYMENT_SELECT_TYPE["TRANSFERS"] = "transfers";
    PAYMENT_SELECT_TYPE["FOREIGN"] = "foreign";
    PAYMENT_SELECT_TYPE["CONVERSION"] = "conversion";
})(PAYMENT_SELECT_TYPE || (PAYMENT_SELECT_TYPE = {}));
const PAYMENT_TYPES = [
    {
        id: PAYMENT_SELECT_TYPE.TENGE,
        url: _home_home_routes__WEBPACK_IMPORTED_MODULE_0__.homeRoutes.payments.tenge.root,
        step: PAYMENTS_STEPS.TENGE,
        icon: 'tenge.svg',
        title: 'PAYMENTS.TYPE.TENGE_PAYMENTS',
        isDisabled: false,
    },
    {
        id: PAYMENT_SELECT_TYPE.TRANSFERS,
        url: _home_home_routes__WEBPACK_IMPORTED_MODULE_0__.homeRoutes.transfers,
        step: PAYMENTS_STEPS.OWN_TRANSFERS,
        icon: 'own_transfers.svg',
        title: 'PAYMENTS.TYPE.IN_BETWEEN',
        isDisabled: false,
    },
    {
        id: PAYMENT_SELECT_TYPE.FOREIGN,
        url: _home_home_routes__WEBPACK_IMPORTED_MODULE_0__.homeRoutes.payments.foreignCurrency,
        step: PAYMENTS_STEPS.CURRENCY,
        icon: 'currency.svg',
        title: 'PAYMENTS.TYPE.FOREIGN',
        isDisabled: false,
    },
    {
        id: PAYMENT_SELECT_TYPE.CONVERSION,
        url: _home_home_routes__WEBPACK_IMPORTED_MODULE_0__.homeRoutes.conversion,
        step: PAYMENTS_STEPS.CONVERSION,
        icon: 'conversion.svg',
        title: 'PAYMENTS.TYPE.CONVERSION',
        isDisabled: false,
    },
];


/***/ }),

/***/ 38114:
/*!*********************************************!*\
  !*** ./src/app/payments/payments-routes.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentsRoutes": () => (/* binding */ PaymentsRoutes),
/* harmony export */   "TengePaymentsRoutes": () => (/* binding */ TengePaymentsRoutes),
/* harmony export */   "StatePaymentsRoutes": () => (/* binding */ StatePaymentsRoutes),
/* harmony export */   "statePaymentsRoutes": () => (/* binding */ statePaymentsRoutes),
/* harmony export */   "tengePaymentsRoutes": () => (/* binding */ tengePaymentsRoutes),
/* harmony export */   "paymentsRoutes": () => (/* binding */ paymentsRoutes)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ 96530);

class PaymentsRoutes {
    constructor(tenge, state) {
        this.root = 'payments';
        // state: TengePaymentsRoutes['state'];
        this.foreignCurrency = 'currency';
        this.conversion = 'conversion';
        this.tenge = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.makeChildren)('/' + this.root, tenge);
        // this.state = makeChildren(this.tenge.root, state);
    }
}
class TengePaymentsRoutes {
    constructor(state) {
        this.root = 'tenge';
        this.order = 'order';
        this.salary = 'salary';
        this.state = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.makeChildren)(this.root, state);
    }
}
class StatePaymentsRoutes {
    constructor() {
        this.root = 'state';
        this.tax = 'tax';
        this.social = 'social';
        this.osms = 'osms';
        this.pension = 'pension';
    }
}
const statePaymentsRoutes = new StatePaymentsRoutes();
const tengePaymentsRoutes = new TengePaymentsRoutes(statePaymentsRoutes);
const paymentsRoutes = new PaymentsRoutes(tengePaymentsRoutes, tengePaymentsRoutes.state);


/***/ }),

/***/ 74967:
/*!**********************************************************!*\
  !*** ./src/app/payments/services/payment-api.service.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentApiService": () => (/* binding */ PaymentApiService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs/plugin/utc */ 21859);
/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/plugin/timezone */ 72197);
/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs/plugin/isBetween */ 3520);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 47509);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _authorities_services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @authorities/services */ 30285);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _components_limit_not_passed_modal_limit_not_passed_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/limit-not-passed-modal/limit-not-passed-modal.component */ 59596);
/* harmony import */ var _components_working_time_modal_working_time_modal_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../components/working-time-modal/working-time-modal.component */ 77462);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 84505);


















const endpoints = {
    payments: 'companies/::companyId/payments',
    payment: 'companies/::companyId/payments/::paymentId',
    paymentAction: 'companies/::companyId/payments/::paymentId::action',
    commission: 'companies/::companyId/payments/commission',
    signatures: 'companies/::companyId/payments/::paymentId/signatures',
    number: 'companies/::companyId/payments/number',
    prevNotifications: 'companies/::companyId/payments/emails',
};
const TIMEZONE = 'Asia/Almaty';
let PaymentApiService = class PaymentApiService {
    constructor(company, api, modalService, authorityLimitsService, maskedService) {
        this.company = company;
        this.api = api;
        this.modalService = modalService;
        this.authorityLimitsService = authorityLimitsService;
        this.maskedService = maskedService;
        this.fxContracts$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(null);
        dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default()));
        dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default()));
        dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_3___default()));
        dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_4___default()));
        this.retrieveWorkingHours();
        // this.company.refresh$
        //   .pipe(
        //     filter(([, , isAuthorized]) => isAuthorized),
        //     switchMap(([, authority]) => {
        //       return this.api.getObservable<IFxContract[]>(
        //         `companies/${authority.company.id}/fx-contracts`
        //       );
        //     })
        //   )
        //   .subscribe((contracts) => {
        //     this.fxContracts$.next(contracts);
        //   });
    }
    getFxContracts() {
        return this.api.getObservable(`companies/${this.company.currentId}/fx-contracts`);
    }
    retrieveWorkingHours() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const workingHours = yield this.getWorkingHours();
                const FORMAT = 'YYYY-MM-DD;HH:mm:ss';
                if (!workingHours) {
                    return;
                }
                this.workingHours = {
                    isHoliday: !workingHours.workingDay,
                    start: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(`${workingHours.date};${workingHours.startTime}`, FORMAT),
                    end: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(`${workingHours.date};${workingHours.endTime}`, FORMAT),
                };
            }
            catch (e) {
                console.log(`cannot fetch working hours: ${e}`);
            }
        });
    }
    isToday(date) {
        if (!date) {
            return false;
        }
        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()().isSame(dayjs__WEBPACK_IMPORTED_MODULE_0___default()()
            .year(date.year)
            .month(date.month - 1)
            .date(date.day));
    }
    checkAmountLimit(amount, paymentType) {
        var _a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const limit = yield this.authorityLimitsService.getPaymentLimit(paymentType);
                if (limit) {
                    const numberedAmount = this.maskedService.getNumberedAmount(amount);
                    if (((_a = limit.limit) === null || _a === void 0 ? void 0 : _a.amount) < numberedAmount) {
                        yield this.showLimitNotPassedModal(limit.limit);
                        return {
                            isPassed: false,
                        };
                    }
                }
                return {
                    isPassed: true,
                };
            }
            catch (error) {
                return {
                    error: error,
                    isPassed: true,
                };
            }
        });
    }
    showLimitNotPassedModal(amount) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            const modalRef = this.modalService.open(_components_limit_not_passed_modal_limit_not_passed_modal_component__WEBPACK_IMPORTED_MODULE_11__.LimitNotPassedModalComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_sm',
                centered: true,
            });
            modalRef.componentInstance.amount = amount;
            try {
                yield modalRef.result;
            }
            catch (error) {
            }
            finally {
                return;
            }
        });
    }
    checkWorkingTime(selectedDate = null) {
        var _a, _b;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const currentTime = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(TIMEZONE);
                if (!this.workingHours) {
                    yield this.retrieveWorkingHours();
                }
                if (!((_a = this.workingHours) === null || _a === void 0 ? void 0 : _a.start) || !((_b = this.workingHours) === null || _b === void 0 ? void 0 : _b.end)) {
                    return true;
                }
                const isWorkingPeriod = currentTime.isBetween(this.workingHours.start, this.workingHours.end, 'milliseconds', '[]');
                const isTodayCutoff = !isWorkingPeriod && this.isToday(selectedDate);
                const isHoliday = this.workingHours.isHoliday &&
                    (this.isToday(selectedDate) || selectedDate == null);
                const isAutoCutoff = !isWorkingPeriod && selectedDate == null;
                const shouldShowModal = isTodayCutoff || isHoliday || isAutoCutoff;
                if (!shouldShowModal) {
                    return true;
                }
                let modalType;
                if (isTodayCutoff) {
                    modalType = _components_working_time_modal_working_time_modal_component__WEBPACK_IMPORTED_MODULE_12__.WORKING_TIME_MODAL.TODAY;
                }
                else if (isHoliday) {
                    modalType = _components_working_time_modal_working_time_modal_component__WEBPACK_IMPORTED_MODULE_12__.WORKING_TIME_MODAL.HOLIDAY;
                }
                else if (isAutoCutoff) {
                    modalType = _components_working_time_modal_working_time_modal_component__WEBPACK_IMPORTED_MODULE_12__.WORKING_TIME_MODAL.AUTO;
                }
                else {
                    return true;
                }
                return this.showWorkingTimeModal(modalType);
            }
            catch (error) {
                return true;
            }
        });
    }
    showWorkingTimeModal(modalType) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            const modalRef = this.modalService.open(_components_working_time_modal_working_time_modal_component__WEBPACK_IMPORTED_MODULE_12__.WorkingTimeModalComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_sm',
                centered: true,
            });
            modalRef.componentInstance.type = modalType;
            modalRef.componentInstance.workingHoursEnd =
                this.workingHours.end.format('HH:mm');
            try {
                yield modalRef.result;
                return true;
            }
            catch (error) {
                return false;
            }
        });
    }
    getWorkingHours() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            if (!this.fetchedWorkingHours) {
                const url = 'calendar-day';
                this.fetchedWorkingHours = yield this.api.get(url);
            }
            return this.fetchedWorkingHours;
        });
    }
    createPayment(body, { companyId } = {}) {
        const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.payments, {
            companyId: companyId || this.company.currentCompany.id,
        });
        return this.api.post(url, body);
    }
    /**
     * Create payment from existing draft
     * @param body
     * @param paymentId
     * @param companyId
     */
    createFromDraft(body, { paymentId, companyId }) {
        const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.paymentAction, {
            companyId: companyId || this.company.currentCompany.id,
            paymentId,
            action: ':to-created',
        });
        return this.api.patch(url, body);
    }
    /**
     * Updates information of draft and created payments. If payment is in created status, then deletes all existing signatures
     * @param body
     * @param param1
     *
     * @todo remove body.paymentRecipient = new RecipientAccount() when api will be consistent. Hack to baypass bug
     */
    updatePayment(body, { paymentId, companyId }) {
        // to remove
        // if (body.status?.code === PAYMENT_STATUS.DRAFT && !body.paymentRecipient) {
        //   body.paymentRecipient = new RecipientAccount();
        // }
        return this.api.put((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.payment, {
            companyId: companyId || this.company.currentCompany.id,
            paymentId,
        }), body);
    }
    signPayment(smsToken, paymentId, companyId = this.company.currentCompany.id) {
        return this.api.post((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.signatures, {
            paymentId,
            companyId,
        }), undefined, new _angular_common_http__WEBPACK_IMPORTED_MODULE_15__.HttpHeaders({
            [smsToken.type == _shared_models__WEBPACK_IMPORTED_MODULE_9__.TOKEN_TYPE.OTP ? _api_index__WEBPACK_IMPORTED_MODULE_5__.HEADERS.OTP : _api_index__WEBPACK_IMPORTED_MODULE_5__.HEADERS.PHONE]: smsToken.signature,
        }));
    }
    getCommission(body) {
        return this.api
            .post((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.commission, {
            companyId: body.companyId,
        }), body)
            .then(({ commissionAmount }) => commissionAmount);
    }
    getCommissionWithCurrency(body) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__awaiter)(this, void 0, void 0, function* () {
            const commissionWithCurrency = yield this.api.post((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.commission, {
                companyId: body.companyId,
            }), body);
            return {
                amount: commissionWithCurrency.commissionAmount,
                currency: commissionWithCurrency.currency,
            };
        });
    }
    getPayments() {
        return this.api.get((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.payments, {
            companyId: this.company.currentCompany.id,
        }));
    }
    getPaymentById(paymentId) {
        return this.api.get((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.payment, {
            companyId: this.company.currentCompany.id,
            paymentId,
        }));
    }
    getSignaturesForPaymentId(paymentId) {
        return this.api.get((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.payment, {
            companyId: this.company.currentCompany.id,
            paymentId,
        }));
    }
    getPaymentNumber(paymentCategory) {
        const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.resolveURL)(endpoints.number, {
            companyId: this.company.currentCompany.id,
        });
        let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_15__.HttpParams();
        params = params.append('paymentCategory', paymentCategory);
        return this.api.get(url, null, params);
    }
};
PaymentApiService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_7__.CompanyService },
    { type: _api_index__WEBPACK_IMPORTED_MODULE_5__.ApiService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__.NgbModal },
    { type: _authorities_services__WEBPACK_IMPORTED_MODULE_8__.AuthorityLimitsService },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_10__.MaskedService }
];
PaymentApiService = (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_17__.Injectable)({
        providedIn: 'root',
    })
], PaymentApiService);



/***/ }),

/***/ 28706:
/*!*******************************************************!*\
  !*** ./src/app/payments/services/payments.service.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentRootTitle": () => (/* binding */ PaymentRootTitle),
/* harmony export */   "MessageType": () => (/* binding */ MessageType),
/* harmony export */   "messages": () => (/* binding */ messages),
/* harmony export */   "PaymentsService": () => (/* binding */ PaymentsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ 24383);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/pick */ 67777);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _accounts_account_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @accounts/account.model */ 5157);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _shared_validators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/validators */ 88228);
/* harmony import */ var _shared_pipes_amount_format_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/pipes/amount-format.pipe */ 47365);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _shared_pipes_bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/pipes/bank-from-account.pipe */ 8295);
/* harmony import */ var _payment_api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./payment-api.service */ 74967);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @payments/payments-routes */ 38114);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ngx-spinner */ 42777);


















var PaymentRootTitle;
(function (PaymentRootTitle) {
    PaymentRootTitle["NEW"] = "NEW_PAYMENT";
    PaymentRootTitle["EDIT_DRAFT"] = "EDIT_PAYMENT_DRAFT";
    PaymentRootTitle["EDIT_PAYMENT"] = "EDIT_PAYMENT";
})(PaymentRootTitle || (PaymentRootTitle = {}));
var MessageType;
(function (MessageType) {
    MessageType["info"] = "info";
})(MessageType || (MessageType = {}));
// TODO: проверить используются ли где-нибудь эти переменные
const messages = {
    noAccounts: `У вас нет счетов в национальной валюте.
  Вам необходимо открыть счет в тенге для проведения платежа.`,
    allLocked: `Ваш Текуший счет заблокирован
  Недоступно проведение платежей`,
};
let PaymentsService = class PaymentsService {
    constructor(amountPipe, bankFromAccount, notify, spinner, api, company) {
        this.amountPipe = amountPipe;
        this.bankFromAccount = bankFromAccount;
        this.notify = notify;
        this.spinner = spinner;
        this.api = api;
        this.company = company;
        this.rules = {
            purposeLength: 482,
            vat: 0.12,
            kbkCodeVinReq: ['104401', '104402'],
            maxAmount: 999999999999.99,
            minAmount: 0.0,
        };
        this.errors = _shared_validators__WEBPACK_IMPORTED_MODULE_4__.errors;
        this.infoMessage = new _utils_index__WEBPACK_IMPORTED_MODULE_3__.SingleEntityStore();
        this.loadingPaymentSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_11__.BehaviorSubject(null);
        this.loadingPayment$ = this.loadingPaymentSubject$.asObservable();
        this.rootTitle$ = new rxjs__WEBPACK_IMPORTED_MODULE_11__.BehaviorSubject(PaymentRootTitle.NEW);
        this.paymentNumber = new _utils_index__WEBPACK_IMPORTED_MODULE_3__.SingleEntityStore(null);
        this.foreignPaymentNumber = new _utils_index__WEBPACK_IMPORTED_MODULE_3__.SingleEntityStore(null);
        this.conversionPaymentNumber = new _utils_index__WEBPACK_IMPORTED_MODULE_3__.SingleEntityStore(null);
        this.employeeValidationMap = (options = {}) => {
            const map = {
                iin: [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.minLength(12)],
                firstName: [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
                lastName: [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
                amount: [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.min(this.rules.minAmount),
                    _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.max(this.rules.maxAmount),
                ],
                currency: [],
            };
            if (options.birthDateRequired) {
                map.birthDate = [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required];
            }
            if (options.periodRequired) {
                map.period = [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required];
            }
            if (options.ibanDefined) {
                map.iban = [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.minLength(16)];
            }
            return map;
        };
        this.employeeGroupControlValidator = (paymentType) => (control) => {
            const value = control.value;
            if (!value || value.length < 1) {
                return null;
            }
            const modelKeys = Object.keys(value[0]);
            const ibanDefined = paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SALARY;
            const periodRequired = paymentType !== _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SALARY;
            const birthDateRequired = paymentType !== _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SALARY;
            const map = this.employeeValidationMap({
                ibanDefined,
                periodRequired,
                birthDateRequired,
            });
            let firstError;
            const firstErrorGroup = value.find((employeeModel) => {
                return modelKeys.find((modelKey) => {
                    return (map[modelKey] &&
                        map[modelKey].find((validator) => {
                            if ((firstError = validator({ value: employeeModel[modelKey] }))) {
                                console.log(firstError);
                                return firstError;
                            }
                        }));
                });
            });
            if (firstErrorGroup) {
                return { groupError: true };
            }
            // check uniq iin
            const dictionary = {};
            const alreadyExistEmployee = value.some((employeeModel) => {
                // additional period, ignore
                if (employeeModel.linkedWith) {
                    return false;
                }
                if (dictionary[employeeModel.iin]) {
                    return true;
                }
                dictionary[employeeModel.iin];
            });
            if (alreadyExistEmployee) {
                return { alreadyExistEmployee };
            }
        };
    }
    set loadingPayment(v) {
        this.loadingPaymentSubject$.next(v);
    }
    set rootTitle(title) {
        this.rootTitle$.next(title);
    }
    get stdDateRangeNgb() {
        const now = new Date();
        // 10 days from tomorrow
        now.setDate(now.getDate() + 10);
        return {
            minDate: (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.dateToNgbStruct)(new Date()),
            maxDate: (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.dateToNgbStruct)(now),
        };
    }
    get paymentNumber$() {
        const numStore = this.paymentNumber;
        if (numStore.entity === null && !numStore.fetching) {
            this.getCurrentAutoNumber(numStore, _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_CATEGORY.DOMESTIC);
        }
        return numStore.entity$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.filter)((n) => {
            return n !== null;
        }));
    }
    get foreignPaymentNumber$() {
        const numStore = this.foreignPaymentNumber;
        if (numStore.entity === null && !numStore.fetching) {
            this.getCurrentAutoNumber(numStore, _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_CATEGORY.FOREIGN);
        }
        return numStore.entity$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.filter)((n) => {
            return n !== null;
        }));
    }
    get conversionPaymentNumber$() {
        const numStore = this.conversionPaymentNumber;
        if (numStore.entity === null && !numStore.fetching) {
            this.getCurrentAutoNumber(numStore, _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_CATEGORY.CONVERSION);
        }
        return numStore.entity$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.filter)((n) => {
            return n !== null;
        }));
    }
    getCurrentAutoNumber(numStore, paymentCategory) {
        numStore.fetching = true;
        return this.api
            .getPaymentNumber(paymentCategory)
            .then((v) => (numStore.entity = v.number.toString()))
            .catch((e) => (numStore.entity = null))
            .finally(() => (numStore.fetching = false));
    }
    bankExist(iban) {
        let bic = '';
        if (!iban ||
            iban.length < 20 ||
            (bic = this.bankFromAccount.transform(iban, 'bic'))) {
            return null;
        }
        return { bankExist: true };
    }
    checkPaymentTypeFromIban(recipientIban = '', payerIban = '') {
        const jisnaBic = 'TSESKZKA';
        const recipientBic = this.bankFromAccount.transform(recipientIban);
        const payerIbanBic = this.bankFromAccount.transform(payerIban);
        let result = undefined;
        const comp = [];
        payerIbanBic && comp.push(payerIbanBic);
        recipientBic && comp.push(recipientBic);
        if (comp.every((bic) => bic === jisnaBic)) {
            result = _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.INTERNAL;
        }
        else if (comp.length) {
            result = _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.EXTERNAL;
        }
        return result;
    }
    getPaymentRouteByType(type) {
        switch (type) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.MEDICAL:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.state.osms;
            case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.PENSION:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.state.pension;
            case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SOCIAL:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.state.social;
            case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.TAX:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.state.tax;
            case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SALARY:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.salary;
            default:
                return _payments_payments_routes__WEBPACK_IMPORTED_MODULE_10__.paymentsRoutes.tenge.order;
        }
    }
    calculateCommission$(data) {
        var _a;
        const body = {
            type: data.type,
            companyId: data.companyId,
            category: data.category,
            details: {
                valueDate: data.date
                    ? (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.ngbDateToUTCStartDay)(data.date).toISOString()
                    : data.date,
                urgent: data.urgent,
                payerIban: (_a = data.senderAccount) === null || _a === void 0 ? void 0 : _a.iban,
                paymentAmount: {
                    currency: data.currency,
                    amount: data.amount,
                },
                kbk: undefined,
                knp: undefined,
            },
        };
        if (data.kbk) {
            body.details.kbk = {
                code: data.kbk,
            };
        }
        if (data.knp) {
            body.details.knp = {
                code: data.knp,
            };
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.from)(this.api.getCommission(body));
    }
    combineAcceptableAccounts(accountStore) {
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.combineLatest)([
            accountStore.items$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)((items) => items.filter((item) => item.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_1__.ACCOUNT_TYPE.ACCOUNT))),
            accountStore.fetching$,
            accountStore.fetched$,
        ]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.debounceTime)(0), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.filter)(([a, fetching, fetched]) => !fetching || fetched), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)(([arr]) => arr.filter((acc) => acc.balance.currency === _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_6__.CURRENCY.KZT &&
            !acc.isClosed &&
            !acc.isLocked)));
    }
    genericSearchTerm(term, item) {
        if (term) {
            const normalized = term.toLowerCase();
            return Object.values(lodash_pick__WEBPACK_IMPORTED_MODULE_0___default()(item, 'name', 'code', 'label')).some((v) => v && v.toLowerCase().includes(normalized));
        }
        return true;
    }
    ugdSearchFn(term, item) {
        if (term) {
            const normalized = term.toLowerCase();
            return Object.values(lodash_pick__WEBPACK_IMPORTED_MODULE_0___default()(item, 'name', 'code', 'bin')).some((v) => v.toLowerCase().includes(normalized));
        }
        return true;
    }
    bankReceiverSearchFn(term, item) {
        if (term) {
            const normalized = term.toLowerCase();
            return Object.values(lodash_pick__WEBPACK_IMPORTED_MODULE_0___default()(item, 'name', 'salaryTransitIban', 'bic', 'bin')).some((v) => (v || '').toLowerCase().includes(normalized));
        }
        return true;
    }
    get isSignatureRequired() {
        const { authorityLevel, currentCompany } = this.company;
        if (authorityLevel === _shared_models__WEBPACK_IMPORTED_MODULE_9__.AUTHORITY_TYPE.NO_SIGNATURE) {
            return false;
        }
        else if (authorityLevel === _shared_models__WEBPACK_IMPORTED_MODULE_9__.AUTHORITY_TYPE.PRIMARY_SIGNATURE &&
            currentCompany.signatureScheme !== _shared_models__WEBPACK_IMPORTED_MODULE_9__.SIGNATURE_SCHEME.SINGLE_SIGN) {
            return false;
        }
        return true;
    }
};
PaymentsService.ctorParameters = () => [
    { type: _shared_pipes_amount_format_pipe__WEBPACK_IMPORTED_MODULE_5__.AmountFormatPipe },
    { type: _shared_pipes_bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_7__.BankFromAccountPipe },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_18__.NotifierService },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_19__.NgxSpinnerService },
    { type: _payment_api_service__WEBPACK_IMPORTED_MODULE_8__.PaymentApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_2__.CompanyService }
];
PaymentsService = (0,tslib__WEBPACK_IMPORTED_MODULE_20__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_21__.Injectable)({
        providedIn: 'root',
    })
], PaymentsService);



/***/ }),

/***/ 73510:
/*!********************************************!*\
  !*** ./src/app/shared/animations/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "moveFromBottomFade": () => (/* reexport safe */ _router__WEBPACK_IMPORTED_MODULE_0__.moveFromBottomFade),
/* harmony export */   "moveFromBottomFadeReverse": () => (/* reexport safe */ _router__WEBPACK_IMPORTED_MODULE_0__.moveFromBottomFadeReverse),
/* harmony export */   "routeTransitionAnimations": () => (/* reexport safe */ _router__WEBPACK_IMPORTED_MODULE_0__.routeTransitionAnimations),
/* harmony export */   "sharedStyles": () => (/* reexport safe */ _router__WEBPACK_IMPORTED_MODULE_0__.sharedStyles)
/* harmony export */ });
/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router */ 66381);



/***/ }),

/***/ 66381:
/*!*********************************************!*\
  !*** ./src/app/shared/animations/router.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sharedStyles": () => (/* binding */ sharedStyles),
/* harmony export */   "routeTransitionAnimations": () => (/* binding */ routeTransitionAnimations),
/* harmony export */   "moveFromBottomFade": () => (/* binding */ moveFromBottomFade),
/* harmony export */   "moveFromBottomFadeReverse": () => (/* binding */ moveFromBottomFadeReverse)
/* harmony export */ });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ 31631);

const sharedStyles = {
    position: 'fixed',
    overflow: 'hidden',
    backfaceVisibility: 'hidden',
    transformStyle: 'preserve-3d',
    left: 0,
    right: 0,
    top: 0,
};
const routeTransitionAnimations = (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.trigger)('slideRouteAnimations', [
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.transition)('* => *', [
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ position: 'relative' }),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':enter, :leave', [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                position: 'absolute',
                top: 0,
                left: 0,
                width: '100%',
            }),
        ], { optional: true }),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.group)([
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':enter', [
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translate({{offsetEnterX}}%, {{offsetEnterY}}%)',
                }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('0.2s ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ transform: 'translate(0%, 0%)', opacity: 1 })),
            ], { optional: true }),
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':leave', [
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ transform: 'translate(0%, 0%)' }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('0.2s ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translate({{offsetLeaveX}}%, {{offsetLeaveY}}%)',
                    opacity: 0,
                })),
            ], { optional: true }),
        ]),
    ], {
        params: {
            offsetEnterX: 0,
            offsetEnterY: 0,
            offsetLeaveX: 0,
            offsetLeaveY: 0,
        },
    }),
]);
const moveFromBottomFade = (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animation)([
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':enter, :leave', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)(sharedStyles), { optional: true }),
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.group)([
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':enter', [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('{{enterTiming}}s {{enterDelay}}s ease', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.keyframes)([
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translateY(4%) scale(0.97)',
                    height: '100vh',
                    opacity: '0',
                    'z-index': '9999',
                    overflow: 'hidden',
                    offset: 0,
                }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translateY(1%) scale(0.99)',
                    opacity: '0.5',
                    'z-index': '9999',
                    offset: 0.9,
                }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translateY(0%) scale(1)',
                    opacity: '1',
                    height: '100vh',
                    overflow: 'hidden',
                    offset: 1,
                }),
            ])),
        ], { optional: true }),
        // query(
        //   ':leave',
        //   [
        //     animate(
        //       '{{leaveTiming}}s {{leaveDelay}}s ease',
        //       keyframes([
        //         style({
        //           opacity: '1',
        //           transform: 'translateY(0%) scale(1)',
        //           'z-index': '9999',
        //           offset: 0,
        //         }),
        //         style({
        //           opacity: '0.3',
        //           transform: 'translateY(30%) scale(0.8)',
        //           offset: 1,
        //         }),
        //       ])
        //     ),
        //   ],
        //   { optional: true }
        // ),
    ]),
], {
    params: {
        enterTiming: '.2',
        leaveTiming: '.3',
        enterDelay: '0',
        leaveDelay: '0',
    },
});
const moveFromBottomFadeReverse = (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animation)([
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':leave, :enter', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)(sharedStyles), { optional: true }),
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.group)([
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':leave', [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('{{enterTiming}}s {{enterDelay}}s ease', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.keyframes)([
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    transform: 'translateY(0)',
                    offset: 0,
                    'z-index': '9999',
                }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ transform: 'translateY(100%)', offset: 1 }),
            ])),
        ], { optional: true }),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.query)(':enter,', [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('{{leaveTiming}}s {{leaveDelay}}s ease', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.keyframes)([
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ opacity: '1', offset: 0 }),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ opacity: '0.3', offset: 1 }),
            ])),
        ], { optional: true }),
    ]),
], {
    params: {
        enterTiming: '.2',
        leaveTiming: '.3',
        enterDelay: '0',
        leaveDelay: '0',
    },
});


/***/ }),

/***/ 33999:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/components/animated-loading/animated-loading.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimatedLoadingComponent": () => (/* binding */ AnimatedLoadingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _animated_loading_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animated-loading.component.html?ngResource */ 47139);
/* harmony import */ var _animated_loading_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animated-loading.component.scss?ngResource */ 5688);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let AnimatedLoadingComponent = class AnimatedLoadingComponent {
    constructor() {
        this.lottieOptions = {
            path: '/assets/lottie/gray.json',
        };
    }
    ngOnInit() { }
};
AnimatedLoadingComponent.ctorParameters = () => [];
AnimatedLoadingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-animated-loading',
        template: _animated_loading_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_animated_loading_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], AnimatedLoadingComponent);



/***/ }),

/***/ 16831:
/*!************************************************************!*\
  !*** ./src/app/shared/components/aside/aside.component.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsideComponent": () => (/* binding */ AsideComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _aside_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aside.component.html?ngResource */ 60217);
/* harmony import */ var _aside_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aside.component.scss?ngResource */ 61799);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _shared_services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/services/user.service */ 98613);
/* harmony import */ var _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services/header.service */ 60940);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var _payments_models_steps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @payments/models/steps */ 13389);
/* harmony import */ var _analytics_services_manager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @analytics/services/manager */ 46155);












const MENU_ENABLED_CLASSNAME = 'menu-enabled';
let AsideComponent = class AsideComponent {
    constructor(router, userService, authService, companyService, headerService, renderer, analytics) {
        this.router = router;
        this.userService = userService;
        this.authService = authService;
        this.companyService = companyService;
        this.headerService = headerService;
        this.renderer = renderer;
        this.analytics = analytics;
        this.isUserShown = true;
        this.steps = _payments_models_steps__WEBPACK_IMPORTED_MODULE_6__.PAYMENTS_STEPS;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subscription();
        this.isUserDropdownCollapsed = false;
        this.isMenuShown = false;
    }
    ngOnInit() {
        const routerSubscription = this.router.events.subscribe((event) => {
            this.hideMenu();
        });
        this.subscription.add(routerSubscription);
        if (this.isUserShown) {
            const userSubscription = this.userService.getUser().subscribe((user) => {
                this.user = user;
                // this.loadAuthority();
            });
            const companyS = this.companyService.currentAuthority$.subscribe((a) => {
                if (a) {
                    this.currentAuthority = a;
                }
            });
            this.subscription.add(userSubscription);
            this.subscription.add(companyS);
        }
    }
    ngOnDestroy() {
        this.hideMenu();
        this.subscription.unsubscribe();
    }
    onAuthoritySelect(authority) {
        this.companyService.currentAuthority = authority;
        this.hideUserDropdown();
        this.hideMenu();
        this.analytics.logEvent('SwitchBetweenCompanies', { version: 1 });
    }
    setStep(step) {
        this.headerService.setCurrentStep(step);
    }
    toggleMenu() {
        this.isMenuShown = !this.isMenuShown;
        if (this.isMenuShown === false) {
            this.hideUserDropdown();
            this.renderer.removeClass(document.body, MENU_ENABLED_CLASSNAME);
        }
        else {
            this.renderer.addClass(document.body, MENU_ENABLED_CLASSNAME);
        }
    }
    hideMenu() {
        this.isMenuShown = false;
        this.hideUserDropdown();
        this.renderer.removeClass(document.body, MENU_ENABLED_CLASSNAME);
    }
    toggleUserDropdown(event = null) {
        event === null || event === void 0 ? void 0 : event.preventDefault();
        this.isUserDropdownCollapsed = !this.isUserDropdownCollapsed;
    }
    showUserDropdown(event = null) {
        event === null || event === void 0 ? void 0 : event.preventDefault();
        this.isUserDropdownCollapsed = true;
    }
    hideUserDropdown(event = null) {
        event === null || event === void 0 ? void 0 : event.preventDefault();
        this.isUserDropdownCollapsed = false;
    }
    get name() {
        var _a;
        if (!this.user) {
            return '';
        }
        return `${((_a = this.user) === null || _a === void 0 ? void 0 : _a.lastname) || ''} 
    ${this.getFirstLetter(this.user.firstname || '')} 
    ${this.getFirstLetter(this.user.middlename || '')}`;
    }
    get company() {
        var _a, _b, _c, _d;
        return (((_b = (_a = this.currentAuthority) === null || _a === void 0 ? void 0 : _a.company) === null || _b === void 0 ? void 0 : _b.shortName) ||
            ((_d = (_c = this.currentAuthority) === null || _c === void 0 ? void 0 : _c.company) === null || _d === void 0 ? void 0 : _d.name));
    }
    getFirstLetter(value) {
        return value ? `${value[0]}.` : '';
    }
};
AsideComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__.Router },
    { type: _shared_services_user_service__WEBPACK_IMPORTED_MODULE_2__.UserService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_5__.AuthService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_4__.CompanyService },
    { type: _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__.HeaderService },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Renderer2 },
    { type: _analytics_services_manager__WEBPACK_IMPORTED_MODULE_7__.AnalyticsManagerAbstract }
];
AsideComponent.propDecorators = {
    isUserShown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input }]
};
AsideComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
        selector: 'j-aside',
        template: _aside_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_aside_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], AsideComponent);



/***/ }),

/***/ 25021:
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-body/collapsible-body.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleBodyComponent": () => (/* binding */ CollapsibleBodyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _collapsible_body_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapsible-body.component.html?ngResource */ 83314);
/* harmony import */ var _collapsible_body_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collapsible-body.component.scss?ngResource */ 57309);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let CollapsibleBodyComponent = class CollapsibleBodyComponent {
    constructor() { }
    ngOnInit() {
    }
};
CollapsibleBodyComponent.ctorParameters = () => [];
CollapsibleBodyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-collapsible-body',
        template: _collapsible_body_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_collapsible_body_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CollapsibleBodyComponent);



/***/ }),

/***/ 68221:
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-trigger/collapsible-trigger.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleTriggerComponent": () => (/* binding */ CollapsibleTriggerComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _collapsible_trigger_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapsible-trigger.component.html?ngResource */ 36056);
/* harmony import */ var _collapsible_trigger_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collapsible-trigger.component.scss?ngResource */ 51347);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let CollapsibleTriggerComponent = class CollapsibleTriggerComponent {
    constructor() { }
    ngOnInit() {
    }
};
CollapsibleTriggerComponent.ctorParameters = () => [];
CollapsibleTriggerComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-collapsible-trigger',
        template: _collapsible_trigger_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_collapsible_trigger_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CollapsibleTriggerComponent);



/***/ }),

/***/ 54507:
/*!************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleComponent": () => (/* binding */ CollapsibleComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _collapsible_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapsible.component.html?ngResource */ 35513);
/* harmony import */ var _collapsible_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collapsible.component.scss?ngResource */ 94329);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/animations */ 31631);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);





let CollapsibleComponent = class CollapsibleComponent {
    constructor() {
        this.isCollapsed = true;
        this.collapseClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    collapse() {
        this.isCollapsed = !this.isCollapsed;
    }
    ngOnInit() { }
    onClick() {
        this.isCollapsed = !this.isCollapsed;
        this.collapseClicked.emit(this.isCollapsed);
    }
};
CollapsibleComponent.ctorParameters = () => [];
CollapsibleComponent.propDecorators = {
    isCollapsed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    collapseClicked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
CollapsibleComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-collapsible',
        template: _collapsible_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewEncapsulation.None,
        animations: [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.trigger)('smoothCollapse', [
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('initial', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
                    height: '0',
                    overflow: 'hidden',
                    opacity: '0',
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
                    // height: 'auto',
                    overflow: 'hidden',
                    opacity: '1',
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)('initial<=>final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)('150ms')),
            ]),
        ],
        styles: [_collapsible_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CollapsibleComponent);



/***/ }),

/***/ 53917:
/*!************************************************************************************!*\
  !*** ./src/app/shared/components/confirm-sms-modal/confirm-sms-modal.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CONFIRM_SIGNATURE_TYPE": () => (/* binding */ CONFIRM_SIGNATURE_TYPE),
/* harmony export */   "ConfirmSmsModalComponent": () => (/* binding */ ConfirmSmsModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _confirm_sms_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./confirm-sms-modal.component.html?ngResource */ 21027);
/* harmony import */ var _confirm_sms_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./confirm-sms-modal.component.scss?ngResource */ 23309);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _services_payments_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/payments-shared.service */ 25437);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services */ 17253);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @company/company.service */ 26164);










var CONFIRM_SIGNATURE_TYPE;
(function (CONFIRM_SIGNATURE_TYPE) {
    CONFIRM_SIGNATURE_TYPE["OTP"] = "OTP";
    CONFIRM_SIGNATURE_TYPE["SMS"] = "SMS";
})(CONFIRM_SIGNATURE_TYPE || (CONFIRM_SIGNATURE_TYPE = {}));
const SIGN_ALLOWED = 'signAllowed';
let ConfirmSmsModalComponent = class ConfirmSmsModalComponent {
    constructor(modal, userService, paymentsSharedService, companyService) {
        this.modal = modal;
        this.userService = userService;
        this.paymentsSharedService = paymentsSharedService;
        this.companyService = companyService;
        this.isPaymentsSigning = true;
        this.hasOtp = false;
        this.confirmTabs = CONFIRM_SIGNATURE_TYPE;
        this.currentTab = CONFIRM_SIGNATURE_TYPE.SMS;
        this.submitted = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.sentForRevision = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.isConfirmRequired = false;
        this.isSignAllowed = false;
        this.isSignBySmsRequested = false;
        this.isLoading$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject(true);
        this.confirmData = null;
    }
    ngOnInit() {
        this.isLoading$.next(true);
        if (this.isPaymentsSigning) {
            this.checkForConversionRate();
        }
        else {
            this.allowSign();
        }
    }
    checkForConversionRate() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            try {
                yield this.checkForBulkSign();
                this.signingPayment = yield this.checkForConversion();
                this.signingExchangeRate = yield this.checkForRateChange(this.signingPayment);
                this.showConfirm();
            }
            catch (error) {
                if (error == SIGN_ALLOWED) {
                    this.allowSign();
                }
            }
        });
    }
    allowSign() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            this.isSignAllowed = true;
            this.otp = yield this.userService.retrieveOtpInfo(this.companyService.currentId);
            this.hasOtp = !!this.otp;
            if (this.hasOtp &&
                localStorage.getItem('preferredSignatureType') ===
                    CONFIRM_SIGNATURE_TYPE.OTP) {
                this.showOtp();
            }
            else {
                this.showSms();
            }
        });
    }
    checkForRateChange(payment) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const rates = yield this.paymentsSharedService.retrieveExhangeRates(payment);
                if (!rates || rates.original.rate === rates.current.rate) {
                    throw SIGN_ALLOWED;
                }
                return rates.current;
            }
            catch (error) {
                throw SIGN_ALLOWED;
            }
        });
    }
    checkForConversion() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const payment = yield this.paymentsSharedService.getPaymentById(this.additionalParams.actionIds[0]);
                if (payment.type != _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION) {
                    throw SIGN_ALLOWED;
                }
                return payment;
            }
            catch (error) {
                throw SIGN_ALLOWED;
            }
        });
    }
    checkForBulkSign() {
        if (this.additionalParams.actionIds.length != 1) {
            throw SIGN_ALLOWED;
        }
        return true;
    }
    dismissModal() {
        this.closed.emit();
        this.modal.dismiss();
    }
    showConfirm() {
        const rateAmounts = this.paymentsSharedService.getRateAmounts(this.signingExchangeRate);
        if (!rateAmounts) {
            throw SIGN_ALLOWED;
        }
        const { sum, calculatedSum, currencyTo, currencyFrom } = this.signingExchangeRate;
        const amountFrom = sum;
        const amountTo = {
            amount: calculatedSum,
            currency: sum.currency === currencyFrom ? currencyTo : currencyFrom,
        };
        this.confirmData = {
            rateFrom: rateAmounts.from,
            rateTo: rateAmounts.to,
            amountFrom,
            amountTo,
        };
        this.isConfirmRequired = true;
        this.isLoading$.next(false);
    }
    showOtp(event = null) {
        this.isLoading$.next(false);
        if (event) {
            event.preventDefault();
        }
        this.currentTab = this.confirmTabs.OTP;
        this.otpInput.focus();
    }
    showSms(event = null) {
        if (!this.isSignBySmsRequested) {
            this.isLoading$.next(true);
        }
        this.isSignBySmsRequested = true;
        if (event) {
            event.preventDefault();
        }
        this.currentTab = this.confirmTabs.SMS;
        try {
            this.smsInput.focus();
        }
        catch (error) { }
    }
    onConfirmAgreed() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            this.isConfirmRequired = false;
            this.isLoading$.next(true);
            yield this.paymentsSharedService.updatePaymentExchangeRate(this.signingPayment, this.signingExchangeRate);
            this.allowSign();
        });
    }
    onConfirmSentForRevision() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            this.isConfirmRequired = false;
            this.isLoading$.next(true);
            const { sum, calculatedSum, currencyFrom, currencyTo } = this.signingExchangeRate;
            const updatedPayment = Object.assign(Object.assign({}, this.signingPayment), { details: Object.assign(Object.assign({}, this.signingPayment.details), { exchangeRate: this.signingExchangeRate, paymentAmount: sum.currency === currencyTo
                        ? {
                            amount: calculatedSum,
                            currency: currencyFrom,
                        }
                        : sum }) });
            yield this.paymentsSharedService.updatePayment(updatedPayment);
            this.sentForRevision.emit();
        });
    }
    onSmsFail() { }
    onOtpSubmit(smsToken) {
        this.onSubmit(smsToken);
    }
    onSmsSubmit(smsToken) {
        this.onSubmit(smsToken);
    }
    onSubmit(smsToken) {
        this.submitted.emit(smsToken);
    }
    onSmsLoaded() {
        this.isLoading$.next(false);
        this.smsInput.focus();
    }
    get phone() {
        return this.userService.userPhone;
    }
};
ConfirmSmsModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__.NgbActiveModal },
    { type: _services__WEBPACK_IMPORTED_MODULE_4__.UserService },
    { type: _services_payments_shared_service__WEBPACK_IMPORTED_MODULE_3__.PaymentsSharedService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_5__.CompanyService }
];
ConfirmSmsModalComponent.propDecorators = {
    smsToken: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    isPaymentsSigning: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    additionalParams: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    headerParams: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    smsInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['smsInput',] }],
    otpInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['otpInput',] }]
};
ConfirmSmsModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-confirm-sms-modal',
        template: _confirm_sms_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_confirm_sms_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ConfirmSmsModalComponent);



/***/ }),

/***/ 40608:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/components/conversion-confirm/conversion-confirm.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConversionConfirmComponent": () => (/* binding */ ConversionConfirmComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _conversion_confirm_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conversion-confirm.component.html?ngResource */ 71026);
/* harmony import */ var _conversion_confirm_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conversion-confirm.component.scss?ngResource */ 65732);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let ConversionConfirmComponent = class ConversionConfirmComponent {
    constructor() {
        this.agreed = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.sentForRevision = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() { }
    onAgreed() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            this.agreed.emit();
        });
    }
    onSendForRevision() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            this.sentForRevision.emit();
        });
    }
};
ConversionConfirmComponent.ctorParameters = () => [];
ConversionConfirmComponent.propDecorators = {
    confirmData: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    agreed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    sentForRevision: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
ConversionConfirmComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-conversion-confirm',
        template: _conversion_confirm_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_conversion_confirm_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ConversionConfirmComponent);



/***/ }),

/***/ 71450:
/*!********************************************************************!*\
  !*** ./src/app/shared/components/copyright/copyright.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CopyrightComponent": () => (/* binding */ CopyrightComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _copyright_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./copyright.component.html?ngResource */ 66314);
/* harmony import */ var _copyright_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./copyright.component.scss?ngResource */ 9603);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let CopyrightComponent = class CopyrightComponent {
    constructor() {
        var _a;
        this.label = (_a = localStorage
            .getItem('baseUrl')) === null || _a === void 0 ? void 0 : _a.replace('https://business-', '').replace('.jysanbank.kz:8460/api/v1', '');
    }
};
CopyrightComponent.ctorParameters = () => [];
CopyrightComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-copyright',
        template: _copyright_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_copyright_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CopyrightComponent);



/***/ }),

/***/ 35803:
/*!************************************************************************************!*\
  !*** ./src/app/shared/components/empty-placeholder/empty-placeholder.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmptyPlaceholderComponent": () => (/* binding */ EmptyPlaceholderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _empty_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./empty-placeholder.component.html?ngResource */ 78425);
/* harmony import */ var _empty_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty-placeholder.component.scss?ngResource */ 74998);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let EmptyPlaceholderComponent = class EmptyPlaceholderComponent {
    constructor() {
        this.minHeight = 250;
        this.hasRetry = false;
        this.retried = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    onRetry() {
        this.retried.emit();
    }
};
EmptyPlaceholderComponent.ctorParameters = () => [];
EmptyPlaceholderComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    minHeight: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    hasRetry: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    retried: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
EmptyPlaceholderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-empty-placeholder',
        template: _empty_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_empty_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EmptyPlaceholderComponent);



/***/ }),

/***/ 84685:
/*!************************************************************************!*\
  !*** ./src/app/shared/components/entity-logo/entity-logo.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EnityLogoComponent": () => (/* binding */ EnityLogoComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _entity_logo_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity-logo.component.html?ngResource */ 19433);
/* harmony import */ var _entity_logo_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entity-logo.component.scss?ngResource */ 32373);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @environments/environment */ 92340);





const sizes = {
    md: 40,
    sm: 28,
    xs: 20
};
const bankLogos = {
    ALFAKZKA: true,
    ABNAKZKX: true,
    ALMNKZKA: true,
    ATYNKZKA: true,
    BKCHKZKA: true,
    CASPKZKA: true,
    CEDUKZKA: true,
    CITIKZKA: true,
    TNGRKZKX: true,
    DVKAKZKA: true,
    EABRKZKA: true,
    EURIKZKA: true,
    GCVPKZ2A: true,
    HCSKKZKA: true,
    HLALKZKZ: true,
    HSBKKZKX: true,
    ICBKKZKX: true,
    INEARUMM: true,
    INLMKZKA: true,
    IRTYKZKA: true,
    KCJBKZKX: true,
    KICEKZKX: true,
    KINCKZKA: true,
    KISCKZKX: true,
    KKMFKZ2A: true,
    KPSTKZKA: true,
    KSNVKZKA: true,
    KZIBKZKA: true,
    LARIKZKA: true,
    NBPAKZKA: true,
    NBPFKZKX: true,
    NURSKZKX: true,
    SABRKZKA: true,
    SHBKKZKA: true,
    TBKBKZKA: true,
    TSESKZKA: true,
    VTBAKZKZ: true,
    ZAJSKZ22: true,
};
const curLogos = {
    AED: true,
    AUD: true,
    AZN: true,
    BYN: true,
    CAD: true,
    CHF: true,
    CNY: true,
    CZK: true,
    DKK: true,
    EUR: true,
    GBP: true,
    GEL: true,
    HKD: true,
    JPY: true,
    KGS: true,
    KZT: true,
    RUB: true,
    SAR: true,
    SEK: true,
    SGD: true,
    THB: true,
    TRY: true,
    USD: true,
    XAU: true,
};
const placeholder = `./assets/currency/UNKNOWN.svg`;
let EnityLogoComponent = class EnityLogoComponent {
    constructor() {
        this.size = 'md';
    }
    get fontSize() {
        return {
            'font-size': (this.size ? sizes[this.size] : sizes.md) + 'px',
        };
    }
    get isSmall() {
        return this.size == 'sm';
    }
    get isHidden() {
        return this.hideEmpty && this.src === placeholder;
    }
    get src() {
        if (this.name) {
            if (bankLogos[this.name]) {
                return `${_environments_environment__WEBPACK_IMPORTED_MODULE_2__.environment.bankLogo}${this.name}.svg`;
            }
            if (curLogos[this.name]) {
                return `${_environments_environment__WEBPACK_IMPORTED_MODULE_2__.environment.curLogo}${this.name}.svg`;
            }
        }
        return placeholder;
    }
};
EnityLogoComponent.ctorParameters = () => [];
EnityLogoComponent.propDecorators = {
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    size: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    hideEmpty: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    fontSize: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding, args: ['style',] }],
    isSmall: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding, args: ['class.j-entity-logo--small',] }],
    isHidden: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding, args: ['class.j-entity-logo_empty',] }]
};
EnityLogoComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-entity-logo',
        template: _entity_logo_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ViewEncapsulation.None,
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectionStrategy.OnPush,
        host: {
            class: 'j-entity-logo',
        },
        styles: [_entity_logo_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EnityLogoComponent);



/***/ }),

/***/ 8734:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/components/environment-change/environment-change.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EnvironmentChangeComponent": () => (/* binding */ EnvironmentChangeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _environment_change_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment-change.component.html?ngResource */ 19651);
/* harmony import */ var _environment_change_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment-change.component.scss?ngResource */ 80018);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var _shared_token_token_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/token/token.service */ 47083);








let EnvironmentChangeComponent = class EnvironmentChangeComponent {
    constructor(apiService, authService, tokenService, router) {
        this.apiService = apiService;
        this.authService = authService;
        this.tokenService = tokenService;
        this.router = router;
        this.envs = [
            {
                label: 'Dev',
                url: 'https://business-dev.jysanbank.kz:8460/api/v1',
            },
            {
                label: 'Staging',
                url: 'https://business-staging.jysanbank.kz:8460/api/v1',
            },
            {
                label: 'Test1',
                url: 'https://business-test1.jysanbank.kz:8460/api/v1',
            },
            {
                label: 'Uat',
                url: 'https://business-uat.jysanbank.kz:8460/api/v1',
            },
        ];
        this.initLabel();
    }
    onEnvChange(env) {
        this.apiService.baseUrl = env.url;
        this.tokenService.clearUserToken();
        this.tokenService.clearDeviceToken();
        this.tokenService.clearClientToken();
        localStorage.setItem('baseUrlLabel', env.label);
        localStorage.setItem('baseUrl', env.url);
        this.authService.logout();
        window.location.reload();
    }
    initLabel() {
        var _a;
        let baseUrlLabel = localStorage.getItem('baseUrlLabel') || null;
        if (!baseUrlLabel) {
            baseUrlLabel =
                ((_a = localStorage
                    .getItem('baseUrl')) === null || _a === void 0 ? void 0 : _a.replace('https://business-', '').replace('.jysanbank.kz:8460/api/v1', '')) || null;
            if (baseUrlLabel) {
                localStorage.setItem('baseUrlLabel', baseUrlLabel);
            }
        }
        this.label = baseUrlLabel;
    }
    get showNavigateToJmartCabinet() {
        return this.router.url === '/auth/login';
    }
    navigateToJmartCabinet() {
        this.router.navigate(['jmart-cabinet', 'auth']);
    }
};
EnvironmentChangeComponent.ctorParameters = () => [
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_2__.ApiService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__.AuthService },
    { type: _shared_token_token_service__WEBPACK_IMPORTED_MODULE_4__.TokenService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__.Router }
];
EnvironmentChangeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'j-environment-change',
        template: _environment_change_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_environment_change_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EnvironmentChangeComponent);



/***/ }),

/***/ 43169:
/*!************************************************************************************!*\
  !*** ./src/app/shared/components/error-placeholder/error-placeholder.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorPlaceholderComponent": () => (/* binding */ ErrorPlaceholderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _error_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error-placeholder.component.html?ngResource */ 11745);
/* harmony import */ var _error_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error-placeholder.component.scss?ngResource */ 20160);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let ErrorPlaceholderComponent = class ErrorPlaceholderComponent {
    constructor() {
        this.isRetryable = true;
        this.imgLink = '/assets/img/shared/server-error.svg';
        this.retried = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() { }
    onRetry() {
        this.retried.emit();
    }
};
ErrorPlaceholderComponent.ctorParameters = () => [];
ErrorPlaceholderComponent.propDecorators = {
    isRetryable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    errorText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    errorBadge: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    imgLink: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    retried: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
ErrorPlaceholderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-error-placeholder',
        template: _error_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_error_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ErrorPlaceholderComponent);



/***/ }),

/***/ 66526:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/footer/footer.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FooterComponent": () => (/* binding */ FooterComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _footer_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./footer.component.html?ngResource */ 1933);
/* harmony import */ var _footer_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./footer.component.scss?ngResource */ 60434);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @environments/environment */ 92340);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @auth/auth.service */ 50384);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @company/company.service */ 26164);







let FooterComponent = class FooterComponent {
    constructor(companyService, authService) {
        this.companyService = companyService;
        this.authService = authService;
        this.langClassName = 'd-none d-lg-block';
        this.copyrightClassName = '';
        this.isAuthorized = false;
        this.isDev = !_environments_environment__WEBPACK_IMPORTED_MODULE_2__.environment.production;
        this.companyService.refresh$.subscribe((companyRefresh) => {
            const [user, company, isAuthorized] = companyRefresh;
            this.isAuthorized = isAuthorized;
        });
    }
    logout() {
        this.authService.revokeSession();
        this.authService.logout();
    }
};
FooterComponent.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_4__.CompanyService },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__.AuthService }
];
FooterComponent.propDecorators = {
    langClassName: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    copyrightClassName: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }]
};
FooterComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-footer',
        template: _footer_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_footer_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], FooterComponent);



/***/ }),

/***/ 36290:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/header/header.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderComponent": () => (/* binding */ HeaderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _header_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header.component.html?ngResource */ 58926);
/* harmony import */ var _header_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./header.component.scss?ngResource */ 25501);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 52428);
/* harmony import */ var _payments_models_steps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @payments/models/steps */ 13389);
/* harmony import */ var _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services/header.service */ 60940);









let HeaderComponent = class HeaderComponent {
    constructor(route, headerService) {
        this.route = route;
        this.headerService = headerService;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subscription();
        this.steps = _payments_models_steps__WEBPACK_IMPORTED_MODULE_2__.PAYMENTS_STEPS;
        this.title$ = this.route.data.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.pluck)('title'));
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    setStep(step) {
        this.headerService.setCurrentStep(step);
        // if (step != PAYMENTS_STEPS.NONE) {
        //   (document.querySelector('body') as HTMLElement).style.overflow = 'hidden';
        // } else {
        //   (document.querySelector('body') as HTMLElement).style.overflow = 'unset';
        // }
        // this.currentStep = step;
    }
};
HeaderComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute },
    { type: _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__.HeaderService }
];
HeaderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'j-header',
        template: _header_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_header_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], HeaderComponent);



/***/ }),

/***/ 56103:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/import/import.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImportComponent": () => (/* binding */ ImportComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _import_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import.component.html?ngResource */ 20472);
/* harmony import */ var _import_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import.component.scss?ngResource */ 50612);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _shared_modals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/modals */ 24358);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_services_files_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/services/files.service */ 17687);










let ImportComponent = class ImportComponent {
    constructor(companyService, filesService, modalService, translateService) {
        this.companyService = companyService;
        this.filesService = filesService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.isImporting = false;
        this.restrictedFormats = [
            'wav', 'aiff', 'ape', 'flac', 'mp3', 'ogg', 'wma', 'midi', 'mid', 'aac', 'aa', 'au', 'ac3', 'aud', 'm4a', 'avi', 'asf',
            'mp4', 'm4v', 'mov', 'mpg', 'mpeg', '3gp', 'wmv', 'mkv', 'zip', 'rar', '7z', 'ace', 'arj', 'cab', 'tar', 'lzh',
            'gz', 'gzip', 'pkg', 'pak', 'exe', 'com', 'apk', 'jar', 'bin', 'cgi', 'cmd', 'msi', 'js', 'jse', 'scr',
            'vbe', 'vbs', 'cpp', 'bat', 'sql', 'docm', 'dot', 'dotx', 'dotm', 'xlsm', 'xlsb', 'xlt', 'xltx', 'ppt', 'pptx', 'svg',
        ];
    }
    onImportClick(event) {
        const rawFiles = event.target.files || event.target.file;
        const importingFiles = [];
        for (let i = 0; i < rawFiles.length; i++) {
            importingFiles[i] = rawFiles[i];
        }
        this.importPayments(importingFiles);
        this.importModel = null;
    }
    importPayments(importingFiles) {
        var _a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            let restricted;
            let fileSizeAllowed = true;
            importingFiles.forEach(file => {
                if (file.size > 5120000) {
                    fileSizeAllowed = false;
                }
                restricted = this.restrictedFormats.find(format => format === file.name.split('.').pop());
            });
            if (!fileSizeAllowed) {
                this.showImportError(importingFiles, 'IMPORT.TOO_BIG_FILE', 0);
            }
            if (restricted) {
                this.showImportError(importingFiles, 'IMPORT.RESTRICTED_FILES', 0);
            }
            if (!importingFiles || restricted || !fileSizeAllowed) {
                return;
            }
            this.isImporting = true;
            try {
                const importResultList = yield this.filesService.uploadPayments(this.companyService.currentId, importingFiles);
                const totalOperations = this.countTotalOperations(importResultList);
                const succeededOperations = this.countSuccessOperations(importResultList);
                const invalidFiles = this.countInvalidFiles(importResultList);
                const alreadyImportedFiles = this.countAlreadyImportedFiles(importResultList);
                const draftedOperations = this.countDraftedOperations(importResultList);
                const erroredOperations = totalOperations - succeededOperations - draftedOperations;
                if (totalOperations === 0 || invalidFiles === importResultList.length) {
                    this.showImportError(importingFiles, null, alreadyImportedFiles);
                }
                else if (succeededOperations === 0) {
                    this.showImportPartialError(importResultList, invalidFiles, draftedOperations, erroredOperations);
                }
                else if (totalOperations === succeededOperations) {
                    this.showImportSuccess(succeededOperations);
                }
                else {
                    this.showImportPartialSuccess(importResultList, invalidFiles, draftedOperations, succeededOperations, erroredOperations);
                }
            }
            catch (error) {
                let description = error.description;
                if (((_a = error.code) === null || _a === void 0 ? void 0 : _a.toUpperCase()) === 'DISABLE_SEND_DEPOSIT_ACCOUNT') {
                    description = this.translateService.instant(`IMPORT.DISABLE_SEND_DEPOSIT_ACCOUNT.ONE`);
                }
                this.showImportError(importingFiles, description);
            }
            finally {
                this.isImporting = false;
            }
        });
    }
    showImportPartialSuccess(importResultList, invalidFilesCount, draftedOperationsCount, successOperationsCount, erroredOperationsCount) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modal = this.modalService.open(_shared_modals__WEBPACK_IMPORTED_MODULE_3__.ImportPartialSuccessComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_md',
                backdrop: 'static',
                centered: true,
            });
            modal.componentInstance.invalidFilesCount = invalidFilesCount;
            modal.componentInstance.draftedOperationsCount = draftedOperationsCount;
            modal.componentInstance.erroredOperationsCount = erroredOperationsCount;
            modal.componentInstance.successOperationsCount = successOperationsCount;
            modal.componentInstance.importResultList = importResultList;
        });
    }
    showImportPartialError(importResultList, invalidFilesCount, draftedOperationsCount, erroredOperationsCount) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modal = this.modalService.open(_shared_modals__WEBPACK_IMPORTED_MODULE_3__.ImportPartialErrorComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_md',
                backdrop: 'static',
                centered: true,
            });
            modal.componentInstance.invalidFilesCount = invalidFilesCount;
            modal.componentInstance.draftedOperationsCount = draftedOperationsCount;
            modal.componentInstance.importResultList = importResultList;
            modal.componentInstance.erroredOperationsCount = erroredOperationsCount;
        });
    }
    showImportSuccess(operationsCount) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modal = this.modalService.open(_shared_modals__WEBPACK_IMPORTED_MODULE_3__.ImportSuccessComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_sm',
                backdrop: 'static',
                centered: true,
            });
            modal.componentInstance.operationsCount = operationsCount;
        });
    }
    showImportError(importingFiles = null, errorText = null, alreadyImportedCount = 0) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modal = this.modalService.open(_shared_modals__WEBPACK_IMPORTED_MODULE_3__.ImportErrorComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal_sm',
                backdrop: 'static',
                centered: true,
            });
            modal.componentInstance.filesCount = importingFiles === null || importingFiles === void 0 ? void 0 : importingFiles.length;
            modal.componentInstance.errorText = errorText;
            if (alreadyImportedCount > 0) {
                modal.componentInstance.descriptionKey = 'ALREADY_IMPORTED';
            }
            try {
                yield modal.result;
                this.importPayments(importingFiles);
            }
            catch (error) { }
        });
    }
    countDraftedOperations(importResultList) {
        let result = 0;
        importResultList.forEach((importResult) => {
            var _a;
            result += (_a = importResult.failed) === null || _a === void 0 ? void 0 : _a.reduce((prev, current) => {
                return prev + (current.status === _shared_models__WEBPACK_IMPORTED_MODULE_4__.IMPORT_ERROR_STATUS.FAILED ? 0 : 1);
            }, 0);
        });
        return result;
    }
    countSuccessOperations(importResultList) {
        let result = 0;
        importResultList.forEach((importResult) => {
            result += importResult.success;
        });
        return result;
    }
    countTotalOperations(importResultList) {
        let result = 0;
        importResultList.forEach((importResult) => {
            result += importResult.total;
        });
        return result;
    }
    countInvalidFiles(importResultList) {
        let result = 0;
        importResultList.forEach((importResult) => {
            if (importResult.status === _shared_models__WEBPACK_IMPORTED_MODULE_4__.IMPORT_STATUS.INVALID_FORMAT) {
                result++;
            }
        });
        return result;
    }
    countAlreadyImportedFiles(importResultList) {
        let result = 0;
        importResultList.forEach((importResult) => {
            if (importResult.status === _shared_models__WEBPACK_IMPORTED_MODULE_4__.IMPORT_STATUS.ALREADY_IMPORTED) {
                result++;
            }
        });
        return result;
    }
};
ImportComponent.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_2__.CompanyService },
    { type: _shared_services_files_service__WEBPACK_IMPORTED_MODULE_5__.FilesService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbModal },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__.TranslateService }
];
ImportComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
        selector: 'j-import',
        template: _import_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_import_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ImportComponent);



/***/ }),

/***/ 7667:
/*!********************************************!*\
  !*** ./src/app/shared/components/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHARED_COMPONENTS": () => (/* binding */ SHARED_COMPONENTS),
/* harmony export */   "AsideComponent": () => (/* reexport safe */ _aside_aside_component__WEBPACK_IMPORTED_MODULE_0__.AsideComponent),
/* harmony export */   "PaymentSelectComponent": () => (/* reexport safe */ _payment_select_payment_select_component__WEBPACK_IMPORTED_MODULE_8__.PaymentSelectComponent),
/* harmony export */   "HeaderComponent": () => (/* reexport safe */ _header_header_component__WEBPACK_IMPORTED_MODULE_7__.HeaderComponent),
/* harmony export */   "FooterComponent": () => (/* reexport safe */ _footer_footer_component__WEBPACK_IMPORTED_MODULE_1__.FooterComponent),
/* harmony export */   "LangListComponent": () => (/* reexport safe */ _lang_list_lang_list_component__WEBPACK_IMPORTED_MODULE_2__.LangListComponent),
/* harmony export */   "CopyrightComponent": () => (/* reexport safe */ _copyright_copyright_component__WEBPACK_IMPORTED_MODULE_3__.CopyrightComponent),
/* harmony export */   "SwitchComponent": () => (/* reexport safe */ _switch_switch_component__WEBPACK_IMPORTED_MODULE_4__.SwitchComponent),
/* harmony export */   "EnityLogoComponent": () => (/* reexport safe */ _entity_logo_entity_logo_component__WEBPACK_IMPORTED_MODULE_5__.EnityLogoComponent),
/* harmony export */   "MoneyComponent": () => (/* reexport safe */ _money_money_component__WEBPACK_IMPORTED_MODULE_6__.MoneyComponent),
/* harmony export */   "SmsComponent": () => (/* reexport safe */ _sms_sms_component__WEBPACK_IMPORTED_MODULE_9__.SmsComponent),
/* harmony export */   "SmsErrorComponent": () => (/* reexport safe */ _sms_error_sms_error_component__WEBPACK_IMPORTED_MODULE_10__.SmsErrorComponent),
/* harmony export */   "ImportComponent": () => (/* reexport safe */ _import_import_component__WEBPACK_IMPORTED_MODULE_11__.ImportComponent),
/* harmony export */   "EmptyPlaceholderComponent": () => (/* reexport safe */ _empty_placeholder_empty_placeholder_component__WEBPACK_IMPORTED_MODULE_13__.EmptyPlaceholderComponent),
/* harmony export */   "PasswordRequirementComponent": () => (/* reexport safe */ _password_requirement_password_requirement_component__WEBPACK_IMPORTED_MODULE_14__.PasswordRequirementComponent),
/* harmony export */   "OtpComponent": () => (/* reexport safe */ _otp_otp_component__WEBPACK_IMPORTED_MODULE_15__.OtpComponent),
/* harmony export */   "KbeInfoComponent": () => (/* reexport safe */ _kbe_info_kbe_info_component__WEBPACK_IMPORTED_MODULE_19__.KbeInfoComponent),
/* harmony export */   "CollapsibleComponent": () => (/* reexport safe */ _collapsible_collapsible_component__WEBPACK_IMPORTED_MODULE_16__.CollapsibleComponent),
/* harmony export */   "CollapsibleBodyComponent": () => (/* reexport safe */ _collapsible_collapsible_body_collapsible_body_component__WEBPACK_IMPORTED_MODULE_17__.CollapsibleBodyComponent),
/* harmony export */   "CollapsibleTriggerComponent": () => (/* reexport safe */ _collapsible_collapsible_trigger_collapsible_trigger_component__WEBPACK_IMPORTED_MODULE_18__.CollapsibleTriggerComponent),
/* harmony export */   "ConversionConfirmComponent": () => (/* reexport safe */ _conversion_confirm_conversion_confirm_component__WEBPACK_IMPORTED_MODULE_20__.ConversionConfirmComponent),
/* harmony export */   "CONFIRM_SIGNATURE_TYPE": () => (/* reexport safe */ _confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_21__.CONFIRM_SIGNATURE_TYPE),
/* harmony export */   "ConfirmSmsModalComponent": () => (/* reexport safe */ _confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_21__.ConfirmSmsModalComponent),
/* harmony export */   "UploadingFilesComponent": () => (/* reexport safe */ _uploading_files_uploading_files_component__WEBPACK_IMPORTED_MODULE_22__.UploadingFilesComponent),
/* harmony export */   "StatusesComponent": () => (/* reexport safe */ _statuses_statuses_component__WEBPACK_IMPORTED_MODULE_23__.StatusesComponent),
/* harmony export */   "ErrorPlaceholderComponent": () => (/* reexport safe */ _error_placeholder_error_placeholder_component__WEBPACK_IMPORTED_MODULE_24__.ErrorPlaceholderComponent),
/* harmony export */   "ToggleComponent": () => (/* reexport safe */ _toggle_toggle_component__WEBPACK_IMPORTED_MODULE_29__.ToggleComponent),
/* harmony export */   "EnvironmentChangeComponent": () => (/* reexport safe */ _environment_change_environment_change_component__WEBPACK_IMPORTED_MODULE_30__.EnvironmentChangeComponent),
/* harmony export */   "RestrictedPlaceholderComponent": () => (/* reexport safe */ _restricted_placeholder_restricted_placeholder_component__WEBPACK_IMPORTED_MODULE_31__.RestrictedPlaceholderComponent)
/* harmony export */ });
/* harmony import */ var _aside_aside_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aside/aside.component */ 16831);
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./footer/footer.component */ 66526);
/* harmony import */ var _lang_list_lang_list_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lang-list/lang-list.component */ 81880);
/* harmony import */ var _copyright_copyright_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./copyright/copyright.component */ 71450);
/* harmony import */ var _switch_switch_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./switch/switch.component */ 46755);
/* harmony import */ var _entity_logo_entity_logo_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./entity-logo/entity-logo.component */ 84685);
/* harmony import */ var _money_money_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./money/money.component */ 72159);
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./header/header.component */ 36290);
/* harmony import */ var _payment_select_payment_select_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./payment-select/payment-select.component */ 51770);
/* harmony import */ var _sms_sms_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sms/sms.component */ 28957);
/* harmony import */ var _sms_error_sms_error_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sms-error/sms-error.component */ 12681);
/* harmony import */ var _import_import_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./import/import.component */ 56103);
/* harmony import */ var _new_password_new_password_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./new-password/new-password.component */ 16497);
/* harmony import */ var _empty_placeholder_empty_placeholder_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./empty-placeholder/empty-placeholder.component */ 35803);
/* harmony import */ var _password_requirement_password_requirement_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./password-requirement/password-requirement.component */ 45914);
/* harmony import */ var _otp_otp_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./otp/otp.component */ 51492);
/* harmony import */ var _collapsible_collapsible_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./collapsible/collapsible.component */ 54507);
/* harmony import */ var _collapsible_collapsible_body_collapsible_body_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./collapsible/collapsible-body/collapsible-body.component */ 25021);
/* harmony import */ var _collapsible_collapsible_trigger_collapsible_trigger_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./collapsible/collapsible-trigger/collapsible-trigger.component */ 68221);
/* harmony import */ var _kbe_info_kbe_info_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kbe-info/kbe-info.component */ 32902);
/* harmony import */ var _conversion_confirm_conversion_confirm_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./conversion-confirm/conversion-confirm.component */ 40608);
/* harmony import */ var _confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./confirm-sms-modal/confirm-sms-modal.component */ 53917);
/* harmony import */ var _uploading_files_uploading_files_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./uploading-files/uploading-files.component */ 48622);
/* harmony import */ var _statuses_statuses_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./statuses/statuses.component */ 89801);
/* harmony import */ var _error_placeholder_error_placeholder_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./error-placeholder/error-placeholder.component */ 43169);
/* harmony import */ var _list_list_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./list/list.component */ 161);
/* harmony import */ var _list_item_list_item_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./list-item/list-item.component */ 56694);
/* harmony import */ var _animated_loading_animated_loading_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./animated-loading/animated-loading.component */ 33999);
/* harmony import */ var _core_components_ngb_datepicker_i18n_ngb_datepicker_i18n_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../core/components/ngb-datepicker-i18n/ngb-datepicker-i18n.component */ 68873);
/* harmony import */ var _toggle_toggle_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./toggle/toggle.component */ 21580);
/* harmony import */ var _environment_change_environment_change_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./environment-change/environment-change.component */ 8734);
/* harmony import */ var _restricted_placeholder_restricted_placeholder_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./restricted-placeholder/restricted-placeholder.component */ 27763);
/* harmony import */ var _sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sidebar/sidebar.component */ 6664);
/* harmony import */ var _modal_modal_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./modal/modal.component */ 60312);


































const SHARED_COMPONENTS = [
    _footer_footer_component__WEBPACK_IMPORTED_MODULE_1__.FooterComponent,
    _header_header_component__WEBPACK_IMPORTED_MODULE_7__.HeaderComponent,
    _payment_select_payment_select_component__WEBPACK_IMPORTED_MODULE_8__.PaymentSelectComponent,
    _lang_list_lang_list_component__WEBPACK_IMPORTED_MODULE_2__.LangListComponent,
    _copyright_copyright_component__WEBPACK_IMPORTED_MODULE_3__.CopyrightComponent,
    _aside_aside_component__WEBPACK_IMPORTED_MODULE_0__.AsideComponent,
    _switch_switch_component__WEBPACK_IMPORTED_MODULE_4__.SwitchComponent,
    _entity_logo_entity_logo_component__WEBPACK_IMPORTED_MODULE_5__.EnityLogoComponent,
    _money_money_component__WEBPACK_IMPORTED_MODULE_6__.MoneyComponent,
    _sms_sms_component__WEBPACK_IMPORTED_MODULE_9__.SmsComponent,
    _sms_error_sms_error_component__WEBPACK_IMPORTED_MODULE_10__.SmsErrorComponent,
    _import_import_component__WEBPACK_IMPORTED_MODULE_11__.ImportComponent,
    _empty_placeholder_empty_placeholder_component__WEBPACK_IMPORTED_MODULE_13__.EmptyPlaceholderComponent,
    _new_password_new_password_component__WEBPACK_IMPORTED_MODULE_12__.NewPasswordComponent,
    _password_requirement_password_requirement_component__WEBPACK_IMPORTED_MODULE_14__.PasswordRequirementComponent,
    _otp_otp_component__WEBPACK_IMPORTED_MODULE_15__.OtpComponent,
    _collapsible_collapsible_component__WEBPACK_IMPORTED_MODULE_16__.CollapsibleComponent,
    _collapsible_collapsible_body_collapsible_body_component__WEBPACK_IMPORTED_MODULE_17__.CollapsibleBodyComponent,
    _collapsible_collapsible_trigger_collapsible_trigger_component__WEBPACK_IMPORTED_MODULE_18__.CollapsibleTriggerComponent,
    _kbe_info_kbe_info_component__WEBPACK_IMPORTED_MODULE_19__.KbeInfoComponent,
    _conversion_confirm_conversion_confirm_component__WEBPACK_IMPORTED_MODULE_20__.ConversionConfirmComponent,
    _confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_21__.ConfirmSmsModalComponent,
    _uploading_files_uploading_files_component__WEBPACK_IMPORTED_MODULE_22__.UploadingFilesComponent,
    _statuses_statuses_component__WEBPACK_IMPORTED_MODULE_23__.StatusesComponent,
    _error_placeholder_error_placeholder_component__WEBPACK_IMPORTED_MODULE_24__.ErrorPlaceholderComponent,
    _list_list_component__WEBPACK_IMPORTED_MODULE_25__.ListComponent,
    _list_item_list_item_component__WEBPACK_IMPORTED_MODULE_26__.ListItemComponent,
    _animated_loading_animated_loading_component__WEBPACK_IMPORTED_MODULE_27__.AnimatedLoadingComponent,
    _core_components_ngb_datepicker_i18n_ngb_datepicker_i18n_component__WEBPACK_IMPORTED_MODULE_28__.NgbdDatepickerI18n,
    _toggle_toggle_component__WEBPACK_IMPORTED_MODULE_29__.ToggleComponent,
    _environment_change_environment_change_component__WEBPACK_IMPORTED_MODULE_30__.EnvironmentChangeComponent,
    _restricted_placeholder_restricted_placeholder_component__WEBPACK_IMPORTED_MODULE_31__.RestrictedPlaceholderComponent,
    _sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_32__.SidebarComponent,
    _modal_modal_component__WEBPACK_IMPORTED_MODULE_33__.ModalComponent,
];






























/***/ }),

/***/ 32902:
/*!******************************************************************!*\
  !*** ./src/app/shared/components/kbe-info/kbe-info.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KbeInfoComponent": () => (/* binding */ KbeInfoComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _kbe_info_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kbe-info.component.html?ngResource */ 61029);
/* harmony import */ var _kbe_info_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kbe-info.component.scss?ngResource */ 45806);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let KbeInfoComponent = class KbeInfoComponent {
    constructor() { }
    ngOnInit() {
    }
};
KbeInfoComponent.ctorParameters = () => [];
KbeInfoComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-kbe-info',
        template: _kbe_info_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_kbe_info_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], KbeInfoComponent);



/***/ }),

/***/ 81880:
/*!********************************************************************!*\
  !*** ./src/app/shared/components/lang-list/lang-list.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LangListComponent": () => (/* binding */ LangListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _lang_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang-list.component.html?ngResource */ 29028);
/* harmony import */ var _lang_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang-list.component.scss?ngResource */ 51232);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _shared_services_lang_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/services/lang.service */ 52848);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);







let LangListComponent = class LangListComponent {
    constructor(translateService, langService) {
        this.translateService = translateService;
        this.langService = langService;
        this.isAuthorized = false;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
        this.currentLang = this.translateService.currentLang;
        this.translateService.onLangChange.subscribe((langChangeEvent) => {
            this.currentLang = this.translateService.currentLang;
        });
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    changeLang(event, lang) {
        event.preventDefault();
        this.langService.setLang(lang);
    }
};
LangListComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__.TranslateService },
    { type: _shared_services_lang_service__WEBPACK_IMPORTED_MODULE_2__.LangService }
];
LangListComponent.propDecorators = {
    isAuthorized: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }]
};
LangListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-lang-list',
        template: _lang_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_lang_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], LangListComponent);



/***/ }),

/***/ 56694:
/*!********************************************************************!*\
  !*** ./src/app/shared/components/list-item/list-item.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListItemComponent": () => (/* binding */ ListItemComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _list_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list-item.component.html?ngResource */ 32789);
/* harmony import */ var _list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list-item.component.scss?ngResource */ 23954);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _utils_misc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/misc */ 37212);






let ListItemComponent = class ListItemComponent {
    constructor() {
        this.translatePrefix = 'LIST.ITEM';
        this.isHoverable = false;
        this.isSignable = false;
        this.isSelectable = false;
        this.isDeletable = false;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.deleted = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.signed = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.clicked = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.id = (0,_utils_misc__WEBPACK_IMPORTED_MODULE_2__.generateUniqueId)();
        this.isSelected = false;
        this.isHighlighted = false;
        this.isHighlightedTemporarily = false;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subscription();
    }
    get listItemStyle() {
        let gridTemplateColumns = '';
        if (this.isSelectable) {
            gridTemplateColumns += '24px ';
        }
        gridTemplateColumns += 'minmax(0, 1fr) ';
        if (this.isDeletable && this.isSignable) {
            gridTemplateColumns += '84px';
        }
        else if (this.isDeletable || this.isSignable) {
            gridTemplateColumns += '40px';
        }
        return { 'grid-template-columns': gridTemplateColumns };
    }
    ngOnInit() {
        this.initOnSelectSubscription();
        this.initHighlighted();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    onClick() {
        if (this.isLoading) {
            return;
        }
        this.clicked.emit(this.item);
        this.initHighlighted();
    }
    onSelect() {
        if (this.isLoading) {
            return;
        }
        this.selected.emit(this.item);
    }
    onDelete(event) {
        event.stopPropagation();
        if (this.isLoading) {
            return;
        }
        this.deleted.emit(this.item);
    }
    onSign(event) {
        event.stopPropagation();
        if (this.isLoading) {
            return;
        }
        this.signed.emit(this.item);
    }
    initHighlighted() {
        if (this.highlightedFn) {
            this.isHighlighted = this.highlightedFn(this.item);
        }
        if (!this.isHighlighted && this.highlightedTemporarilyFn) {
            this.isHighlightedTemporarily = this.highlightedTemporarilyFn(this.item);
            if (this.isHighlightedTemporarily) {
                setTimeout(() => {
                    this.isHighlightedTemporarily = false;
                }, 5000);
            }
        }
    }
    initOnSelectSubscription() {
        var _a;
        if ((_a = this.onSelectAll) === null || _a === void 0 ? void 0 : _a.subscribe) {
            this.subscription.add(this.onSelectAll.subscribe((value) => {
                this.isSelected = value;
            }));
        }
    }
};
ListItemComponent.ctorParameters = () => [];
ListItemComponent.propDecorators = {
    item: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    translatePrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    highlightedFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    highlightedTemporarilyFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isHoverable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isSignable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isSelectable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isDeletable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    onSelectAll: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }],
    deleted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }],
    signed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }],
    clicked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }],
    selectableTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    defaultTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    itemClassNames: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
ListItemComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-list-item',
        template: _list_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ListItemComponent);



/***/ }),

/***/ 161:
/*!**********************************************************!*\
  !*** ./src/app/shared/components/list/list.component.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListComponent": () => (/* binding */ ListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list.component.html?ngResource */ 75775);
/* harmony import */ var _list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list.component.scss?ngResource */ 90896);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals */ 24358);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../models */ 63157);
/* harmony import */ var _services_list_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/list.service */ 82499);








let ListComponent = class ListComponent {
    constructor(modalService, listService) {
        this.modalService = modalService;
        this.listService = listService;
        this.translatePrefix = 'LIST';
        this.isHoverable = false;
        this.isDeletable = false;
        this.isSelectable = false;
        this.isSignable = false;
        this.clicked = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.scrolled = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.signed = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.cleared = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.selected = [];
        this.loadingIds = [];
        this.allSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.isAllSelected = false;
        this.isSigningSelected = false;
        this.isDeletingSelected = false;
    }
    onClick(clickedItem) {
        this.clicked.emit(clickedItem);
    }
    onSelect(selectedItem) {
        if (this.selected.includes(selectedItem)) {
            this.selected = this.selected.filter((item) => item != selectedItem);
        }
        else {
            this.selected.push(selectedItem);
        }
        this.isAllSelected = this.selected.length === this.list.length;
    }
    onScroll() {
        this.scrolled.emit();
    }
    onSelectAll() {
        if (this.isAllSelected) {
            this.selected = [...this.list];
        }
        else {
            this.selected = [];
        }
        this.allSelected.emit(this.isAllSelected);
    }
    onDelete(deletedItem) {
        this.onDeleteBulk([deletedItem.id]);
    }
    onDeleteSelected() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            if (this.isDeletingSelected || this.isSigningSelected) {
                return;
            }
            this.isDeletingSelected = true;
            try {
                yield this.onDeleteBulk(this.getSelectedIds());
            }
            catch (error) {
            }
            finally {
                this.isDeletingSelected = false;
            }
        });
    }
    onDeleteBulk(ids) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const idsToDelete = ids.filter((id) => !this.loadingIds.includes(id));
                if (idsToDelete.length === 0) {
                    return;
                }
                this.includeIdsToLoading(ids);
                let result = yield this.listService.deleteList(this.urlPath, idsToDelete);
                const deleteResult = yield this.showModal('DELETE', result, this.onDeleteBulk, ids);
                this.clearListByIds(ids);
                return deleteResult;
            }
            catch (error) {
                this.showModal('DELETE', {
                    numberOfFailed: ids.length,
                    numberOfSuccess: 0,
                    status: _models__WEBPACK_IMPORTED_MODULE_3__.BULK_OPERATION_STATUS.FAILED,
                }, this.onDeleteBulk, ids);
            }
            finally {
                this.excludeIdsFromLoading(ids);
            }
        });
    }
    onSign(letter) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            try {
                let result = yield this.listService.sign(this.urlPath, letter.id);
                if (result) {
                    this.showModal('SIGN', {
                        numberOfFailed: 0,
                        numberOfSuccess: 1,
                        status: _models__WEBPACK_IMPORTED_MODULE_3__.BULK_OPERATION_STATUS.SUCCESS,
                        results: [],
                    }, this.onSign, letter);
                    this.clearListByIds([letter.id]);
                }
            }
            catch (error) {
                this.showModal('SIGN', {
                    numberOfFailed: 1,
                    numberOfSuccess: 0,
                    status: _models__WEBPACK_IMPORTED_MODULE_3__.BULK_OPERATION_STATUS.FAILED,
                    results: [],
                }, this.onSign, letter);
            }
        });
    }
    onSignBulk(ids) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const idsToSign = ids.filter((id) => !this.loadingIds.includes(id));
                if (idsToSign.length === 0) {
                    return;
                }
                this.includeIdsToLoading(ids);
                let result = yield this.listService.sign(this.urlPath, idsToSign);
                if (result) {
                    this.signed.emit();
                    yield this.showModal('SIGN', result, this.onSignBulk, ids);
                    this.clearListByIds(ids);
                }
                return result;
            }
            catch (error) {
                this.showModal('SIGN', {
                    numberOfFailed: ids.length,
                    numberOfSuccess: 0,
                    status: _models__WEBPACK_IMPORTED_MODULE_3__.BULK_OPERATION_STATUS.FAILED,
                }, this.onSignBulk, ids);
            }
            finally {
                this.excludeIdsFromLoading(ids);
            }
        });
    }
    onSignAll() {
        this.onSignBulk(this.getAllIds());
    }
    onSignSelected() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            if (this.isDeletingSelected || this.isSigningSelected) {
                return;
            }
            this.isSigningSelected = true;
            try {
                yield this.onSignBulk(this.getSelectedIds());
            }
            catch (error) {
            }
            finally {
                this.isSigningSelected = false;
            }
        });
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    showModal(key, result = null, callback, args) {
        var _a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modalRef = this.modalService.open(_modals__WEBPACK_IMPORTED_MODULE_2__.ListModalComponent, {
                backdropClass: 'backdrop_light',
                windowClass: `modal_light ${((_a = result.results) === null || _a === void 0 ? void 0 : _a.length) === 0 ||
                    result.status === _models__WEBPACK_IMPORTED_MODULE_3__.BULK_OPERATION_STATUS.SUCCESS
                    ? 'modal_sm'
                    : ''}`,
                backdrop: 'static',
                centered: true,
            });
            modalRef.componentInstance.translatePrefix =
                this.mapTranslate('MODAL');
            modalRef.componentInstance.partialTitleFn =
                this.partialTitleFn;
            modalRef.componentInstance.key = key;
            modalRef.componentInstance.result = result;
            modalRef.componentInstance.list = this.list;
            try {
                yield modalRef.result;
                return callback.apply(this, [args]);
            }
            catch (error) {
                return error;
            }
        });
    }
    includeIdsToLoading(ids) {
        ids.forEach((id) => {
            if (!this.loadingIds.includes(id)) {
                this.loadingIds.push(id);
            }
        });
    }
    excludeIdsFromLoading(ids) {
        ids.forEach((id) => {
            const index = this.loadingIds.indexOf(id);
            if (index >= 0) {
                this.loadingIds.splice(index, 1);
            }
        });
    }
    clearListByIds(ids) {
        ids.forEach((id) => {
            const itemIndex = this.list.findIndex((item) => item.id === id);
            this.list.splice(itemIndex, 1);
            const selectedIndex = this.selected.findIndex((item) => item.id === id);
            this.selected.splice(selectedIndex, 1);
        });
        this.cleared.emit();
    }
    getSelectedIds() {
        return this.selected.map((item) => {
            return item.id;
        });
    }
    getAllIds() {
        return this.list.map((item) => {
            return item.id;
        });
    }
};
ListComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbModal },
    { type: _services_list_service__WEBPACK_IMPORTED_MODULE_4__.ListService }
];
ListComponent.propDecorators = {
    title: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    list: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    translatePrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    urlPath: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    partialTitleFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    highlightedFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    highlightedTemporarilyFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    isHoverable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    isDeletable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    isSelectable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    isSignable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    itemClassNames: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    clicked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }],
    scrolled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }],
    signed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }],
    cleared: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }],
    selectableTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ContentChild, args: ['selectableTemplate', { static: false },] }],
    defaultTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ContentChild, args: ['defaultTemplate', { static: false },] }]
};
ListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-list',
        template: _list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ListComponent);



/***/ }),

/***/ 94361:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/mobile/mobile.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MobileComponent": () => (/* binding */ MobileComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _mobile_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobile.component.html?ngResource */ 65724);
/* harmony import */ var _mobile_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mobile.component.scss?ngResource */ 14225);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);





var OS;
(function (OS) {
    OS["WINDOWS_MOBILE"] = "WindowsPhone";
    OS["ANDROID"] = "Android";
    OS["IOS"] = "iOS";
    OS["UNKNOWN"] = "Unknown";
})(OS || (OS = {}));
const links = {
    ios: 'https://apps.apple.com/ru/app/jusan-business/id1536089771',
    android: 'https://play.google.com/store/apps/details?id=kz.jysan.business&hl=ru&gl=US',
};
const MOBILE_CLOSED_KEY = 'isMobileClosed';
const MOBILE_CLASSNAME = 'mobile';
let MobileComponent = class MobileComponent {
    constructor(document) {
        this.document = document;
        this.isClosed = JSON.parse(localStorage.getItem(MOBILE_CLOSED_KEY)) || false;
        this.mobileAppLink = null;
        this.updateMobileClassName();
    }
    ngOnInit() { }
    onClose() {
        this.isClosed = true;
        localStorage.setItem(MOBILE_CLOSED_KEY, JSON.stringify(true));
        this.hideMobilePanel();
    }
    updateMobileClassName() {
        if (this.isClosed) {
            this.document.body.classList.remove(MOBILE_CLASSNAME);
        }
        const os = this.getMobileOperatingSystem();
        switch (os) {
            case OS.IOS:
                this.mobileAppLink = links.ios;
                this.showMobilePanel();
                break;
            case OS.ANDROID:
                this.mobileAppLink = links.android;
                this.showMobilePanel();
                break;
            case OS.WINDOWS_MOBILE:
            default:
                this.hideMobilePanel();
                break;
        }
    }
    showMobilePanel() {
        this.document.body.classList.add(MOBILE_CLASSNAME);
    }
    hideMobilePanel() {
        this.document.body.classList.remove(MOBILE_CLASSNAME);
    }
    getMobileOperatingSystem() {
        var userAgent = navigator.userAgent || navigator.vendor || window['opera'];
        // Windows Phone must come first because its UA also contains "Android"
        if (/windows phone/i.test(userAgent)) {
            return OS.WINDOWS_MOBILE;
        }
        if (/android/i.test(userAgent)) {
            return OS.ANDROID;
        }
        // iOS detection from: http://stackoverflow.com/a/9039885/177710
        if (/iPad|iPhone|iPod/.test(userAgent) && !window['MSStream']) {
            return OS.IOS;
        }
        return OS.UNKNOWN;
    }
};
MobileComponent.ctorParameters = () => [
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject, args: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.DOCUMENT,] }] }
];
MobileComponent.propDecorators = {
    updateMobileClassName: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostListener, args: ['window:resize', ['$event'],] }]
};
MobileComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-mobile',
        template: _mobile_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_mobile_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], MobileComponent);



/***/ }),

/***/ 60312:
/*!************************************************************!*\
  !*** ./src/app/shared/components/modal/modal.component.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModalComponent": () => (/* binding */ ModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal.component.html?ngResource */ 22486);
/* harmony import */ var _modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal.component.scss?ngResource */ 57943);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);





let ModalComponent = class ModalComponent {
    constructor(modalService) {
        this.modalService = modalService;
        this.closeModal = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
    }
    open(options = {}) {
        this.modalRef = this.modalService.open(this.modalContent, options);
        this.modalRef.result.finally(() => {
            this.closeModal.emit();
        });
    }
    close() {
        this.modalRef.close();
    }
};
ModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbModal }
];
ModalComponent.propDecorators = {
    closeModal: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    modalContent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild, args: ['modal',] }]
};
ModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-modal',
        template: _modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal
        ],
        styles: [_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ModalComponent);



/***/ }),

/***/ 72159:
/*!************************************************************!*\
  !*** ./src/app/shared/components/money/money.component.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MoneyComponent": () => (/* binding */ MoneyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _money_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./money.component.html?ngResource */ 67272);
/* harmony import */ var _money_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./money.component.scss?ngResource */ 25616);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_pipes_amount_format_pipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/pipes/amount-format.pipe */ 47365);





const DECIMALS_MAX_LENGTH = 10;
let MoneyComponent = class MoneyComponent {
    constructor(amountFormatPipe) {
        this.amountFormatPipe = amountFormatPipe;
        this.showAllDecimals = false;
    }
    get sign() {
        if (this.amount == 0) {
            return '';
        }
        if ((this.showSign && this.isDebit) || this.amount < 0) {
            return `- `;
        }
        if ((this.showSign && this.amount > 0) ||
            (this.showSign && this.isCredit)) {
            return `+ `;
        }
    }
    get splittedAmount() {
        if (this.amount) {
            let amountToDivide;
            if (this.showAllDecimals) {
                amountToDivide = this.addZeroes(this.amount);
            }
            else {
                amountToDivide = this.amountFormatPipe.transform(this.amount);
            }
            const [integers, decimals] = amountToDivide.split(',');
            return this.generateSplitted(integers, decimals);
        }
        else {
            return this.generateSplitted();
        }
    }
    get amount() {
        return this.money && this.money.amount;
    }
    get currency() {
        return this.money && this.money.currency;
    }
    addZeroes(num) {
        if (!num) {
            return num;
        }
        num = +num.toFixed(DECIMALS_MAX_LENGTH);
        const dec = `${num}`.split('.')[1];
        const len = dec && dec.length > 2 ? dec.length : 2;
        return `${+num.toFixed(len)}`.replace('.', ',');
    }
    addFixedZeroes(num) {
        if (!num) {
            return num;
        }
        const dec = `${num}`.split('.')[1];
        if ((dec === null || dec === void 0 ? void 0 : dec.length) > 0) {
            return `${Number(num).toFixed(2)}`.replace('.', ',');
        }
        else {
            return `${Number(num)}`.replace('.', ',');
        }
    }
    hasDecimals(decimals) {
        return parseInt(decimals) > 0;
    }
    generateSplitted(integers = null, decimals = null) {
        return {
            integers: integers || '0',
            decimals: this.hasDecimals(decimals)
                ? decimals.length < 2
                    ? `${decimals}0`
                    : decimals
                : null,
        };
    }
};
MoneyComponent.ctorParameters = () => [
    { type: _shared_pipes_amount_format_pipe__WEBPACK_IMPORTED_MODULE_2__.AmountFormatPipe }
];
MoneyComponent.propDecorators = {
    money: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    showSign: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isDebit: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isCredit: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    showAllDecimals: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
MoneyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-money',
        template: _money_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_money_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], MoneyComponent);



/***/ }),

/***/ 16497:
/*!**************************************************************************!*\
  !*** ./src/app/shared/components/new-password/new-password.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NewPasswordComponent": () => (/* binding */ NewPasswordComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _new_password_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./new-password.component.html?ngResource */ 204);
/* harmony import */ var _new_password_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./new-password.component.scss?ngResource */ 15423);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);






let NewPasswordComponent = class NewPasswordComponent {
    constructor() {
        this.submitted = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.isLoading = false;
        this.isOldShown = false;
        this.isSubmitted = false;
        this.isOldFocused = false;
        this.isOldBlurred = false;
        this.isPasswordFocused = false;
        this.isPasswordBlurred = false;
        this.isConfirmBlurred = false;
        this.requirements = [
            {
                code: 'capital',
                label: 'AUTH.PASSWORD.REQUIREMENTS.CAPITAL',
            },
            {
                code: 'number',
                label: 'AUTH.PASSWORD.REQUIREMENTS.NUMBER',
            },
            {
                code: 'symbol',
                label: 'AUTH.PASSWORD.REQUIREMENTS.SYMBOL',
            },
            {
                code: 'length',
                label: 'AUTH.PASSWORD.REQUIREMENTS.LENGTH',
            },
        ];
        this.validate = {
            capital: false,
            number: false,
            symbol: false,
            length: false,
        };
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
        this.passwordForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
            passwordOld: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            password: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            passwordConfirm: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        });
        const formSubsciption = this.passwordForm.valueChanges.subscribe((value) => {
            this.isSubmitted = false;
            this.isPasswordBlurred = false;
            this.isConfirmBlurred = false;
            this.confirmError = '';
            this.errorText = '';
            this.validatePassword();
        });
        this.subs.add(formSubsciption);
    }
    clearForm() {
        this.passwordForm.setValue({
            passwordOld: '',
            password: '',
            passwordConfirm: '',
        });
    }
    ngAfterViewInit() {
        if (this.isOldShown) {
            this.passwordOldInput.focus();
        }
        else {
            this.passwordInput.focus();
        }
    }
    onOldFocus() {
        this.isOldFocused = true;
    }
    onOldBlur() {
        this.isOldBlurred = true;
        this.isOldFocused = false;
    }
    onOldKeyPress(event) {
        event.preventDefault();
        this.isOldBlurred = true;
        if (this.isOldValid) {
            this.passwordInput.focus();
        }
    }
    onPasswordFocus() {
        this.isPasswordFocused = true;
    }
    onPasswordBlur() {
        this.isPasswordBlurred = true;
        this.isPasswordFocused = false;
    }
    onPasswordKeyPress(event) {
        event.preventDefault();
        this.isPasswordBlurred = true;
        if (this.isPasswordValid) {
            this.passwordConfirmInput.focus();
        }
    }
    onConfirmBlur() {
        this.isConfirmBlurred = true;
    }
    onConfirmKeyPress(event) {
        event.preventDefault();
        this.isConfirmBlurred = true;
        this.onSubmit();
    }
    onSubmit() {
        this.isSubmitted = true;
        if (this.isPasswordValid && !this.isConfirmValid) {
            this.confirmError = 'ERRORS.PASSWORDS_NOT_EQUAL';
            this.passwordConfirmInput.triggerHelperAnimation();
            return;
        }
        if (this.isOldValid && this.isPasswordValid && this.isConfirmValid) {
            this.submitted.emit({
                oldPassword: this.f.passwordOld.value,
                newPassword: this.f.password.value,
            });
        }
    }
    get f() {
        return this.passwordForm.controls;
    }
    get isRequirementsShown() {
        if (this.isPasswordFocused || !this.isPasswordValid) {
            return true;
        }
        if (this.isPasswordValid) {
            return false;
        }
    }
    get isOldValid() {
        if (this.isOldShown && this.isOldEmpty) {
            return false;
        }
        return true;
    }
    get isPasswordValid() {
        if (this.isPasswordEmpty) {
            return false;
        }
        for (const property in this.validate) {
            if (this.validate.hasOwnProperty(property)) {
                if (!this.validate[property]) {
                    return false;
                }
            }
        }
        return true;
    }
    get isConfirmValid() {
        const password = this.f.password.value;
        const passwordConfirm = this.f.passwordConfirm.value;
        return password === passwordConfirm && this.isPasswordValid;
    }
    get isOldEmpty() {
        var _a;
        return ((_a = this.f.passwordOld) === null || _a === void 0 ? void 0 : _a.value.length) === 0;
    }
    get isPasswordEmpty() {
        return this.f.password.value.length === 0;
    }
    get isConfirmEmpty() {
        return this.f.passwordConfirm.value.length === 0;
    }
    validatePassword() {
        this.validate.capital = /(?=.*[a-z])(?=.*[A-Z])/g.test(this.f.password.value);
        this.validate.number = /\d/g.test(this.f.password.value);
        this.validate.symbol = /[.!@#$%^&*)]/g.test(this.f.password.value);
        this.validate.length =
            this.f.password.value.length >= 8 && this.f.password.value.length < 255;
    }
};
NewPasswordComponent.ctorParameters = () => [];
NewPasswordComponent.propDecorators = {
    submitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    errorText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isOldShown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    passwordOldInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild, args: ['passwordOldInput',] }],
    passwordInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild, args: ['passwordInput',] }],
    passwordConfirmInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild, args: ['passwordConfirmInput',] }]
};
NewPasswordComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-new-password',
        template: _new_password_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_new_password_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NewPasswordComponent);



/***/ }),

/***/ 51492:
/*!********************************************************!*\
  !*** ./src/app/shared/components/otp/otp.component.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OtpComponent": () => (/* binding */ OtpComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _otp_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./otp.component.html?ngResource */ 46400);
/* harmony import */ var _otp_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./otp.component.scss?ngResource */ 8957);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../confirm-sms-modal/confirm-sms-modal.component */ 53917);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/services */ 17253);










let OtpComponent = class OtpComponent {
    constructor(smsService) {
        this.smsService = smsService;
        this.isAuthAction = false;
        this.submitted = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.loaded = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.failed = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.smsAuthRequested = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.isReady = false;
        this.authTabs = _shared_models__WEBPACK_IMPORTED_MODULE_4__.SMS_TABS;
        this.currentTab = _shared_models__WEBPACK_IMPORTED_MODULE_4__.SMS_TABS.FORM;
        this.otpCodeLength = _shared_models__WEBPACK_IMPORTED_MODULE_4__.SMS_CODE_LENGTH;
        this.timerMaxValue = _shared_models__WEBPACK_IMPORTED_MODULE_4__.SMS_TIMER_COUNTDOWN;
        this.errorTypes = _shared_models__WEBPACK_IMPORTED_MODULE_4__.SMS_ERROR_TYPES;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subscription();
        this.errorTranslateParams = {
            triesLeft: 0,
        };
        this.otpForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
            otpCode: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
        });
        const formSubscription = this.otpForm.valueChanges.subscribe((value) => {
            this.isSubmitted = false;
            if (value.otpCode.length === this.otpCodeLength) {
                this.onSubmit();
            }
        });
        this.subscription.add(formSubscription);
    }
    ngOnInit() {
        this.requestOtp();
    }
    ngAfterViewInit() {
        // this.focus();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    setTab(tab) {
        this.currentTab = tab;
    }
    focus() {
        this.smsInput.focus();
    }
    requestOtp() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.errorText = '';
            try {
                this.smsToken = yield this.smsService.requestOtp(this.phone, this.params, this.otp);
                this.setTab(this.authTabs.FORM);
                this.startTimer();
            }
            catch (error) {
                console.log(error);
                this.mapRequestError(error);
            }
            finally {
                if (!this.isReady) {
                    this.isReady = true;
                }
                this.isLoading = false;
                this.focus();
                this.loaded.emit();
            }
        });
    }
    onSubmit() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {
            this.isSubmitted = true;
            this.errorText = '';
            this.hasError = false;
            if (this.otpForm.valid && !this.isLoading) {
                this.isLoading = true;
                this.smsToken.code = this.f.otpCode.value;
                try {
                    this.smsToken = yield this.smsService.submitOtp(this.smsToken, this.params, this.otp);
                    this.submitted.emit(this.smsToken);
                }
                catch (error) {
                    this.hasError = true;
                    this.smsInput.clear();
                    this.mapSubmitError(error);
                    this.smsInput.triggerHelperAnimation();
                    this.isLoading = false;
                }
            }
        });
    }
    onSmsClicked() {
        this.smsAuthRequested.emit(_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_3__.CONFIRM_SIGNATURE_TYPE.SMS);
    }
    get translateParam() {
        return {
            timerValue: this.timerValue,
        };
    }
    get f() {
        return this.otpForm.controls;
    }
    mapRequestError(error) {
        switch (error.code) {
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.ARGUMENT_MISSING:
                this.failed.emit();
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.RESOURCE_BLOCKED:
                if (error.data && error.data.millisecondsLeft) {
                    this.startBlockedTimer(error.data.millisecondsLeft);
                }
                this.setTab(this.authTabs.FORBIDDEN_BLOCKED);
                break;
            default:
                this.setTab(this.authTabs.ERRORED);
                this.errorText = error.description;
                break;
        }
    }
    mapSubmitError(error) {
        switch (error.code) {
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.INVALID_CODE:
                let triesLeft;
                if (error.data && error.data.triesLeft) {
                    triesLeft = error.data.triesLeft;
                    this.errorTranslateParams = {
                        triesLeft: triesLeft,
                    };
                    switch (triesLeft % 20) {
                        case 1:
                            this.errorText = `ERRORS.INVALID_CODE.ONE`;
                            break;
                        case 2:
                        case 3:
                        case 4:
                            this.errorText = `ERRORS.INVALID_CODE.FEW`;
                            break;
                        default:
                            this.errorText = `ERRORS.INVALID_CODE.OTHER`;
                    }
                }
                else {
                    this.setTab(this.authTabs.FORBIDDEN);
                }
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.INTERNAL_SERVER_ERROR:
                this.errorText = _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.UNKNOWN;
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.OTP_NOT_FOUND:
                this.errorText = `ERRORS.OTP_NOT_FOUND_AUTH`;
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_2__.ERRORS.RESOURCE_BLOCKED:
                if (error.data && error.data.millisecondsLeft) {
                    const countdown = Math.ceil(error.data.millisecondsLeft / 1000);
                    if (this.isTimerRunning) {
                        this.timerValue = countdown;
                    }
                    else {
                        this.startTimer(countdown);
                    }
                }
                this.setTab(this.authTabs.FORBIDDEN);
                break;
            default:
                this.errorText = error.description;
                break;
        }
    }
    startBlockedTimer(millisecondsLeft) {
        this.blockedTimerValue = Math.ceil(millisecondsLeft / 1000);
        this.isBlockedTimerRunning = true;
        this.blockedTimer = setInterval(() => {
            this.blockedTimerValue--;
            if (this.blockedTimerValue === 0) {
                this.stopBlockedTimer();
            }
        }, 1000);
    }
    stopBlockedTimer() {
        clearInterval(this.blockedTimer);
        this.isBlockedTimerRunning = false;
        this.blockedTimerValue = null;
    }
    startTimer(timerMaxValue = this.timerMaxValue) {
        this.isTimerRunning = true;
        this.timerValue = timerMaxValue;
        this.timer = setInterval(() => {
            this.timerValue--;
            if (this.timerValue === 0) {
                this.stopTimer();
            }
        }, 1000);
    }
    stopTimer() {
        clearInterval(this.timer);
        this.setTab(this.authTabs.EXPIRED);
        this.isTimerRunning = false;
    }
};
OtpComponent.ctorParameters = () => [
    { type: _shared_services__WEBPACK_IMPORTED_MODULE_5__.SmsService }
];
OtpComponent.propDecorators = {
    otp: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    phone: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    params: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    isAuthAction: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    submitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    loaded: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    failed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    smsAuthRequested: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    smsInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['smsInput',] }]
};
OtpComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-otp',
        template: _otp_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_otp_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], OtpComponent);



/***/ }),

/***/ 45914:
/*!******************************************************************************************!*\
  !*** ./src/app/shared/components/password-requirement/password-requirement.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PasswordRequirementComponent": () => (/* binding */ PasswordRequirementComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _password_requirement_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./password-requirement.component.html?ngResource */ 3807);
/* harmony import */ var _password_requirement_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./password-requirement.component.scss?ngResource */ 24093);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let PasswordRequirementComponent = class PasswordRequirementComponent {
    constructor() { }
    ngOnInit() { }
    get isFailed() {
        return !this.isValid && this.isChecked;
    }
    get color() {
        if (this.isValid) {
            return 'success';
        }
        else if (this.isChecked) {
            return 'danger';
        }
        return 'disabled';
    }
    get textClass() {
        if (this.isValid) {
            return 'text-dark';
        }
        if (!this.isValid && this.isChecked) {
            return 'text-danger';
        }
        return 'text-muted';
    }
};
PasswordRequirementComponent.ctorParameters = () => [];
PasswordRequirementComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isValid: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isChecked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }]
};
PasswordRequirementComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-password-requirement',
        template: _password_requirement_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_password_requirement_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PasswordRequirementComponent);



/***/ }),

/***/ 51770:
/*!******************************************************************************!*\
  !*** ./src/app/shared/components/payment-select/payment-select.component.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentSelectComponent": () => (/* binding */ PaymentSelectComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _payment_select_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./payment-select.component.html?ngResource */ 95663);
/* harmony import */ var _payment_select_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payment-select.component.scss?ngResource */ 10327);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @accounts/account.model */ 5157);
/* harmony import */ var _accounts_services_accounts_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @accounts/services/accounts.service */ 76759);
/* harmony import */ var _payments_models_steps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @payments/models/steps */ 13389);
/* harmony import */ var _feature_flags_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @feature-flags/index */ 15057);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @company/company.service */ 26164);











let PaymentSelectComponent = class PaymentSelectComponent {
    constructor(companyService, router, accountsService, featureFlagsService) {
        this.companyService = companyService;
        this.router = router;
        this.accountsService = accountsService;
        this.featureFlagsService = featureFlagsService;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_7__.EventEmitter();
        this.types = _payments_models_steps__WEBPACK_IMPORTED_MODULE_4__.PAYMENT_TYPES;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subscription();
        this.subscription.add((0,rxjs__WEBPACK_IMPORTED_MODULE_9__.combineLatest)([
            this.featureFlagsService.featureFlags$,
            this.companyService.refresh$,
        ]).subscribe((values) => {
            const [flags, companyRefresh] = values;
            const [user, company, isAuthorized] = companyRefresh;
            if (isAuthorized) {
                this.retrieveAccounts();
            }
        }));
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    close() {
        this.selected.emit(_payments_models_steps__WEBPACK_IMPORTED_MODULE_4__.PAYMENTS_STEPS.NONE);
    }
    select(event, type) {
        event && event.preventDefault();
        if (type.isDisabled) {
            return;
        }
        this.selected.emit(type.step);
        if (type.url) {
            this.router.navigateByUrl(type.url);
        }
    }
    retrieveAccounts() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const accounts = yield this.accountsService.retrieveAccounts();
            this.applyAccountsRules(accounts);
        });
    }
    applyAccountsRules(accounts) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const filteredAccounts = accounts.filter((account) => { var _a; return account.accountType == _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.ACCOUNT && ((_a = account.balance) === null || _a === void 0 ? void 0 : _a.currency); });
            this.applyForeignRules(filteredAccounts);
            this.applyConversionRules(filteredAccounts);
        });
    }
    applyForeignRules(accounts) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            // const currencyAccounts = accounts.filter(
            //   (account) => account.balance?.currency != CURRENCY.KZT
            // );
            const isFeatureDisabled = this.featureFlagsService.isDisabled(_feature_flags_index__WEBPACK_IMPORTED_MODULE_5__.FEATURE_FLAG.FOREIGN_PAYMENT);
            this.types.find((type) => type.id === _payments_models_steps__WEBPACK_IMPORTED_MODULE_4__.PAYMENT_SELECT_TYPE.FOREIGN).isDisabled = isFeatureDisabled;
        });
    }
    applyConversionRules(accounts) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            // const uniqueCurrencies = this.uniqueBy(
            //   accounts,
            //   (o1, o2) => o1.balance?.currency === o2.balance?.currency
            // );
            const isFeatureDisabled = this.featureFlagsService.isDisabled(_feature_flags_index__WEBPACK_IMPORTED_MODULE_5__.FEATURE_FLAG.CONVERSION);
            this.types.find((type) => type.id === _payments_models_steps__WEBPACK_IMPORTED_MODULE_4__.PAYMENT_SELECT_TYPE.CONVERSION).isDisabled = isFeatureDisabled;
        });
    }
};
PaymentSelectComponent.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_6__.CompanyService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__.Router },
    { type: _accounts_services_accounts_service__WEBPACK_IMPORTED_MODULE_3__.AccountsService },
    { type: _feature_flags_index__WEBPACK_IMPORTED_MODULE_5__.FeatureFlagsService }
];
PaymentSelectComponent.propDecorators = {
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Output }]
};
PaymentSelectComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'j-payment-select',
        template: _payment_select_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_payment_select_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PaymentSelectComponent);



/***/ }),

/***/ 27763:
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/components/restricted-placeholder/restricted-placeholder.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RestrictedPlaceholderComponent": () => (/* binding */ RestrictedPlaceholderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _restricted_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./restricted-placeholder.component.html?ngResource */ 19078);
/* harmony import */ var _restricted_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./restricted-placeholder.component.scss?ngResource */ 76073);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let RestrictedPlaceholderComponent = class RestrictedPlaceholderComponent {
    constructor() {
        this.label = 'SHARED.RESTRICTED_PLACEHOLDER';
        this.isRetryable = false;
        this.isLoading = false;
        this.retried = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    onRetry() {
        this.retried.emit();
    }
};
RestrictedPlaceholderComponent.ctorParameters = () => [];
RestrictedPlaceholderComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isRetryable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    retried: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
RestrictedPlaceholderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-restricted-placeholder',
        template: _restricted_placeholder_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_restricted_placeholder_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], RestrictedPlaceholderComponent);



/***/ }),

/***/ 6664:
/*!****************************************************************!*\
  !*** ./src/app/shared/components/sidebar/sidebar.component.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SidebarComponent": () => (/* binding */ SidebarComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _sidebar_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar.component.html?ngResource */ 11646);
/* harmony import */ var _sidebar_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidebar.component.scss?ngResource */ 56729);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let SidebarComponent = class SidebarComponent {
    constructor() {
        this.open = false;
        this.onClose = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    close() {
        this.onClose.emit();
    }
    ngOnInit() {
    }
};
SidebarComponent.ctorParameters = () => [];
SidebarComponent.propDecorators = {
    header: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    open: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    onClose: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
SidebarComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-sidebar',
        template: _sidebar_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_sidebar_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SidebarComponent);



/***/ }),

/***/ 12681:
/*!********************************************************************!*\
  !*** ./src/app/shared/components/sms-error/sms-error.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SmsErrorComponent": () => (/* binding */ SmsErrorComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _sms_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sms-error.component.html?ngResource */ 33752);
/* harmony import */ var _sms_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sms-error.component.scss?ngResource */ 76739);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);





let SmsErrorComponent = class SmsErrorComponent {
    constructor() {
        this.errorTypes = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_ERROR_TYPES;
        this.codeRequested = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.smsErrorSendSms = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    }
    onClick() {
        this.codeRequested.emit();
    }
    onClickSms() {
        this.smsErrorSendSms.emit();
    }
    get translateParams() {
        return {
            timerValue: this.timerValue,
        };
    }
};
SmsErrorComponent.ctorParameters = () => [];
SmsErrorComponent.propDecorators = {
    destinationLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    destinationValue: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    errorType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    isTimerRunning: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    timerValue: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    backLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    codeRequested: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }],
    smsErrorSendSms: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }]
};
SmsErrorComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-sms-error',
        template: _sms_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_sms_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SmsErrorComponent);



/***/ }),

/***/ 28957:
/*!********************************************************!*\
  !*** ./src/app/shared/components/sms/sms.component.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SmsComponent": () => (/* binding */ SmsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _sms_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sms.component.html?ngResource */ 36725);
/* harmony import */ var _sms_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sms.component.scss?ngResource */ 11829);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/services/sms.service */ 97532);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _auth_auth_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @auth/auth.model */ 90377);
/* harmony import */ var _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/confirm-sms-modal/confirm-sms-modal.component */ 53917);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @environments/environment */ 92340);














let SmsComponent = class SmsComponent {
    constructor(smsService, maskedService, maskPipe) {
        this.smsService = smsService;
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.isDevelopment = !_environments_environment__WEBPACK_IMPORTED_MODULE_8__.environment.production;
        this.isAuthAction = false;
        this.submitted = new _angular_core__WEBPACK_IMPORTED_MODULE_9__.EventEmitter();
        this.failed = new _angular_core__WEBPACK_IMPORTED_MODULE_9__.EventEmitter();
        this.loaded = new _angular_core__WEBPACK_IMPORTED_MODULE_9__.EventEmitter();
        this.otpAuthRequested = new _angular_core__WEBPACK_IMPORTED_MODULE_9__.EventEmitter();
        this.isReady = false;
        this.authTabs = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_TABS;
        this.currentTab = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_TABS.FORM;
        this.smsCodeLength = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_CODE_LENGTH;
        this.timerMaxValue = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_TIMER_COUNTDOWN;
        this.errorTypes = _shared_models__WEBPACK_IMPORTED_MODULE_2__.SMS_ERROR_TYPES;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_10__.Subscription();
        this.errorTranslateParams = {
            triesLeft: 0,
        };
        this.countryCode = this.countryCode
            ? this.countryCode
            : localStorage.getItem('countryCode') != 'undefined'
                ? JSON.parse(localStorage.getItem('countryCode'))
                : null;
        this.authSmsForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroup({
            smsCode: new _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required),
        });
        const formSubscription = this.authSmsForm.valueChanges.subscribe((value) => {
            var _a;
            this.isSubmitted = false;
            if (((_a = value.smsCode) === null || _a === void 0 ? void 0 : _a.length) === this.smsCodeLength) {
                this.onSubmit();
            }
        });
        this.subscription.add(formSubscription);
    }
    ngOnInit() {
        var _a;
        this.requestSms();
        const maskType = ((_a = this.countryCode) === null || _a === void 0 ? void 0 : _a.countryCode) === _auth_auth_model__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_COUNTRY_CODE.KAZAKHSTAN
            ? 'loginPhoneKz'
            : 'foreignPhone';
        this.phoneMaskConfig = this.maskedService.getConfig(maskType);
    }
    ngOnDestroy() {
        this.stopTimer();
        this.stopBlockedTimer();
        this.subscription.unsubscribe();
    }
    setTab(tab) {
        this.currentTab = tab;
    }
    focus() {
        this.smsInput.focus();
    }
    requestSms() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.errorText = '';
            try {
                this.smsToken = yield this.smsService.requestSms(this.phone, this.params, this.headers);
                this.setTab(this.authTabs.FORM);
                this.f.smsCode.setValue(this.isDevelopment ? this.smsToken.code : '');
                this.startTimer();
            }
            catch (error) {
                this.mapRequestError(error);
            }
            finally {
                if (!this.isReady) {
                    this.isReady = true;
                }
                this.isLoading = false;
                this.focus();
                this.loaded.emit();
            }
        });
    }
    onSubmit() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            this.isSubmitted = true;
            this.errorText = '';
            this.hasError = false;
            if (this.authSmsForm.valid && !this.isLoading) {
                this.isLoading = true;
                this.smsToken.code = this.f.smsCode.value;
                try {
                    this.smsToken = yield this.smsService.submitSms(this.smsToken);
                    localStorage.setItem('countryCode', JSON.stringify(this.countryCode));
                    this.submitted.emit(this.smsToken);
                }
                catch (error) {
                    this.hasError = true;
                    this.smsInput.clear();
                    this.authSmsForm.patchValue({
                        smsCode: '',
                    });
                    this.mapSubmitError(error);
                    this.smsInput.triggerHelperAnimation();
                    this.isLoading = false;
                }
            }
        });
    }
    onOtpClicked() {
        this.otpAuthRequested.emit(_components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_7__.CONFIRM_SIGNATURE_TYPE.OTP);
    }
    get translateParam() {
        return {
            timerValue: this.timerValue,
        };
    }
    get f() {
        return this.authSmsForm.controls;
    }
    get maskedPhone() {
        if (this.phone) {
            const phone = this.maskedService.getPastedPhone(this.phone);
            let maskedPhone = '';
            if (this.phoneMaskConfig.shadow && this.countryCode) {
                maskedPhone = this.maskPipe.transform(phone, this.phoneMaskConfig.mask);
                maskedPhone = `${maskedPhone.slice(0, 7)}•••${maskedPhone.slice(12, 18)}`;
            }
            else {
                maskedPhone = `${phone.slice(0, 7)}•••${phone.slice(-3, phone.length)}`;
            }
            return `+${maskedPhone}`;
        }
    }
    mapRequestError(error) {
        switch (error.code) {
            case _api_index__WEBPACK_IMPORTED_MODULE_5__.ERRORS.ARGUMENT_MISSING:
                this.failed.emit();
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_5__.ERRORS.RESOURCE_BLOCKED:
                if (error.data && error.data.millisecondsLeft) {
                    this.startBlockedTimer(error.data.millisecondsLeft);
                }
                this.setTab(this.authTabs.FORBIDDEN_BLOCKED);
                break;
            default:
                this.setTab(this.authTabs.ERRORED);
                this.errorText = error.description;
                break;
        }
    }
    mapSubmitError(error) {
        switch (error.code) {
            case _api_index__WEBPACK_IMPORTED_MODULE_5__.ERRORS.ARGUMENT_MISSING:
                this.failed.emit();
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_5__.ERRORS.INVALID_CODE:
                let triesLeft;
                if (error.data && error.data.triesLeft) {
                    triesLeft = error.data.triesLeft;
                    this.errorTranslateParams = {
                        triesLeft,
                    };
                    switch (triesLeft % 20) {
                        case 1:
                            this.errorText = `ERRORS.INVALID_CODE.ONE`;
                            break;
                        case 2:
                        case 3:
                        case 4:
                            this.errorText = `ERRORS.INVALID_CODE.FEW`;
                            break;
                        default:
                            this.errorText = `ERRORS.INVALID_CODE.OTHER`;
                    }
                }
                else {
                    this.setTab(this.authTabs.FORBIDDEN);
                }
                break;
            case _api_index__WEBPACK_IMPORTED_MODULE_5__.ERRORS.RESOURCE_BLOCKED:
                if (error.data && error.data.millisecondsLeft) {
                    const countdown = Math.ceil(error.data.millisecondsLeft / 1000);
                    if (this.isTimerRunning) {
                        this.timerValue = countdown;
                    }
                    else {
                        this.startTimer(countdown);
                    }
                }
                this.setTab(this.authTabs.FORBIDDEN);
                break;
            default:
                this.errorText = error.description;
                break;
        }
    }
    startBlockedTimer(millisecondsLeft) {
        this.blockedTimerValue = Math.ceil(millisecondsLeft / 1000);
        this.isBlockedTimerRunning = true;
        this.blockedTimer = setInterval(() => {
            this.blockedTimerValue--;
            if (this.blockedTimerValue === 0) {
                this.stopBlockedTimer();
            }
        }, 1000);
    }
    stopBlockedTimer() {
        clearInterval(this.blockedTimer);
        this.isBlockedTimerRunning = false;
        this.blockedTimerValue = null;
    }
    startTimer(timerMaxValue = this.timerMaxValue) {
        this.isTimerRunning = true;
        this.timerValue = timerMaxValue;
        this.timer = setInterval(() => {
            this.timerValue--;
            if (this.timerValue === 0) {
                this.stopTimer();
            }
        }, 1000);
    }
    stopTimer() {
        clearInterval(this.timer);
        this.setTab(this.authTabs.EXPIRED);
        this.isTimerRunning = false;
    }
};
SmsComponent.ctorParameters = () => [
    { type: _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_4__.SmsService },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_13__.MaskPipe }
];
SmsComponent.propDecorators = {
    phone: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    params: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    headers: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    isAuthAction: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    countryCode: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    submitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Output }],
    failed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Output }],
    loaded: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Output }],
    otpAuthRequested: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Output }],
    smsInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild, args: ['smsInput',] }]
};
SmsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
        selector: 'j-sms',
        template: _sms_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_sms_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SmsComponent);



/***/ }),

/***/ 89801:
/*!******************************************************************!*\
  !*** ./src/app/shared/components/statuses/statuses.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatusesComponent": () => (/* binding */ StatusesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _statuses_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./statuses.component.html?ngResource */ 70327);
/* harmony import */ var _statuses_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./statuses.component.scss?ngResource */ 79580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let StatusesComponent = class StatusesComponent {
    constructor() {
        this.saveSelected = false;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
        this.selectedStatus =
            this.statuses.find((status) => {
                return status.isSelected === true;
            }) || this.statuses[0];
    }
    onSelect(status) {
        this.selectedStatus = status;
        this.selected.emit(status.value);
    }
};
StatusesComponent.ctorParameters = () => [];
StatusesComponent.propDecorators = {
    saveSelected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    statuses: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
StatusesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-statuses',
        template: _statuses_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_statuses_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], StatusesComponent);



/***/ }),

/***/ 46755:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/switch/switch.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwitchComponent": () => (/* binding */ SwitchComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _switch_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switch.component.html?ngResource */ 32640);
/* harmony import */ var _switch_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./switch.component.scss?ngResource */ 16353);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
var SwitchComponent_1;





let SwitchComponent = SwitchComponent_1 = class SwitchComponent {
    constructor() {
        this.disabled = false;
        this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        // the method set in registerOnChange to emit changes back to the form
        this.propagateChange = (_) => { };
    }
    ngOnInit() { }
    get opacity() {
        return this.disabled ? 0.25 : 1;
    }
    // Allows Angular to update the model
    // Update the model and changes needed for the view here.
    writeValue(value) {
        this.value = value;
    }
    // Allows Angular to register a function to call when the model changes.
    // Save the function as a property to call later here.
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    // Allows Angular to register a function to call when the input has been touched.
    // Save the function as a property to call later here.
    registerOnTouched() { }
    // Change event from Switchery Toggle
    onChange(event) {
        this.value = !this.value;
        // update the form
        this.valueChange.emit(this.value);
        this.propagateChange(this.value);
    }
    // Allows Angular to disable the input.
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
};
SwitchComponent.ctorParameters = () => [];
SwitchComponent.propDecorators = {
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    onLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    offLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    color: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    size: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    sticked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    customClasses: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    valueChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    ngOnInit: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostBinding, args: ['style.opacity',] }]
};
SwitchComponent = SwitchComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-switch',
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewEncapsulation.None,
        template: _switch_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(() => SwitchComponent_1),
                multi: true,
            },
        ],
        styles: [_switch_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SwitchComponent);



/***/ }),

/***/ 21580:
/*!**************************************************************!*\
  !*** ./src/app/shared/components/toggle/toggle.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToggleComponent": () => (/* binding */ ToggleComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _toggle_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toggle.component.html?ngResource */ 62792);
/* harmony import */ var _toggle_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toggle.component.scss?ngResource */ 6022);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let ToggleComponent = class ToggleComponent {
    constructor() {
        this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    onChange() {
        this.value = !this.value;
        this.valueChange.emit(this.value);
    }
};
ToggleComponent.ctorParameters = () => [];
ToggleComponent.propDecorators = {
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    valueChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
ToggleComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-toggle',
        template: _toggle_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_toggle_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ToggleComponent);



/***/ }),

/***/ 48622:
/*!********************************************************************************!*\
  !*** ./src/app/shared/components/uploading-files/uploading-files.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UploadingFilesComponent": () => (/* binding */ UploadingFilesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _uploading_files_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uploading-files.component.html?ngResource */ 14744);
/* harmony import */ var _uploading_files_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uploading-files.component.scss?ngResource */ 4514);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 66587);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _api_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/errors */ 32146);
/* harmony import */ var _shared_services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services */ 17253);










let UploadingFilesComponent = class UploadingFilesComponent {
    constructor(filesService, translateService, notifierService) {
        this.filesService = filesService;
        this.translateService = translateService;
        this.notifierService = notifierService;
        this.isLoading = false;
        this.uploadingFiles = [];
        this.updated = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subscription();
    }
    ngOnInit() {
        this.uploadingFiles = [];
        this.subscription.add(this.filesService.uploading$.subscribe((files) => {
            files.forEach((file) => {
                if (!this.isSupportedFormat(file.name)) {
                    this.notifierService.notify('warning', this.translateService.instant('FILES.IS_NOT_SUPPORTED_FORMAT_ERROR', {
                        acceptedFormats: this.acceptedFormats,
                    }));
                    return;
                }
                if (!this.isSupportedSize(file.size)) {
                    this.notifierService.notify('warning', this.translateService.instant('FILES.MAX_SIZE_ERROR'));
                    return;
                }
                this.prepareUpload(file);
            });
        }));
    }
    ngOnDestroy() {
        this.updated.emit([]);
        this.filesService.uploading$.next([]);
        this.uploadingFiles = [];
        this.subscription.unsubscribe();
    }
    onFileDelete(file) {
        this.uploadingFiles = this.uploadingFiles.filter((item) => {
            return item != file;
        });
        this.updated.emit(this.uploadingFiles);
    }
    mapTranslate(key) {
        return `FILES.${key}`;
    }
    prepareUpload(file) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const textContent = yield file.text();
            if (this.uploadingFiles
                .map((uploading) => uploading.textContent)
                .includes(textContent)) {
                this.notifierService.notify('default', this.translateService.instant('FILES.ALREADY_UPLOADING', {
                    fileName: file.name,
                }));
                return;
            }
            this.uploadFile(file, textContent);
        });
    }
    uploadFile(file, textContent) {
        this.uploadingFiles.push({
            textContent,
            isLoading: true,
        });
        const lastUploadedIndex = this.uploadingFiles.length - 1;
        this.subscription.add(this.filesService
            .uploadFile(file)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.catchError)((error, caught) => {
            const errorMessage = error.status === _api_errors__WEBPACK_IMPORTED_MODULE_2__.STATUSES.ENTITY_TOO_LARGE
                ? 'MAX_SIZE_ERROR'
                : 'DEFAULT_ERROR';
            this.uploadingFiles[lastUploadedIndex] = {
                textContent: textContent,
                isLoading: false,
                progress: 100,
                error: this.mapTranslate(errorMessage),
                file: { name: file.name },
            };
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.throwError)(error);
        }))
            .subscribe((uploadingFile) => {
            this.mapFile(lastUploadedIndex, uploadingFile);
            this.updated.emit(this.uploadingFiles);
        }));
    }
    mapFile(index, newFile) {
        if (!this.uploadingFiles[index]) {
            return;
        }
        if (newFile.error) {
            this.uploadingFiles[index].error = newFile.error;
        }
        if (newFile.isLoading != this.uploadingFiles[index].isLoading) {
            this.uploadingFiles[index].isLoading = newFile.isLoading;
        }
        if (newFile.file && !this.uploadingFiles[index].file) {
            this.uploadingFiles[index].file = newFile.file;
        }
        if (newFile.progress) {
            this.uploadingFiles[index].progress = newFile.progress;
        }
    }
    isSupportedSize(size) {
        if (!this.maxSize) {
            return true;
        }
        return size <= this.maxSize;
    }
    isSupportedFormat(filename) {
        if (!this.acceptedFormats) {
            return true;
        }
        const re = /(?:\.([^.]+))?$/;
        const extension = re.exec(filename)[1] ? `.${re.exec(filename)[1]}` : '';
        return this.acceptedFormats.split(', ').includes(extension);
    }
};
UploadingFilesComponent.ctorParameters = () => [
    { type: _shared_services__WEBPACK_IMPORTED_MODULE_3__.FilesService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__.TranslateService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_10__.NotifierService }
];
UploadingFilesComponent.propDecorators = {
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    acceptedFormats: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    uploadingFiles: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    maxSize: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    updated: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }]
};
UploadingFilesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-uploading-files',
        template: _uploading_files_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_uploading_files_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], UploadingFilesComponent);



/***/ }),

/***/ 64188:
/*!****************************************************************************!*\
  !*** ./src/app/shared/currencies-list/currencies-list.service.abstract.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurrenciesListServiceAbstract": () => (/* binding */ CurrenciesListServiceAbstract)
/* harmony export */ });
class CurrenciesListServiceAbstract {
}


/***/ }),

/***/ 75149:
/*!*******************************************************************!*\
  !*** ./src/app/shared/currencies-list/currensies-list.service.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurrenciesListService": () => (/* binding */ CurrenciesListService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _currencies_list_service_abstract__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./currencies-list.service.abstract */ 64188);





let CurrenciesListService = class CurrenciesListService extends _currencies_list_service_abstract__WEBPACK_IMPORTED_MODULE_2__.CurrenciesListServiceAbstract {
    constructor(apiService, companyService) {
        super();
        this.apiService = apiService;
        this.companyService = companyService;
    }
    loadCurrencyList() {
        const url = `/companies/${this.companyService.currentId}/additional-accounts/currencies`;
        return this.apiService.getObservable(url);
    }
};
CurrenciesListService.ctorParameters = () => [
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService }
];
CurrenciesListService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)()
], CurrenciesListService);



/***/ }),

/***/ 80457:
/*!***************************************************!*\
  !*** ./src/app/shared/currency/currency.model.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CURRENCY": () => (/* binding */ CURRENCY)
/* harmony export */ });
var CURRENCY;
(function (CURRENCY) {
    CURRENCY["KZT"] = "KZT";
    CURRENCY["RUB"] = "RUB";
    CURRENCY["USD"] = "USD";
    CURRENCY["EUR"] = "EUR";
    CURRENCY["AUD"] = "AUD";
    CURRENCY["AZN"] = "AZN";
    CURRENCY["BYN"] = "BYN";
    CURRENCY["DKK"] = "DKK";
    CURRENCY["SAR"] = "SAR";
    CURRENCY["SGD"] = "SGD";
    CURRENCY["XAU"] = "XAU";
    CURRENCY["KGS"] = "KGS";
    CURRENCY["GBP"] = "GBP";
    CURRENCY["CNY"] = "CNY";
    CURRENCY["CHF"] = "CHF";
    CURRENCY["HKD"] = "HKD";
    CURRENCY["GEL"] = "GEL";
    CURRENCY["AED"] = "AED";
    CURRENCY["INR"] = "INR";
    CURRENCY["CAD"] = "CAD";
    CURRENCY["MYR"] = "MYR";
    CURRENCY["PLN"] = "PLN";
    CURRENCY["THB"] = "THB";
    CURRENCY["TRY"] = "TRY";
    CURRENCY["UZS"] = "UZS";
    CURRENCY["UAH"] = "UAH";
    CURRENCY["CZK"] = "CZK";
    CURRENCY["SEK"] = "SEK";
    CURRENCY["KRW"] = "KRW";
    CURRENCY["JPY"] = "JPY";
})(CURRENCY || (CURRENCY = {}));


/***/ }),

/***/ 22695:
/*!*************************************************************!*\
  !*** ./src/app/shared/date-picker/date-picker.component.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JDatePickerComponent": () => (/* binding */ JDatePickerComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _date_picker_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-picker.component.html?ngResource */ 80584);
/* harmony import */ var _date_picker_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date-picker.component.scss?ngResource */ 22853);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_form_field_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/form-field/utils */ 11685);
/* harmony import */ var _shared_form_field_form_field_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/form-field/form-field-control */ 46758);
var JDatePickerComponent_1;










let JDatePickerComponent = JDatePickerComponent_1 = class JDatePickerComponent extends _shared_form_field_form_field_control__WEBPACK_IMPORTED_MODULE_4__.JFormFieldControl {
    constructor() {
        super();
        this.id = (0,_utils_index__WEBPACK_IMPORTED_MODULE_2__.generateUniqueId)();
        this.label = '';
        this.name = '';
        this.errorText = null;
        this.helperText = null;
        this.value = null;
        this.changeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
        this.controlType = 'date-picker';
        this.focused = false;
        this.isDisabled = false;
        this.helperClasses = '';
        this.isOpen = false;
        this.empty = true;
        this.placeholder = '';
        this.shouldLabelFloat = false;
        this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subscription();
        this.markDisabled = (date, current) => {
            if (this.datesEnabled) {
                const currentDate = (0,_utils_index__WEBPACK_IMPORTED_MODULE_2__.ngbStructToISO)(date);
                return !this.datesEnabled.some((day) => currentDate === day);
            }
            return false;
        };
    }
    get isFilled() {
        return !!this.formControl.value;
    }
    get hasError() {
        return (this.formControl.invalid && this.formControl.touched && !this.focused);
    }
    get shouldFloat() {
        return this.allowAuto || this.isOpen || this.focused;
    }
    get isClearable() {
        return this.formControl.value !== null;
    }
    onClear() {
        this.formControl.setValue(null);
    }
    ngOnInit() {
        this.subs.add(this.formControl.valueChanges.subscribe((value) => {
            this.changeEvent.emit(value);
        }));
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
    ngOnChanges(changes) { }
    onChange(_) { }
    onContainerClick(e) {
        // if (this.isOpen && this.focused) {
        //   this.datepicker.close();
        //   this.isOpen = false;
        // }
        // else {
        //   this.datepicker.close();
        //   this.isOpen = false;
        // }
    }
    setDescribedByIds(ids) { }
    writeValue(value) {
        this.value = value;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched() { }
    onFocus() {
        this.focused = true;
        if (!this.isOpen) {
            this.datepicker.open();
            this.isOpen = true;
        }
    }
    onBlur() {
        // this.focused = false;
        // this.blur.emit();
    }
    onToggle(e) {
        e && e.stopPropagation();
        // only close event is emitted by datepicker
        if (!this.isOpen) {
            this.datepicker.open();
            this.isOpen = true;
        }
        else {
            this.datepicker.close();
            this.isOpen = false;
        }
    }
    onClosed() {
        setTimeout(() => {
            this.isOpen = false;
            this.focused = false;
            (0,_shared_form_field_utils__WEBPACK_IMPORTED_MODULE_3__.coerceElement)(this.inputControl).blur();
        }, 0);
    }
    onDateSelection(event) {
        this.datepicker.close();
        this.changeEvent.next(event);
    }
    focus() {
        (0,_shared_form_field_utils__WEBPACK_IMPORTED_MODULE_3__.coerceElement)(this.inputControl).focus();
    }
    clear() { }
};
JDatePickerComponent.ctorParameters = () => [];
JDatePickerComponent.propDecorators = {
    autofocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    datesEnabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    formControl: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    errorText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    errorMessages: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    helperText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    allowAuto: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    minDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    maxDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    formatValue: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    changeEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }],
    inputControl: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewChild, args: ['inputControl',] }],
    datepicker: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewChild, args: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__.NgbInputDatepicker,] }]
};
JDatePickerComponent = JDatePickerComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-date-picker',
        template: _date_picker_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(() => JDatePickerComponent_1),
                multi: true,
            },
            // {provide: NgbDateAdapter, useClass: NgbDateNativeAdapter},
            // { provide: NgbDatepickerI18n, useClass: DatepickerFormatterService },
        ],
        host: {
            class: 'j-form-field j-form-field-datepicker',
            '[class.j-form-field-open]': 'isOpen',
            '[class.j-form-field-should-float]': 'shouldFloat',
            '[class.j-date-picker-invalid]': 'hasError',
            '[class.j-date-picker-auto]': 'allowAuto',
            '[class.j-date-picker-disabled]': 'isDisabled',
            '[class.j-focused]': 'focused',
        },
        styles: [_date_picker_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], JDatePickerComponent);



/***/ }),

/***/ 74675:
/*!******************************************************!*\
  !*** ./src/app/shared/directives/badge.directive.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BadgeDirective": () => (/* binding */ BadgeDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 36362);



let BadgeDirective = class BadgeDirective {
    constructor(document, elRef) {
        this.document = document;
        this.elRef = elRef;
    }
    ngOnChanges(changes) {
        if ("jBadge" /* Selector */ in changes) {
            const value = `${changes["jBadge" /* Selector */].currentValue}`.trim();
            if (value === null || value === void 0 ? void 0 : value.length) {
                this.updateBadgeText(value);
            }
        }
    }
    ngOnDestroy() {
        if (this.badgeElement) {
            this.badgeElement.remove();
        }
    }
    updateBadgeText(value) {
        if (!this.badgeElement) {
            return this.createBadge(value);
        }
        this.badgeElement.textContent = value;
    }
    createBadge(value) {
        const badgeElement = this.document.createElement("span" /* Element */);
        badgeElement.textContent = value;
        badgeElement.className = "j-badge" /* ClassName */;
        this.elRef.nativeElement.appendChild(badgeElement);
        return badgeElement;
    }
};
BadgeDirective.ctorParameters = () => [
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject, args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT,] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
BadgeDirective.propDecorators = {
    jBadge: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
BadgeDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jBadge]'
    })
], BadgeDirective);



/***/ }),

/***/ 51884:
/*!******************************************************!*\
  !*** ./src/app/shared/directives/clamp.directive.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClampDirective": () => (/* binding */ ClampDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let ClampDirective = class ClampDirective {
    constructor(elem) {
        this.elem = elem;
    }
    ngAfterViewInit() {
        window['$clamp'](this.elem.nativeElement, { clamp: this.jClamp });
    }
};
ClampDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
ClampDirective.propDecorators = {
    jClamp: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
ClampDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jClamp]',
    })
], ClampDirective);



/***/ }),

/***/ 55809:
/*!*****************************************************************************!*\
  !*** ./src/app/shared/directives/collapsible/collapsible-body.directive.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleBodyDirective": () => (/* binding */ CollapsibleBodyDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let CollapsibleBodyDirective = class CollapsibleBodyDirective {
    constructor(elem) {
        this.elem = elem;
    }
};
CollapsibleBodyDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
CollapsibleBodyDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jCollapsibleBody]',
    })
], CollapsibleBodyDirective);



/***/ }),

/***/ 43626:
/*!********************************************************************************!*\
  !*** ./src/app/shared/directives/collapsible/collapsible-trigger.directive.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleTriggerDirective": () => (/* binding */ CollapsibleTriggerDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let CollapsibleTriggerDirective = class CollapsibleTriggerDirective {
    constructor(elem) {
        this.elem = elem;
        this.clicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    }
    onClick() {
        this.clicked.emit();
    }
};
CollapsibleTriggerDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
CollapsibleTriggerDirective.propDecorators = {
    clicked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output }],
    onClick: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['click',] }]
};
CollapsibleTriggerDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jCollapsibleTrigger]',
    })
], CollapsibleTriggerDirective);



/***/ }),

/***/ 84139:
/*!************************************************************************!*\
  !*** ./src/app/shared/directives/collapsible/collapsible.directive.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollapsibleDirective": () => (/* binding */ CollapsibleDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _collapsible_body_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapsible-body.directive */ 55809);
/* harmony import */ var _collapsible_trigger_directive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collapsible-trigger.directive */ 43626);





let CollapsibleDirective = class CollapsibleDirective {
    constructor(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subscription();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    ngAfterViewInit() {
        this.init();
    }
    close() {
        this.isCollapsed = false;
        this.onCollapse();
    }
    init() {
        this.isCollapsed = this.jCollapsible;
        this.maxHeight = this.contentBody.elem.nativeElement.scrollHeight;
        this.bodyStyleRef = this.contentBody.elem.nativeElement.style;
        this.appendTransitions();
        this.onCollapse();
        const clickTriggerSubscription = this.contentTrigger.clicked.subscribe((event) => {
            this.isCollapsed = !this.isCollapsed;
            this.onCollapse();
        });
        this.subscription.add(clickTriggerSubscription);
    }
    onCollapse() {
        this.onCollapseHost(this.isCollapsed);
        this.onCollapseBody(this.isCollapsed);
    }
    appendTransitions() {
        this.bodyStyleRef.transition = 'all 0.3s ease-in-out';
    }
    onCollapseHost(isCollapsed) {
        if (isCollapsed) {
            this.renderer.addClass(this.elementRef.nativeElement, 'j-collapsed');
        }
        else {
            this.renderer.removeClass(this.elementRef.nativeElement, 'j-collapsed');
        }
    }
    onCollapseBody(isCollapsed) {
        if (isCollapsed) {
            this.setBodyStyles('unset', 1, this.maxHeight);
        }
        else {
            this.setBodyStyles('hidden', 0, 0);
        }
    }
    setBodyStyles(overflow, opacity, maxHeight) {
        this.bodyStyleRef.overflowY = overflow;
        this.bodyStyleRef.opacity = opacity;
        this.bodyStyleRef.maxHeight = `${maxHeight}px`;
    }
};
CollapsibleDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Renderer2 },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef }
];
CollapsibleDirective.propDecorators = {
    contentBody: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ContentChild, args: [_collapsible_body_directive__WEBPACK_IMPORTED_MODULE_0__.CollapsibleBodyDirective,] }],
    contentTrigger: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ContentChild, args: [_collapsible_trigger_directive__WEBPACK_IMPORTED_MODULE_1__.CollapsibleTriggerDirective,] }],
    jCollapsible: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
CollapsibleDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Directive)({
        selector: '[jCollapsible]',
    })
], CollapsibleDirective);



/***/ }),

/***/ 28203:
/*!*******************************************************************!*\
  !*** ./src/app/shared/directives/current-user-phone.directive.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurrentUserPhoneDirective": () => (/* binding */ CurrentUserPhoneDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_services_user_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/services/user.service */ 98613);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _shared_pipes_mask_phone_pipe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/pipes/mask-phone.pipe */ 71782);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 53298);






let CurrentUserPhoneDirective = class CurrentUserPhoneDirective {
    constructor(user, cd, maskPhone) {
        this.user = user;
        this.cd = cd;
        this.maskPhone = maskPhone;
        this.s = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subscription();
        this.phone = '';
    }
    ngOnInit() {
        this.s.add(this.user.getUser().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.distinctUntilChanged)()).subscribe((u) => {
            if (u && u.phone) {
                this.phone = this.maskPhone.transform(u.phone);
            }
            else {
                this.phone = '';
            }
            this.cd.markForCheck();
        }));
    }
    ngOnDestroy() {
        this.s.unsubscribe();
    }
};
CurrentUserPhoneDirective.ctorParameters = () => [
    { type: _shared_services_user_service__WEBPACK_IMPORTED_MODULE_0__.UserService },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectorRef },
    { type: _shared_pipes_mask_phone_pipe__WEBPACK_IMPORTED_MODULE_1__.MaskPhonePipe }
];
CurrentUserPhoneDirective.propDecorators = {
    phone: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostBinding, args: ['innerText',] }]
};
CurrentUserPhoneDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Directive)({
        selector: '[jCurrentUserPhone]',
    })
], CurrentUserPhoneDirective);



/***/ }),

/***/ 15191:
/*!*************************************************************!*\
  !*** ./src/app/shared/directives/cursor-bound.directive.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CursorBoundDirective": () => (/* binding */ CursorBoundDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 90587);



let CursorBoundDirective = class CursorBoundDirective {
    constructor(ref, control) {
        this.ref = ref;
        this.control = control;
        this.onKeyUp = this.setCursorToEnd;
        this.onClick = this.setCursorToEnd;
    }
    setCursorToEnd(event) {
        var _a, _b;
        const selectionMaxIndex = this.value.replace(this.suffix, '').length;
        if (this.positionFromEnd && ((_a = event.target.value) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = this.previousValue) === null || _b === void 0 ? void 0 : _b.length)) {
            this.element.setSelectionRange(event.target.selectionStart, selectionMaxIndex - this.positionFromEnd);
        }
        if (event.target.selectionEnd > selectionMaxIndex) {
            this.element.setSelectionRange(event.target.selectionStart, selectionMaxIndex);
        }
        this.positionFromEnd = selectionMaxIndex - event.target.selectionEnd;
        this.previousValue = event.target.value;
    }
    get value() {
        return this.element.value || '';
    }
    get element() {
        return this.ref.nativeElement;
    }
};
CursorBoundDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NgControl, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Self }] }
];
CursorBoundDirective.propDecorators = {
    suffix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }],
    onKeyUp: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['keyup', ['$event'],] }],
    onClick: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['click', ['$event'],] }]
};
CursorBoundDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jCursorBound]',
        // host: {
        //   '(click)': 'setCursorToEnd',
        //   '(keyup)': 'setCursorToEnd',
        // },
    })
], CursorBoundDirective);



/***/ }),

/***/ 31872:
/*!****************************************************!*\
  !*** ./src/app/shared/directives/dnd.directive.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DndDirective": () => (/* binding */ DndDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let DndDirective = class DndDirective {
    constructor() {
        this.fileDropped = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    }
    // Dragover listener
    onDragOver(evt) {
        evt.preventDefault();
        evt.stopPropagation();
        this.fileOver = true;
    }
    // Dragleave listener
    onDragLeave(evt) {
        evt.preventDefault();
        evt.stopPropagation();
        this.fileOver = false;
    }
    // Drop listener
    ondrop(evt) {
        evt.preventDefault();
        evt.stopPropagation();
        this.fileOver = false;
        let files = evt.dataTransfer.files;
        if (files.length > 0) {
            this.fileDropped.emit(files);
        }
    }
};
DndDirective.propDecorators = {
    fileOver: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding, args: ['class.fileover',] }],
    fileDropped: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output }],
    onDragOver: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['dragover', ['$event'],] }],
    onDragLeave: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['dragleave', ['$event'],] }],
    ondrop: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['drop', ['$event'],] }]
};
DndDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jDnd]',
    })
], DndDirective);



/***/ }),

/***/ 89848:
/*!***************************************************************!*\
  !*** ./src/app/shared/directives/dynamic-prefix.directive.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DynamicPrefixDirective": () => (/* binding */ DynamicPrefixDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 16276);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 32425);






/**
 * @description dynamic prefix fo ngx-mask
 * fixed issue with changedAfterChecked error in employee form with dynamic prefix in FormArray
 */
let DynamicPrefixDirective = class DynamicPrefixDirective {
    constructor(elem, controlDirective, maskDirective) {
        this.elem = elem;
        this.controlDirective = controlDirective;
        this.maskDirective = maskDirective;
        // hide prefix on blur if needed
        // @HostListener('blur', ['$event']) onBlue(event: any) {
        //   if (!this.controlDirective.control.value) {
        //     this.controlDirective.control.markAsUntouched();
        //     // setTimeout(() => {
        //     //   this.maskDirective.ngOnChanges({
        //     //     prefix: {
        //     //       previousValue: this.maskDirective.prefix,
        //     //       currentValue:  this.maskDirective.prefix = '',
        //     //       firstChange: false,
        //     //       isFirstChange: () => false
        //     //     },
        //     //   });
        //     // }, 0);
        //   }
        // }
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subscription();
    }
    onFocus(event) {
        // fixed issue with changedAfterChecked error in employee form with dynamic prefix in FormArray
        if (this.controlDirective && !this.maskDirective.prefix) {
            this.updatePrefix();
        }
    }
    ngOnInit() {
        if (this.controlDirective) {
            if (this.controlDirective.value && !this.maskDirective.prefix) {
                this.updatePrefix();
            }
            this.subscription.add(this.controlDirective.valueChanges
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.skip)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.debounceTime)(300)
            // filter((v) => !!v)
            )
                .subscribe((v) => {
                if (!this.maskDirective.prefix ||
                    v.includes(this.maskDirective.prefix, 0)) {
                    this.updatePrefix();
                }
                else if (!v && this.controlDirective.control.touched) {
                    // Handle input clear (direct HTmLInput manipulation)
                    this.updatePrefix();
                }
            }));
        }
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    updatePrefix() {
        setTimeout(() => {
            this.maskDirective.ngOnChanges({
                prefix: new _angular_core__WEBPACK_IMPORTED_MODULE_3__.SimpleChange(this.maskDirective.prefix, (this.maskDirective.prefix = this.jDynamicPrefix), false),
            });
            // patched suffix is making control dirty, which violates rule for error highilght - touched, but not changed
            this.controlDirective.control.markAsPristine();
        }, 0);
    }
};
DynamicPrefixDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Self }] },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_5__.MaskDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Self }] }
];
DynamicPrefixDirective.propDecorators = {
    jDynamicPrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    with: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    onFocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostListener, args: ['focus', ['$event'],] }]
};
DynamicPrefixDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Directive)({
        selector: '[jDynamicPrefix]',
    })
], DynamicPrefixDirective);



/***/ }),

/***/ 94221:
/*!********************************************!*\
  !*** ./src/app/shared/directives/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DIRECTIVES": () => (/* binding */ DIRECTIVES),
/* harmony export */   "CursorBoundDirective": () => (/* reexport safe */ _cursor_bound_directive__WEBPACK_IMPORTED_MODULE_1__.CursorBoundDirective),
/* harmony export */   "LockKeyboardInputDirective": () => (/* reexport safe */ _lock_keyboard_input_directive__WEBPACK_IMPORTED_MODULE_2__.LockKeyboardInputDirective),
/* harmony export */   "NormalizeAmountDirective": () => (/* reexport safe */ _normalize_amount_directive__WEBPACK_IMPORTED_MODULE_3__.NormalizeAmountDirective),
/* harmony export */   "FocusOnReturnDirective": () => (/* reexport safe */ _on_return_directive__WEBPACK_IMPORTED_MODULE_4__.FocusOnReturnDirective),
/* harmony export */   "FocusableContainerDirective": () => (/* reexport safe */ _on_return_directive__WEBPACK_IMPORTED_MODULE_4__.FocusableContainerDirective),
/* harmony export */   "ReplaceDotDirective": () => (/* reexport safe */ _replace_dot_directive__WEBPACK_IMPORTED_MODULE_5__.ReplaceDotDirective),
/* harmony export */   "ReplaceOnPasteDirective": () => (/* reexport safe */ _replace_on_paste_directive__WEBPACK_IMPORTED_MODULE_6__.ReplaceOnPasteDirective),
/* harmony export */   "UppercaseInputDirective": () => (/* reexport safe */ _uppercase_input_directive__WEBPACK_IMPORTED_MODULE_7__.UppercaseInputDirective),
/* harmony export */   "ShadowControlDirective": () => (/* reexport safe */ _shadow_directive__WEBPACK_IMPORTED_MODULE_8__.ShadowControlDirective),
/* harmony export */   "DynamicPrefixDirective": () => (/* reexport safe */ _dynamic_prefix_directive__WEBPACK_IMPORTED_MODULE_0__.DynamicPrefixDirective),
/* harmony export */   "CurrentUserPhoneDirective": () => (/* reexport safe */ _current_user_phone_directive__WEBPACK_IMPORTED_MODULE_10__.CurrentUserPhoneDirective),
/* harmony export */   "CollapsibleDirective": () => (/* reexport safe */ _collapsible_collapsible_directive__WEBPACK_IMPORTED_MODULE_11__.CollapsibleDirective),
/* harmony export */   "CollapsibleTriggerDirective": () => (/* reexport safe */ _collapsible_collapsible_trigger_directive__WEBPACK_IMPORTED_MODULE_12__.CollapsibleTriggerDirective),
/* harmony export */   "CollapsibleBodyDirective": () => (/* reexport safe */ _collapsible_collapsible_body_directive__WEBPACK_IMPORTED_MODULE_13__.CollapsibleBodyDirective),
/* harmony export */   "ClampDirective": () => (/* reexport safe */ _clamp_directive__WEBPACK_IMPORTED_MODULE_14__.ClampDirective),
/* harmony export */   "BadgeDirective": () => (/* reexport safe */ _badge_directive__WEBPACK_IMPORTED_MODULE_16__.BadgeDirective),
/* harmony export */   "DndDirective": () => (/* reexport safe */ _dnd_directive__WEBPACK_IMPORTED_MODULE_15__.DndDirective)
/* harmony export */ });
/* harmony import */ var _dynamic_prefix_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dynamic-prefix.directive */ 89848);
/* harmony import */ var _cursor_bound_directive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cursor-bound.directive */ 15191);
/* harmony import */ var _lock_keyboard_input_directive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lock-keyboard-input.directive */ 39112);
/* harmony import */ var _normalize_amount_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize-amount.directive */ 82882);
/* harmony import */ var _on_return_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./on-return.directive */ 66821);
/* harmony import */ var _replace_dot_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./replace-dot.directive */ 81907);
/* harmony import */ var _replace_on_paste_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./replace-on-paste.directive */ 36466);
/* harmony import */ var _uppercase_input_directive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./uppercase-input.directive */ 11586);
/* harmony import */ var _shadow_directive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shadow.directive */ 67089);
/* harmony import */ var _invalid_control_scroll_directive__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./invalid-control-scroll.directive */ 28087);
/* harmony import */ var _current_user_phone_directive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./current-user-phone.directive */ 28203);
/* harmony import */ var _collapsible_collapsible_directive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./collapsible/collapsible.directive */ 84139);
/* harmony import */ var _collapsible_collapsible_trigger_directive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./collapsible/collapsible-trigger.directive */ 43626);
/* harmony import */ var _collapsible_collapsible_body_directive__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./collapsible/collapsible-body.directive */ 55809);
/* harmony import */ var _clamp_directive__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./clamp.directive */ 51884);
/* harmony import */ var _dnd_directive__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dnd.directive */ 31872);
/* harmony import */ var _badge_directive__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./badge.directive */ 74675);

















const DIRECTIVES = [
    _on_return_directive__WEBPACK_IMPORTED_MODULE_4__.FocusableContainerDirective,
    _cursor_bound_directive__WEBPACK_IMPORTED_MODULE_1__.CursorBoundDirective,
    _replace_on_paste_directive__WEBPACK_IMPORTED_MODULE_6__.ReplaceOnPasteDirective,
    _replace_dot_directive__WEBPACK_IMPORTED_MODULE_5__.ReplaceDotDirective,
    _lock_keyboard_input_directive__WEBPACK_IMPORTED_MODULE_2__.LockKeyboardInputDirective,
    _normalize_amount_directive__WEBPACK_IMPORTED_MODULE_3__.NormalizeAmountDirective,
    _uppercase_input_directive__WEBPACK_IMPORTED_MODULE_7__.UppercaseInputDirective,
    _on_return_directive__WEBPACK_IMPORTED_MODULE_4__.FocusOnReturnDirective,
    _shadow_directive__WEBPACK_IMPORTED_MODULE_8__.ShadowControlDirective,
    _invalid_control_scroll_directive__WEBPACK_IMPORTED_MODULE_9__.InvalidControlScrollDirective,
    _invalid_control_scroll_directive__WEBPACK_IMPORTED_MODULE_9__.InvalidControlScrollContainerDirective,
    _dynamic_prefix_directive__WEBPACK_IMPORTED_MODULE_0__.DynamicPrefixDirective,
    _current_user_phone_directive__WEBPACK_IMPORTED_MODULE_10__.CurrentUserPhoneDirective,
    _clamp_directive__WEBPACK_IMPORTED_MODULE_14__.ClampDirective,
    _badge_directive__WEBPACK_IMPORTED_MODULE_16__.BadgeDirective,
    // Collapsible
    _collapsible_collapsible_directive__WEBPACK_IMPORTED_MODULE_11__.CollapsibleDirective,
    _collapsible_collapsible_trigger_directive__WEBPACK_IMPORTED_MODULE_12__.CollapsibleTriggerDirective,
    _collapsible_collapsible_body_directive__WEBPACK_IMPORTED_MODULE_13__.CollapsibleBodyDirective,
    _dnd_directive__WEBPACK_IMPORTED_MODULE_15__.DndDirective,
];










// Collapsible








/***/ }),

/***/ 28087:
/*!***********************************************************************!*\
  !*** ./src/app/shared/directives/invalid-control-scroll.directive.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InvalidControlScrollContainerDirective": () => (/* binding */ InvalidControlScrollContainerDirective),
/* harmony export */   "InvalidControlScrollDirective": () => (/* binding */ InvalidControlScrollDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 90587);



let InvalidControlScrollContainerDirective = class InvalidControlScrollContainerDirective {
    constructor(el) {
        this.el = el;
        this.containerEl = this.el.nativeElement;
    }
};
InvalidControlScrollContainerDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
InvalidControlScrollContainerDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jInvalidControlScrollContainer]',
    })
], InvalidControlScrollContainerDirective);

/**
 * @todo cannot get container from projected content
 * remove fPage
 */
let InvalidControlScrollDirective = class InvalidControlScrollDirective {
    constructor(el, formGroupDir, window, scrollContainerDir) {
        this.el = el;
        this.formGroupDir = formGroupDir;
        this.window = window;
        this.scrollContainerDir = scrollContainerDir;
    }
    get containerEl() {
        return this.scrollContainerDir
            ? this.scrollContainerDir.containerEl
            : this.window;
    }
    onSubmit(e) {
        if (this.formGroupDir.invalid) {
            this.scrollToFirstInvalidControl();
        }
    }
    scrollToFirstInvalidControl() {
        const firstInvalidControl = this.el.nativeElement.querySelector('.ng-invalid');
        if (firstInvalidControl) {
            this.containerEl.scroll({
                top: this.getTopOffset(firstInvalidControl),
                left: 0,
                behavior: 'smooth',
            });
        }
        // fromEvent(this.containerEl, 'scroll')
        //   .pipe(debounceTime(100), take(1))
        //   .subscribe(() => {
        //     firstInvalidControl.focus();
        //   });
    }
    getTopOffset(controlEl) {
        const labelOffset = 50;
        const controlElTop = controlEl === null || controlEl === void 0 ? void 0 : controlEl.getBoundingClientRect().top;
        if (controlElTop && this.containerEl instanceof HTMLElement) {
            const containerTop = this.containerEl.getBoundingClientRect()
                .top;
            const absoluteControlElTop = controlElTop + this.containerEl.scrollTop;
            return absoluteControlElTop - containerTop - labelOffset;
        }
        else {
            const absoluteControlElTop = controlElTop + this.window.scrollY;
            return absoluteControlElTop - labelOffset;
        }
    }
};
InvalidControlScrollDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormGroupDirective },
    { type: Window },
    { type: InvalidControlScrollContainerDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional }] }
];
InvalidControlScrollDirective.propDecorators = {
    onSubmit: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['ngSubmit',] }]
};
InvalidControlScrollDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jInvalidControlScroll]',
    })
], InvalidControlScrollDirective);



/***/ }),

/***/ 39112:
/*!********************************************************************!*\
  !*** ./src/app/shared/directives/lock-keyboard-input.directive.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LockKeyboardInputDirective": () => (/* binding */ LockKeyboardInputDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


const keys = {
    8: 'BACKSPACE',
    46: 'DELETE ',
    9: 'TAB',
    37: 'LEFT',
    38: 'UP',
    39: 'RIGHT',
    40: 'DOWN',
    35: 'END',
};
let LockKeyboardInputDirective = class LockKeyboardInputDirective {
    constructor() {
    }
    onKeyEvent(event) {
        const e = event || window.event; // get event object
        if (e.defaultPrevented) {
            return;
        }
        //  e.key || e.code not a number as usual - just string "Tab" or "Enter"
        const key = e.which || e.key || e.code;
        if (e.key.length <= 1 || !(e.metaKey || e.ctrlKey || e.altKey) || !keys[key]) {
            if (e.preventDefault) {
                e.preventDefault();
            }
            else {
                e.returnValue = false;
            }
        }
    }
};
LockKeyboardInputDirective.ctorParameters = () => [];
LockKeyboardInputDirective.propDecorators = {
    onKeyEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['keydown', ['$event'],] }]
};
LockKeyboardInputDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jLockKeyboardInput]',
    })
], LockKeyboardInputDirective);



/***/ }),

/***/ 82882:
/*!*****************************************************************!*\
  !*** ./src/app/shared/directives/normalize-amount.directive.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NormalizeAmountDirective": () => (/* binding */ NormalizeAmountDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);



let NormalizeAmountDirective = class NormalizeAmountDirective {
    constructor(elem, maskedService) {
        this.elem = elem;
        this.maskedService = maskedService;
    }
    onPasteEvent(event) {
        try {
            event.preventDefault();
            const clipboardData = event.clipboardData || window.clipboardData;
            const pastedText = clipboardData.getData('text');
            const toPasteRaw = this.maskedService.getMaskedAmount(pastedText);
            this.elem.nativeElement.value = toPasteRaw;
        }
        catch (error) { }
    }
    normalize() { }
};
NormalizeAmountDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__.MaskedService }
];
NormalizeAmountDirective.propDecorators = {
    onPasteEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener, args: ['paste', ['$event'],] }],
    normalize: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener, args: ['input', ['$event'],] }]
};
NormalizeAmountDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
        selector: '[jNormalizeAmount]',
    })
], NormalizeAmountDirective);



/***/ }),

/***/ 66821:
/*!**********************************************************!*\
  !*** ./src/app/shared/directives/on-return.directive.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FocusOnReturnDirective": () => (/* binding */ FocusOnReturnDirective),
/* harmony export */   "FocusableContainerDirective": () => (/* binding */ FocusableContainerDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_form_field_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/form-field/utils */ 11685);
/* harmony import */ var _shared_form_field_form_field_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/form-field/form-field-control */ 46758);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 80823);






/**
 * @todo check possible ways to manipulate with focus on custom elements
 * tabindex or focusable iteration
 * inject focusable container marker and iterate there?
 */
let FocusOnReturnDirective = class FocusOnReturnDirective {
    constructor(el, hostComponent, container) {
        this.el = el;
        this.hostComponent = hostComponent;
        this.container = container;
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subscription();
    }
    onKeyDown(e) {
        if (e.which === 13 || e.keyCode === 13) {
            if (this.focusNext()) {
                e.preventDefault();
                e.stopPropagation();
            }
        }
    }
    onFocus(e) {
        this.container.currentTarget = this;
    }
    ngOnInit() {
        const host = this.jFocusOnReturn || this.hostComponent;
        if (host) {
            // handle select next for select component
            if (host.changeEvent) {
                this.subs.add(host.changeEvent
                    .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.debounceTime)(100))
                    .subscribe((v) => {
                    if (v) {
                        this.focusNext();
                    }
                }));
            }
        }
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
        if (this.container.currentTarget === this) {
            this.container.currentTarget = null;
        }
    }
    focusNext() {
        const focusable = this.container.targets.toArray();
        const currentIndex = focusable.indexOf(this);
        const nextIndex = currentIndex + 1;
        if (nextIndex >= 0 && nextIndex < focusable.length) {
            const next = focusable[nextIndex];
            let targetTrigger;
            if (next.jFocusOnReturn) {
                targetTrigger = (0,_shared_form_field_utils__WEBPACK_IMPORTED_MODULE_0__.coerceElement)(next.jFocusOnReturn);
            }
            else {
                targetTrigger = (0,_shared_form_field_utils__WEBPACK_IMPORTED_MODULE_0__.coerceElement)(next.el);
            }
            targetTrigger.focus();
            return true;
        }
        return false;
    }
};
FocusOnReturnDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef },
    { type: _shared_form_field_form_field_control__WEBPACK_IMPORTED_MODULE_1__.JFormFieldControl, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Self }] },
    { type: FocusableContainerDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject, args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => FocusableContainerDirective),] }] }
];
FocusOnReturnDirective.propDecorators = {
    jFocusOnReturn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    onKeyDown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['keydown', ['$event'],] }],
    onFocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['focus', ['$event'],] }]
};
FocusOnReturnDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Directive)({
        selector: '[jFocusOnReturn]',
    })
], FocusOnReturnDirective);

/**
 * @todo expensive checking descendants
 */
let FocusableContainerDirective = class FocusableContainerDirective {
    constructor(elem) {
        this.elem = elem;
    }
    focusNext() {
        this.currentTarget && this.currentTarget.focusNext();
    }
};
FocusableContainerDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef }
];
FocusableContainerDirective.propDecorators = {
    targets: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ContentChildren, args: [FocusOnReturnDirective, {
                    descendants: true,
                    // read: true
                },] }]
};
FocusableContainerDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Directive)({
        selector: '[jFocusableContainer]',
    })
], FocusableContainerDirective);



/***/ }),

/***/ 81907:
/*!************************************************************!*\
  !*** ./src/app/shared/directives/replace-dot.directive.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReplaceDotDirective": () => (/* binding */ ReplaceDotDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 90587);




let ReplaceDotDirective = class ReplaceDotDirective {
    constructor(maskedService, controlDirective) {
        this.maskedService = maskedService;
        this.controlDirective = controlDirective;
    }
    onKeyEvent(event) {
        const e = event || window.event; // get event object
        if (e.defaultPrevented) {
            return;
        }
        //  e.key || e.code not a number as usual - just string "Tab" or "Enter"
        const key = e.key || e.code;
        if (key === '.') {
            if (e.preventDefault) {
                // get old value
                const start = e.target.selectionStart;
                const end = e.target.selectionEnd;
                const oldValue = e.target.value;
                if (!oldValue.includes(',')) {
                    // replace point and change input value
                    let newValue = oldValue.slice(0, start) + ',' + oldValue.slice(end);
                    if (this.applyFormatAmount) {
                        newValue = this.maskedService.getMaskedAmount(newValue, this.applyFormatAmount);
                    }
                    e.target.value = newValue;
                    // replace cursor
                    e.target.selectionStart = e.target.selectionEnd = start + 1;
                }
                e.preventDefault();
            }
            else {
                e.returnValue = false;
            }
        }
    }
    onPaste(event) {
        event.preventDefault();
        const clipboardData = event.clipboardData || window.clipboardData;
        const pastedText = clipboardData.getData('text');
        const toPasteRaw = this.maskedService.getMaskedAmount(pastedText);
        this.controlDirective && this.controlDirective.control.setValue(toPasteRaw);
    }
};
ReplaceDotDirective.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__.MaskedService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControlDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Self }] }
];
ReplaceDotDirective.propDecorators = {
    applyFormatAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    onKeyEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostListener, args: ['keydown', ['$event'],] }],
    onPaste: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostListener, args: ['paste', ['$event'],] }]
};
ReplaceDotDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Directive)({
        selector: '[jReplaceDot]',
    })
], ReplaceDotDirective);



/***/ }),

/***/ 36466:
/*!*****************************************************************!*\
  !*** ./src/app/shared/directives/replace-on-paste.directive.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReplaceOnPasteDirective": () => (/* binding */ ReplaceOnPasteDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


/**
 * @description Helper directive for fixing pasting data from clipboard with ngx mask prefix directive attached
 * Strip prefixied string and prevent cutting last letters
 */
let ReplaceOnPasteDirective = class ReplaceOnPasteDirective {
    constructor(elem) {
        this.elem = elem;
    }
    onPasteEvent(event) {
        try {
            let clipboardData, pastedData;
            clipboardData = event.clipboardData || window.clipboardData;
            pastedData = clipboardData.getData('Text');
            this.elem.nativeElement.value = pastedData.replace(this.jReplaceOnPaste, this.with || '');
        }
        catch (error) { }
    }
};
ReplaceOnPasteDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
ReplaceOnPasteDirective.propDecorators = {
    jReplaceOnPaste: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }],
    with: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }],
    onPasteEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener, args: ['paste', ['$event'],] }]
};
ReplaceOnPasteDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jReplaceOnPaste]',
    })
], ReplaceOnPasteDirective);



/***/ }),

/***/ 67089:
/*!*******************************************************!*\
  !*** ./src/app/shared/directives/shadow.directive.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShadowControlDirective": () => (/* binding */ ShadowControlDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_input_shadow_input_shadow_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/input-shadow/input-shadow.component */ 56209);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 36312);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 86942);






let ShadowControlDirective = class ShadowControlDirective {
    constructor(ngControl, element, vcr, resolver, cd) {
        this.ngControl = ngControl;
        this.element = element;
        this.vcr = vcr;
        this.resolver = resolver;
        this.cd = cd;
        this.focused$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subscription();
    }
    onBlur() {
        this.focused$.next(false);
    }
    onFocus() {
        this.focused$.next(true);
    }
    ngOnInit() {
        if (this.jShadow) {
            const factory = this.resolver.resolveComponentFactory(_shared_input_shadow_input_shadow_component__WEBPACK_IMPORTED_MODULE_0__.InputShadowComponent);
            if (this.ngControl) {
                this.vChange$ = this.ngControl.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.startWith)(this.ngControl.value));
            }
            else {
                this.vChange$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this.element.nativeElement, 'input').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.startWith)(this.element.nativeElement.value), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.map)((e) => this.element.nativeElement.value));
            }
            this.ref = this.vcr.createComponent(factory);
            const instance = this.ref.instance;
            instance.shadow = this.jShadow;
            this.subs.add((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.combineLatest)(this.vChange$, this.focused$).subscribe(([v, f]) => {
                const nextVisibility = (f) || (f && this.jDynamicPrefix);
                if (nextVisibility || !!nextVisibility !== !instance.hidden) {
                    instance.hidden = !nextVisibility;
                    instance.value = this.jDynamicPrefix ? this.jDynamicPrefix + v : v;
                    instance.ngOnChanges();
                }
            }));
        }
    }
    ngOnChanges() { }
    ngOnDestroy() {
        this.subs.unsubscribe();
        this.vcr.clear();
    }
};
ShadowControlDirective.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControl, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Self }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ElementRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ViewContainerRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ComponentFactoryResolver },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ChangeDetectorRef }
];
ShadowControlDirective.propDecorators = {
    jShadow: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input }],
    jDynamicPrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input }],
    onBlur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.HostListener, args: ['blur',] }],
    onFocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.HostListener, args: ['focus',] }]
};
ShadowControlDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Directive)({
        selector: '[jShadow]',
    })
], ShadowControlDirective);



/***/ }),

/***/ 11586:
/*!****************************************************************!*\
  !*** ./src/app/shared/directives/uppercase-input.directive.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UppercaseInputDirective": () => (/* binding */ UppercaseInputDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let UppercaseInputDirective = class UppercaseInputDirective {
    constructor(ref) {
        this.ref = ref;
    }
};
UppercaseInputDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef }
];
UppercaseInputDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jUppercase]',
        host: {
            '(input)': 'ref.nativeElement.value=$event.target.value.toUpperCase()',
        },
    })
], UppercaseInputDirective);



/***/ }),

/***/ 89609:
/*!***********************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-edit-item/employee-edit-item.component.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmployeeEditItemComponent": () => (/* binding */ EmployeeEditItemComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _employee_edit_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./employee-edit-item.component.html?ngResource */ 60784);
/* harmony import */ var _employee_edit_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./employee-edit-item.component.scss?ngResource */ 13582);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);










let EmployeeEditItemComponent = class EmployeeEditItemComponent {
    constructor(element, maskPipe, maskedService, translateService) {
        this.element = element;
        this.maskPipe = maskPipe;
        this.maskedService = maskedService;
        this.translateService = translateService;
        this.remove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.cancelRemove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.autocomplete = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.addPeriod = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.minAmount = 0.01;
        this.maxAmount = 212500;
        this.CURRENCY = _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_2__.CURRENCY;
        this.minDate = new Date(1900, 0, 0);
        this.maxDate = new Date();
    }
    ngOnInit() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.hideStream$ = this.item.linkedWith
            ? (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.combineLatest)([
                this.item.removing$,
                this.item.linkedWith.removing$,
            ]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(([parent, child]) => parent !== null || child !== null))
            : this.item.removing$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)((item) => item !== null));
        this.showCancel$ = this.item.removing$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)((item) => item !== null), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.distinctUntilChanged)());
        this.hideControls$ =
            this.item.linkedWith &&
                this.item.linkedWith.removing$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)((item) => item !== null));
        this.group.patchValue({
            lastName: ((_b = (_a = this.form.lastName) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.trim()) || '',
        });
        this.group.patchValue({
            firstName: ((_d = (_c = this.form.firstName) === null || _c === void 0 ? void 0 : _c.value) === null || _d === void 0 ? void 0 : _d.trim()) || '',
        });
        this.group.patchValue({
            middleName: ((_f = (_e = this.form.middleName) === null || _e === void 0 ? void 0 : _e.value) === null || _f === void 0 ? void 0 : _f.trim()) || '',
        });
        this.group.patchValue({
            amount: ((_g = this.form.amount) === null || _g === void 0 ? void 0 : _g.value)
                ? this.maskedService.formatAmount(this.form.amount.value)
                : '',
        });
    }
    get form() {
        return this.group.controls;
    }
    get amountError$() {
        var _a, _b, _c, _d, _e;
        if (((_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.amount) === null || _b === void 0 ? void 0 : _b.value) && ((_e = (_d = (_c = this.form) === null || _c === void 0 ? void 0 : _c.amount) === null || _d === void 0 ? void 0 : _d.errors) === null || _e === void 0 ? void 0 : _e.invalidAmount)) {
            return this.translateService.get(`PAYMENTS.EMPLOYEES.INVALID_AMOUNT`);
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.of)(null);
    }
    get removeLabel() {
        return `PAYMENTS.EMPLOYEES.${this.item.linkedWith ? 'REMOVE_PERIOD_PAYMENT' : 'REMOVE_FROM_PAYMENT'}`;
    }
    onRemove() {
        this.remove.emit(this.item);
    }
    onCancel() {
        this.cancelRemove.emit(this.item);
    }
    onAutocomplete(event) {
        if (this.form.iin.valid &&
            this.item.autocomplete$.getValue() !== this.form.iin.value) {
            this.autocomplete.emit(this.item);
        }
        if (event) {
            event.preventDefault();
        }
    }
    onAddPeriod() {
        this.addPeriod.emit(this.item);
    }
    getMaskedAmount(amount) {
        const maskedAmount = this.maskPipe.transform(amount, this.masks.amount.mask);
        return `${maskedAmount}${this.masks.amount.suffix}`;
    }
};
EmployeeEditItemComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_9__.MaskPipe },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__.TranslateService }
];
EmployeeEditItemComponent.propDecorators = {
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    additionalPeriodEnabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    index: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    item: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    masks: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    errors: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isSubmitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    remove: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    cancelRemove: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    autocomplete: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    addPeriod: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    minAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    maxAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
EmployeeEditItemComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-employee-edit-item',
        template: _employee_edit_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewEncapsulation.None,
        styles: [_employee_edit_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EmployeeEditItemComponent);



/***/ }),

/***/ 61322:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-group-control/employee-group-control.component.ts ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmployeeGroupControlComponent": () => (/* binding */ EmployeeGroupControlComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _employee_group_control_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./employee-group-control.component.html?ngResource */ 88328);
/* harmony import */ var _employee_group_control_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./employee-group-control.component.scss?ngResource */ 62115);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ 64398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var _modals_employees_modal_employees_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modals/employees-modal/employees-modal.component */ 13119);
/* harmony import */ var _shared_validators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/validators */ 88228);
/* harmony import */ var _shared_employee_employee_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/employee/employee.model */ 46593);
/* harmony import */ var _ngspot_ngx_errors__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @ngspot/ngx-errors */ 47599);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);















let EmployeeGroupControlComponent = class EmployeeGroupControlComponent {
    constructor(modalService, maskedService, ngControl, parentGroup) {
        this.modalService = modalService;
        this.maskedService = maskedService;
        this.ngControl = ngControl;
        this.parentGroup = parentGroup;
        this.birthDateRequired = true;
        // @Input() disablePeriod?: boolean;
        // В зависимости от типа платежа могут меняться, поэтому надо передавать
        this.minAmount = 0.01;
        this.maxAmount = 212500;
        this.currency = _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_7__.CURRENCY.KZT;
        this.errors = _shared_validators__WEBPACK_IMPORTED_MODULE_4__.errors.employees;
        this.value = undefined;
        this.disabled = false;
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subscription();
        /** `View -> model callback called when value changes` */
        this._onChange = (c) => { };
        /** `View -> model callback called when select has been touched` */
        this._onTouched = () => { };
        if (this.ngControl !== null) {
            this.ngControl.valueAccessor = this;
        }
    }
    ngOnInit() {
        if (this.periodRequired) {
            this.listenCommonPeriod();
        }
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
    get commonPeriodEnabled() {
        var _a;
        return (_a = this.parentGroup) === null || _a === void 0 ? void 0 : _a.form.controls.commonPeriodEnabled;
    }
    get commonPeriod() {
        var _a;
        return (_a = this.parentGroup) === null || _a === void 0 ? void 0 : _a.form.controls.period;
    }
    get selectedCount() {
        return (this.value && this.value.length) || 0;
    }
    listenCommonPeriod() {
        this.subs.add(this.commonPeriodEnabled.valueChanges
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.startWith)(this.commonPeriodEnabled.value), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.throttleTime)(100, undefined, { leading: true, trailing: true }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.distinctUntilChanged)())
            .subscribe((v) => {
            if (v) {
                this.commonPeriod.enable();
                // this.formArray.controls.forEach((group) =>
                //   (group as FormGroup).controls.period.disable()
                // );
            }
            else {
                this.commonPeriod.disable();
                this.commonPeriod.patchValue(null);
                // this.formArray.controls.forEach((group) =>
                //   (group as FormGroup).controls.period.enable()
                // );
            }
        }));
        this.subs.add(this.commonPeriod.valueChanges
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.filter)((v) => !!v), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.throttleTime)(100, undefined, { leading: true, trailing: true }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.distinctUntilChanged)())
            .subscribe((v) => {
            // this.formArray.controls.forEach((group) =>
            //   (group as FormGroup).controls.period.patchValue(v)
            // );
        }));
    }
    showPicker() {
        let modal = this.modalService.open(_modals_employees_modal_employees_modal_component__WEBPACK_IMPORTED_MODULE_3__.EmployeesModalComponent, {
            backdropClass: 'backdrop_light',
            backdrop: 'static',
            windowClass: 'modal_light modal-adaptive',
            size: 'lg',
            centered: false,
        });
        this.ngControl && this.ngControl.control.markAsTouched();
        Object.assign(modal.componentInstance, {
            additionalPeriodEnabled: this.additionalPeriodEnabled,
            initialEmployees: this.normalizeForInnerModel(this.value || []),
            parentForm: this.parentGroup,
            birthDateRequired: this.birthDateRequired,
            ibanRequired: this.ibanRequired,
            periodRequired: this.periodRequired,
            paymentType: this.paymentType,
            minAmount: this.minAmount,
            maxAmount: this.maxAmount,
        });
        modal.result
            .then((result) => {
            this.value = this.normalizeModel(result);
            this.ngControl.control.setValue(this.value);
            this.ngControl.control.markAsDirty();
        })
            .catch(() => {
            /*  no selection or dismiss */
        })
            .finally(() => (modal = undefined));
    }
    writeValue(value) {
        this.value = value;
    }
    registerOnChange(fn) {
        this._onChange = fn;
    }
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
        // this._changeDetectorRef.markForCheck()
    }
    normalizeModel(employees) {
        const result = employees.map((rawItem) => {
            const item = Object.assign(Object.assign({}, rawItem), { amount: this.maskedService.getNumberedAmount(rawItem.amount || '0'), period: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.periodInputDateToISODateSafe)(rawItem.period), birthDate: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.periodInputDateToISODateSafe)(rawItem.birthDate) });
            if (this.ibanRequired) {
                item.iban = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.ibanPrefix)(item.iban, this.currency);
            }
            delete item.id;
            delete item.linkedWith;
            return item;
        });
        return result;
    }
    normalizeForInnerModel(list) {
        const result = list.reduce((acc, rawItem) => {
            let linkWith;
            let newItem;
            if (rawItem.iin && (linkWith = acc.equalIin[rawItem.iin])) {
                newItem = new _shared_employee_employee_model__WEBPACK_IMPORTED_MODULE_5__.EmployeeItemModel(rawItem, {
                    additionalPeriod: linkWith.id,
                });
            }
            else {
                newItem = new _shared_employee_employee_model__WEBPACK_IMPORTED_MODULE_5__.EmployeeItemModel(rawItem);
                this.additionalPeriodEnabled && (acc.equalIin[newItem.iin] = newItem);
            }
            newItem.period = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToDateSafe)(newItem.period);
            newItem.birthDate = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToPeriodInputSafe)(newItem.birthDate);
            if (this.ibanRequired) {
                // remove iban prefix
                newItem.iban = newItem.iban && newItem.iban.slice(2);
            }
            acc.list.push(newItem);
            return acc;
        }, {
            list: [],
            equalIin: {},
        });
        return result.list;
    }
};
EmployeeGroupControlComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__.NgbModal },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NgControl, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Self }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormGroupDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Optional }] }
];
EmployeeGroupControlComponent.propDecorators = {
    paymentType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    isSubmitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    ibanRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    periodRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    additionalPeriodEnabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    minAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    maxAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }],
    currency: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.Input }]
};
EmployeeGroupControlComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_15__.Component)({
        selector: 'j-employee-group-control',
        template: _employee_group_control_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        host: {
            class: 'employee-group',
        },
        providers: [
            // {
            //   provide: NG_VALUE_ACCESSOR,
            //   useExisting: forwardRef(() => EmployeeGroupControlComponent),
            //   multi: true,
            // },
            {
                provide: _ngspot_ngx_errors__WEBPACK_IMPORTED_MODULE_17__.ErrorsConfiguration,
                useValue: {
                    showErrorsOnlyIfInputDirty: true,
                    showErrorsWhenFormSubmitted: true,
                },
            },
        ],
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_15__.ViewEncapsulation.None,
        styles: [_employee_group_control_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EmployeeGroupControlComponent);



/***/ }),

/***/ 61015:
/*!***************************************************************************************!*\
  !*** ./src/app/shared/employee/components/saved-employee/saved-employee.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SavedEmployeeComponent": () => (/* binding */ SavedEmployeeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _saved_employee_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./saved-employee.component.html?ngResource */ 38940);
/* harmony import */ var _saved_employee_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./saved-employee.component.scss?ngResource */ 21568);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let SavedEmployeeComponent = class SavedEmployeeComponent {
    constructor() {
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.edited = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.deleted = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.deleteConfirmed = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.deleteCancelled = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes.isDeletingBulk && this.employee.isDeleting) {
            this.startTimer();
        }
    }
    onSelect() {
        this.employee.isSelected = !this.employee.isSelected;
        this.selected.emit(this.employee);
    }
    onEdit(event) {
        event.preventDefault();
        this.edited.emit({
            employee: this.employee,
            index: this.index,
        });
    }
    onDelete(event) {
        event.preventDefault();
        this.employee.isDeleting = true;
        this.deleted.emit({
            employee: this.employee,
            index: this.index,
        });
        this.startTimer();
    }
    onDeleteCancelled(event) {
        event.preventDefault();
        this.stopTimer(true);
    }
    get id() {
        return `employee${this.index}`;
    }
    get fio() {
        const fio = [];
        if (this.employee.lastName) {
            fio.push(this.employee.lastName);
        }
        if (this.employee.firstName) {
            fio.push(this.employee.firstName);
        }
        if (this.employee.middleName) {
            fio.push(this.employee.middleName);
        }
        return fio.join(' ');
    }
    startTimer() {
        this.timerValue = 5;
        this.timer = setInterval(() => {
            this.timerValue--;
            if (this.timerValue === 0) {
                this.stopTimer();
            }
        }, 1000);
    }
    stopTimer(cancelled = false) {
        clearInterval(this.timer);
        this.employee.isDeleting = false;
        if (cancelled) {
            this.deleteCancelled.emit({
                employee: this.employee,
                index: this.index,
            });
        }
        else {
            this.deleteConfirmed.emit({
                employee: this.employee,
                index: this.index,
            });
        }
    }
};
SavedEmployeeComponent.ctorParameters = () => [];
SavedEmployeeComponent.propDecorators = {
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    edited: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    deleted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    deleteConfirmed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    deleteCancelled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    employee: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    ibanRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    index: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isDeletingBulk: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    paymentType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }]
};
SavedEmployeeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-saved-employee',
        template: _saved_employee_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_saved_employee_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SavedEmployeeComponent);



/***/ }),

/***/ 46593:
/*!***************************************************!*\
  !*** ./src/app/shared/employee/employee.model.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Employee": () => (/* binding */ Employee),
/* harmony export */   "EmployeeItemModel": () => (/* binding */ EmployeeItemModel),
/* harmony export */   "EmployeesItem": () => (/* binding */ EmployeesItem)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/index */ 96530);




class Employee {
    constructor(employee) {
        Object.assign(this, employee);
        this.name = `${employee.lastName} ${employee.firstName} ${employee.middleName}`;
        // const body = {
        //   ...this,
        //   ...employee,
        //   iin: '',
        //   period: this.getDefaultPeriod(),
        //   amount: null,
        //   name: '',
        // } as Employee;
        this.isDeleting = false;
        this.isSelected = false;
        this.isHidden = false;
        this.index = null;
        // this.formGroup = this.generateFormGroup(body);
    }
    getShortName() {
        const [surname, name, middlename] = this.name.split(' ');
        if (middlename) {
            return `${surname || ''} ${name[0] || ''}. ${middlename[0] || ''}.`;
        }
        else if (name) {
            return `${surname || ''} ${name[0] || ''}.`;
        }
        else {
            return `${surname || ''}`;
        }
    }
    getBalance(paymentType) {
        switch (paymentType) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_1__.PAYMENT_TYPE.PENSION:
                return this.pensionSum;
            case _shared_models__WEBPACK_IMPORTED_MODULE_1__.PAYMENT_TYPE.MEDICAL:
                return this.ocmcSum;
            case _shared_models__WEBPACK_IMPORTED_MODULE_1__.PAYMENT_TYPE.SOCIAL:
                return this.socialSum;
            case _shared_models__WEBPACK_IMPORTED_MODULE_1__.PAYMENT_TYPE.SALARY:
                return this.salarySum;
        }
    }
}
class EmployeeItemModel {
    constructor(blueprint = {}, opts = {}) {
        Object.assign(this, {
            currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__.CURRENCY.KZT,
        }, blueprint);
        this.linkedWith = undefined;
        if (opts.additionalPeriod) {
            this.linkedWith = opts.additionalPeriod;
            delete this.id;
        }
        if (!this.id) {
            this.id = (0,_utils_index__WEBPACK_IMPORTED_MODULE_2__.generateUniqueId)();
        }
    }
}
class EmployeesItem {
    constructor(opts) {
        // index: number;
        this.cancelRemove$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
        this.removing$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__.BehaviorSubject(null);
        this.updating$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__.BehaviorSubject(false);
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
        this.autocomplete$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__.BehaviorSubject(null);
        opts && Object.assign(this, opts);
    }
    destroy() {
        this.destroy$.next(Date.now());
        this.destroy$.complete();
        this.removing$.complete();
        this.autocomplete$.complete();
        this.cancelRemove$.complete();
        let parentFormArray = this.group.parent;
        parentFormArray.removeAt(parentFormArray.controls.findIndex((group) => group === this.group));
        parentFormArray = undefined;
        this.group = undefined;
        if (this.linkedWith) {
            this.linkedWith.children = this.linkedWith.children.filter((item) => item !== this);
            this.linkedWith = undefined;
        }
    }
}


/***/ }),

/***/ 46925:
/*!*****************************************************!*\
  !*** ./src/app/shared/employee/employee.service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmployeeService": () => (/* binding */ EmployeeService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _employee_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./employee.model */ 46593);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);






let EmployeeService = class EmployeeService {
    constructor(api, company) {
        this.api = api;
        this.company = company;
    }
    createEmployee(employee) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/employees`;
            const newEmployee = yield this.api.post(url, employee, new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders());
            return new _employee_model__WEBPACK_IMPORTED_MODULE_0__.Employee(newEmployee);
        });
    }
    getNameByIin(iin) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/employees/fullname`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders();
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpParams().set('iin', iin);
            try {
                const retrievedData = yield this.api.get(url, headers, params);
                if (retrievedData === null || retrievedData === void 0 ? void 0 : retrievedData.lastName) {
                    return {
                        lastName: retrievedData.lastName,
                        firstName: retrievedData.firstName,
                        middleName: retrievedData.middleName
                    };
                }
                else {
                    throw _api_index__WEBPACK_IMPORTED_MODULE_1__.ERRORS.RESOURCE_NOT_FOUND;
                }
            }
            catch (error) {
                throw error;
            }
        });
    }
    getEmployees() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/employees`;
            const retrievedEmployees = yield this.api.get(url);
            return retrievedEmployees.map((employee) => {
                const mappedEmployee = new _employee_model__WEBPACK_IMPORTED_MODULE_0__.Employee(employee);
                return mappedEmployee;
            });
        });
    }
    deleteEmployee(iins) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            let toDelete;
            if (Array.isArray(iins)) {
                toDelete = iins;
            }
            else {
                toDelete = [iins];
            }
            const url = `companies/${this.company.currentId}/employees`;
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpParams();
            toDelete.forEach((iin) => {
                params = params.append('iins', iin);
            });
            const removeResult = yield this.api.delete(url, new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders(), params);
            return removeResult;
        });
    }
    editEmployee(employee) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.company.currentId}/employees`;
            const employeeBody = {
                birthDate: employee.birthDate,
                fio: employee.fio,
                firstName: employee.firstName,
                middleName: employee.middleName,
                lastName: employee.lastName,
                iban: employee.iban,
                iin: employee.iin,
                ocmcSum: employee.ocmcSum,
                pensionSum: employee.pensionSum,
                salarySum: employee.salarySum,
                socialSum: employee.socialSum,
            };
            const editResult = yield this.api.put(url, employeeBody, new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders());
            return new _employee_model__WEBPACK_IMPORTED_MODULE_0__.Employee(editResult);
        });
    }
    filterEmployee(employee, term) {
        return ['iban', 'fio', 'firstName', 'middleName', 'lastName', 'iin'].some((key) => (employee[key]) && employee[key].toLocaleLowerCase().includes(term));
    }
};
EmployeeService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_1__.ApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_2__.CompanyService }
];
EmployeeService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], EmployeeService);



/***/ }),

/***/ 6699:
/*!******************************************!*\
  !*** ./src/app/shared/employee/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EMPLOYEE_COMPONENTS": () => (/* binding */ EMPLOYEE_COMPONENTS),
/* harmony export */   "SavedEmployeeComponent": () => (/* reexport safe */ _components_saved_employee_saved_employee_component__WEBPACK_IMPORTED_MODULE_0__.SavedEmployeeComponent),
/* harmony export */   "EmployeeGroupControlComponent": () => (/* reexport safe */ _components_employee_group_control_employee_group_control_component__WEBPACK_IMPORTED_MODULE_4__.EmployeeGroupControlComponent),
/* harmony export */   "EmployeeEditItemComponent": () => (/* reexport safe */ _components_employee_edit_item_employee_edit_item_component__WEBPACK_IMPORTED_MODULE_5__.EmployeeEditItemComponent),
/* harmony export */   "SavedEmployeeListComponent": () => (/* reexport safe */ _modals_saved_employee_list_saved_employee_list_component__WEBPACK_IMPORTED_MODULE_1__.SavedEmployeeListComponent),
/* harmony export */   "EditSavedEmployeeComponent": () => (/* reexport safe */ _modals_edit_saved_employee_edit_saved_employee_component__WEBPACK_IMPORTED_MODULE_2__.EditSavedEmployeeComponent),
/* harmony export */   "EmployeesModalComponent": () => (/* reexport safe */ _modals_employees_modal_employees_modal_component__WEBPACK_IMPORTED_MODULE_3__.EmployeesModalComponent),
/* harmony export */   "Employee": () => (/* reexport safe */ _employee_model__WEBPACK_IMPORTED_MODULE_6__.Employee),
/* harmony export */   "EmployeeItemModel": () => (/* reexport safe */ _employee_model__WEBPACK_IMPORTED_MODULE_6__.EmployeeItemModel),
/* harmony export */   "EmployeesItem": () => (/* reexport safe */ _employee_model__WEBPACK_IMPORTED_MODULE_6__.EmployeesItem),
/* harmony export */   "EmployeeService": () => (/* reexport safe */ _employee_service__WEBPACK_IMPORTED_MODULE_7__.EmployeeService)
/* harmony export */ });
/* harmony import */ var _components_saved_employee_saved_employee_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/saved-employee/saved-employee.component */ 61015);
/* harmony import */ var _modals_saved_employee_list_saved_employee_list_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modals/saved-employee-list/saved-employee-list.component */ 64921);
/* harmony import */ var _modals_edit_saved_employee_edit_saved_employee_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modals/edit-saved-employee/edit-saved-employee.component */ 70744);
/* harmony import */ var _modals_employees_modal_employees_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modals/employees-modal/employees-modal.component */ 13119);
/* harmony import */ var _components_employee_group_control_employee_group_control_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/employee-group-control/employee-group-control.component */ 61322);
/* harmony import */ var _components_employee_edit_item_employee_edit_item_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/employee-edit-item/employee-edit-item.component */ 89609);
/* harmony import */ var _employee_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./employee.model */ 46593);
/* harmony import */ var _employee_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./employee.service */ 46925);






const EMPLOYEE_COMPONENTS = [
    _modals_saved_employee_list_saved_employee_list_component__WEBPACK_IMPORTED_MODULE_1__.SavedEmployeeListComponent,
    _components_saved_employee_saved_employee_component__WEBPACK_IMPORTED_MODULE_0__.SavedEmployeeComponent,
    _modals_edit_saved_employee_edit_saved_employee_component__WEBPACK_IMPORTED_MODULE_2__.EditSavedEmployeeComponent,
    _modals_employees_modal_employees_modal_component__WEBPACK_IMPORTED_MODULE_3__.EmployeesModalComponent,
    _components_employee_group_control_employee_group_control_component__WEBPACK_IMPORTED_MODULE_4__.EmployeeGroupControlComponent,
    _components_employee_edit_item_employee_edit_item_component__WEBPACK_IMPORTED_MODULE_5__.EmployeeEditItemComponent,
];










/***/ }),

/***/ 70744:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/edit-saved-employee/edit-saved-employee.component.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EditSavedEmployeeComponent": () => (/* binding */ EditSavedEmployeeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _edit_saved_employee_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit-saved-employee.component.html?ngResource */ 37179);
/* harmony import */ var _edit_saved_employee_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit-saved-employee.component.scss?ngResource */ 40480);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ngx-spinner */ 42777);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _filter_filter_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @filter/filter.model */ 41359);
/* harmony import */ var _payments_services_payments_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @payments/services/payments.service */ 28706);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _shared_validators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/validators */ 88228);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _employee_employee_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../employee/employee.service */ 46925);
/* harmony import */ var _employee_employee_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../employee/employee.model */ 46593);
/* harmony import */ var _shared_masked_masked__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @shared/masked/masked */ 31475);



















let EditSavedEmployeeComponent = class EditSavedEmployeeComponent {
    constructor(maskedService, maskPipe, employeeService, spinner, paymentsService) {
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.employeeService = employeeService;
        this.spinner = spinner;
        this.paymentsService = paymentsService;
        this.deleted = new _angular_core__WEBPACK_IMPORTED_MODULE_14__.EventEmitter();
        this.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_14__.EventEmitter();
        this.saved = new _angular_core__WEBPACK_IMPORTED_MODULE_14__.EventEmitter();
        this.isSubmitted = false;
        this.minAmount = 4250;
        this.iinMaskConfig = this.maskedService.getConfig('iin');
        this.ibanMaskConfig = this.maskedService.getConfig('tengeAccount');
        this.errors = _shared_validators__WEBPACK_IMPORTED_MODULE_8__.errors;
    }
    ngOnInit() {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        let iin = ((_a = this.employee) === null || _a === void 0 ? void 0 : _a.iin) || '';
        const lastName = ((_b = this.employee) === null || _b === void 0 ? void 0 : _b.lastName) || '';
        const firstName = ((_c = this.employee) === null || _c === void 0 ? void 0 : _c.firstName) || '';
        const middleName = ((_d = this.employee) === null || _d === void 0 ? void 0 : _d.middleName) || '';
        let amount = ((_f = (_e = this.employee) === null || _e === void 0 ? void 0 : _e.getBalance(this.paymentType)) === null || _f === void 0 ? void 0 : _f.amount) || '';
        if (amount) {
            amount = this.maskedService.formatAmount(amount);
        }
        iin = this.maskPipe.transform(iin, this.iinMaskConfig.mask);
        this.employeeForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroup({
            iin: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl({ value: iin, disabled: true }),
            lastName: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required),
            firstName: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required),
            middleName: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(middleName),
            amount: new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(amount, [
                _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required,
                (control) => {
                    if (parseFloat(control.value) > 0) {
                        return null;
                    }
                    else {
                        return {
                            minAmount: true,
                        };
                    }
                },
            ]),
        });
        if (this.birthDateRequired) {
            const mappedBirthDate = ((_g = this.employee) === null || _g === void 0 ? void 0 : _g.birthDate)
                ? this.mapBirthDateToInput((_h = this.employee) === null || _h === void 0 ? void 0 : _h.birthDate)
                : '';
            this.employeeForm.addControl('birthDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(mappedBirthDate, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required));
        }
        if (this.ibanRequired) {
            this.employeeForm.addControl('iban', new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControl(this.employee.iban ? this.employee.iban.slice(2) : '', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required,
                (control) => this.paymentsService.bankExist((0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.ibanPrefix)(control.value, _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT)),
            ]));
        }
        this.employeeForm.valueChanges.subscribe((value) => {
            this.isSubmitted = false;
        });
    }
    get minDate() {
        return new Date(1900, 0, 0);
    }
    get maxDate() {
        return new Date();
    }
    get currency() {
        var _a, _b;
        return (((_b = (_a = this.employee) === null || _a === void 0 ? void 0 : _a.getBalance(this.paymentType)) === null || _b === void 0 ? void 0 : _b.currency) || _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT);
    }
    deleteEmployee(event) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__awaiter)(this, void 0, void 0, function* () {
            event.preventDefault();
            this.spinner.show();
            const deleted = yield this.employeeService.deleteEmployee([
                this.employee.iin,
            ]);
            this.deleted.emit({
                employee: deleted,
                index: this.index,
            });
            this.spinner.hide();
            this.close();
        });
    }
    close() {
        this.closed.emit();
    }
    save() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__awaiter)(this, void 0, void 0, function* () {
            this.isSubmitted = true;
            if (this.employeeForm.invalid) {
                return;
            }
            this.spinner.show();
            const newEmployee = new _employee_employee_model__WEBPACK_IMPORTED_MODULE_12__.Employee(this.employee);
            newEmployee.iin = newEmployee.iin.replace(/ /g, '');
            const formValue = this.employeeForm.getRawValue();
            let amount = formValue.amount;
            if (typeof amount == 'string') {
                amount = parseFloat(amount.replace(',', '.').replace(/ /g, ''));
            }
            switch (this.paymentType) {
                case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.PENSION:
                    newEmployee.pensionSum = {
                        amount: amount,
                        currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT,
                    };
                    break;
                case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.MEDICAL:
                    newEmployee.ocmcSum = {
                        amount: amount,
                        currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT,
                    };
                    break;
                case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SOCIAL:
                    newEmployee.socialSum = {
                        amount: amount,
                        currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT,
                    };
                    break;
                case _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.SALARY:
                    newEmployee.salarySum = {
                        amount: amount,
                        currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_10__.CURRENCY.KZT,
                    };
                    break;
            }
            newEmployee.fio = formValue.name;
            if (this.ibanRequired) {
                const unmaskedIban = this.maskedService.getPastedIban(formValue.iban, _shared_masked_masked__WEBPACK_IMPORTED_MODULE_13__.Masks.iban.prefix);
                newEmployee.iban = unmaskedIban;
            }
            if (this.birthDateRequired) {
                const eBirthDate = moment__WEBPACK_IMPORTED_MODULE_2__(formValue.birthDate, _filter_filter_model__WEBPACK_IMPORTED_MODULE_5__.PERIOD_FORMAT_INPUT);
                newEmployee.birthDate = eBirthDate.format(_utils_index__WEBPACK_IMPORTED_MODULE_3__.ISO_8061);
            }
            try {
                const saved = yield this.employeeService.editEmployee(newEmployee);
                this.saved.emit({
                    employee: saved,
                    index: this.index,
                });
                this.close();
            }
            catch (error) {
                if (error.code === _api_index__WEBPACK_IMPORTED_MODULE_4__.ERRORS.BAD_REQUEST) {
                    this.errorText = 'ERRORS.INVALID_INPUT';
                }
                else {
                    this.errorText = error.description || error.code;
                }
            }
            finally {
                this.spinner.hide();
            }
        });
    }
    get f() {
        return this.employeeForm.controls;
    }
    get hasLastNameError() {
        return this.isSubmitted && !!this.f.lastName.errors;
    }
    get hasFirstNameError() {
        return this.isSubmitted && !!this.f.firstName.errors;
    }
    get hasMiddleNameError() {
        return this.isSubmitted && !!this.f.middleName.errors;
    }
    get hasBirthdayError() {
        return this.isSubmitted && this.f.birthDate.errors;
    }
    get hasAmountError() {
        return this.isSubmitted && this.f.amount.errors;
    }
    get hasIbanError() {
        return this.isSubmitted && this.f.iban.errors;
    }
    mapBirthDateToInput(isoDate) {
        const date = new Date(isoDate);
        return (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.convertDateToString)(date);
    }
};
EditSavedEmployeeComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_7__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_17__.MaskPipe },
    { type: _employee_employee_service__WEBPACK_IMPORTED_MODULE_11__.EmployeeService },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_18__.NgxSpinnerService },
    { type: _payments_services_payments_service__WEBPACK_IMPORTED_MODULE_6__.PaymentsService }
];
EditSavedEmployeeComponent.propDecorators = {
    employee: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Input }],
    index: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Input }],
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Input }],
    ibanRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Input }],
    paymentType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Input }],
    deleted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Output }],
    closed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Output }],
    saved: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_14__.Output }]
};
EditSavedEmployeeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_16__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_14__.Component)({
        selector: 'j-edit-saved-employee',
        template: _edit_saved_employee_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_edit_saved_employee_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EditSavedEmployeeComponent);



/***/ }),

/***/ 13119:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/employees-modal/employees-modal.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmployeesModalComponent": () => (/* binding */ EmployeesModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _employees_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./employees-modal.component.html?ngResource */ 75072);
/* harmony import */ var _employees_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./employees-modal.component.scss?ngResource */ 55819);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs */ 13491);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs */ 88623);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! rxjs */ 24383);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! rxjs */ 45398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 64398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ 83910);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs/operators */ 25843);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! rxjs/operators */ 85921);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! rxjs/operators */ 88759);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! rxjs/operators */ 59095);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! rxjs/operators */ 47418);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! rxjs/operators */ 16276);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _employee_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../employee.model */ 46593);
/* harmony import */ var _shared_employee_components_employee_edit_item_employee_edit_item_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/employee/components/employee-edit-item/employee-edit-item.component */ 89609);
/* harmony import */ var _employee_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../employee.service */ 46925);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _shared_form_field_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/form-field/utils */ 11685);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! angular-notifier */ 50449);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _payments_services_payments_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @payments/services/payments.service */ 28706);
/* harmony import */ var _saved_employee_list_saved_employee_list_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../saved-employee-list/saved-employee-list.component */ 64921);



















const autocompleteLock = [
    'iin',
    'amount',
    // 'period',
    'fio',
    'birthDate',
    'firstName',
    'lastName',
    'middleName',
];
let EmployeesModalComponent = class EmployeesModalComponent {
    constructor(modal, modalService, employeeService, paymentsService, maskService, fb, notify) {
        this.modal = modal;
        this.modalService = modalService;
        this.employeeService = employeeService;
        this.paymentsService = paymentsService;
        this.maskService = maskService;
        this.fb = fb;
        this.notify = notify;
        this.paymentType = _shared_models__WEBPACK_IMPORTED_MODULE_9__.PAYMENT_TYPE.PENSION;
        this.birthDateRequired = true;
        this.minAmount = 0.01;
        this.maxAmount = 212500;
        this.currency = _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_2__.CURRENCY.KZT;
        this.store = new _utils_index__WEBPACK_IMPORTED_MODULE_6__.EntitiesStore([]);
        this.employeesForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormArray([]);
        this.listSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject([]);
        this.currentPage$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(1);
        this.collectionSize$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(0);
        this.iinEqualsControls = {};
        this.masks = {
            iin: 'iin',
            amount: 'amount',
            date: 'namedDate',
            iban: 'tengeAccount',
            firstName: 'firstName',
            lastName: 'lastName',
            middleName: 'middleName',
        };
        this.pageSize = 30;
        this.total$ = new rxjs__WEBPACK_IMPORTED_MODULE_13__.BehaviorSubject(0);
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_14__.Subscription();
        this.lockChildFields = [
            'iin',
            'fio',
            'birthDate',
            'firstName',
            'middleName',
            'lastName',
        ];
        this.lockParentFields = [];
        this.defaultGroupOpts = {};
    }
    ngOnInit() {
        this.setInitialConfig();
        this.fetchEmployeeList();
        this.visibleList$ = this.combineVisibleEmployeesList();
        this.subs.add(this.employeesForm.valueChanges
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.throttleTime)(200, undefined, { leading: true, trailing: true }))
            .subscribe((arr) => {
            this.initialEmployees = this.initialEmployees.map((employee) => {
                return Object.assign(Object.assign({}, employee), arr.find((item) => item.id === employee.id));
            });
            const total = arr.reduce((acc, item) => {
                let itemAmount = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.safeUnmaskAmount)(item.amount);
                return acc + +itemAmount;
            }, 0);
            this.total$.next(total);
        }));
        if (this.initialEmployees) {
            // TODO check additional period by adding linked with iin
            // order is matter to find additional periods
            this.initialEmployees.reduce((dictionary, employeeModel) => {
                if (employeeModel.linkedWith && this.additionalPeriodEnabled) {
                    const newItem = this.addItem(dictionary[employeeModel.linkedWith]);
                    newItem.group.patchValue(Object.assign(Object.assign({}, employeeModel), { period: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToDateSafe)(employeeModel.period) }));
                }
                else {
                    const newItem = this.addItem(employeeModel);
                    dictionary[employeeModel.id] = newItem;
                }
                return dictionary;
            }, {});
        }
        this.showNotFound$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.combineLatest)([this.term$, this.visibleList$]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.map)(([term, list]) => {
            return term && list.length === 0;
        }));
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
        this.list.forEach((item) => {
            item.destroy();
        });
    }
    ngAfterViewInit() {
        // navigate to first invalid row on open for filled array
        if (this.initialEmployees.length) {
            this.subs.add(this.editItemList.changes
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.filter)((list) => list.length > 1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.take)(1), 
            // wait for async validation
            (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.delay)(300), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.delay)(0))
                .subscribe(() => {
                if (this.employeesForm.invalid) {
                    this.searchAndNavigateToInvalidControl();
                    this.emulateSubmit();
                }
            }));
        }
    }
    get list() {
        return this.listSubject$.getValue();
    }
    set list(newList) {
        this.listSubject$.next(newList);
    }
    get currentPage() {
        return this.currentPage$.getValue();
    }
    set currentPage(next) {
        this.currentPage$.next(next);
    }
    openSavedEmployees(event) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, function* () {
            event.preventDefault();
            const modalRef = this.modalService.open(_saved_employee_list_saved_employee_list_component__WEBPACK_IMPORTED_MODULE_11__.SavedEmployeeListComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_max-height',
                backdrop: 'static',
            });
            Object.assign(modalRef.componentInstance, {
                birthDateRequired: this.birthDateRequired,
                ibanRequired: this.ibanRequired,
                paymentType: this.paymentType,
            });
            try {
                let selectedEmployees = yield modalRef.result;
                if (selectedEmployees === null || selectedEmployees === void 0 ? void 0 : selectedEmployees.length) {
                    selectedEmployees
                        .map((item) => {
                        var _a, _b, _c, _d, _e;
                        return Object.assign(Object.assign({}, item), { amount: ((_a = item.getBalance(this.paymentType)) === null || _a === void 0 ? void 0 : _a.amount) || '', iin: this.maskService.getUnmaskedAmount(item.iin), fio: ((_b = item.fio) === null || _b === void 0 ? void 0 : _b.trim()) || '', firstName: ((_c = item.firstName) === null || _c === void 0 ? void 0 : _c.trim()) || '', middleName: ((_d = item.middleName) === null || _d === void 0 ? void 0 : _d.trim()) || '', lastName: ((_e = item.lastName) === null || _e === void 0 ? void 0 : _e.trim()) || '', birthDate: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToPeriodInputSafe)(item.birthDate) });
                    })
                        .forEach((item) => {
                        this.addItem(item);
                        const group = this.employeesForm.at(this.employeesForm.length - 1);
                        // Object.values(group.controls).forEach((control: AbstractControl) => {
                        //   control.markAsDirty();
                        // });
                    });
                }
            }
            catch (error) {
                error && this.notify.notify('error', error);
            }
        });
    }
    closeModal() {
        this.modal.close();
    }
    addItem(origin) {
        let newItem;
        // debugger;
        if (origin) {
            if (origin instanceof _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeesItem) {
                // additional period for existing item in list
                newItem = new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeesItem();
                this.assignChildForAdditionalPeriod(origin, newItem);
                const newItemValue = new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeeItemModel(Object.assign({}, newItem.linkedWith.group.value), { additionalPeriod: newItem.linkedWith.group.value.id });
                delete newItemValue.period;
                newItem.group = this.createEmployeeControl(newItemValue, {
                    additionalPeriod: true,
                    disabled: this.lockChildFields,
                    item: newItem,
                });
                // link child item with parent
                this.listenParentGroupInAdditionalPeriod(newItem.linkedWith, newItem);
                this.pushToList(newItem, origin);
            }
            else {
                // copy item from blueprint (add from dictionary)
                newItem = new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeesItem();
                newItem.blueprint = origin;
                newItem.group = this.createEmployeeControl(Object.assign(new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeeItemModel(Object.assign(Object.assign({}, origin), { period: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToDateSafe)(origin.period) })), this.defaultGroupOpts), {
                    disabled: origin.linkedWith
                        ? this.lockChildFields
                        : this.lockParentFields,
                    item: newItem,
                });
                if (origin.linkedWith) {
                    const link = this.list.find((employeesItem) => employeesItem.group.value.iin === origin.linkedWith);
                    if (link) {
                        newItem.linkedWith = link;
                        link.children
                            ? link.children.push(newItem)
                            : (link.children = [newItem]);
                        this.listenParentGroupInAdditionalPeriod(link, newItem);
                    }
                }
                this.pushToList(newItem);
            }
        }
        else {
            // new item from scratch;
            newItem = new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeesItem();
            newItem.group = this.createEmployeeControl(new _employee_model__WEBPACK_IMPORTED_MODULE_3__.EmployeeItemModel(this.defaultGroupOpts), {
                disabled: this.lockParentFields,
                item: newItem,
            });
            this.pushToList(newItem);
        }
        return newItem;
    }
    /**
     * @param item
     */
    removeItem(item) {
        const lockKeys = item.children
            ? this.lockParentFields
            : this.lockChildFields;
        const toDisable = item.children
            ? [item.group, ...item.children.map((child) => child.group)]
            : [item.group];
        toDisable.forEach((g) => g.disable());
        item.removing$.next(5);
        (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.interval)(1000)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.takeUntil)((0,rxjs__WEBPACK_IMPORTED_MODULE_24__.merge)(...[
            // enable groups on cancel remove
            item.cancelRemove$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_25__.tap)((cancel) => {
                if (cancel) {
                    toDisable.forEach((g) => {
                        g.enable();
                        // preserve controls disabled state
                        lockKeys.forEach((lockKey) => g.controls[lockKey].disable());
                    });
                }
            })),
            item.destroy$,
        ])), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_25__.tap)((i) => {
            item.removing$.next(item.removing$.getValue() - 1);
        }))
            .subscribe({
            next: (i) => {
                if (i === 4) {
                    this.finishItemRemove(item);
                }
            },
            complete: () => {
                !item.destroy$.closed && item.removing$.next(null);
            },
        });
    }
    cancelRemove(item) {
        item.cancelRemove$.next(Date.now());
    }
    /**
     * Listen iin and trigger row autocomplete;
     * @param item
     */
    onAutocomplete(item) {
        if (item.linkedWith) {
            return;
        }
        const group = item.group;
        const iin = group.value.iin;
        item.autocomplete$.next(iin);
        this.switchControlsStateOnAutoComplete(item, false);
        this.store.fetched$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.filter)((loaded) => loaded), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.switchMap)(() => {
            const savedEmpl = this.store.getItemByKey(iin, 'iin');
            if (savedEmpl) {
                return (0,rxjs__WEBPACK_IMPORTED_MODULE_27__.of)(Object.assign(Object.assign({}, savedEmpl), { amount: savedEmpl.getBalance(this.paymentType).amount ||
                        group.value.amount, birthDate: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.isoDateToPeriodInputSafe)(savedEmpl.birthDate) }));
            }
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_28__.from)(this.employeeService.getNameByIin(iin)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.map)(({ lastName, firstName, middleName }) => ({
                lastName,
                firstName,
                middleName,
            })), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_29__.catchError)(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_27__.of)(undefined)));
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.takeUntil)((0,rxjs__WEBPACK_IMPORTED_MODULE_24__.merge)(item.destroy$, item.autocomplete$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_30__.skip)(1)))))
            .subscribe((result) => {
            if (result) {
                group.patchValue(result);
            }
            item.autocomplete$.next(null);
            this.lockOnAutocomplete.forEach((k) => {
                if (group.controls[k]) {
                    group.controls[k].enable();
                }
            });
            this.switchControlsStateOnAutoComplete(item, true);
        });
    }
    onAddItem() {
        this.addItem();
        this.checkNewPageNavigation();
    }
    onAddPeriod(origin) {
        this.addItem(origin);
        this.checkNewPageNavigation();
    }
    onSubmit() {
        if (this.employeesForm.invalid) {
            this.emulateSubmit();
            this.searchAndNavigateToInvalidControl();
            return;
        }
        // pick disabledInputs for additional period
        const rawValue = this.list.reduce((list, item) => {
            if (item.group.enabled) {
                const model = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.getGroupRawValue)(item.group);
                // linkedWith iin to allow additional period with the same iin, as existing item (bypass uniq validation)
                if (item.linkedWith) {
                    model.linkedWith = item.linkedWith.group.value.iin;
                }
                list.push(model);
            }
            return list;
        }, []);
        this.modal.close(rawValue);
    }
    checkNewPageNavigation() {
        if (this.pageSize * this.currentPage < this.list.length) {
            ++this.currentPage;
        }
    }
    combineVisibleEmployeesList() {
        let savedPageWithoutSearch = null;
        let searchInProgress = false;
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.combineLatest)([
            this.listSubject$,
            this.term$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.throttleTime)(100, undefined, { trailing: true })),
            this.currentPage$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_31__.distinctUntilChanged)()),
        ]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.filter)(([list, search, page]) => {
            // preserve current page before search
            if (!search && searchInProgress) {
                this.currentPage = savedPageWithoutSearch;
                searchInProgress = false;
                return true;
            }
            else if (!search) {
                savedPageWithoutSearch = page;
                searchInProgress = false;
                return true;
            }
            else if (search && !searchInProgress) {
                searchInProgress = true;
                if (this.currentPage === 1) {
                    return true;
                }
                this.currentPage = 1;
                return false;
            }
            return true;
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.map)(([list, search, page]) => {
            const filtered = this.filterEmployees(list, search);
            if (!this.parentForm.value.commonPeriodEnabled) {
                filtered.find((item) => {
                    const initial = this.initialEmployees.find((employee) => {
                        return item.group.value.id === employee.id;
                    });
                    if (initial) {
                        item.group.patchValue(initial);
                    }
                });
            }
            this.collectionSize$.next(filtered.length);
            return filtered.slice((page - 1) * this.pageSize, page * this.pageSize);
        }));
    }
    listenParentGroupInAdditionalPeriod(parent, child) {
        parent.group.valueChanges
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_32__.debounceTime)(100), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.takeUntil)(child.destroy$))
            .subscribe((v) => {
            const cleared = Object.assign({}, v);
            delete cleared.amount;
            delete cleared.period;
            child.group.patchValue(cleared);
        });
    }
    switchControlsStateOnAutoComplete(item, newState) {
        const method = newState ? 'enable' : 'disable';
        this.lockOnAutocomplete.forEach((k) => {
            if (item.group.controls[k]) {
                item.group.controls[k][method]();
            }
        });
        if (item.children) {
            item.children.forEach((child) => {
                const controls = child.group.controls;
                ['amount', 'period'].forEach((k) => controls[k] && controls[k][method]());
            });
        }
    }
    fetchEmployeeList() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_21__.__awaiter)(this, void 0, void 0, function* () {
            this.store.fetching = true;
            try {
                const list = yield this.employeeService.getEmployees();
                this.store.setState(list);
            }
            catch (e) { }
            this.store.fetching = false;
            this.store.fetched = true;
        });
    }
    filterEmployees(list, term = '') {
        if (!term) {
            return list;
        }
        const normalizedTerm = term.trim().toLocaleLowerCase();
        return list.filter((item) => {
            const { iin, fio } = item.group.controls;
            return [iin.value || '', fio.value || ''].some((controlValue) => controlValue.toLocaleLowerCase().includes(normalizedTerm));
        });
    }
    createEmployeeControl(value = {}, options = {}) {
        const defaults = Object.assign({
            id: (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.generateUniqueId)(),
            iin: '',
            amount: '',
            currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_2__.CURRENCY.KZT,
            fio: '',
            firstName: '',
            middleName: '',
            lastName: '',
            iban: '',
            period: this.defaultGroupOpts.period,
        }, value);
        const form = this.fb.group({
            id: value.id || defaults.id,
            linkedWith: value.linkedWith,
            amount: [
                defaults.amount,
                [
                    _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required,
                    (control) => {
                        if (control.value) {
                            const value = (0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.safeUnmaskAmount)(control.value);
                            return value > 0 ? null : { invalidAmount: true };
                        }
                        //   if (this.minAmount && value < this.minAmount) {
                        //     return { minAmount: true };
                        //   }
                        //   if (this.maxAmount && value > this.maxAmount) {
                        //     return { maxAmount: true };
                        //   }
                        return null;
                    },
                ],
            ],
            iin: [
                {
                    value: defaults.iin,
                    disabled: options.additionalPeriod,
                },
                [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ],
            currency: [defaults.currency],
            fio: [
                {
                    value: defaults.fio,
                    disabled: options.additionalPeriod,
                },
            ],
            firstName: [
                {
                    value: defaults.firstName,
                    disabled: options.additionalPeriod,
                },
                [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ],
            lastName: [
                {
                    value: defaults.lastName,
                    disabled: options.additionalPeriod,
                },
                [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ],
            middleName: [
                {
                    value: defaults.middleName,
                    disabled: options.additionalPeriod,
                },
            ],
        }, []);
        if (this.birthDateRequired) {
            form.addControl('birthDate', new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControl({
                value: defaults.birthDate,
                disabled: options.additionalPeriod,
            }, [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required]));
        }
        if (this.periodRequired) {
            form.addControl('period', new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControl(defaults.period, [_angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required]));
        }
        if (this.ibanRequired) {
            this.addIbanControl(defaults, form);
        }
        if (options.disabled) {
            options.disabled.forEach((key) => form.get(key).disable());
        }
        const { iin } = form.controls;
        if (iin.enabled) {
            this.setExtendedIinValidation(iin, form);
        }
        return form;
    }
    addIbanControl(defaults, form) {
        const ibanControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControl(defaults.iban, [
            _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required,
            (control) => {
                if (control.value && control.value.length === 18) {
                    const bankExist = this.paymentsService.bankExist((0,_utils_index__WEBPACK_IMPORTED_MODULE_6__.ibanPrefix)(control.value, this.currency));
                    if (bankExist) {
                        return { bankExist };
                    }
                }
                return null;
            },
        ]);
        form.addControl('iban', ibanControl);
    }
    /**
     * Mutation
     * @param origin
     * @param newItem
     */
    assignChildForAdditionalPeriod(origin, newItem) {
        if (origin.linkedWith) {
            // additional period triggered for item which is additional period itself
            origin.linkedWith.children.push(newItem);
            // link with parent to link with origin for additional period and watch changes
            newItem.linkedWith = origin.linkedWith;
        }
        else {
            origin.children
                ? origin.children.push(newItem)
                : (origin.children = [newItem]);
            newItem.linkedWith = origin;
        }
        return newItem;
    }
    finishItemRemove(item) {
        const listToUpdate = [...this.list];
        const toDestroy = [item];
        if (item.children) {
            toDestroy.push(...item.children);
        }
        const removeIndexes = toDestroy.reduce((acc, item) => {
            const index = this.list.findIndex((elem) => elem === item);
            acc.push(index);
            return acc;
        }, []);
        removeIndexes.sort((a, b) => b - a);
        removeIndexes.forEach((index) => {
            listToUpdate.splice(index, 1);
        });
        this.list = listToUpdate;
        toDestroy.reverse().forEach((item) => {
            item.destroy();
        });
    }
    pushToList(newItem, relativeTo) {
        if (relativeTo) {
            const formIndex = this.employeesForm.controls.findIndex((group) => group === relativeTo.group);
            const listIndex = this.list.findIndex((item) => relativeTo === item);
            if (~formIndex && ~listIndex) {
                this.employeesForm.insert(formIndex + 1, newItem.group);
                const newList = [].concat(this.list);
                newList.splice(listIndex + 1, 0, newItem);
                this.list = newList;
            }
        }
        else {
            this.employeesForm.push(newItem.group);
            this.listSubject$.next([...this.list, newItem]);
        }
    }
    searchAndNavigateToInvalidControl() {
        const invalidIndex = this.employeesForm.controls.findIndex((control) => control.invalid);
        if (!~invalidIndex) {
            return;
        }
        const page = Math.ceil((invalidIndex + 1) / this.pageSize);
        if (page !== this.currentPage) {
            this.currentPage = page;
        }
        setTimeout(() => {
            const container = this.scrollContainer.nativeElement;
            const containerCoords = container.getBoundingClientRect();
            const containerHeight = container.offsetHeight;
            const currentScroll = container.scrollTop;
            const elemIndexOnPage = invalidIndex % this.pageSize;
            const firstErrorComponent = this.editItemList.toArray()[elemIndexOnPage];
            const elemCoords = firstErrorComponent.element.nativeElement.getBoundingClientRect();
            let offset = containerCoords.top - elemCoords.top;
            if (offset <= 0 && Math.abs(offset) <= containerHeight - 30) {
                // elem in viewport;
                return;
            }
            else if (offset < 0) {
                // element lower bottom edge
                container.scrollTop = container.scrollTop + Math.abs(offset) + 30;
            }
            else {
                // element is higher than upper edge
                container.scrollTop = container.scrollTop - offset - 30;
            }
        }, 0);
    }
    emulateSubmit() {
        this.form.submitted = true;
        this.form.ngSubmit.emit();
        this.employeesForm.markAllAsTouched();
    }
    updateUniqIinArrayValidity(forIin, skipGroup) {
        let alreadyExistIins = [];
        this.employeesForm.controls.forEach((groupToCheck) => {
            if (groupToCheck === skipGroup) {
                return false;
            }
            const { iin: iinToCheck, linkedWith } = groupToCheck.value;
            if (!linkedWith && forIin === iinToCheck) {
                alreadyExistIins.push(groupToCheck.controls.iin);
            }
        });
        if (alreadyExistIins.length > 1) {
            alreadyExistIins.forEach((control) => control.setErrors({ uniq: true }));
        }
        else if (alreadyExistIins.length) {
            const control = alreadyExistIins[0];
            delete this.iinEqualsControls[forIin];
            if (control.errors && control.errors['uniq']) {
                control.updateValueAndValidity();
            }
        }
    }
    setInitialConfig() {
        this.errors = this.paymentsService.errors;
        const now = new Date();
        let defaultPeriod = new Date(now.getFullYear(), now.getMonth() - 1, 0, 0, 0, 1);
        const parentFormValue = this.parentForm.value;
        this.lockOnAutocomplete = [...autocompleteLock];
        if (this.periodRequired) {
            if (parentFormValue.commonPeriodEnabled) {
                // don't enable period field on autocomplete end
                defaultPeriod = parentFormValue.period || defaultPeriod;
                this.lockParentFields.push('period');
            }
            else {
                this.lockOnAutocomplete.push('period');
            }
            this.defaultGroupOpts = {
                period: defaultPeriod,
            };
        }
        if (!this.additionalPeriodEnabled) {
            this.lockChildFields = [];
            this.lockParentFields = [];
        }
        if (this.ibanRequired) {
            this.lockOnAutocomplete.push('iban');
        }
        Object.entries(this.masks).forEach(([k, v]) => (this.masks[k] = this.maskService.getConfig(v)));
        this.term = new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControl('');
        this.term$ = this.term.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_33__.startWith)(''));
    }
    setExtendedIinValidation(iin, form) {
        let prevInvalidIin = '';
        const formArray = this.employeesForm;
        iin.setAsyncValidators([
            (control) => {
                return (0,rxjs__WEBPACK_IMPORTED_MODULE_34__.timer)(300).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.switchMap)(() => {
                    const value = control.value;
                    if (value && value.length === 12) {
                        const alreadyExistIin = formArray.controls.some((groupToCheck) => {
                            // current control from clojure, skip
                            if (groupToCheck === form) {
                                return false;
                            }
                            // avoid linked groups for disabled period
                            const { iin: iinToCheck, linkedWith } = groupToCheck.value;
                            if (!linkedWith && value === iinToCheck) {
                                prevInvalidIin = value;
                                this.iinEqualsControls[value] = true;
                                return true;
                            }
                        });
                        if (alreadyExistIin) {
                            prevInvalidIin = value;
                            this.iinEqualsControls[value];
                            return (0,rxjs__WEBPACK_IMPORTED_MODULE_27__.of)({ uniq: true });
                        }
                        if (prevInvalidIin && this.iinEqualsControls[prevInvalidIin]) {
                            this.updateUniqIinArrayValidity(prevInvalidIin, form);
                        }
                        prevInvalidIin = '';
                        return (0,rxjs__WEBPACK_IMPORTED_MODULE_27__.of)(null);
                    }
                }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.take)(1));
            },
        ]);
    }
};
EmployeesModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_35__.NgbActiveModal },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_35__.NgbModal },
    { type: _employee_service__WEBPACK_IMPORTED_MODULE_5__.EmployeeService },
    { type: _payments_services_payments_service__WEBPACK_IMPORTED_MODULE_10__.PaymentsService },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_8__.MaskedService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_36__.NotifierService }
];
EmployeesModalComponent.propDecorators = {
    parentForm: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    initialEmployees: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    paymentType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    ibanRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    additionalPeriodEnabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    periodRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    minAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    maxAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.Input }],
    scrollContainer: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.ViewChild, args: ['scrollContainer',] }],
    form: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.ViewChild, args: ['form',] }],
    editItemList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_37__.ViewChildren, args: [_shared_employee_components_employee_edit_item_employee_edit_item_component__WEBPACK_IMPORTED_MODULE_4__.EmployeeEditItemComponent,] }]
};
EmployeesModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_21__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_37__.Component)({
        selector: 'j-employees-modal',
        template: _employees_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        host: {
            class: 'employees-modal',
        },
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_37__.ViewEncapsulation.None,
        providers: [
            {
                provide: _shared_form_field_utils__WEBPACK_IMPORTED_MODULE_7__.ErrorStateMatcher,
                useClass: _shared_form_field_utils__WEBPACK_IMPORTED_MODULE_7__.ShowOnDirtyErrorStateMatcher,
            },
        ],
        styles: [_employees_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], EmployeesModalComponent);



/***/ }),

/***/ 64921:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/saved-employee-list/saved-employee-list.component.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SavedEmployeeListComponent": () => (/* binding */ SavedEmployeeListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _saved_employee_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./saved-employee-list.component.html?ngResource */ 99527);
/* harmony import */ var _saved_employee_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./saved-employee-list.component.scss?ngResource */ 1911);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_employee_employee_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/employee/employee.service */ 46925);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-spinner */ 42777);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 32425);











let SavedEmployeeListComponent = class SavedEmployeeListComponent {
    constructor(maskedService, employeeService, modal, maskPipe, spinner, companyService) {
        this.maskedService = maskedService;
        this.employeeService = employeeService;
        this.modal = modal;
        this.maskPipe = maskPipe;
        this.spinner = spinner;
        this.companyService = companyService;
        this.search = '';
        this.isAllSelected = false;
        this.isDeletingBulk = false;
        this.isLoading = true;
        this.isEditing = false;
        this.deletingEmployees = [];
        this.iinMaskConfig = this.maskedService.getConfig('iin');
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subscription();
        const companySubscription = this.companyService.refresh$.subscribe((refreshResult) => {
            this.init();
        });
        this.subscription.add(companySubscription);
    }
    ngOnDestroy() {
        this.removeDeletingEmployees();
        this.subscription.unsubscribe();
    }
    ngOnInit() {
        this.init();
    }
    closeModal(event) {
        event.preventDefault();
        this.modal.close(this.selectedItems);
    }
    selectAll() {
        this.isAllSelected = !this.isAllSelected;
        this.filteredList.forEach((item) => {
            item.isSelected = this.isAllSelected;
        });
    }
    deleteBulk(event) {
        event.preventDefault();
        this.selectedItems.forEach((item, index) => {
            if (index === 0) {
                item.isDeleting = true;
            }
            else {
                item.isHidden = true;
            }
            this.deletingEmployees.push(item);
            return item;
        });
        this.isDeletingBulk = true;
    }
    onSelect(employee) {
        this.isAllSelected = this.selectedItems.length == this.filteredList.length;
    }
    onEdit(editResult) {
        this.editEmployee = editResult.employee;
        this.editEmployeeIndex = editResult.index;
        this.isEditing = true;
    }
    onEditClose() {
        this.isEditing = false;
    }
    onEditSave(editResult) {
        this.list[editResult.index] = editResult.employee;
        this.isEditing = false;
    }
    onDelete(deleteResult) {
        const { employee, index } = deleteResult;
        this.deletingEmployees.push(employee);
    }
    onDeleteCancelled(deleteResult) {
        if (this.isDeletingBulk) {
            this.list = this.list.map((item) => {
                item.isHidden = false;
                item.isDeleting = false;
                return item;
            });
            this.deletingEmployees = [];
            this.isDeletingBulk = false;
        }
        else {
            const { employee, index } = deleteResult;
            this.deletingEmployees.filter((item) => item.id != employee.id);
        }
    }
    onDeleteConfirmed(deleteResult) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            let toRemove;
            if (this.isDeletingBulk) {
                toRemove = this.selectedItems;
                this.list = this.list.filter((item) => item.isSelected == false);
                this.isDeletingBulk = false;
                toRemove.forEach((employee) => {
                    this.deletingEmployees.filter((item) => item.id != employee.id);
                });
            }
            else {
                const { employee, index } = deleteResult;
                this.deletingEmployees.filter((item) => item.id != employee.id);
                toRemove = [employee];
                this.list.splice(index, 1);
            }
            const removeResult = yield this.employeeService.deleteEmployee(this.retrieveIinsFromEmployees(toRemove));
            return removeResult;
        });
    }
    init() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.spinner.show();
            this.list = yield this.employeeService.getEmployees();
            this.spinner.hide();
            this.isLoading = false;
        });
    }
    get filteredList() {
        if (!this.search) {
            return this.list;
        }
        return this.list.filter((item) => item.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1 ||
            item.iin.toLowerCase().indexOf(this.search.toLowerCase()) > -1);
    }
    get selectedItems() {
        if (!this.filteredList) {
            return [];
        }
        return this.filteredList
            .filter((item) => item.isSelected == true)
            .map((item) => {
            item.iin = this.maskPipe.transform(item.iin, this.iinMaskConfig.mask);
            return item;
        });
    }
    retrieveIinsFromEmployees(employees) {
        return employees.map((employee) => {
            const unmaskedIin = this.maskedService.getUnmaskedNumber(employee.iin);
            return unmaskedIin;
        });
    }
    removeDeletingEmployees() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            if (this.deletingEmployees.length > 0) {
                try {
                    yield this.employeeService.deleteEmployee(this.retrieveIinsFromEmployees(this.deletingEmployees));
                }
                catch (error) { }
            }
        });
    }
};
SavedEmployeeListComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService },
    { type: _shared_employee_employee_service__WEBPACK_IMPORTED_MODULE_2__.EmployeeService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbActiveModal },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_8__.MaskPipe },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_9__.NgxSpinnerService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_4__.CompanyService }
];
SavedEmployeeListComponent.propDecorators = {
    paymentType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input }],
    birthDateRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input }],
    ibanRequired: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input }]
};
SavedEmployeeListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
        selector: 'j-saved-employee-list',
        template: _saved_employee_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_saved_employee_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SavedEmployeeListComponent);



/***/ }),

/***/ 11071:
/*!*******************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/bank-dropdown/bank-dropdown.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BankDropdownComponent": () => (/* binding */ BankDropdownComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _bank_dropdown_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bank-dropdown.component.html?ngResource */ 62604);
/* harmony import */ var _bank_dropdown_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bank-dropdown.component.scss?ngResource */ 74670);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let BankDropdownComponent = class BankDropdownComponent {
    constructor() {
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.banks = ['DOMESTIC_BANK', 'NATIONAL_BANK'];
        this.isCollapsed = false;
        this.selectedBank = 'DOMESTIC_BANK';
        this.today = new Date();
    }
    ngOnInit() {
        this.selected.emit(this.selectedBank);
    }
    onClickOutside() {
        this.isCollapsed = false;
    }
    onTriggerClick(event = null) {
        event === null || event === void 0 ? void 0 : event.preventDefault();
        this.isCollapsed = !this.isCollapsed;
    }
    isSelected(bank) {
        return bank === this.selectedBank;
    }
    onClick(event, bank) {
        event.preventDefault();
        this.selectedBank = bank;
        this.selected.emit(bank);
        this.isCollapsed = false;
    }
};
BankDropdownComponent.ctorParameters = () => [];
BankDropdownComponent.propDecorators = {
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
BankDropdownComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-bank-dropdown',
        template: _bank_dropdown_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_bank_dropdown_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], BankDropdownComponent);



/***/ }),

/***/ 26084:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/currency-selector/currency-selector.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurrencySelectorComponent": () => (/* binding */ CurrencySelectorComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _currency_selector_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currency-selector.component.html?ngResource */ 61756);
/* harmony import */ var _currency_selector_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currency-selector.component.scss?ngResource */ 36646);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _shared_exchange_rates_exchange_rates_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/exchange-rates/exchange-rates.service */ 22753);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-notifier */ 50449);







let CurrencySelectorComponent = class CurrencySelectorComponent {
    constructor(exchangeRatesService, notifierService, translateService) {
        this.exchangeRatesService = exchangeRatesService;
        this.notifierService = notifierService;
        this.translateService = translateService;
        this.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.searchText = '';
    }
    ngOnInit() {
        this.loadAllCurrencies();
    }
    loadAllCurrencies() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            try {
                this.error = null;
                const currencies = yield this.exchangeRatesService.getAllExchangeRates();
                this.currencies = this.mapIsActiveCurrencies(currencies);
            }
            catch (error) {
                this.error = error.code || 'error';
            }
        });
    }
    mapIsActiveCurrencies(currencies) {
        return currencies.map(currency => {
            currency.isActive = this.exchangeRates.some(el => el.code === currency.code);
            return currency;
        }).filter(currency => {
            var _a;
            currency.isDefault = ((_a = this.exchangeRates.find(el => el.code === currency.code)) === null || _a === void 0 ? void 0 : _a.isDefault) || false;
            return currency;
        });
    }
    onClose(event) {
        event.preventDefault();
        this.closed.emit();
    }
    onChange(event, currency) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const params = {
                    code: currency.code,
                    status: event.target.value
                };
                yield this.exchangeRatesService.setUserExchangeRates(params);
                this.showNotification(params);
            }
            catch (error) {
                this.notifierService.notify('error', error.description || error.code || this.translateService.instant('EXCHANGE_RATES.SET_ERROR'));
            }
        });
    }
    showNotification(params) {
        const currencyName = this.translateService.instant(`SHARED.CURRENCY_DESCRIPTION.${params.code}`);
        this.notifierService.notify('default', this.translateService.instant(params.status === 'true' ? 'EXCHANGE_RATES.CURRENCY_ADDED' : 'EXCHANGE_RATES.CURRENCY_DELETED', { currency: currencyName }));
    }
    onSearch(event) {
        this.searchText = event.target.value;
    }
};
CurrencySelectorComponent.ctorParameters = () => [
    { type: _shared_exchange_rates_exchange_rates_service__WEBPACK_IMPORTED_MODULE_2__.ExchangeRatesService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_5__.NotifierService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService }
];
CurrencySelectorComponent.propDecorators = {
    exchangeRates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    closed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Output }]
};
CurrencySelectorComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-currency-selector',
        template: _currency_selector_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_currency_selector_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CurrencySelectorComponent);



/***/ }),

/***/ 58401:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/exchange-rates-list/exchange-rates-list.component.ts ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExchangeRatesListComponent": () => (/* binding */ ExchangeRatesListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _exchange_rates_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exchange-rates-list.component.html?ngResource */ 22036);
/* harmony import */ var _exchange_rates_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exchange-rates-list.component.scss?ngResource */ 42163);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let ExchangeRatesListComponent = class ExchangeRatesListComponent {
    constructor() {
        this.currencySelectorOpened = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.updateClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
    }
    onCurrencySelectorOpen(event = null) {
        event === null || event === void 0 ? void 0 : event.preventDefault();
        this.currencySelectorOpened.emit();
    }
    onUpdate() {
        this.updateClicked.emit();
    }
};
ExchangeRatesListComponent.ctorParameters = () => [];
ExchangeRatesListComponent.propDecorators = {
    selectedBank: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    exchangeRates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    error: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    currencySelectorOpened: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    updateClicked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
ExchangeRatesListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-exchange-rates-list',
        template: _exchange_rates_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_exchange_rates_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ExchangeRatesListComponent);



/***/ }),

/***/ 34018:
/*!*******************************************************************!*\
  !*** ./src/app/shared/exchange-rates/exchange-rates.component.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExchangeRatesComponent": () => (/* binding */ ExchangeRatesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _exchange_rates_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exchange-rates.component.html?ngResource */ 63062);
/* harmony import */ var _exchange_rates_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exchange-rates.component.scss?ngResource */ 46093);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _exchange_rates_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./exchange-rates.service */ 22753);






let ExchangeRatesComponent = class ExchangeRatesComponent {
    constructor(exchangeRatesService, document) {
        this.exchangeRatesService = exchangeRatesService;
        this.document = document;
        this.isAnimating = false;
        this.wrapperClasses = '';
        this.selectorClasses = '';
        this.isSelectorShown = false;
    }
    ngOnInit() {
        this.loadUserExchangeRates();
    }
    ngOnDestroy() {
        this.document.body.classList.remove('overflow-hidden');
    }
    showCurrencySelector() {
        if (!this.isAnimating) {
            this.isAnimating = true;
            this.isSelectorShown = true;
            this.wrapperClasses = 'animate__animated zoomInJ';
            setTimeout(() => {
                this.document.body.classList.add('overflow-hidden');
                this.selectorClasses = 'is-shown';
            }, 250);
            setTimeout(() => {
                this.wrapperClasses = '';
                this.isAnimating = false;
            }, 300);
        }
    }
    loadUserExchangeRates() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            this.error = null;
            try {
                this.exchangeRates = yield this.exchangeRatesService.getUserExchangeRates();
            }
            catch (error) {
                this.error = error.status || 'error';
            }
        });
    }
    hideSelector() {
        this.loadUserExchangeRates();
        if (!this.isAnimating) {
            this.isAnimating = true;
            this.selectorClasses = '';
            setTimeout(() => {
                this.document.body.classList.remove('overflow-hidden');
                this.wrapperClasses = 'animate__animated zoomOutJ';
            }, 250);
            setTimeout(() => {
                this.wrapperClasses = '';
                this.isSelectorShown = false;
                this.isAnimating = false;
            }, 300);
        }
    }
};
ExchangeRatesComponent.ctorParameters = () => [
    { type: _exchange_rates_service__WEBPACK_IMPORTED_MODULE_2__.ExchangeRatesService },
    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject, args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.DOCUMENT,] }] }
];
ExchangeRatesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-exchange-rates',
        template: _exchange_rates_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_exchange_rates_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ExchangeRatesComponent);



/***/ }),

/***/ 12561:
/*!***************************************************************!*\
  !*** ./src/app/shared/exchange-rates/exchange-rates.model.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 22753:
/*!*****************************************************************!*\
  !*** ./src/app/shared/exchange-rates/exchange-rates.service.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExchangeRatesService": () => (/* binding */ ExchangeRatesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);




const URL = 'currency/rates';
let ExchangeRatesService = class ExchangeRatesService {
    constructor(api) {
        this.api = api;
    }
    getUserExchangeRates() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const exchangeRates = yield this.api.get(`${URL}/active-and-default`);
            return exchangeRates;
        });
    }
    getAllExchangeRates() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const exchangeRates = yield this.api.get(`${URL}/all`);
            return exchangeRates;
        });
    }
    setUserExchangeRates(body) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {
            const url = `${URL}/set/status`;
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpHeaders();
            const statement = yield this.api.post(url, body, headers);
            return statement;
        });
    }
};
ExchangeRatesService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
ExchangeRatesService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root'
    })
], ExchangeRatesService);



/***/ }),

/***/ 72802:
/*!************************************************!*\
  !*** ./src/app/shared/exchange-rates/index.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EXCHANGE_RATES_COMPONENTS": () => (/* binding */ EXCHANGE_RATES_COMPONENTS),
/* harmony export */   "ExchangeRatesComponent": () => (/* reexport safe */ _exchange_rates_component__WEBPACK_IMPORTED_MODULE_3__.ExchangeRatesComponent),
/* harmony export */   "ExchangeRatesListComponent": () => (/* reexport safe */ _components_exchange_rates_list_exchange_rates_list_component__WEBPACK_IMPORTED_MODULE_1__.ExchangeRatesListComponent),
/* harmony export */   "CurrencySelectorComponent": () => (/* reexport safe */ _components_currency_selector_currency_selector_component__WEBPACK_IMPORTED_MODULE_2__.CurrencySelectorComponent),
/* harmony export */   "BankDropdownComponent": () => (/* reexport safe */ _components_bank_dropdown_bank_dropdown_component__WEBPACK_IMPORTED_MODULE_0__.BankDropdownComponent),
/* harmony export */   "ExchangeRatesService": () => (/* reexport safe */ _exchange_rates_service__WEBPACK_IMPORTED_MODULE_4__.ExchangeRatesService)
/* harmony export */ });
/* harmony import */ var _components_bank_dropdown_bank_dropdown_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/bank-dropdown/bank-dropdown.component */ 11071);
/* harmony import */ var _components_exchange_rates_list_exchange_rates_list_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/exchange-rates-list/exchange-rates-list.component */ 58401);
/* harmony import */ var _components_currency_selector_currency_selector_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/currency-selector/currency-selector.component */ 26084);
/* harmony import */ var _exchange_rates_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./exchange-rates.component */ 34018);
/* harmony import */ var _exchange_rates_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./exchange-rates.service */ 22753);
/* harmony import */ var _exchange_rates_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exchange-rates.model */ 12561);




const EXCHANGE_RATES_COMPONENTS = [
    _exchange_rates_component__WEBPACK_IMPORTED_MODULE_3__.ExchangeRatesComponent,
    _components_exchange_rates_list_exchange_rates_list_component__WEBPACK_IMPORTED_MODULE_1__.ExchangeRatesListComponent,
    _components_currency_selector_currency_selector_component__WEBPACK_IMPORTED_MODULE_2__.CurrencySelectorComponent,
    _components_bank_dropdown_bank_dropdown_component__WEBPACK_IMPORTED_MODULE_0__.BankDropdownComponent
];








/***/ }),

/***/ 61459:
/*!********************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-body/f-page-body.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FPageBodyComponent": () => (/* binding */ FPageBodyComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _f_page_body_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./f-page-body.component.html?ngResource */ 53880);
/* harmony import */ var _f_page_body_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./f-page-body.component.scss?ngResource */ 57772);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let FPageBodyComponent = class FPageBodyComponent {
    constructor() { }
    ngOnInit() {
    }
};
FPageBodyComponent.ctorParameters = () => [];
FPageBodyComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'f-page-body',
        template: _f_page_body_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_f_page_body_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], FPageBodyComponent);



/***/ }),

/***/ 38788:
/*!**********************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-extra/f-page-extra.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FPageExtraComponent": () => (/* binding */ FPageExtraComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _f_page_extra_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./f-page-extra.component.html?ngResource */ 99469);
/* harmony import */ var _f_page_extra_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./f-page-extra.component.scss?ngResource */ 37932);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let FPageExtraComponent = class FPageExtraComponent {
    constructor() { }
    ngOnInit() {
    }
};
FPageExtraComponent.ctorParameters = () => [];
FPageExtraComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'f-page-extra',
        template: _f_page_extra_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_f_page_extra_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], FPageExtraComponent);



/***/ }),

/***/ 94114:
/*!************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-header/f-page-header.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FPageHeaderComponent": () => (/* binding */ FPageHeaderComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _f_page_header_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./f-page-header.component.html?ngResource */ 51758);
/* harmony import */ var _f_page_header_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./f-page-header.component.scss?ngResource */ 46065);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let FPageHeaderComponent = class FPageHeaderComponent {
    constructor() { }
    ngOnInit() {
    }
};
FPageHeaderComponent.ctorParameters = () => [];
FPageHeaderComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'f-page-header',
        template: _f_page_header_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_f_page_header_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], FPageHeaderComponent);



/***/ }),

/***/ 79311:
/*!***************************************************!*\
  !*** ./src/app/shared/f-page/f-page.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CLOSE_POSITION": () => (/* binding */ CLOSE_POSITION),
/* harmony export */   "FPageComponent": () => (/* binding */ FPageComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _f_page_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./f-page.component.html?ngResource */ 44113);
/* harmony import */ var _f_page_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./f-page.component.scss?ngResource */ 13902);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




var CLOSE_POSITION;
(function (CLOSE_POSITION) {
    CLOSE_POSITION["INSIDE"] = "inside";
    CLOSE_POSITION["OUTSIDE"] = "outside";
})(CLOSE_POSITION || (CLOSE_POSITION = {}));
let FPageComponent = class FPageComponent {
    constructor() {
        this.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.containerClassList = `container`;
        this.colsClassList = 'offset-md-1 col-md-10 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6';
        this.headerClassList = '';
        this.bodyClassList = '';
        this.closePosition = CLOSE_POSITION.INSIDE;
        this.closePositions = CLOSE_POSITION;
    }
    ngOnInit() { }
    close() {
        this.closed.emit();
    }
    get pageClasses() {
        return {
            container: `${this.containerClassList} f-page-container`,
            header: `${this.headerClassList} f-page-header`,
            row: 'row',
            cols: this.colsClassList,
            body: `${this.bodyClassList} f-page-body`
        };
    }
};
FPageComponent.ctorParameters = () => [];
FPageComponent.propDecorators = {
    closed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    containerClassList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    colsClassList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    headerClassList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    bodyClassList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    closePosition: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    contentTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChild, args: ['contentTemplate', { static: false },] }]
};
FPageComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'f-page',
        template: _f_page_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewEncapsulation.None,
        styles: [_f_page_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], FPageComponent);



/***/ }),

/***/ 74861:
/*!****************************************!*\
  !*** ./src/app/shared/f-page/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FPAGE_COMPONENTS": () => (/* binding */ FPAGE_COMPONENTS),
/* harmony export */   "CLOSE_POSITION": () => (/* reexport safe */ _f_page_component__WEBPACK_IMPORTED_MODULE_0__.CLOSE_POSITION),
/* harmony export */   "FPageComponent": () => (/* reexport safe */ _f_page_component__WEBPACK_IMPORTED_MODULE_0__.FPageComponent),
/* harmony export */   "FPageHeaderComponent": () => (/* reexport safe */ _f_page_header_f_page_header_component__WEBPACK_IMPORTED_MODULE_1__.FPageHeaderComponent),
/* harmony export */   "FPageBodyComponent": () => (/* reexport safe */ _f_page_body_f_page_body_component__WEBPACK_IMPORTED_MODULE_2__.FPageBodyComponent),
/* harmony export */   "FPageExtraComponent": () => (/* reexport safe */ _f_page_extra_f_page_extra_component__WEBPACK_IMPORTED_MODULE_3__.FPageExtraComponent)
/* harmony export */ });
/* harmony import */ var _f_page_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./f-page.component */ 79311);
/* harmony import */ var _f_page_header_f_page_header_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./f-page-header/f-page-header.component */ 94114);
/* harmony import */ var _f_page_body_f_page_body_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./f-page-body/f-page-body.component */ 61459);
/* harmony import */ var _f_page_extra_f_page_extra_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./f-page-extra/f-page-extra.component */ 38788);




const FPAGE_COMPONENTS = [
    _f_page_component__WEBPACK_IMPORTED_MODULE_0__.FPageComponent,
    _f_page_header_f_page_header_component__WEBPACK_IMPORTED_MODULE_1__.FPageHeaderComponent,
    _f_page_body_f_page_body_component__WEBPACK_IMPORTED_MODULE_2__.FPageBodyComponent,
    _f_page_extra_f_page_extra_component__WEBPACK_IMPORTED_MODULE_3__.FPageExtraComponent,
];






/***/ }),

/***/ 49364:
/*!**************************************************!*\
  !*** ./src/app/shared/form-field/bottom-line.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JBottomLineDirective": () => (/* binding */ JBottomLineDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let JBottomLineDirective = class JBottomLineDirective {
};
JBottomLineDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
        selector: '[jBottomLine]',
    })
], JBottomLineDirective);



/***/ }),

/***/ 61235:
/*!******************************************************!*\
  !*** ./src/app/shared/form-field/error.component.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JErrorComponent": () => (/* binding */ JErrorComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.component.html?ngResource */ 97675);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);



let nextUniqueId = 0;
let JErrorComponent = class JErrorComponent {
    constructor() {
        this.id = `j-error-${nextUniqueId++}`;
    }
};
JErrorComponent.ctorParameters = () => [];
JErrorComponent.propDecorators = {
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    params: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    errorMessages: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    control: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }]
};
JErrorComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({
        selector: 'j-error',
        template: _error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        host: {
            class: 'j-error',
            role: 'alert',
            '[attr.id]': 'id',
        },
    })
], JErrorComponent);



/***/ }),

/***/ 61688:
/*!***************************************************!*\
  !*** ./src/app/shared/form-field/error.status.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mixinErrorState": () => (/* binding */ mixinErrorState)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 92218);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Mixin to augment a directive with updateErrorState method.
 * For component with `errorState` and need to update `errorState`.
 */
function mixinErrorState(base) {
    return class extends base {
        constructor(...args) {
            super(...args);
            /** Whether the component is in an error state. */
            this.errorState = false;
            /**
             * Stream that emits whenever the state of the input changes such that the wrapping
             * `MatFormField` needs to run change detection.
             */
            this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
        }
        updateErrorState() {
            const oldState = this.errorState;
            const parent = this._parentFormGroup || this._parentForm;
            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;
            const control = this.ngControl
                ? this.ngControl.control
                : null;
            const newState = matcher.isErrorState(control, parent, this);
            if (newState !== oldState) {
                this.errorState = newState;
                this.stateChanges.next();
            }
        }
    };
}


/***/ }),

/***/ 46758:
/*!*********************************************************!*\
  !*** ./src/app/shared/form-field/form-field-control.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JFormFieldControl": () => (/* binding */ JFormFieldControl)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


/** An interface which allows a control to work inside of a `JFormField`. */
let JFormFieldControl = class JFormFieldControl {
};
JFormFieldControl = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)()
], JFormFieldControl);



/***/ }),

/***/ 79960:
/*!************************************************************!*\
  !*** ./src/app/shared/form-field/form-field.animations.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "jFormFieldAnimations": () => (/* binding */ jFormFieldAnimations)
/* harmony export */ });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ 31631);

/**
 * @docs-private
 */
const jFormFieldAnimations = {
    /** Animation that transitions the form field's error and hint messages. */
    transitionMessages: (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.trigger)('transitionMessages', [
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.state)('enter', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ opacity: 1, transform: 'translateY(0%)', height: '*' })),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.transition)('void => enter', [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({ opacity: 0, transform: 'translateY(-100%)', height: '0' }),
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('300ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
        ]),
    ])
};


/***/ }),

/***/ 31387:
/*!***********************************************************!*\
  !*** ./src/app/shared/form-field/form-field.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "J_FORM_FIELD_DEFAULT_OPTIONS": () => (/* binding */ J_FORM_FIELD_DEFAULT_OPTIONS),
/* harmony export */   "J_FORM_FIELD": () => (/* binding */ J_FORM_FIELD),
/* harmony export */   "JFormFieldComponent": () => (/* binding */ JFormFieldComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _form_field_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-field.component.html?ngResource */ 61622);
/* harmony import */ var _form_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form-field.component.scss?ngResource */ 70634);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isUndefined */ 41812);
/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _error_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./error.component */ 61235);
/* harmony import */ var _label_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./label.directive */ 86984);
/* harmony import */ var _hint_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hint.directive */ 99049);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ 88623);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 26439);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs */ 36312);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ 85921);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs/operators */ 83910);
/* harmony import */ var _prefix_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./prefix.directive */ 43915);
/* harmony import */ var _suffix_directive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./suffix.directive */ 32534);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/platform-browser/animations */ 73598);
/* harmony import */ var _form_field_control__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./form-field-control */ 46758);
/* harmony import */ var _form_field_animations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./form-field.animations */ 79960);
/* harmony import */ var _bottom_line__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bottom-line */ 49364);
var JFormFieldComponent_1;
















let nextUniqueId = 0;
/**
 * Injection token that can be used to configure the
 * default options for all form field within an app.
 */
const J_FORM_FIELD_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_11__.InjectionToken('J_FORM_FIELD_DEFAULT_OPTIONS');
/**
 * Injection token that can be used to inject an instances of `JFormField`. It serves
 * as alternative token to the actual `JFormField` class which would cause unnecessary
 * retention of the `JFormField` class and its component metadata.
 */
const J_FORM_FIELD = new _angular_core__WEBPACK_IMPORTED_MODULE_11__.InjectionToken('JFormField');
/** Container for form controls that applies Material Design styling and behavior. */
let JFormFieldComponent = JFormFieldComponent_1 = class JFormFieldComponent {
    constructor(elementRef, changeDetectorRef, _defaults, _ngZone, animationMode) {
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this._defaults = _defaults;
        this._ngZone = _ngZone;
        /** State of the hint and error animations. */
        this.subscriptAnimationState = '';
        this._hintLabel = '';
        // Unique id for the hint label.
        this.hintLabelId = `j-hint-${nextUniqueId++}`;
        // Unique id for the internal form field label.
        this.labelId = `j-form-field-label-${nextUniqueId++}`;
        this.clearVisible$ = new rxjs__WEBPACK_IMPORTED_MODULE_12__.BehaviorSubject(false);
        /**
         * Whether the outline gap needs to be calculated
         * immediately on the next change detection run.
         */
        this.outlineGapCalculationNeededImmediately = false;
        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */
        this.outlineGapCalculationNeededOnStable = false;
        this.destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_13__.Subject();
        /** Override for the logic that disables the label animation in certain cases. */
        this._showAlwaysAnimate = false;
        // super(elementRef);
        this.floatLabel = this._getDefaultFloatLabelState();
        this._animationsEnabled = animationMode !== 'NoopAnimations';
        // Set the default through here so we invoke the setter on the first run.
        this.appearance =
            _defaults && _defaults.appearance ? _defaults.appearance : 'fill';
    }
    /** The form-field appearance style. */
    get appearance() {
        return this._appearance;
    }
    set appearance(value) {
        const oldValue = this._appearance;
        this._appearance =
            value || (this._defaults && this._defaults.appearance) || 'fill';
        if (this._appearance === 'outline' && oldValue !== value) {
            this.outlineGapCalculationNeededOnStable = true;
        }
    }
    /** Whether the floating label should always float or not. */
    get shouldAlwaysFloat() {
        return this.floatLabel === 'always' && !this._showAlwaysAnimate;
    }
    /** Whether the label can float or not. */
    get canLabelFloat() {
        return this.floatLabel !== 'never';
    }
    /** Text for the form field hint. */
    get hintLabel() {
        return this._hintLabel;
    }
    set hintLabel(value) {
        this._hintLabel = value;
        this._processHints();
    }
    /**
     * Whether the label should always float, never float or float as the user types.
     *
     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a
     * way to make the floating label emulate the behavior of a standard input placeholder. However
     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy
     * appearances the `never` option has been disabled in favor of just using the placeholder.
     */
    get floatLabel() {
        return this._floatLabel === 'never' ? 'auto' : this._floatLabel;
    }
    set floatLabel(value) {
        if (value !== this._floatLabel) {
            this._floatLabel = value || this._getDefaultFloatLabelState();
            this.changeDetectorRef.markForCheck();
        }
    }
    get _control() {
        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.
        //  We should clean this up once Ivy is the default renderer.
        return (this._explicitFormFieldControl ||
            this._controlNonStatic ||
            this._controlStatic);
    }
    set _control(value) {
        this._explicitFormFieldControl = value;
    }
    get _labelChild() {
        return this._labelChildNonStatic || this._labelChildStatic;
    }
    clear(event) {
        if (!lodash_isUndefined__WEBPACK_IMPORTED_MODULE_2___default()(this._control.clear)) {
            this._control.clear();
        }
        else {
            this._control.value = '';
        }
        // this._control.focus && this._control.focus();
    }
    ngOnInit() {
        var _a, _b;
        (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.merge)(((_a = this._control) === null || _a === void 0 ? void 0 : _a.stateChanges) || rxjs__WEBPACK_IMPORTED_MODULE_15__.EMPTY, ((_b = this._control) === null || _b === void 0 ? void 0 : _b.ngControl.valueChanges) || rxjs__WEBPACK_IMPORTED_MODULE_15__.EMPTY)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.debounceTime)(200), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.map)(() => this.clearable && !this._control.empty && this._control.focused), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.distinctUntilChanged)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.destroyed))
            .subscribe(this.clearVisible$);
    }
    /**
     * Gets an ElementRef for the element that a overlay attached to the form-field should be
     * positioned relative to.
     */
    getConnectedOverlayOrigin() {
        return this.connectionContainerRef || this.elementRef;
    }
    ngAfterContentInit() {
        this._validateControlChild();
        const control = this._control;
        if (control.controlType) {
            this.elementRef.nativeElement.classList.add(`j-form-field-type-${control.controlType}`);
        }
        // Subscribe to changes in the child control state in order to update the form field UI.
        control.stateChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.startWith)(null)).subscribe(() => {
            this._syncDescribedByIds();
            this.changeDetectorRef.markForCheck();
        });
        // Run change detection if the value changes.
        if (control.ngControl && control.ngControl.valueChanges) {
            control.ngControl.valueChanges
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.takeUntil)(this.destroyed))
                .subscribe(() => this.changeDetectorRef.markForCheck());
        }
        // Note that we have to run outside of the `NgZone` explicitly,
        // in order to avoid throwing users into an infinite loop
        // if `zone-patch-rxjs` is included.
        // this._ngZone.runOutsideAngular(() => {
        //   this._ngZone.onStable
        //     .asObservable()
        //     .pipe(takeUntil(this.destroyed))
        //     .subscribe(() => {
        //       if (this.outlineGapCalculationNeededOnStable) {
        //         this.updateOutlineGap();
        //       }
        //     });
        // });
        // Run change detection and update the outline if the suffix or prefix changes.
        (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.merge)(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {
            this.outlineGapCalculationNeededOnStable = true;
            this.changeDetectorRef.markForCheck();
        });
        // Re-validate when the number of hints changes.
        this._hintChildren.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.startWith)(null)).subscribe(() => {
            this._processHints();
            this.changeDetectorRef.markForCheck();
        });
        // Update the aria-described by when the number of errors changes.
        this._errorChildren.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.startWith)(null)).subscribe(() => {
            this._syncDescribedByIds();
            this.changeDetectorRef.markForCheck();
        });
    }
    ngAfterContentChecked() {
        this._validateControlChild();
        // if (this.outlineGapCalculationNeededImmediately) {
        //   this.updateOutlineGap();
        // }
    }
    ngAfterViewInit() {
        // Avoid animations on load.
        this.subscriptAnimationState = 'enter';
        this.changeDetectorRef.detectChanges();
    }
    ngOnDestroy() {
        this.destroyed.next();
        this.destroyed.complete();
    }
    /** Determines whether a class from the NgControl should be forwarded to the host element. */
    _shouldForward(prop) {
        const ngControl = this._control ? this._control.ngControl : null;
        return ngControl && ngControl[prop];
    }
    _hasLabel() {
        return !!this._labelChild;
    }
    _shouldLabelFloat() {
        return (this.canLabelFloat &&
            (this._control.shouldLabelFloat || this.shouldAlwaysFloat));
    }
    hasFloatingLabel() {
        // In the legacy appearance the placeholder is promoted to a label if no label is given.
        return this._hasLabel();
    }
    /** Determines whether to display hints or errors. */
    _getDisplayedMessages() {
        return this._errorChildren &&
            this._errorChildren.length > 0 &&
            this._control.errorState
            ? 'error'
            : 'hint';
    }
    /** Animates the placeholder up and locks it in position. */
    _animateAndLockLabel() {
        if (this.hasFloatingLabel() && this.canLabelFloat) {
            // If animations are disabled, we shouldn't go in here,
            // because the `transitionend` will never fire.
            if (this._animationsEnabled && this._label) {
                this._showAlwaysAnimate = true;
                (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.fromEvent)(this._label.nativeElement, 'transitionend')
                    .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.take)(1))
                    .subscribe(() => {
                    this._showAlwaysAnimate = false;
                });
            }
            this.floatLabel = 'always';
            this.changeDetectorRef.markForCheck();
        }
    }
    /** Does any extra processing that is required when handling the hints. */
    _processHints() {
        this._validateHints();
        this._syncDescribedByIds();
    }
    /**
     * Ensure that there is a maximum of one of each `<hint>` alignment specified, with the
     * attribute being considered as `align="start"`.
     */
    _validateHints() {
        if (this._hintChildren) {
            let startHint;
            let endHint;
            this._hintChildren.forEach((hint) => {
                if (hint.align === 'start') {
                    if (startHint || this.hintLabel) {
                        throw new Error('hint start');
                    }
                    startHint = hint;
                }
                else if (hint.align === 'end') {
                    if (endHint) {
                        throw new Error('hint end');
                    }
                    endHint = hint;
                }
            });
        }
    }
    /** Gets the default float label state. */
    _getDefaultFloatLabelState() {
        return (this._defaults && this._defaults.floatLabel) || 'auto';
    }
    /**
     * Sets the list of element IDs that describe the child control. This allows the control to update
     * its `aria-describedby` attribute accordingly.
     */
    _syncDescribedByIds() {
        if (this._control) {
            let ids = [];
            if (this._getDisplayedMessages() === 'hint') {
                const startHint = this._hintChildren
                    ? this._hintChildren.find((hint) => hint.align === 'start')
                    : null;
                const endHint = this._hintChildren
                    ? this._hintChildren.find((hint) => hint.align === 'end')
                    : null;
                if (startHint) {
                    ids.push(startHint.id);
                }
                else if (this._hintLabel) {
                    ids.push(this.hintLabelId);
                }
                if (endHint) {
                    ids.push(endHint.id);
                }
            }
            else if (this._errorChildren) {
                ids = this._errorChildren.map((error) => error.id);
            }
            this._control.setDescribedByIds(ids);
        }
    }
    /** Throws an error if the form field's control is missing. */
    _validateControlChild() {
        if (!this._control) {
            throw new Error('control is missing');
        }
    }
};
JFormFieldComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ElementRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ChangeDetectorRef },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Inject, args: [J_FORM_FIELD_DEFAULT_OPTIONS,] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.NgZone },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Inject, args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_23__.ANIMATION_MODULE_TYPE,] }] }
];
JFormFieldComponent.propDecorators = {
    color: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Input }],
    appearance: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Input }],
    hintLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Input }],
    floatLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Input }],
    connectionContainerRef: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild, args: ['connectionContainer', { static: true },] }],
    _inputContainerRef: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild, args: ['inputContainer',] }],
    _label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewChild, args: ['label',] }],
    _controlNonStatic: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChild, args: [_form_field_control__WEBPACK_IMPORTED_MODULE_8__.JFormFieldControl,] }],
    _controlStatic: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChild, args: [_form_field_control__WEBPACK_IMPORTED_MODULE_8__.JFormFieldControl, { static: true },] }],
    _labelChildNonStatic: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChild, args: [_label_directive__WEBPACK_IMPORTED_MODULE_4__.JLabelDirective,] }],
    _labelChildStatic: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChild, args: [_label_directive__WEBPACK_IMPORTED_MODULE_4__.JLabelDirective, { static: true },] }],
    _errorChildren: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChildren, args: [_error_component__WEBPACK_IMPORTED_MODULE_3__.JErrorComponent, { descendants: true },] }],
    _hintChildren: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChildren, args: [_hint_directive__WEBPACK_IMPORTED_MODULE_5__.JHintDirective, { descendants: true },] }],
    _prefixChildren: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChildren, args: [_prefix_directive__WEBPACK_IMPORTED_MODULE_6__.JPrefixDirective, { descendants: true },] }],
    _suffixChildren: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChildren, args: [_suffix_directive__WEBPACK_IMPORTED_MODULE_7__.JSuffixDirective, { descendants: true },] }],
    _bottomLineChildren: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ContentChildren, args: [_bottom_line__WEBPACK_IMPORTED_MODULE_10__.JBottomLineDirective, { descendants: true },] }],
    clearable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_11__.Input }]
};
JFormFieldComponent = JFormFieldComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_24__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Component)({
        selector: 'j-form-field',
        exportAs: 'jFormField',
        template: _form_field_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        animations: [_form_field_animations__WEBPACK_IMPORTED_MODULE_9__.jFormFieldAnimations.transitionMessages],
        host: {
            class: 'j-form-field',
            '[class.j-form-field-appearance-standard]': 'appearance === "standard"',
            '[class.j-form-field-appearance-fill]': 'appearance ==="fill"',
            '[class.j-form-field-appearance-outline]': 'appearance === "outline"',
            '[class.j-form-field-invalid]': '_control.errorState',
            '[class.j-form-field-can-float]': 'canLabelFloat',
            '[class.j-form-field-should-float]': '_shouldLabelFloat()',
            '[class.j-form-field-has-label]': 'hasFloatingLabel()',
            '[class.j-form-field-disabled]': '_control.disabled',
            '[class.j-form-field-autofilled]': '_control.autofilled',
            '[class.j-focused]': '_control.focused',
            '[class.j-accent]': 'color === "accent"',
            '[class.j-warn]': 'color === "warn"',
            '[class.ng-untouched]': '_shouldForward("untouched")',
            '[class.ng-touched]': '_shouldForward("touched")',
            '[class.ng-pristine]': '_shouldForward("pristine")',
            '[class.ng-dirty]': '_shouldForward("dirty")',
            '[class.ng-valid]': '_shouldForward("valid")',
            '[class.ng-invalid]': '_shouldForward("invalid")',
            '[class.ng-pending]': '_shouldForward("pending")',
            '[class._animation-noopable]': '!_animationsEnabled',
        },
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ViewEncapsulation.None,
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__.ChangeDetectionStrategy.OnPush,
        providers: [{ provide: J_FORM_FIELD, useExisting: JFormFieldComponent_1 }],
        styles: [_form_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], JFormFieldComponent);



/***/ }),

/***/ 20591:
/*!*************************************************!*\
  !*** ./src/app/shared/form-field/form-input.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "INPUT_VALUE_ACCESSOR": () => (/* binding */ INPUT_VALUE_ACCESSOR),
/* harmony export */   "JFormInput": () => (/* binding */ JFormInput)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _form_field_error_status__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../form-field/error.status */ 61688);
/* harmony import */ var _form_field_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form-field-control */ 46758);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ 11685);
/* harmony import */ var _shared_services_platform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services/platform */ 61558);
var JFormInput_1;

// import {AutofillMonitor} from 'text-field';






// import { getMatInputUnsupportedTypeError } from './input-errors';
/**
 * This token is used to inject the object whose value should be set into `MatInput`. If none is
 * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide
 * themselves for this token, in order to make `MatInput` delegate the getting and setting of the
 * value to them.
 */
const INPUT_VALUE_ACCESSOR = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.InjectionToken('INPUT_VALUE_ACCESSOR');
let nextUniqueId = 0;
// Boilerplate for applying mixins to MatInput.
/** @docs-private */
class InputBase {
    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, 
    /** @docs-private */
    ngControl) {
        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;
        this._parentForm = _parentForm;
        this._parentFormGroup = _parentFormGroup;
        this.ngControl = ngControl;
    }
}
const InputMixinBase = (0,_form_field_error_status__WEBPACK_IMPORTED_MODULE_0__.mixinErrorState)(InputBase);
/* tslint:disable:no-conflicting-lifecycle directive-selector no-host-metadata-property */
/** Directive that allows a native input to work inside a `jFormField`. */
let JFormInput = JFormInput_1 = class JFormInput extends InputMixinBase {
    constructor(_elementRef, _platform, 
    /** @docs-private */
    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, 
    // private _autofillMonitor: AutofillMonitor,
    ngZone) {
        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);
        this._elementRef = _elementRef;
        this._platform = _platform;
        this.ngControl = ngControl;
        this._uid = `j-input-${nextUniqueId++}`;
        /**
         * Implemented as part of JFormFieldControl.
         * @docs-private
         */
        this.focused = false;
        /**
         * Implemented as part of JFormFieldControl.
         * @docs-private
         */
        this.controlType = 'j-input';
        /**
         * Implemented as part of JFormFieldControl.
         * @docs-private
         */
        this.autofilled = false;
        this._disabled = false;
        this._required = false;
        this._type = 'text';
        this._readonly = false;
        this._neverEmptyInputTypes = [
            'date',
            'datetime',
            'datetime-local',
            'month',
            'time',
            'week',
        ];
        const element = this._elementRef.nativeElement;
        const nodeName = element.nodeName.toLowerCase();
        // If no input value accessor was explicitly specified, use the element as the input value
        // accessor.
        this._inputValueAccessor = inputValueAccessor || element;
        this._previousNativeValue = this.value;
        // Force setter to be called in case id was not specified.
        this.id = this.id;
        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete
        // key. In order to get around this we need to "jiggle" the caret loose. Since this bug only
        // exists on iOS, we only bother to install the listener on iOS.
        if (_platform.IOS) {
            ngZone.runOutsideAngular(() => {
                _elementRef.nativeElement.addEventListener('keyup', (event) => {
                    let el = event.target;
                    if (!el.value && !el.selectionStart && !el.selectionEnd) {
                        // Note: Just setting `0, 0` doesn't fix the issue. Setting
                        // `1, 1` fixes it for the first time that you type text and
                        // then hold delete. Toggling to `1, 1` and then back to
                        // `0, 0` seems to completely fix it.
                        el.setSelectionRange(1, 1);
                        el.setSelectionRange(0, 0);
                    }
                });
            });
        }
        this._isServer = !this._platform.isBrowser;
        this._isNativeSelect = nodeName === 'select';
        this._isTextarea = nodeName === 'textarea';
        if (this._isNativeSelect) {
            this.controlType = element.multiple
                ? 'j-native-select-multiple'
                : 'j-native-select';
        }
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get disabled() {
        if (this.ngControl && this.ngControl.disabled !== null) {
            return this.ngControl.disabled;
        }
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = !!value;
        // Browsers may not fire the blur event if the input is disabled too quickly.
        // Reset from here to ensure that the element doesn't become stuck.
        if (this.focused) {
            this.focused = false;
            this.stateChanges.next();
        }
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value || this._uid;
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get required() {
        return this._required;
    }
    set required(value) {
        this._required = !!value;
    }
    /** Input type of the element. */
    get type() {
        return this._type;
    }
    set type(value) {
        this._type = value || 'text';
        this._validateType();
        // When using Angular inputs, developers are no longer able to set the properties on the native
        // input element. To ensure that bindings for `type` work, we need to sync the setter
        // with the native property. Textarea elements don't support the type property or attribute.
        if (!this._isTextarea) {
            this._elementRef.nativeElement.type = this._type;
        }
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get value() {
        return this._inputValueAccessor.value;
    }
    set value(value) {
        if (value !== this.value) {
            this._inputValueAccessor.value = value;
            this.stateChanges.next();
        }
    }
    /** Whether the element is readonly. */
    get readonly() {
        return this._readonly;
    }
    set readonly(value) {
        this._readonly = !!value;
    }
    ngOnInit() {
        if (this._platform.isBrowser) {
            // this._autofillMonitor
            //   .monitor(this._elementRef.nativeElement)
            //   .subscribe((event) => {
            //     this.autofilled = event.isAutofilled;
            //     this.stateChanges.next();
            //   });
        }
    }
    ngOnChanges() {
        this.stateChanges.next();
    }
    ngOnDestroy() {
        this.stateChanges.complete();
        if (this._platform.isBrowser) {
            // this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);
        }
    }
    ngDoCheck() {
        if (this.ngControl) {
            // We need to re-evaluate this on every change detection cycle, because there are some
            // error triggers that we can't subscribe to (e.g. parent form submissions). This means
            // that whatever logic is in here has to be super lean or we risk destroying the performance.
            this.updateErrorState();
        }
        // We need to dirty-check the native element's value, because there are some cases where
        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're
        // updating the value using `emitEvent: false`).
        this._dirtyCheckNativeValue();
    }
    /** Focuses the input. */
    focus(options) {
        this._elementRef.nativeElement.focus(options);
    }
    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.
    /** Callback for the cases where the focused state of the input changes. */
    // tslint:disable:no-host-decorator-in-concrete
    // tslint:enable:no-host-decorator-in-concrete
    _focusChanged(isFocused) {
        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {
            this.focused = isFocused;
            this.stateChanges.next();
        }
    }
    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.
    // tslint:disable-next-line:no-host-decorator-in-concrete
    _onInput() {
        // This is a noop function and is used to let Angular know whenever the value changes.
        // Angular will run a new change detection each time the `input` event has been dispatched.
        // It's necessary that Angular recognizes the value change, because when floatingLabel
        // is set to false and Angular forms aren't used, the placeholder won't recognize the
        // value changes and will not disappear.
        // Listening to the input event wouldn't be necessary when the input is using the
        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.
    }
    /** Does some manual dirty checking on the native input `value` property. */
    _dirtyCheckNativeValue() {
        const newValue = this._elementRef.nativeElement.value;
        if (this._previousNativeValue !== newValue) {
            this._previousNativeValue = newValue;
            this.stateChanges.next();
        }
    }
    /** Make sure the input is a supported type. */
    _validateType() {
        // if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {
        //   throw getMatInputUnsupportedTypeError(this._type);
        // }
    }
    /** Checks whether the input type is one of the types that are never empty. */
    _isNeverEmpty() {
        return this._neverEmptyInputTypes.indexOf(this._type) > -1;
    }
    /** Checks whether the input is invalid based on the native validation. */
    _isBadInput() {
        // The `validity` property won't be present on platform-server.
        let validity = this._elementRef.nativeElement
            .validity;
        return validity && validity.badInput;
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get empty() {
        return (!this._isNeverEmpty() &&
            !this._elementRef.nativeElement.value &&
            !this._isBadInput() &&
            !this.autofilled);
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    get shouldLabelFloat() {
        if (this._isNativeSelect) {
            // For a single-selection `<select>`, the label should float when the selected option has
            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid
            // overlapping the label with the options.
            const selectElement = this._elementRef.nativeElement;
            const firstOption = selectElement.options[0];
            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be
            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.
            return (this.focused ||
                selectElement.multiple ||
                !this.empty ||
                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));
        }
        else {
            return this.focused || !this.empty;
        }
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    setDescribedByIds(ids) {
        this._ariaDescribedby = ids.join(' ');
    }
    /**
     * Implemented as part of JFormFieldControl.
     * @docs-private
     */
    onContainerClick() {
        // Do not re-focus the input element if the element is already focused. Otherwise it can happen
        if (!this.focused) {
            this.focus();
        }
    }
    clear() {
        if (this.ngControl) {
            this.ngControl.control.setValue('');
            this.ngControl.control.markAsPristine();
            // this.stateChanges.next();
        }
        // ngxMask ignoring this.ngControl.control.setValue('')
        this._elementRef.nativeElement.value = '';
    }
};
JFormInput.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef },
    { type: _shared_services_platform__WEBPACK_IMPORTED_MODULE_3__.Platform },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgControl, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Self }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NgForm, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Optional }] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormGroupDirective, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Optional }] },
    { type: _utils__WEBPACK_IMPORTED_MODULE_2__.ErrorStateMatcher },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Self }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject, args: [INPUT_VALUE_ACCESSOR,] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.NgZone }
];
JFormInput.propDecorators = {
    disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    placeholder: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    required: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    type: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    errorStateMatcher: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    readonly: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    _focusChanged: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['focus', ['true'],] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['blur', ['false'],] }],
    _onInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['input',] }]
};
JFormInput = JFormInput_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Directive)({
        selector: `input[jFormInput], textarea[jFormInput], select[jFormInput]`,
        exportAs: 'jFormInput',
        host: {
            /**
             * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.
             */
            class: 'j-input-element j-form-field-autofill-control',
            '[class.j-input-server]': '_isServer',
            // Native input properties that are overwritten by Angular inputs need to be synced with
            // the native input element. Otherwise property bindings for those don't work.
            '[attr.id]': 'id',
            '[attr.placeholder]': 'placeholder',
            '[disabled]': 'disabled',
            '[required]': 'required',
            '[attr.readonly]': 'readonly && !_isNativeSelect || null',
            '[attr.aria-describedby]': '_ariaDescribedby || null',
            '[attr.aria-invalid]': 'errorState',
            '[attr.aria-required]': 'required.toString()',
        },
        providers: [{ provide: _form_field_control__WEBPACK_IMPORTED_MODULE_1__.JFormFieldControl, useExisting: JFormInput_1 }],
    })
], JFormInput);



/***/ }),

/***/ 99049:
/*!*****************************************************!*\
  !*** ./src/app/shared/form-field/hint.directive.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JHintDirective": () => (/* binding */ JHintDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let nextUniqueId = 0;
let JHintDirective = class JHintDirective {
    constructor() {
        this.align = 'start';
        this.id = `j-hint-${nextUniqueId++}`;
    }
};
JHintDirective.propDecorators = {
    align: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }],
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
JHintDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: 'j-hint',
        host: {
            class: 'j-hint',
            '[class.j-hint-right]': 'align === "end"',
            '[attr.id]': 'id',
            // Remove align attribute to prevent it from interfering with layout.
            '[attr.align]': 'null',
        },
    })
], JHintDirective);



/***/ }),

/***/ 86984:
/*!******************************************************!*\
  !*** ./src/app/shared/form-field/label.directive.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JLabelDirective": () => (/* binding */ JLabelDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let JLabelDirective = class JLabelDirective {
};
JLabelDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
        selector: 'j-label',
    })
], JLabelDirective);



/***/ }),

/***/ 43915:
/*!*******************************************************!*\
  !*** ./src/app/shared/form-field/prefix.directive.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JPrefixDirective": () => (/* binding */ JPrefixDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let JPrefixDirective = class JPrefixDirective {
};
JPrefixDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
        selector: '[jPrefix]',
    })
], JPrefixDirective);



/***/ }),

/***/ 32534:
/*!*******************************************************!*\
  !*** ./src/app/shared/form-field/suffix.directive.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JSuffixDirective": () => (/* binding */ JSuffixDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let JSuffixDirective = class JSuffixDirective {
};
JSuffixDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({
        selector: '[jSuffix]',
    })
], JSuffixDirective);



/***/ }),

/***/ 11685:
/*!********************************************!*\
  !*** ./src/app/shared/form-field/utils.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowOnDirtyErrorStateMatcher": () => (/* binding */ ShowOnDirtyErrorStateMatcher),
/* harmony export */   "ErrorStateMatcher": () => (/* binding */ ErrorStateMatcher),
/* harmony export */   "coerceElement": () => (/* binding */ coerceElement),
/* harmony export */   "supportsPassiveEventListeners": () => (/* binding */ supportsPassiveEventListeners),
/* harmony export */   "normalizePassiveListenerOptions": () => (/* binding */ normalizePassiveListenerOptions),
/* harmony export */   "coerceBooleanProperty": () => (/* binding */ coerceBooleanProperty)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);



/** Error state matcher that matches when a control is invalid and dirty. */
let ShowOnDirtyErrorStateMatcher = class ShowOnDirtyErrorStateMatcher {
    isErrorState(control, form, component) {
        return !!(control &&
            control.invalid &&
            ((control.dirty && component && !component.focused) ||
                (form && form.submitted && control.touched)));
    }
};
ShowOnDirtyErrorStateMatcher = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)()
], ShowOnDirtyErrorStateMatcher);

/** Provider that defines how form controls behave with regards to displaying error messages. */
let ErrorStateMatcher = class ErrorStateMatcher {
    isErrorState(control, form, component) {
        return !!(control &&
            control.invalid &&
            (control.touched || (form && form.submitted)));
    }
};
ErrorStateMatcher = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({ providedIn: 'root' })
], ErrorStateMatcher);

/**
 * Coerces an ElementRef or an Element into an element.
 * Useful for APIs that can accept either a ref or the native element itself.
 */
function coerceElement(elementOrRef) {
    return elementOrRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
        ? elementOrRef.nativeElement
        : elementOrRef;
}
/** Cached result of whether the user's browser supports passive event listeners. */
let supportsPassiveEvents;
/**
 * Checks whether the user's browser supports passive event listeners.
 * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
 */
function supportsPassiveEventListeners() {
    if (supportsPassiveEvents == null && typeof window !== 'undefined') {
        try {
            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {
                get: () => (supportsPassiveEvents = true),
            }));
        }
        finally {
            supportsPassiveEvents = supportsPassiveEvents || false;
        }
    }
    return supportsPassiveEvents;
}
/**
 * Normalizes an `AddEventListener` object to something that can be passed
 * to `addEventListener` on any browser, no matter whether it supports the
 * `options` parameter.
 * @param options Object to be normalized.
 */
function normalizePassiveListenerOptions(options) {
    return supportsPassiveEventListeners() ? options : !!options.capture;
}
/** Coerces a data-bound value (typically a string) to a boolean. */
function coerceBooleanProperty(value) {
    return value != null && `${value}` !== 'false';
}


/***/ }),

/***/ 44017:
/*!*********************************************************!*\
  !*** ./src/app/shared/guards/is-authenticated.guard.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IsAuthenticatedGuard": () => (/* binding */ IsAuthenticatedGuard)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 48130);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/auth.service */ 50384);





let IsAuthenticatedGuard = class IsAuthenticatedGuard {
    constructor(auth, router) {
        this.auth = auth;
        this.router = router;
    }
    canActivate(next, state) {
        if (!this.auth.isAuthenticated) {
            this.router.navigate(['auth', 'login'], {
                queryParams: next.queryParams,
            });
            return rxjs__WEBPACK_IMPORTED_MODULE_1__.NEVER;
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(true);
    }
};
IsAuthenticatedGuard.ctorParameters = () => [
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__.AuthService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__.Router }
];
IsAuthenticatedGuard = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], IsAuthenticatedGuard);



/***/ }),

/***/ 14085:
/*!*************************************************************!*\
  !*** ./src/app/shared/guards/is-not-authenticated.guard.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IsNotAuthenticatedGuard": () => (/* binding */ IsNotAuthenticatedGuard)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 48130);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 64139);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/auth.service */ 50384);





let IsNotAuthenticatedGuard = class IsNotAuthenticatedGuard {
    constructor(auth, router) {
        this.auth = auth;
        this.router = router;
    }
    canActivate(next, state) {
        if (this.auth.isAuthenticated) {
            this.router.navigate(['accounts'], {
                queryParamsHandling: 'merge',
            });
            return rxjs__WEBPACK_IMPORTED_MODULE_1__.NEVER;
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(true);
    }
};
IsNotAuthenticatedGuard.ctorParameters = () => [
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_0__.AuthService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__.Router }
];
IsNotAuthenticatedGuard = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root',
    })
], IsNotAuthenticatedGuard);



/***/ }),

/***/ 25370:
/*!***********************************************!*\
  !*** ./src/app/shared/icon/icon.component.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ICON_SIZE": () => (/* binding */ ICON_SIZE),
/* harmony export */   "IconComponent": () => (/* binding */ IconComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _icon_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon.component.html?ngResource */ 4153);
/* harmony import */ var _icon_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icon.component.scss?ngResource */ 84430);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icon */ 60605);






var ICON_SIZE;
(function (ICON_SIZE) {
    ICON_SIZE["DEFAULT"] = "sm";
    ICON_SIZE["MEDIUM"] = "md";
})(ICON_SIZE || (ICON_SIZE = {}));
let IconComponent = class IconComponent {
    constructor(sanitizer, renderer, elementRef) {
        this.sanitizer = sanitizer;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.color = 'default';
        this.size = ICON_SIZE.DEFAULT;
        this.ICON_SIZE = ICON_SIZE;
    }
    ngOnInit() {
        this.svg = this.sanitizer.bypassSecurityTrustHtml(_icon__WEBPACK_IMPORTED_MODULE_2__.Icons[this.name] || '');
    }
    ngAfterViewInit() {
        if (this.size == ICON_SIZE.MEDIUM) {
            this.renderer.addClass(this.elementRef.nativeElement, 'size-md');
        }
    }
    get iconClass() {
        let iconClass = `color-${this.color}`;
        if (this.isStroke) {
            iconClass += ' stroke';
        }
        return iconClass;
    }
};
IconComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.DomSanitizer },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Renderer2 },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef }
];
IconComponent.propDecorators = {
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    color: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isStroke: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    size: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
IconComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-icon',
        template: _icon_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_icon_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], IconComponent);



/***/ }),

/***/ 60605:
/*!*************************************!*\
  !*** ./src/app/shared/icon/icon.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Icons": () => (/* binding */ Icons)
/* harmony export */ });
const Icons = {
    // tslint:disable:max-line-length
    clear: `<path d="M8 16C12.3765 16 16 12.3765 16 8C16 3.63137 12.3686 0 7.99216 0C3.62353 0 0 3.63137 0 8C0 12.3765 3.63137 16 8 16ZM5.18431 11.4824C4.82353 11.4824 4.52549 11.1843 4.52549 10.8157C4.52549 10.6353 4.59608 10.4784 4.72157 10.3608L7.06667 8.00784L4.72157 5.6549C4.59608 5.5451 4.52549 5.38039 4.52549 5.2C4.52549 4.83922 4.82353 4.54902 5.18431 4.54902C5.37255 4.54902 5.52157 4.61961 5.63922 4.7451L7.99216 7.0902L10.3608 4.73725C10.4941 4.59608 10.6431 4.53333 10.8157 4.53333C11.1843 4.53333 11.4745 4.83137 11.4745 5.19216C11.4745 5.37255 11.4196 5.52157 11.2784 5.64706L8.92549 8.00784L11.2706 10.3451C11.3961 10.4706 11.4667 10.6275 11.4667 10.8157C11.4667 11.1843 11.1765 11.4824 10.8078 11.4824C10.6196 11.4824 10.4549 11.4039 10.3373 11.2863L7.99216 8.93333L5.6549 11.2863C5.53725 11.4118 5.37255 11.4824 5.18431 11.4824Z"/>`,
    eyeClosed: `<path d="M12.4919 13.2225C12.5784 13.3076 12.6996 13.3529 12.8092 13.3529C13.04 13.3529 13.2535 13.1488 13.2535 12.9164C13.2535 12.803 13.2074 12.6896 13.1208 12.6045L3.46772 3.12473C3.38118 3.03969 3.26578 3 3.15038 3C2.91958 3 2.70609 3.20411 2.70609 3.4309C2.70609 3.54996 2.74648 3.66336 2.83303 3.74274L12.4919 13.2225ZM8.00288 3.44791C6.99892 3.44791 6.09304 3.618 5.24486 3.89582L6.00072 4.63855C6.64118 4.45145 7.28741 4.34373 8.00288 4.34373C11.9149 4.34373 14.9903 7.63218 14.9903 8.30687C14.9903 8.76612 13.9805 10.0021 12.3823 10.966L13.092 11.6634C14.9153 10.5011 16 8.9759 16 8.30687C16 7.14458 12.7804 3.44791 8.00288 3.44791ZM8.00288 13.1658C9.07609 13.1658 10.057 12.9787 10.9513 12.6782L10.1955 11.9355C9.50883 12.1453 8.78182 12.27 8.00288 12.27C4.09088 12.27 1.00974 9.10631 1.00974 8.30687C1.00974 7.90999 2.08294 6.58894 3.7793 5.5854L3.06383 4.88235C1.14244 6.05032 0 7.62084 0 8.30687C0 9.4635 3.28309 13.1658 8.00288 13.1658ZM10.9629 9.54855C11.1417 9.16867 11.2398 8.74344 11.2398 8.30687C11.2398 6.53225 9.79733 5.13182 8.00288 5.13182C7.54706 5.13182 7.12009 5.22821 6.7335 5.39263L10.9629 9.54855ZM8.00288 11.4819C8.51064 11.4819 8.98954 11.3572 9.41652 11.1531L5.09484 6.90078C4.87559 7.32034 4.76019 7.7966 4.76019 8.30687C4.76019 10.0361 6.1969 11.4819 8.00288 11.4819Z"/>`,
    eyeOpened: `<path d="M8.00293 13C12.7333 13 16 9.1902 16 8C16 6.80397 12.7274 3 8.00293 3C3.33699 3 0 6.80397 0 8C0 9.1902 3.33114 13 8.00293 13ZM8.00293 12.0782C4.15075 12.0782 1.02452 8.82264 1.02452 8C1.02452 7.30572 4.15075 3.92182 8.00293 3.92182C11.8434 3.92182 14.9755 7.30572 14.9755 8C14.9755 8.82264 11.8434 12.0782 8.00293 12.0782ZM8.00293 11.2672C9.82364 11.2672 11.2872 9.77946 11.2872 8C11.2872 6.17386 9.82364 4.73279 8.00293 4.73279C6.17051 4.73279 4.70106 6.17386 4.71277 8C4.71862 9.77946 6.17051 11.2672 8.00293 11.2672ZM8.00293 9.08518C7.39407 9.08518 6.90231 8.5951 6.90231 8C6.90231 7.39907 7.39407 6.91482 8.00293 6.91482C8.60593 6.91482 9.0977 7.39907 9.0977 8C9.0977 8.5951 8.60593 9.08518 8.00293 9.08518Z"/>`,
    info: `<path fill-rule="evenodd" clip-rule="evenodd" d="M7.96875 15.9375C12.3203 15.9375 15.9375 12.3281 15.9375 7.96875C15.9375 3.61719 12.3125 0 7.96094 0C3.60156 0 0 3.61719 0 7.96875C0 12.3281 3.60938 15.9375 7.96875 15.9375ZM7.89844 5.1875C7.32812 5.1875 6.88281 4.73438 6.88281 4.17188C6.88281 3.60156 7.32812 3.14844 7.89844 3.14844C8.46875 3.14844 8.91406 3.60156 8.91406 4.17188C8.91406 4.73438 8.46875 5.1875 7.89844 5.1875ZM7.89844 6.49219C8.28906 6.49219 8.50781 6.77344 8.50781 7.19531V12.2656H7.26562V7.21094C7.26562 6.76562 7.50781 6.49219 7.89844 6.49219Z" />`,
    arrowLeft: `<path d="M11 3L5 8.28846L11 14" stroke-width="1.4" stroke-linecap="round" stroke-linejoin="round"/>`,
    arrowRight: `<path d="M8.00048 6.71051C8.00615 6.85919 7.97857 7.00726 7.91975 7.14393C7.86093 7.2806 7.77235 7.40242 7.66048 7.50051L1.66048 12.7905C1.45981 12.9521 1.20449 13.0301 0.947763 13.0081C0.691036 12.986 0.452714 12.8658 0.28249 12.6723C0.112266 12.4789 0.0232793 12.2272 0.0340833 11.9698C0.0448873 11.7123 0.154649 11.469 0.340481 11.2905L5.50048 6.68051L0.290481 1.68051C0.121718 1.49286 0.0301522 1.24833 0.0341501 0.995985C0.038148 0.743638 0.137414 0.502135 0.312036 0.319921C0.486659 0.137706 0.723721 0.0282583 0.975669 0.0135307C1.22762 -0.00119691 1.47582 0.0798845 1.67048 0.240513L7.67048 5.95051C7.7766 6.04625 7.86097 6.16363 7.9179 6.29473C7.97482 6.42583 8.00298 6.56761 8.00048 6.71051Z" fill="#666C72"/>`,
    done: `<path d="M14 2L6.23529 13L2 8.1875" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    fail: `<path d="M8 2C11.2824 2 14 4.71765 14 8C14 11.2765 11.2824 14 8 14C4.72353 14 2 11.2824 2 8.00588C2 4.72353 4.72353 2 8 2Z"/><rect x="4" y="7.5" width="8" height="1" rx="0.5" fill="white"/>`,
    close: `<rect x="19.7773" y="2.80762" width="2" height="24" rx="1" transform="rotate(45 19.7773 2.80762)"/><rect x="21.1914" y="19.7782" width="2" height="24" rx="1" transform="rotate(135 21.1914 19.7782)"/>`,
    chevronLeft: `<path d="M11 3L5 8.28846L11 14" fill="none" stroke="currentColor" stroke-width="1.4" stroke-linecap="round" stroke-linejoin="round"/>`,
    search: `<path d="M7.00781 13.0156C8.30469 13.0156 9.51562 12.5938 10.5 11.8906L14.2031 15.5938C14.375 15.7656 14.6016 15.8516 14.8359 15.8516C15.3438 15.8516 15.7109 15.4609 15.7109 14.9609C15.7109 14.7266 15.6328 14.5078 15.4609 14.3359L11.7812 10.6484C12.5547 9.63281 13.0156 8.375 13.0156 7.00781C13.0156 3.70312 10.3125 1 7.00781 1C3.69531 1 1 3.70312 1 7.00781C1 10.3125 3.69531 13.0156 7.00781 13.0156ZM7.00781 11.7188C4.42188 11.7188 2.29688 9.58594 2.29688 7.00781C2.29688 4.42969 4.42188 2.29688 7.00781 2.29688C9.58594 2.29688 11.7188 4.42969 11.7188 7.00781C11.7188 9.58594 9.58594 11.7188 7.00781 11.7188Z" fill="currentColor"/>`,
    question: `<path d="M8 16C12.3686 16 16 12.3765 16 8C16 3.63137 12.3608 0 7.99216 0C3.61569 0 0 3.63137 0 8C0 12.3765 3.62353 16 8 16ZM8 14.6667C4.29804 14.6667 1.34118 11.702 1.34118 8C1.34118 4.30588 4.2902 1.33333 7.99216 1.33333C11.6863 1.33333 14.6588 4.30588 14.6667 8C14.6745 11.702 11.6941 14.6667 8 14.6667ZM7.83529 9.62353C8.22745 9.62353 8.47059 9.38039 8.47059 9.06667V8.97255C8.47059 8.53333 8.72157 8.25882 9.27059 7.89804C10.0314 7.39608 10.5725 6.93333 10.5725 6C10.5725 4.6902 9.41177 3.99216 8.07843 3.99216C6.72941 3.99216 5.84314 4.62745 5.63137 5.34902C5.59216 5.48235 5.56078 5.60784 5.56078 5.74118C5.56078 6.08627 5.84314 6.28235 6.10196 6.28235C6.54902 6.28235 6.61961 6.03922 6.87059 5.74902C7.12941 5.31765 7.50588 5.05882 8.03137 5.05882C8.7451 5.05882 9.20784 5.45882 9.20784 6.06275C9.20784 6.59608 8.87843 6.8549 8.19608 7.32549C7.63137 7.71765 7.20784 8.13333 7.20784 8.90196V9.00392C7.20784 9.41961 7.43529 9.62353 7.83529 9.62353ZM7.81961 11.9686C8.27451 11.9686 8.66667 11.6078 8.66667 11.1529C8.66667 10.6902 8.28235 10.3373 7.81961 10.3373C7.35686 10.3373 6.97255 10.698 6.97255 11.1529C6.97255 11.6 7.36471 11.9686 7.81961 11.9686Z" fill="currentColor"/> `,
    cross: `<rect x="19.7773" y="2.80762" width="2" height="24" rx="1" transform="rotate(45 19.7773 2.80762)" fill="currentColor"/>
  <rect x="21.1914" y="19.7782" width="2" height="24" rx="1" transform="rotate(135 21.1914 19.7782)" fill="currentColor"/>`,
    calendar: `<path d="M10.7987 15.6659H5.1987C4.17894 15.6659 3.20046 15.2631 2.47627 14.5452C1.75208 13.8273 1.34082 12.8523 1.33203 11.8326V6.25924C1.33203 5.23374 1.73941 4.25024 2.46455 3.5251C3.18969 2.79996 4.17319 2.39258 5.1987 2.39258H10.7987C11.8242 2.39258 12.8077 2.79996 13.5328 3.5251C14.258 4.25024 14.6654 5.23374 14.6654 6.25924V11.8326C14.6566 12.8523 14.2453 13.8273 13.5211 14.5452C12.7969 15.2631 11.8185 15.6659 10.7987 15.6659ZM5.1987 3.72591C4.52682 3.72591 3.88245 3.99282 3.40736 4.46791C2.93227 4.943 2.66536 5.58736 2.66536 6.25924V11.8326C2.66536 12.5045 2.93227 13.1488 3.40736 13.6239C3.88245 14.099 4.52682 14.3659 5.1987 14.3659H10.7987C11.4706 14.3659 12.1149 14.099 12.59 13.6239C13.0651 13.1488 13.332 12.5045 13.332 11.8326V6.25924C13.332 5.58736 13.0651 4.943 12.59 4.46791C12.1149 3.99282 11.4706 3.72591 10.7987 3.72591H5.1987Z" fill="currentColor"/>
  <path d="M10.9753 4.78065C10.7984 4.78065 10.6289 4.71041 10.5039 4.58539C10.3788 4.46036 10.3086 4.2908 10.3086 4.11398V2.00065C10.3086 1.82384 10.3788 1.65427 10.5039 1.52925C10.6289 1.40422 10.7984 1.33398 10.9753 1.33398C11.1521 1.33398 11.3216 1.40422 11.4467 1.52925C11.5717 1.65427 11.6419 1.82384 11.6419 2.00065V4.11398C11.6419 4.2908 11.5717 4.46036 11.4467 4.58539C11.3216 4.71041 11.1521 4.78065 10.9753 4.78065Z" fill="currentColor"/>
  <path d="M5.02604 4.78065C4.84923 4.78065 4.67966 4.71041 4.55464 4.58539C4.42961 4.46036 4.35938 4.2908 4.35938 4.11398V2.00065C4.35937 1.9131 4.37662 1.82641 4.41012 1.74553C4.44363 1.66465 4.49273 1.59115 4.55464 1.52925C4.61654 1.46734 4.69004 1.41823 4.77092 1.38473C4.8518 1.35123 4.93849 1.33398 5.02604 1.33398C5.11359 1.33398 5.20028 1.35123 5.28116 1.38473C5.36205 1.41823 5.43554 1.46734 5.49745 1.52925C5.55935 1.59115 5.60846 1.66465 5.64196 1.74553C5.67546 1.82641 5.69271 1.9131 5.69271 2.00065V4.11398C5.69271 4.2908 5.62247 4.46036 5.49745 4.58539C5.37242 4.71041 5.20285 4.78065 5.02604 4.78065Z" fill="currentColor"/>
  <path d="M10.8404 13.087C11.4663 13.087 11.9737 12.5796 11.9737 11.9536C11.9737 11.3277 11.4663 10.8203 10.8404 10.8203C10.2144 10.8203 9.70703 11.3277 9.70703 11.9536C9.70703 12.5796 10.2144 13.087 10.8404 13.087Z" fill="currentColor"/>
  <path d="M13.9984 5.75977H2.01172V7.0931H13.9984V5.75977Z" fill="currentColor"/>`,
    list: `<path d="M0.874698 4.22016H2.2061C2.68602 4.22016 3.08853 3.83539 3.08853 3.36008C3.08853 2.88477 2.68602 2.5 2.2061 2.5H0.874698C0.394775 2.5 0 2.88477 0 3.36008C0 3.83539 0.394775 4.22016 0.874698 4.22016ZM5.48041 4.08436H15.2492C15.6672 4.08436 16 3.76749 16 3.36008C16 2.95267 15.6749 2.6358 15.2492 2.6358H5.48041C5.06241 2.6358 4.7373 2.95267 4.7373 3.36008C4.7373 3.76749 5.06241 4.08436 5.48041 4.08436ZM0.874698 8.86008H2.2061C2.68602 8.86008 3.08853 8.47531 3.08853 8C3.08853 7.52469 2.68602 7.13992 2.2061 7.13992H0.874698C0.394775 7.13992 0 7.52469 0 8C0 8.47531 0.394775 8.86008 0.874698 8.86008ZM5.48041 8.72428H15.2492C15.6672 8.72428 16 8.40741 16 8C16 7.59259 15.6749 7.27572 15.2492 7.27572H5.48041C5.06241 7.27572 4.7373 7.59259 4.7373 8C4.7373 8.40741 5.06241 8.72428 5.48041 8.72428ZM0.874698 13.5H2.2061C2.68602 13.5 3.08853 13.1152 3.08853 12.6399C3.08853 12.1646 2.68602 11.7798 2.2061 11.7798H0.874698C0.394775 11.7798 0 12.1646 0 12.6399C0 13.1152 0.394775 13.5 0.874698 13.5ZM5.48041 13.3642H15.2492C15.6672 13.3642 16 13.0473 16 12.6399C16 12.2325 15.6749 11.9156 15.2492 11.9156H5.48041C5.06241 11.9156 4.7373 12.2325 4.7373 12.6399C4.7373 13.0473 5.06241 13.3642 5.48041 13.3642Z"/>`,
    delete: `<path d="M12.8336 14.3105L13.3275 3.8443H14.0434C14.3369 3.8443 14.5732 3.60089 14.5732 3.30738C14.5732 3.01387 14.3369 2.76331 14.0434 2.76331H10.915V1.68949C10.915 0.665772 10.2206 0 9.11812 0H6.44072C5.33825 0 4.65101 0.665772 4.65101 1.68949V2.76331H1.53691C1.25056 2.76331 1 3.01387 1 3.30738C1 3.60089 1.25056 3.8443 1.53691 3.8443H2.2528L2.74676 14.3177C2.79687 15.3485 3.47696 16 4.50783 16H11.0725C12.0962 16 12.7834 15.3414 12.8336 14.3105ZM5.79642 1.76107C5.79642 1.35302 6.09709 1.06667 6.52662 1.06667H9.03937C9.47606 1.06667 9.77673 1.35302 9.77673 1.76107V2.76331H5.79642V1.76107ZM4.61521 14.9262C4.2 14.9262 3.89217 14.6112 3.87069 14.196L3.36958 3.8443H12.1821L11.7096 14.196C11.6881 14.6183 11.3875 14.9262 10.9651 14.9262H4.61521ZM9.91275 13.6662C10.149 13.6662 10.328 13.4729 10.3351 13.2009L10.5499 5.64116C10.557 5.36913 10.3709 5.16868 10.1275 5.16868C9.90559 5.16868 9.71946 5.37629 9.7123 5.634L9.49754 13.2009C9.49038 13.4586 9.66935 13.6662 9.91275 13.6662ZM5.66756 13.6662C5.91096 13.6662 6.08993 13.4586 6.08277 13.2009L5.86801 5.634C5.86085 5.37629 5.66756 5.16868 5.44564 5.16868C5.20224 5.16868 5.02327 5.36913 5.03043 5.64116L5.25235 13.2009C5.25951 13.4729 5.43132 13.6662 5.66756 13.6662ZM8.22327 13.2009V5.634C8.22327 5.37629 8.02998 5.16868 7.79374 5.16868C7.55749 5.16868 7.35705 5.37629 7.35705 5.634V13.2009C7.35705 13.4586 7.55749 13.6662 7.79374 13.6662C8.02282 13.6662 8.22327 13.4586 8.22327 13.2009Z"/>`,
    edit: `
    <g clip-path="url(#clip0)">
      <path d="M14.6421 0.718945C13.6835 -0.239648 12.1294 -0.239648 11.1708 0.718945L1.43958 10.4502C1.37289 10.5169 1.32473 10.5995 1.29959 10.6903L0.0199041 15.3103C-0.0327237 15.4997 0.0207563 15.7025 0.159677 15.8417C0.29881 15.9806 0.501651 16.0341 0.691068 15.9816L5.31102 14.7017C5.40179 14.6766 5.48446 14.6284 5.55115 14.5618L15.2822 4.8303C16.2393 3.87107 16.2393 2.31823 15.2822 1.359L14.6421 0.718945ZM2.62807 10.8047L10.5923 2.84025L13.1609 5.40878L5.19639 13.3733L2.62807 10.8047ZM2.115 11.8343L4.16706 13.8865L1.32857 14.673L2.115 11.8343ZM14.5109 4.059L13.9324 4.63748L11.3636 2.06873L11.9423 1.49025C12.4748 0.957794 13.3381 0.957794 13.8706 1.49025L14.5109 2.13031C15.0425 2.6634 15.0425 3.52611 14.5109 4.059Z"/>
    </g>
    <defs>
      <clipPath id="clip0">
        <rect width="16" height="16" fill="white"/>
      </clipPath>
    </defs>`,
    filter: `
    <rect x="5" y="2" width="20" height="2" rx="1" transform="rotate(90 5 2)" fill="currentColor"/>
    <rect x="13" y="2" width="20" height="2" rx="1" transform="rotate(90 13 2)" fill="currentColor"/>
    <rect x="21" y="2" width="20" height="2" rx="1" transform="rotate(90 21 2)" fill="currentColor"/>
    <circle cx="12" cy="8" r="3" fill="#F6F7F8" stroke="currentColor" stroke-width="2"/>
    <circle cx="4" cy="16" r="3" fill="#F6F7F8" stroke="currentColor" stroke-width="2"/>
    <circle cx="20" cy="15" r="3" fill="#F6F7F8" stroke="currentColor" stroke-width="2"/>
  `,
    pdf: `
    <path d="M19.7002 7.12964C19.4349 7.12964 19.1806 7.02428 18.993 6.83675C18.8055 6.64921 18.7002 6.39486 18.7002 6.12964V4.79964C18.6563 4.06734 18.3247 3.38206 17.7778 2.89316C17.2308 2.40426 16.5128 2.15138 15.7802 2.18964H8.57016C7.83922 2.1541 7.12375 2.40821 6.57897 2.89682C6.03419 3.38544 5.70404 4.06916 5.66016 4.79964V6.12964C5.66016 6.39486 5.5548 6.64921 5.36726 6.83675C5.17973 7.02428 4.92537 7.12964 4.66016 7.12964C4.39494 7.12964 4.14059 7.02428 3.95305 6.83675C3.76551 6.64921 3.66016 6.39486 3.66016 6.12964V4.79964C3.70194 3.53789 4.2422 2.34417 5.16255 1.48005C6.08291 0.615927 7.30828 0.151896 8.57016 0.18964H15.7802C17.043 0.151857 18.2695 0.615577 19.1914 1.47943C20.1133 2.34328 20.6558 3.537 20.7002 4.79964V6.12964C20.7002 6.39486 20.5948 6.64921 20.4073 6.83675C20.2197 7.02428 19.9654 7.12964 19.7002 7.12964Z" fill="currentColor"/>
    <path d="M15.7806 23.8108H8.57061C7.45557 23.8365 6.36585 23.4764 5.48576 22.7913C4.60566 22.1061 3.98919 21.1381 3.74061 20.0508C3.6907 19.7909 3.74582 19.5219 3.89389 19.3026C4.04197 19.0833 4.27093 18.9316 4.53061 18.8808C4.78904 18.8306 5.05682 18.8844 5.27586 19.0304C5.49489 19.1765 5.64752 19.403 5.70061 19.6608C5.85878 20.2946 6.23058 20.8544 6.75336 21.2461C7.27614 21.6377 7.91794 21.8371 8.57061 21.8108H15.7806C16.4382 21.8395 17.0851 21.6373 17.6093 21.2391C18.1335 20.841 18.5018 20.272 18.6506 19.6308C18.6997 19.3656 18.8521 19.1307 19.0743 18.9779C19.2965 18.825 19.5704 18.7667 19.8356 18.8158C20.1008 18.8649 20.3357 19.0173 20.4885 19.2395C20.6414 19.4617 20.6997 19.7356 20.6506 20.0008C20.4126 21.1051 19.795 22.0911 18.9052 22.7872C18.0154 23.4833 16.9098 23.8455 15.7806 23.8108Z" fill="currentColor"/>
    <path d="M3.12891 16.9991C2.86369 16.9991 2.60934 16.8938 2.4218 16.7062C2.23426 16.5187 2.12891 16.2644 2.12891 15.9991V9.99914C2.12891 9.73392 2.23426 9.47957 2.4218 9.29203C2.60934 9.1045 2.86369 8.99914 3.12891 8.99914H5.31891C5.68663 8.97673 6.05504 9.02981 6.40148 9.15511C6.74792 9.28042 7.06505 9.47529 7.33336 9.72774C7.60166 9.98019 7.81547 10.2849 7.96161 10.6231C8.10775 10.9612 8.18315 11.3257 8.18315 11.6941C8.18315 12.0625 8.10775 12.427 7.96161 12.7652C7.81547 13.1034 7.60166 13.4081 7.33336 13.6605C7.06505 13.913 6.74792 14.1079 6.40148 14.2332C6.05504 14.3585 5.68663 14.4116 5.31891 14.3891H4.12891V15.9991C4.12891 16.2644 4.02355 16.5187 3.83601 16.7062C3.64848 16.8938 3.39412 16.9991 3.12891 16.9991ZM4.12891 12.4391H5.31891C5.41717 12.4509 5.51683 12.4418 5.61129 12.4123C5.70576 12.3827 5.79289 12.3335 5.86693 12.2678C5.94098 12.2021 6.00025 12.1215 6.04084 12.0312C6.08143 11.941 6.10242 11.8431 6.10242 11.7441C6.10242 11.6452 6.08143 11.5473 6.04084 11.457C6.00025 11.3668 5.94098 11.2861 5.86693 11.2205C5.79289 11.1548 5.70576 11.1056 5.61129 11.076C5.51683 11.0465 5.41717 11.0373 5.31891 11.0491H4.12891V12.4391Z" fill="currentColor"/>
    <path d="M11.2812 17H10.2812C10.016 17 9.76168 16.8946 9.57414 16.7071C9.38661 16.5196 9.28125 16.2652 9.28125 16V10C9.28125 9.73478 9.38661 9.48043 9.57414 9.29289C9.76168 9.10536 10.016 9 10.2812 9H11.2812C12.0294 9.0053 12.7599 9.2285 13.3832 9.6423C14.0066 10.0561 14.4959 10.6426 14.7913 11.33C15.0139 11.8428 15.1288 12.3959 15.1288 12.955C15.1288 13.5141 15.0139 14.0672 14.7913 14.58C14.5085 15.2835 14.0249 15.8882 13.4007 16.3186C12.7765 16.7489 12.0393 16.9859 11.2812 17ZM11.2812 15C11.6554 14.9962 12.0197 14.8796 12.3265 14.6655C12.6334 14.4515 12.8685 14.1498 13.0013 13.8C13.1099 13.542 13.1658 13.2649 13.1658 12.985C13.1658 12.7051 13.1099 12.428 13.0013 12.17C12.862 11.825 12.623 11.5294 12.3148 11.321C12.0066 11.1126 11.6433 11.0008 11.2713 11L11.2812 15Z" fill="currentColor"/>
    <path d="M17.4219 17C17.1567 17 16.9023 16.8946 16.7148 16.7071C16.5272 16.5196 16.4219 16.2652 16.4219 16V10C16.4219 9.73478 16.5272 9.48043 16.7148 9.29289C16.9023 9.10536 17.1567 9 17.4219 9H21.2319C21.4971 9 21.7514 9.10536 21.939 9.29289C22.1265 9.48043 22.2319 9.73478 22.2319 10C22.2319 10.2652 22.1265 10.5196 21.939 10.7071C21.7514 10.8946 21.4971 11 21.2319 11H18.4219V16C18.4219 16.2652 18.3165 16.5196 18.129 16.7071C17.9414 16.8946 17.6871 17 17.4219 17Z" fill="currentColor"/>
    <path d="M20.3319 14.3906H17.4219C17.1567 14.3906 16.9023 14.2853 16.7148 14.0977C16.5272 13.9102 16.4219 13.6558 16.4219 13.3906C16.4219 13.1254 16.5272 12.8711 16.7148 12.6835C16.9023 12.496 17.1567 12.3906 17.4219 12.3906H20.3319C20.5971 12.3906 20.8514 12.496 21.039 12.6835C21.2265 12.8711 21.3319 13.1254 21.3319 13.3906C21.3319 13.6558 21.2265 13.9102 21.039 14.0977C20.8514 14.2853 20.5971 14.3906 20.3319 14.3906Z" fill="currentColor"/>
  `,
    copy: `
    <path d="M13.1416 18.4894H6.46156C5.37152 18.4894 4.32613 18.0564 3.55535 17.2856C2.78458 16.5148 2.35156 15.4694 2.35156 14.3794V5.46937C2.35156 4.37933 2.78458 3.33394 3.55535 2.56317C4.32613 1.79239 5.37152 1.35938 6.46156 1.35938H13.1416C14.2316 1.35938 15.277 1.79239 16.0478 2.56317C16.8185 3.33394 17.2516 4.37933 17.2516 5.46937V14.3794C17.2516 15.4694 16.8185 16.5148 16.0478 17.2856C15.277 18.0564 14.2316 18.4894 13.1416 18.4894ZM6.46156 3.35937C5.90196 3.35937 5.36527 3.58168 4.96957 3.97738C4.57387 4.37308 4.35156 4.90977 4.35156 5.46937V14.3794C4.35419 14.9382 4.57734 15.4733 4.97247 15.8685C5.36761 16.2636 5.90277 16.4867 6.46156 16.4894H13.1416C13.7004 16.4867 14.2355 16.2636 14.6307 15.8685C15.0258 15.4733 15.2489 14.9382 15.2516 14.3794V5.46937C15.2516 4.90977 15.0293 4.37308 14.6336 3.97738C14.2379 3.58168 13.7012 3.35937 13.1416 3.35937H6.46156Z" fill="currentColor"/>
    <path d="M17.54 22.6398H10.86C9.76996 22.6398 8.72457 22.2067 7.95379 21.436C7.18302 20.6652 6.75 19.6198 6.75 18.5298V17.5298H8.75V18.5298C8.75 19.0894 8.9723 19.6261 9.368 20.0218C9.76371 20.4175 10.3004 20.6398 10.86 20.6398H17.54C18.0996 20.6398 18.6363 20.4175 19.032 20.0218C19.4277 19.6261 19.65 19.0894 19.65 18.5298V9.61977C19.6474 9.06097 19.4242 8.52581 19.0291 8.13068C18.634 7.73554 18.0988 7.5124 17.54 7.50977H16.25V5.50977H17.54C18.63 5.50977 19.6754 5.94278 20.4462 6.71356C21.217 7.48433 21.65 8.52973 21.65 9.61977V18.5298C21.65 19.6198 21.217 20.6652 20.4462 21.436C19.6754 22.2067 18.63 22.6398 17.54 22.6398Z" fill="currentColor"/>
    <path d="M11.59 8.78906H8C7.73478 8.78906 7.48043 8.68371 7.29289 8.49617C7.10536 8.30863 7 8.05428 7 7.78906C7 7.52385 7.10536 7.26949 7.29289 7.08196C7.48043 6.89442 7.73478 6.78906 8 6.78906H11.58C11.8452 6.78906 12.0996 6.89442 12.2871 7.08196C12.4746 7.26949 12.58 7.52385 12.58 7.78906C12.58 8.05428 12.4746 8.30863 12.2871 8.49617C12.0996 8.68371 11.8452 8.78906 11.58 8.78906H11.59Z" fill="currentColor"/>
    <path d="M11.59 12.5801H8C7.73478 12.5801 7.48043 12.4747 7.29289 12.2872C7.10536 12.0996 7 11.8453 7 11.5801C7 11.3149 7.10536 11.0605 7.29289 10.873C7.48043 10.6854 7.73478 10.5801 8 10.5801H11.58C11.8452 10.5801 12.0996 10.6854 12.2871 10.873C12.4746 11.0605 12.58 11.3149 12.58 11.5801C12.58 11.8453 12.4746 12.0996 12.2871 12.2872C12.0996 12.4747 11.8452 12.5801 11.58 12.5801H11.59Z" fill="currentColor"/>
  `,
    arrowUp: `
    <path d="M13.5 11L8.21154 5L2.5 11" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  `,
    addEmployee: `<g clip-path="url(#clip0)"><mask id="path-1-inside-1" fill="white"><path d="M3.5 5V7H5.5V8H3.5V10H2.5V8H0.5V7H2.5V5H3.5Z"/></mask><path d="M3.5 5V7H5.5V8H3.5V10H2.5V8H0.5V7H2.5V5H3.5Z" fill="transparent"/><path d="M3.5 7H2V8.5H3.5V7ZM3.5 5H5V3.5H3.5V5ZM2.5 5V3.5H1V5H2.5ZM2.5 7V8.5H4V7H2.5ZM0.5 7V5.5H-1V7H0.5ZM0.5 8H-1V9.5H0.5V8ZM2.5 8H4V6.5H2.5V8ZM2.5 10H1V11.5H2.5V10ZM3.5 10V11.5H5V10H3.5ZM3.5 8V6.5H2V8H3.5ZM5.5 8V9.5H7V8H5.5ZM5.5 7H7V5.5H5.5V7ZM5 7V5H2V7H5ZM3.5 3.5H2.5V6.5H3.5V3.5ZM1 5V7H4V5H1ZM2.5 5.5H0.5V8.5H2.5V5.5ZM-1 7V8H2V7H-1ZM0.5 9.5H2.5V6.5H0.5V9.5ZM1 8V10H4V8H1ZM2.5 11.5H3.5V8.5H2.5V11.5ZM5 10V8H2V10H5ZM3.5 9.5H5.5V6.5H3.5V9.5ZM7 8V7H4V8H7ZM5.5 5.5H3.5V8.5H5.5V5.5Z" fill="#666C72" mask="url(#path-1-inside-1)"/><path d="M5.16602 12.6667C5.16602 10.8933 8.71935 10 10.4993 10C12.2793 10 15.8327 10.8933 15.8327 12.6667V14H5.16602V12.6667Z" fill="transparent" stroke="#666C72" stroke-width="1.2"/><path d="M13.1673 4.66667C13.1673 6.14 11.974 7.33333 10.5007 7.33333C9.02732 7.33333 7.83398 6.14 7.83398 4.66667C7.83398 3.19333 9.02732 2 10.5007 2C11.974 2 13.1673 3.19333 13.1673 4.66667Z" fill="transparent" stroke="#666C72" stroke-width="1.2"/></g><defs><clipPath id="clip0"><rect width="16" height="16" fill="white" transform="translate(0.5)"/></clipPath></defs>`
};


/***/ }),

/***/ 56209:
/*!***************************************************************!*\
  !*** ./src/app/shared/input-shadow/input-shadow.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputShadowComponent": () => (/* binding */ InputShadowComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _input_shadow_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input-shadow.component.html?ngResource */ 62350);
/* harmony import */ var _input_shadow_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input-shadow.component.scss?ngResource */ 83886);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




const specialCharacters = ' ()•';
let InputShadowComponent = class InputShadowComponent {
    constructor(cd) {
        this.cd = cd;
        this.shadowArr = [];
    }
    ngOnInit() {
        // if (this.shadow) {
        //   this.shadowArr = this.checkShadow(this.value, this.shadow);
        // }
    }
    ngOnChanges() {
        if (this.shadow) {
            this.shadowArr = this.checkShadow(this.value, this.shadow);
            this.cd.markForCheck();
        }
    }
    checkShadow(inputValue = '', shadow) {
        const result = [];
        let valueIndex = 0;
        let i = 0;
        for (; i < shadow.length; i++) {
            const maskChar = shadow[i];
            let inputChar;
            if (specialCharacters.includes(maskChar)) {
                inputChar = maskChar;
            }
            else {
                inputChar = inputValue && inputValue[valueIndex];
                valueIndex++;
            }
            const resultChar = inputChar || maskChar;
            result.push({
                invisible: resultChar === inputChar,
                placeholder: resultChar === '_',
                value: resultChar,
            });
        }
        return result;
    }
};
InputShadowComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectorRef }
];
InputShadowComponent.propDecorators = {
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    shadow: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    hidden: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }]
};
InputShadowComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-input-shadow',
        template: _input_shadow_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectionStrategy.OnPush,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewEncapsulation.None,
        styles: [_input_shadow_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InputShadowComponent);



/***/ }),

/***/ 65243:
/*!*********************************************************************!*\
  !*** ./src/app/shared/input/amount-input/amount-input.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AmountInputComponent": () => (/* binding */ AmountInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _amount_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amount-input.component.html?ngResource */ 24264);
/* harmony import */ var _amount_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./amount-input.component.scss?ngResource */ 22519);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _shared_pipes_cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/pipes/cur-symbol.pipe */ 31308);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../input.component */ 50235);
var AmountInputComponent_1;










let AmountInputComponent = AmountInputComponent_1 = class AmountInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_5__.JInputComponent {
    constructor(maskedService, maskPipe, cdr, curSymbolPipe) {
        super(maskedService);
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.cdr = cdr;
        this.curSymbolPipe = curSymbolPipe;
        this.label = 'SHARED.AMOUNT';
        this.minAmount = 0;
        this.currency = _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_3__.CURRENCY.KZT;
        this.type = _input_component__WEBPACK_IMPORTED_MODULE_5__.InputType.text;
        this.maskType = 'amountSeparated';
        this.regexStr = '^[0-9 ,]*$';
        this.isMinAmountShown = false;
    }
    onKeyPress(event) {
        return new RegExp(this.regexStr).test(event.key);
    }
    onPaste(event) {
        event.preventDefault();
        const clipboardData = event.clipboardData || window.clipboardData;
        const pastedText = clipboardData.getData('text');
        const toPasteRaw = this.maskedService.getMaskedAmount(pastedText);
        this.formControl.setValue(toPasteRaw);
    }
    ngOnInit() {
        if (typeof this.formControl.value != 'string') {
            this.formControl.setValue(`${this.formControl.value}`);
        }
        this.currencySymbol = this.curSymbolPipe.transform(this.currency);
        this.maskConfig = this.maskedService.getConfig(this.maskType, ` ${this.currencySymbol}`);
        this.cdr.detectChanges();
        const formSubscription = this.formControl.valueChanges.subscribe((value) => {
            if (this.unmaskedValue) {
                this.valueChanged.emit(this.unmaskedValue);
            }
        });
        this.subscription.add(formSubscription);
    }
    ngOnChanges(changes) {
        if (changes.currency) {
            const prevPristine = this.formControl.pristine;
            this.currencySymbol = this.curSymbolPipe.transform(this.currency);
            if (prevPristine) {
                this.formControl.markAsPristine();
            }
            this.cdr.detectChanges();
        }
        else {
            this.cdr.detectChanges();
        }
    }
    onBackspaceClick(event) {
        var _a;
        const selectionMaxIndex = this.getMaskedAmount(this.formControl.value).length - 2;
        if (event.target.selectionEnd >= selectionMaxIndex &&
            event.target.selectionEnd - event.target.selectionStart <= 2) {
            this.formControl.setValue((_a = this.formControl.value) === null || _a === void 0 ? void 0 : _a.substring(0, this.formControl.value.length - 1));
        }
    }
    onFocus() {
        this.isFocused = true;
        this.isMinAmountShown = true;
        this.focused.emit();
        this.cdr.detectChanges();
    }
    onBlur() {
        this.isFocused = false;
        this.blurred.emit();
        setTimeout(() => {
            if (!this.isFocused) {
                this.isMinAmountShown = false;
            }
            this.cdr.detectChanges();
        }, 200);
    }
    setCursorToEnd(event) {
        // const selectionMaxIndex = this.getMaskedAmount(this.formControl.value)
        //   .length;
        // if (event.target.selectionEnd > selectionMaxIndex) {
        //   this.input.nativeElement.setSelectionRange(
        //     event.target.selectionStart,
        //     selectionMaxIndex
        //   );
        // }
    }
    setMinAmount(event) {
        event.preventDefault();
        event.stopPropagation();
        this.formControl.setValue(`${this.minAmount}`);
        this.cdr.detectChanges();
    }
    get isFilled() {
        var _a;
        return ((_a = `${this.formControl.value}`) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
    get isClearEnabled() {
        return this.unmaskedValue && this.isMinAmountShown;
    }
    get unmaskedValue() {
        return this.maskedService.getNumberedAmount(this.formControl.value);
    }
    get maskedMinAmount() {
        return this.getMaskedAmount(this.minAmount);
    }
    getMaskedAmount(amount) {
        return `${this.maskedService.formatAmount(amount)} ${this.currencySymbol}`;
    }
};
AmountInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_6__.MaskPipe },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectorRef },
    { type: _shared_pipes_cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_4__.CurSymbolPipe }
];
AmountInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input }],
    minAmount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input }],
    currency: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input }],
    type: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Input }],
    onKeyPress: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.HostListener, args: ['keypress', ['$event'],] }]
};
AmountInputComponent = AmountInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'j-amount-input',
        template: _amount_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.forwardRef)(() => AmountInputComponent_1),
                multi: true,
            },
        ],
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectionStrategy.OnPush,
        styles: [_amount_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], AmountInputComponent);



/***/ }),

/***/ 6697:
/*!***********************************************************************!*\
  !*** ./src/app/shared/input/country-codes/country-codes.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CountryCodesComponent": () => (/* binding */ CountryCodesComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _country_codes_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./country-codes.component.html?ngResource */ 89409);
/* harmony import */ var _country_codes_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./country-codes.component.scss?ngResource */ 15201);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);





let CountryCodesComponent = class CountryCodesComponent {
    constructor(modal) {
        this.modal = modal;
        this.searchText = '';
    }
    onQueryChange(event) {
        this.searchText = event;
    }
    onCodeSelected(el) {
        this.modal.close(el);
    }
    get filteredCountryCodes() {
        var _a;
        return (_a = this.countryCodes) === null || _a === void 0 ? void 0 : _a.filter(el => el.country.toLowerCase().includes(this.searchText.toLowerCase()) || el.code.includes(this.searchText));
    }
};
CountryCodesComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbActiveModal }
];
CountryCodesComponent.propDecorators = {
    countryCodes: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
CountryCodesComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-country-codes',
        template: _country_codes_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_country_codes_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CountryCodesComponent);



/***/ }),

/***/ 64397:
/*!*****************************************************************!*\
  !*** ./src/app/shared/input/date-input/date-input.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateInputComponent": () => (/* binding */ DateInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _date_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-input.component.html?ngResource */ 48169);
/* harmony import */ var _date_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date-input.component.scss?ngResource */ 79910);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _core_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/components */ 1657);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _filter_filter_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @filter/filter.model */ 41359);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../input.component */ 50235);
var DateInputComponent_1;












let DateInputComponent = DateInputComponent_1 = class DateInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_6__.JInputComponent {
    constructor(i18n, maskedService, datePipe) {
        super(maskedService);
        this.i18n = i18n;
        this.maskedService = maskedService;
        this.datePipe = datePipe;
        this.name = 'date';
        this.label = 'SHARED.DATE';
        this.maskType = 'date';
        this.isErrorsHidden = false;
        this.isCalendarShown = true;
        this.minDate = new Date(1991, 1, 1);
        this.maxDate = new Date();
    }
    ngOnInit() {
        this.maskConfig = this.maskedService.getConfig(this.maskType);
    }
    ngOnChanges(changes) { }
    onDateSelect(pickedDate) {
        const newDate = new Date(pickedDate.year, pickedDate.month - 1, pickedDate.day);
        const newValue = this.datePipe.transform(newDate, `dd.MM.yyyy`);
        this.formControl.setValue(newValue);
        this.hideDatepicker();
    }
    onKeyUp() {
        var _a, _b;
        this.errorText = '';
        if ((_a = this.formControl.errors) === null || _a === void 0 ? void 0 : _a.max) {
            this.errorText = 'ERRORS.INVALID_INPUT';
        }
        if (!this.formControl.valid) {
            return;
        }
        const [day, month, year] = this.formControl.value.split('.');
        if (this.isDateValid()) {
            (_b = this.datepicker) === null || _b === void 0 ? void 0 : _b.navigateTo({
                day: parseInt(day),
                month: parseInt(month),
                year: parseInt(year),
            });
            this.datepickerModel = {
                day: parseInt(day),
                month: parseInt(month),
                year: parseInt(year),
            };
        }
        else {
            this.errorText = 'ERRORS.INVALID_INPUT';
        }
    }
    showDatepicker() {
        var _a;
        (_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.open();
    }
    hideDatepicker() {
        var _a;
        (_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.close();
    }
    onFocus() {
        super.onFocus();
        this.showDatepicker();
    }
    get ngbMinDate() {
        const mapped = {
            day: this.minDate.getDate(),
            month: this.minDate.getMonth() + 1,
            year: this.minDate.getFullYear(),
        };
        return mapped;
    }
    get ngbMaxDate() {
        const mapped = {
            day: this.maxDate.getDate(),
            month: this.maxDate.getMonth() + 1,
            year: this.maxDate.getFullYear(),
        };
        return mapped;
    }
    setDisabledState(state) {
        this.isDisabled = state;
    }
    isDateValid() {
        const newDate = moment__WEBPACK_IMPORTED_MODULE_2__(this.formControl.value, _filter_filter_model__WEBPACK_IMPORTED_MODULE_5__.PERIOD_FORMAT_INPUT);
        const maxDate = moment__WEBPACK_IMPORTED_MODULE_2__(this.maxDate);
        const minDate = moment__WEBPACK_IMPORTED_MODULE_2__(this.minDate);
        return (newDate.isValid() &&
            newDate.isSameOrBefore(maxDate) &&
            newDate.isSameOrAfter(minDate));
    }
};
DateInputComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbDatepickerI18n },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_4__.MaskedService },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__.DatePipe }
];
DateInputComponent.propDecorators = {
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    maskType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    isErrorsHidden: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    isCalendarShown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    minDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    maxDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }],
    datepicker: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild, args: ['datepicker',] }],
    dropdown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.ViewChild, args: ['dropdown',] }]
};
DateInputComponent = DateInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
        selector: 'j-date-input',
        template: _date_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.forwardRef)(() => DateInputComponent_1),
                multi: true,
            },
            { provide: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbDatepickerI18n, useClass: _core_components__WEBPACK_IMPORTED_MODULE_3__.CustomDatepickerI18n },
        ],
        styles: [_date_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DateInputComponent);



/***/ }),

/***/ 81522:
/*!*************************************************************************!*\
  !*** ./src/app/shared/input/dropdown-input/dropdown-input.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KEYBOARD_KEY": () => (/* binding */ KEYBOARD_KEY),
/* harmony export */   "DropdownInputComponent": () => (/* binding */ DropdownInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _dropdown_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dropdown-input.component.html?ngResource */ 39778);
/* harmony import */ var _dropdown_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dropdown-input.component.scss?ngResource */ 31410);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/animations */ 31631);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);





var KEYBOARD_KEY;
(function (KEYBOARD_KEY) {
    KEYBOARD_KEY["ARROW_DOWN"] = "ArrowDown";
    KEYBOARD_KEY["ARROW_UP"] = "ArrowUp";
    KEYBOARD_KEY["ENTER"] = "Enter";
    KEYBOARD_KEY["ESC"] = "Escape";
    KEYBOARD_KEY["SPACE"] = "Space";
})(KEYBOARD_KEY || (KEYBOARD_KEY = {}));
let DropdownInputComponent = class DropdownInputComponent {
    constructor() {
        this.isLoading = false;
        this.hasError = false;
        this.isDisabled = false;
        this.isLabelHidden = false;
        this.labelShowAnyWay = false;
        this.options = [];
        this.emptyLabel = 'ACCOUNTS.EMPTY';
        this.nonClosingAfterSelection = false;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.hoveredItem = null;
        this.isCollapsed = false;
    }
    clearSelected() {
        this.selectedItem = null;
    }
    selectItem(item) {
        if (!item) {
            return;
        }
        this.selectedItem = item;
        this.isCollapsed = this.isCollapsed = !!this.nonClosingAfterSelection;
        ;
    }
    isBlocked(item) {
        if (!this.blockedFn) {
            return false;
        }
        return this.blockedFn(item);
    }
    handleKeyDown(event) {
        if (!this.isCollapsed) {
            return;
        }
        switch (event.key) {
            case KEYBOARD_KEY.ARROW_DOWN:
                event.preventDefault();
                this.handleArrowDown();
                break;
            case KEYBOARD_KEY.ARROW_UP:
                event.preventDefault();
                this.handleArrowUp();
                break;
            case KEYBOARD_KEY.ENTER:
                event.preventDefault();
                this.handleEnter();
                break;
            default:
                this.close();
                break;
        }
    }
    close() {
        this.isCollapsed = false;
    }
    toggleCollapse() {
        if (this.isDisabled) {
            return;
        }
        this.isCollapsed = !this.isCollapsed;
    }
    onClickOutside() {
        this.isCollapsed = false;
    }
    onSelect(item) {
        if (this.isBlocked(item)) {
            return;
        }
        this.selectItem(item);
        this.selected.emit(item);
    }
    get selectableOptions() {
        return this.options.filter((option) => !this.isBlocked(option));
    }
    handleArrowDown() {
        if (!this.hoveredItem) {
            this.hoveredItem = this.selectableOptions[0];
        }
        else {
            let index = this.selectableOptions.indexOf(this.hoveredItem);
            if (index < this.selectableOptions.length - 1) {
                this.hoveredItem = this.selectableOptions[++index];
            }
            else {
                this.hoveredItem = this.selectableOptions[0];
            }
        }
    }
    handleArrowUp() {
        if (!this.hoveredItem) {
            this.hoveredItem = this.selectableOptions[0];
        }
        else {
            let index = this.selectableOptions.indexOf(this.hoveredItem);
            if (index > 0) {
                this.hoveredItem = this.selectableOptions[--index];
            }
            else {
                this.hoveredItem = this.selectableOptions[this.options.length - 1];
            }
        }
    }
    handleEnter() {
        if (!this.hoveredItem) {
            return;
        }
        this.onSelect(this.hoveredItem);
    }
};
DropdownInputComponent.ctorParameters = () => [];
DropdownInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    inputClass: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    hasError: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isDisabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isLabelHidden: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    labelShowAnyWay: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    options: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    emptyLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    blockedFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    nonClosingAfterSelection: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    selectedItem: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    selected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }],
    selectedTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChild, args: ['selectedTemplate', { static: false },] }],
    optionTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ContentChild, args: ['optionTemplate', { static: false },] }],
    handleKeyDown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostListener, args: ['document:keydown', ['$event'],] }]
};
DropdownInputComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-dropdown-input',
        template: _dropdown_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewEncapsulation.None,
        animations: [
            (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.trigger)('smoothCollapse', [
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('initial', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
                    height: '0',
                    overflow: 'hidden',
                    opacity: '0.5',
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
                    overflow: 'auto',
                    opacity: '1',
                    maxHeight: '300px',
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)('initial=>final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)('300ms ease-in-out')),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)('final=>initial', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)('300ms ease-in-out')),
            ]),
        ],
        styles: [_dropdown_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DropdownInputComponent);



/***/ }),

/***/ 41572:
/*!*****************************************************************!*\
  !*** ./src/app/shared/input/iban-input/iban-input.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IbanInputComponent": () => (/* binding */ IbanInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _iban_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iban-input.component.html?ngResource */ 45834);
/* harmony import */ var _iban_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iban-input.component.scss?ngResource */ 39291);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _shared_pipes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/pipes */ 39843);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../input.component */ 50235);
var IbanInputComponent_1;









let IbanInputComponent = IbanInputComponent_1 = class IbanInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_4__.JInputComponent {
    constructor(maskedService, maskPipe, bankFromAccountPipe) {
        super(maskedService);
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.bankFromAccountPipe = bankFromAccountPipe;
        this.label = 'IBAN';
        this.isLoading = false;
        this.maskType = 'iban';
    }
    ngOnInit() {
        super.ngOnInit();
    }
    onPaste(event) {
        event.preventDefault();
        const clipboardData = event.clipboardData || window.clipboardData;
        const pastedText = clipboardData.getData('text');
        const toPasteRaw = this.maskedService.getPastedIban(pastedText);
        this.formControl.setValue(this.getMaskedIban(toPasteRaw));
    }
    onBackspaceClick(event) {
        const selectionMinIndex = this.maskConfig.prefix.length;
        if (event.target.selectionStart < selectionMinIndex) {
            this.input.nativeElement.setSelectionRange(selectionMinIndex, event.target.selectionEnd);
        }
    }
    onKeyUp() {
        if (this.hasInternalError) {
            this.triggerHelperAnimation();
        }
    }
    get internalError() {
        if (this.hasWrongBicError) {
            return 'ERRORS.WRONG_BIC';
        }
        else if (this.hasMaxLengthError) {
            return 'ERRORS.IBAN_LENGTH';
        }
        return null;
    }
    get hasInternalError() {
        return this.hasWrongBicError || this.hasMaxLengthError;
    }
    get hasWrongBicError() {
        var _a, _b;
        return !((_a = this.formControl.errors) === null || _a === void 0 ? void 0 : _a.mask) && ((_b = this.formControl.errors) === null || _b === void 0 ? void 0 : _b.bankExist);
    }
    get hasMaxLengthError() {
        var _a;
        return ((_a = this.formControl.errors) === null || _a === void 0 ? void 0 : _a.mask) && this.hasError;
    }
    get shadow() {
        const maskedValue = this.maskPipe.transform(this.formControl.value, this.maskConfig.mask);
        return this.maskedService.getShadow(this.maskType, maskedValue);
    }
    get hasBankLogo() {
        return this.bic ? true : false;
    }
    get isShadowHidden() {
        return !this.isFilled && !this.isFocused;
    }
    get isPrefixHidden() {
        return !this.isFilled && !this.isFocused;
    }
    get bic() {
        const fullIban = this.getFullIban(this.formControl.value);
        return this.bankFromAccountPipe.transform(fullIban, 'bic');
    }
    clear() {
        if (this.isDisabled) {
            return;
        }
        this.formControl.setValue('');
        const selectionIndex = this.formControl.value.length + this.maskConfig.prefix.length;
        this.focus(selectionIndex);
    }
    getFullIban(ibanWithoutPrefix) {
        return `${this.maskConfig.prefix}${ibanWithoutPrefix}`;
    }
    getMaskedIban(unmaskedIban) {
        const maskedValue = this.maskPipe.transform(unmaskedIban, this.maskConfig.mask);
        return maskedValue;
    }
};
IbanInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_5__.MaskPipe },
    { type: _shared_pipes__WEBPACK_IMPORTED_MODULE_3__.BankFromAccountPipe }
];
IbanInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    maskType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }]
};
IbanInputComponent = IbanInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-iban-input',
        template: _iban_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.forwardRef)(() => IbanInputComponent_1),
                multi: true,
            },
        ],
        styles: [_iban_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], IbanInputComponent);



/***/ }),

/***/ 80850:
/*!***************************************************************!*\
  !*** ./src/app/shared/input/iin-input/iin-input.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IinInputComponent": () => (/* binding */ IinInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _iin_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iin-input.component.html?ngResource */ 84671);
/* harmony import */ var _iin_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iin-input.component.scss?ngResource */ 68735);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../input.component */ 50235);
var IinInputComponent_1;








let IinInputComponent = IinInputComponent_1 = class IinInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_3__.JInputComponent {
    constructor(maskedService, maskPipe) {
        super(maskedService);
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.label = 'SHARED.IIN';
        this.isLoading = false;
        this.maskType = 'iin';
        this.iinMaskConfig = this.maskedService.getConfig('iin');
    }
    onPaste(event) {
        const clipboardData = event.clipboardData || window.clipboardData;
        const pastedText = clipboardData.getData('text');
        const maskedText = this.maskPipe.transform(pastedText, this.iinMaskConfig.mask);
        setTimeout(() => {
            this.input.nativeElement.setSelectionRange(maskedText.length, maskedText.length);
        }, 0);
    }
    ngOnInit() {
        super.ngOnInit();
    }
    ngOnChanges(changes) {
        if (this.nameSuffix &&
            changes.iinName &&
            changes.iinName.currentValue == '' &&
            changes.iinName.previousValue != '') {
            this.iinName = '';
        }
    }
    get isShadowHidden() {
        return (this.isValueEmpty() && !this.isFocused) || this.isValueMaxWidth();
    }
    get shadow() {
        const maskedValue = this.maskPipe.transform(this.formControl.value, this.iinMaskConfig.mask);
        return this.maskedService.getShadow(this.maskType, maskedValue);
    }
    isValueEmpty() {
        return !this.formControl.value || this.formControl.value.length === 0;
    }
    isValueMaxWidth() {
        return (this.formControl.value &&
            this.formControl.value.length === this.maskConfig.shadow.length);
    }
};
IinInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_4__.MaskPipe }
];
IinInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    isLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    maskType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    iinName: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    nameSuffix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewChild, args: ['nameSuffix', { static: true },] }]
};
IinInputComponent = IinInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-iin-input',
        template: _iin_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(() => IinInputComponent_1),
                multi: true,
            },
        ],
        styles: [_iin_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], IinInputComponent);



/***/ }),

/***/ 66978:
/*!***************************************!*\
  !*** ./src/app/shared/input/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "INPUT_COMPONENTS": () => (/* binding */ INPUT_COMPONENTS),
/* harmony export */   "AmountInputComponent": () => (/* reexport safe */ _amount_input_amount_input_component__WEBPACK_IMPORTED_MODULE_0__.AmountInputComponent),
/* harmony export */   "DateInputComponent": () => (/* reexport safe */ _date_input_date_input_component__WEBPACK_IMPORTED_MODULE_1__.DateInputComponent),
/* harmony export */   "IinInputComponent": () => (/* reexport safe */ _iin_input_iin_input_component__WEBPACK_IMPORTED_MODULE_2__.IinInputComponent),
/* harmony export */   "PASSWORD_ALLOWED_REGEX": () => (/* reexport safe */ _password_input_password_input_component__WEBPACK_IMPORTED_MODULE_3__.PASSWORD_ALLOWED_REGEX),
/* harmony export */   "PASSWORD_RESTRICTED_REGEX": () => (/* reexport safe */ _password_input_password_input_component__WEBPACK_IMPORTED_MODULE_3__.PASSWORD_RESTRICTED_REGEX),
/* harmony export */   "PasswordInputComponent": () => (/* reexport safe */ _password_input_password_input_component__WEBPACK_IMPORTED_MODULE_3__.PasswordInputComponent),
/* harmony export */   "PeriodInputComponent": () => (/* reexport safe */ _period_input_period_input_component__WEBPACK_IMPORTED_MODULE_4__.PeriodInputComponent),
/* harmony export */   "PhoneInputComponent": () => (/* reexport safe */ _phone_input_phone_input_component__WEBPACK_IMPORTED_MODULE_5__.PhoneInputComponent),
/* harmony export */   "RangeInputComponent": () => (/* reexport safe */ _range_input_range_input_component__WEBPACK_IMPORTED_MODULE_6__.RangeInputComponent),
/* harmony export */   "SearchInputComponent": () => (/* reexport safe */ _search_input_search_input_component__WEBPACK_IMPORTED_MODULE_7__.SearchInputComponent),
/* harmony export */   "SmsInputComponent": () => (/* reexport safe */ _sms_input_sms_input_component__WEBPACK_IMPORTED_MODULE_8__.SmsInputComponent),
/* harmony export */   "IbanInputComponent": () => (/* reexport safe */ _iban_input_iban_input_component__WEBPACK_IMPORTED_MODULE_10__.IbanInputComponent),
/* harmony export */   "DropdownInputComponent": () => (/* reexport safe */ _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_11__.DropdownInputComponent),
/* harmony export */   "KEYBOARD_KEY": () => (/* reexport safe */ _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_11__.KEYBOARD_KEY),
/* harmony export */   "InputType": () => (/* reexport safe */ _input_component__WEBPACK_IMPORTED_MODULE_9__.InputType),
/* harmony export */   "JInputComponent": () => (/* reexport safe */ _input_component__WEBPACK_IMPORTED_MODULE_9__.JInputComponent),
/* harmony export */   "CountryCodesComponent": () => (/* reexport safe */ _country_codes_country_codes_component__WEBPACK_IMPORTED_MODULE_12__.CountryCodesComponent),
/* harmony export */   "PhonePrefixInputComponent": () => (/* reexport safe */ _phone_prefix_input_phone_prefix_input_component__WEBPACK_IMPORTED_MODULE_13__.PhonePrefixInputComponent),
/* harmony export */   "MultiSelectDropdownInputComponent": () => (/* reexport safe */ _multi_select_dropdown_input_multi_select_dropdown_input_component__WEBPACK_IMPORTED_MODULE_14__.MultiSelectDropdownInputComponent)
/* harmony export */ });
/* harmony import */ var _amount_input_amount_input_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amount-input/amount-input.component */ 65243);
/* harmony import */ var _date_input_date_input_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date-input/date-input.component */ 64397);
/* harmony import */ var _iin_input_iin_input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iin-input/iin-input.component */ 80850);
/* harmony import */ var _password_input_password_input_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./password-input/password-input.component */ 22068);
/* harmony import */ var _period_input_period_input_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./period-input/period-input.component */ 54418);
/* harmony import */ var _phone_input_phone_input_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./phone-input/phone-input.component */ 17251);
/* harmony import */ var _range_input_range_input_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./range-input/range-input.component */ 70542);
/* harmony import */ var _search_input_search_input_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./search-input/search-input.component */ 35446);
/* harmony import */ var _sms_input_sms_input_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sms-input/sms-input.component */ 56418);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./input.component */ 50235);
/* harmony import */ var _iban_input_iban_input_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./iban-input/iban-input.component */ 41572);
/* harmony import */ var _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dropdown-input/dropdown-input.component */ 81522);
/* harmony import */ var _country_codes_country_codes_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./country-codes/country-codes.component */ 6697);
/* harmony import */ var _phone_prefix_input_phone_prefix_input_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./phone-prefix-input/phone-prefix-input.component */ 63590);
/* harmony import */ var _multi_select_dropdown_input_multi_select_dropdown_input_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./multi-select-dropdown-input/multi-select-dropdown-input.component */ 97624);















const INPUT_COMPONENTS = [
    _amount_input_amount_input_component__WEBPACK_IMPORTED_MODULE_0__.AmountInputComponent,
    _date_input_date_input_component__WEBPACK_IMPORTED_MODULE_1__.DateInputComponent,
    _iin_input_iin_input_component__WEBPACK_IMPORTED_MODULE_2__.IinInputComponent,
    _password_input_password_input_component__WEBPACK_IMPORTED_MODULE_3__.PasswordInputComponent,
    _period_input_period_input_component__WEBPACK_IMPORTED_MODULE_4__.PeriodInputComponent,
    _phone_input_phone_input_component__WEBPACK_IMPORTED_MODULE_5__.PhoneInputComponent,
    _range_input_range_input_component__WEBPACK_IMPORTED_MODULE_6__.RangeInputComponent,
    _search_input_search_input_component__WEBPACK_IMPORTED_MODULE_7__.SearchInputComponent,
    _sms_input_sms_input_component__WEBPACK_IMPORTED_MODULE_8__.SmsInputComponent,
    _iban_input_iban_input_component__WEBPACK_IMPORTED_MODULE_10__.IbanInputComponent,
    _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_11__.DropdownInputComponent,
    _input_component__WEBPACK_IMPORTED_MODULE_9__.JInputComponent,
    _country_codes_country_codes_component__WEBPACK_IMPORTED_MODULE_12__.CountryCodesComponent,
    _phone_prefix_input_phone_prefix_input_component__WEBPACK_IMPORTED_MODULE_13__.PhonePrefixInputComponent,
    _multi_select_dropdown_input_multi_select_dropdown_input_component__WEBPACK_IMPORTED_MODULE_14__.MultiSelectDropdownInputComponent,
];

















/***/ }),

/***/ 50235:
/*!*************************************************!*\
  !*** ./src/app/shared/input/input.component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputType": () => (/* binding */ InputType),
/* harmony export */   "JInputComponent": () => (/* binding */ JInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.component.html?ngResource */ 77525);
/* harmony import */ var _input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input.component.scss?ngResource */ 42461);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../masked/masked.service */ 26484);
var JInputComponent_1;








var InputType;
(function (InputType) {
    InputType["textarea"] = "textarea";
    InputType["text"] = "text";
    InputType["number"] = "number";
})(InputType || (InputType = {}));
let JInputComponent = JInputComponent_1 = class JInputComponent {
    constructor(maskedService) {
        this.maskedService = maskedService;
        this.id = (0,_utils_index__WEBPACK_IMPORTED_MODULE_2__.generateUniqueId)();
        this.label = '';
        this.name = '';
        this.maskType = null;
        this.dropSpecialCharacters = true;
        this.computeSuffix = null;
        this.errorText = null;
        this.errorParams = null;
        this.helperText = null;
        this.helperTextParams = {};
        this.hasError = false;
        this.isActive = false;
        this.isClearable = true;
        this.shadowClass = '';
        this.inputClass = '';
        this.value = '';
        this.valueChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.formControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(this.value || '');
        this.blurred = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.focused = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.keyup = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.helperClasses = '';
        this.isFocused = false;
        this.types = InputType;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subscription();
    }
    ngOnInit() {
        this.maskConfig = this.maskedService.getConfig(this.maskType);
        const formSubscription = this.formControl.valueChanges.subscribe((value) => {
            this.valueChanged.emit(value);
        });
        this.subscription.add(formSubscription);
    }
    ngAfterViewInit() {
        // this.detectAutofill();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    ngOnChanges(changes) {
        this.triggerHelperAnimation();
    }
    onKeyUp(event) {
        this.keyup.emit(event);
    }
    onChange(_) { }
    onTouched(_) { }
    writeValue(value) {
        this.value = value;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    onFocus() {
        this.isFocused = true;
        this.focused.emit();
    }
    onBlur() {
        this.isFocused = false;
        this.onTouched();
        this.blurred.emit();
    }
    blur() {
        this.input.nativeElement.blur();
    }
    clear() {
        if (this.isDisabled) {
            return;
        }
        this.formControl.setValue('');
        this.focus();
    }
    focus(selectionIndex = 5) {
        setTimeout(() => {
            this.input.nativeElement.focus();
            this.input.nativeElement.setSelectionRange(selectionIndex, selectionIndex);
        }, 0);
    }
    // detectAutofill() {
    //   setTimeout(() => {
    //     window
    //       .getComputedStyle(this.input.nativeElement, null)
    //       .getPropertyValue('appearance');
    //   }, 600);
    // }
    triggerHelperAnimation() {
        this.helperClasses = 'animate__animated animate__shakeX';
        setTimeout(() => {
            this.helperClasses = '';
        }, 1000);
    }
    get hasMask() {
        return this.maskType !== null && this.maskConfig !== null;
    }
    get isFilled() {
        var _a, _b;
        const hasAutoFill = ((_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeElement) &&
            window
                .getComputedStyle(this.input.nativeElement, null)
                .getPropertyValue('appearance') === 'menulist-button';
        return ((_b = `${this.formControl.value}`) === null || _b === void 0 ? void 0 : _b.length) || hasAutoFill ? true : false;
    }
    get isShadowHidden() {
        // if (!this.formControl.value) {
        //   return true;
        // }
        return !this.formControl.value && !this.isFocused;
    }
    get suffix() {
        if (this.maskConfig.suffix)
            return this.maskConfig.suffix;
        if (this.computeSuffix) {
            return this.computeSuffix(this.formControl.value);
        }
        return '';
    }
    get shadow() {
        return this.maskedService.getShadow(this.maskType, this.formControl.value);
    }
};
JInputComponent.ctorParameters = () => [
    { type: _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService }
];
JInputComponent.propDecorators = {
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    type: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    maxLength: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    maskType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    dropSpecialCharacters: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    computeSuffix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    errorText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    errorParams: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    errorMessages: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    helperText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    helperTextParams: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    hasError: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isActive: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isClearable: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    shadowClass: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    inputClass: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    inputExtra: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    valueChanged: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    formControl: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    autofocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isDisabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    input: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewChild, args: ['input',] }],
    link: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewChild, args: ['link',] }],
    button: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewChild, args: ['button',] }],
    blurred: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    focused: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    keyup: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }]
};
JInputComponent = JInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-input',
        template: _input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_5__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => JInputComponent_1),
                multi: true,
            },
        ],
        styles: [_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], JInputComponent);



/***/ }),

/***/ 97624:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/input/multi-select-dropdown-input/multi-select-dropdown-input.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiSelectDropdownInputComponent": () => (/* binding */ MultiSelectDropdownInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _multi_select_dropdown_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multi-select-dropdown-input.component.html?ngResource */ 95025);
/* harmony import */ var _multi_select_dropdown_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multi-select-dropdown-input.component.scss?ngResource */ 84377);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/animations */ 31631);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dropdown-input/dropdown-input.component */ 81522);








const TO_SHOW = 2;
const MSDI_VALUE_ACCESSOR = {
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NG_VALUE_ACCESSOR,
    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => MultiSelectDropdownInputComponent),
    multi: true,
};
const SMOOTH_COLLAPSE = (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.trigger)('smoothCollapse', [
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.state)('initial', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.style)({
        height: '0',
        overflow: 'hidden',
        opacity: '0.5',
    })),
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.state)('final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.style)({
        overflow: 'auto',
        opacity: '1',
        maxHeight: '300px',
    })),
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.transition)('initial=>final', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.animate)('300ms ease-in-out')),
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.transition)('final=>initial', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_5__.animate)('300ms ease-in-out')),
]);
let MultiSelectDropdownInputComponent = class MultiSelectDropdownInputComponent {
    constructor(cdr, eRef, translateService) {
        this.cdr = cdr;
        this.eRef = eRef;
        this.translateService = translateService;
        this.options = [];
        this.focusIndex = 0;
        this.isCollapsed = false;
        this.loading = false;
        this.openUnder = true;
        this.disabled = false;
        this.changed = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.selectedItems = [];
        this.touched = false;
        this.onTouched = () => { };
    }
    clickOutside(event) {
        if (!this.eRef.nativeElement.contains(event.target)) {
            this.isCollapsed = false;
            this.cdr.detectChanges();
        }
    }
    keydown(event) {
        const allowedKeys = Object.values(_dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY);
        if (!this.isCollapsed || !allowedKeys.includes(event.code)) {
            return;
        }
        else {
            event.preventDefault();
        }
        switch (event.code) {
            case _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY.ARROW_DOWN:
                this.arrowDown();
                break;
            case _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY.ARROW_UP:
                this.arrowUp();
                break;
            case _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY.ESC:
                this.close();
                break;
            case _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY.ENTER:
                this.finish();
                break;
            case _dropdown_input_dropdown_input_component__WEBPACK_IMPORTED_MODULE_2__.KEYBOARD_KEY.SPACE:
                this.toggleSelect(this.options[this.focusIndex]);
                break;
        }
    }
    // TODO: It's just a draft will be optimized & refactored
    displaySelectedFn(selectedItems) {
        let result = this.translateService.instant(this.placeholder);
        const stringify = selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.slice(0, TO_SHOW).map((item) => this.translateService.instant(item.label)).join(', ');
        if ((selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.length) > TO_SHOW) {
            result =
                stringify +
                    ' ' +
                    this.translateService.instant('SHARED.AND') +
                    ' ' +
                    (selectedItems.length - TO_SHOW);
        }
        else if ((selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.length) > 0) {
            result = stringify;
        }
        return result;
    }
    displayItemFn(item) {
        const toString = this.translateService.instant(item.label);
        return toString;
    }
    findItemIndex(option) {
        return this.selectedItems.findIndex((item) => item.value == option.value);
    }
    arrowDown() {
        if (this.focusIndex < this.options.length - 1) {
            this.focusIndex++;
        }
        else {
            this.focusIndex = 0;
        }
        this.cdr.markForCheck();
    }
    arrowUp() {
        if (this.focusIndex > 0) {
            this.focusIndex--;
        }
        else {
            this.focusIndex = this.options.length - 1;
        }
        this.cdr.markForCheck();
    }
    writeValue(items) {
        const rawByValue = this.options.filter((item) => items === null || items === void 0 ? void 0 : items.includes(item.value));
        this.selectedItems = rawByValue !== null && rawByValue !== void 0 ? rawByValue : [];
        this.cdr.markForCheck();
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
        this.cdr.markForCheck();
    }
    onChange(_) { }
    markAsTouched() {
        if (!this.touched) {
            this.onTouched();
            this.touched = true;
        }
        this.cdr.markForCheck();
    }
    isItemActive(option) {
        return this.findItemIndex(option) !== -1;
    }
    toggleSelect(option) {
        if (this.isItemActive(option)) {
            const index = this.findItemIndex(option);
            this.selectedItems.splice(index, 1);
        }
        else {
            this.selectedItems.push(option);
        }
        const values = this.selectedItems.map((item) => item.value);
        this.onChange(values);
        this.changed.emit(values);
        this.cdr.markForCheck();
    }
    finish() {
        this.close();
    }
    toggleCollapse() {
        if (this.disabled) {
            return;
        }
        this.isCollapsed = !this.isCollapsed;
    }
    close() {
        this.isCollapsed = false;
    }
    trackByLabel(index, obj) {
        return obj.label;
    }
};
MultiSelectDropdownInputComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectorRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ElementRef },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService }
];
MultiSelectDropdownInputComponent.propDecorators = {
    options: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    focusIndex: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    placeholder: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isCollapsed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    loading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    openUnder: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    changed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    clickOutside: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['document:click', ['$event'],] }],
    keydown: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['document:keydown', ['$event'],] }],
    displaySelectedFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    displayItemFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
MultiSelectDropdownInputComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-multi-select-dropdown-input',
        template: _multi_select_dropdown_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [MSDI_VALUE_ACCESSOR],
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush,
        animations: [SMOOTH_COLLAPSE],
        styles: [_multi_select_dropdown_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], MultiSelectDropdownInputComponent);



/***/ }),

/***/ 22068:
/*!*************************************************************************!*\
  !*** ./src/app/shared/input/password-input/password-input.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PASSWORD_ALLOWED_REGEX": () => (/* binding */ PASSWORD_ALLOWED_REGEX),
/* harmony export */   "PASSWORD_RESTRICTED_REGEX": () => (/* binding */ PASSWORD_RESTRICTED_REGEX),
/* harmony export */   "PasswordInputComponent": () => (/* binding */ PasswordInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _password_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./password-input.component.html?ngResource */ 15463);
/* harmony import */ var _password_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./password-input.component.scss?ngResource */ 5795);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../input.component */ 50235);
/* harmony import */ var _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../masked/masked.service */ 26484);
var PasswordInputComponent_1;







const PASSWORD_ALLOWED_REGEX = /[a-zA-Z0-9.!#$%^&*@]/;
const PASSWORD_RESTRICTED_REGEX = /[^a-zA-Z0-9.!#$%^&*@]/;
let PasswordInputComponent = PasswordInputComponent_1 = class PasswordInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_2__.JInputComponent {
    constructor(maskedService) {
        super(maskedService);
        this.maskedService = maskedService;
        this.label = 'SHARED.PASSWORD';
        this.isAuth = false;
        this.hasCyrillicCheck = false;
        this.hasCapsLockCheck = false;
        this.isPasswordVisible = false;
        this.regexStr = PASSWORD_ALLOWED_REGEX;
        this.pasteRegexStr = PASSWORD_RESTRICTED_REGEX;
        this.isCyrillicEntered = false;
        this.isCapsLockEnabled = false;
    }
    onKeyUp(event) {
        if (this.hasCyrillicCheck) {
            this.isCyrillicEntered =
                PASSWORD_RESTRICTED_REGEX.test(this.formControl.value) ||
                    PASSWORD_RESTRICTED_REGEX.test(event.key);
        }
        if (this.hasCapsLockCheck) {
            try {
                this.isCapsLockEnabled = event.getModifierState('CapsLock');
            }
            catch (error) { }
        }
    }
    onKeyPress(event) {
        return this.regexStr.test(event.key);
    }
    blockPaste(event) {
        this.validateFields(event);
    }
    validateFields(event) {
        setTimeout(() => {
            this.input.nativeElement.value = this.input.nativeElement.value
                .replace(this.pasteRegexStr, '')
                .replace(/\s/g, '')
                .replace(/ /g, '');
            event.preventDefault();
        }, 100);
    }
    ngOnInit() {
        this.maskConfig = this.maskedService.getConfig(this.maskType);
    }
    togglePasswordVisibility(event) {
        event.preventDefault();
        this.isPasswordVisible = !this.isPasswordVisible;
        this.focus();
    }
    get passwordInputType() {
        return this.isPasswordVisible ? 'text' : 'password';
    }
    get passwordIconName() {
        return this.isPasswordVisible ? 'eyeOpened' : 'eyeClosed';
    }
};
PasswordInputComponent.ctorParameters = () => [
    { type: _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService }
];
PasswordInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isAuth: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    hasCyrillicCheck: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    hasCapsLockCheck: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    regexStr: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    pasteRegexStr: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    onKeyUp: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['keyup', ['$event'],] }],
    onKeyPress: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['keypress', ['$event'],] }],
    blockPaste: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.HostListener, args: ['paste', ['$event'],] }]
};
PasswordInputComponent = PasswordInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-password-input',
        template: _password_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => PasswordInputComponent_1),
                multi: true,
            },
        ],
        styles: [_password_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PasswordInputComponent);



/***/ }),

/***/ 54418:
/*!*********************************************************************!*\
  !*** ./src/app/shared/input/period-input/period-input.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PeriodInputComponent": () => (/* binding */ PeriodInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _period_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./period-input.component.html?ngResource */ 44894);
/* harmony import */ var _period_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./period-input.component.scss?ngResource */ 6573);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ 38495);
/* harmony import */ var ngx_bootstrap_chronos__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/chronos */ 97396);
/* harmony import */ var ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/locale */ 46854);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../input.component */ 50235);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
var PeriodInputComponent_1;












(ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_5__.ruLocale.months = {
    format: 'Января_Февраля_Марта_Апреля_Мая_Июня_Июля_Августа_Сентября_Октября_Ноября_Декабря'.split('_'),
    standalone: 'Январь_Февраль_Март_Апрель_Май_Июнь_Июль_Август_Сентябрь_Октябрь_Ноябрь_Декабрь'.split('_'),
}),
    (0,ngx_bootstrap_chronos__WEBPACK_IMPORTED_MODULE_4__.defineLocale)('ru', ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_5__.ruLocale);
(ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_5__.ruLocale.months = {
    format: 'Қаңтар_Ақпан_Наурыз_Сәуір_Мамыр_Маусым_Шілде_Тамыз_Қыркүйек_Қазан_Қараша_Желтоқсан'.split('_'),
    standalone: 'Қаңтар_Ақпан_Наурыз_Сәуір_Мамыр_Маусым_Шілде_Тамыз_Қыркүйек_Қазан_Қараша_Желтоқсан'.split('_'),
}),
    (0,ngx_bootstrap_chronos__WEBPACK_IMPORTED_MODULE_4__.defineLocale)('kk', ngx_bootstrap_locale__WEBPACK_IMPORTED_MODULE_5__.kkLocale);
let PeriodInputComponent = PeriodInputComponent_1 = class PeriodInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_6__.JInputComponent {
    constructor(maskedService, localeService, translateService, bsDatepickerConfig) {
        super(maskedService);
        this.maskedService = maskedService;
        this.localeService = localeService;
        this.translateService = translateService;
        this.bsDatepickerConfig = bsDatepickerConfig;
        this.label = 'SHARED.PERIOD.TITLE';
        this.locale = this.translateService.currentLang;
        this.colorTheme = 'theme-jysan';
        this.minMode = 'month';
        this.minDate = new Date('1991-01-01');
        this.maxDate = new Date();
        this.maxDate.setFullYear(this.maxDate.getFullYear() + 1);
        this.maxDate.setMonth(11);
        this.bsConfig = Object.assign({}, {
            minDate: this.minDate,
            maxDate: this.maxDate,
            isAnimated: true,
            dateInputFormat: 'MMMM YYYY',
            minMode: this.minMode,
            containerClass: this.colorTheme,
        });
        this.bsDatepickerConfig.dateInputFormat = 'MMMM YYYY';
        this.localeService.use(this.locale);
        this.subscription.add(this.translateService.onLangChange.subscribe((locale) => {
            this.localeService.use(locale.lang);
        }));
    }
    ngOnInit() {
        if (!this.formControl.value && this.value) {
            this.formControl.setValue(this.value);
        }
        const formSubscription = this.formControl.valueChanges.subscribe((value) => {
            this.valueChanged.emit(value);
        });
        this.subscription.add(formSubscription);
    }
    onBsChange(selectedDate) {
        if (selectedDate) {
            // this.formControl.setValue(selectedDate);
            setTimeout(() => {
                this.onChange(selectedDate);
            });
        }
    }
    get isFilled() {
        return this.formControl.value ? true : false;
    }
};
PeriodInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_3__.BsLocaleService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__.TranslateService },
    { type: ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_3__.BsDatepickerConfig }
];
PeriodInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input }],
    formControl: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input }]
};
PeriodInputComponent = PeriodInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'j-period-input',
        template: _period_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.forwardRef)(() => PeriodInputComponent_1),
                multi: true,
            },
        ],
        styles: [_period_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PeriodInputComponent);



/***/ }),

/***/ 17251:
/*!*******************************************************************!*\
  !*** ./src/app/shared/input/phone-input/phone-input.component.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PhoneInputComponent": () => (/* binding */ PhoneInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _phone_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./phone-input.component.html?ngResource */ 8535);
/* harmony import */ var _phone_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./phone-input.component.scss?ngResource */ 23899);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../input.component */ 50235);
/* harmony import */ var _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../masked/masked.service */ 26484);
var PhoneInputComponent_1;








let PhoneInputComponent = PhoneInputComponent_1 = class PhoneInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_2__.JInputComponent {
    constructor(maskedService, maskPipe) {
        super(maskedService);
        this.maskedService = maskedService;
        this.maskPipe = maskPipe;
        this.label = 'SHARED.PHONE';
        this.value = '';
        this.defaultFocus = true;
        this.countrySelected = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.maskType = 'loginPhoneKz';
        this.phoneMaskConfig = this.maskedService.getConfig('loginPhoneKz');
        this.phoneInputSpecialCharacters = ['(', ')', '+', ' '];
    }
    set countryCode(value) {
        if (value === null || value === void 0 ? void 0 : value.code) {
            this.formControl.setValue(value === null || value === void 0 ? void 0 : value.code);
        }
        if ((value === null || value === void 0 ? void 0 : value.countryCode) === 'KZ') {
            this.maskType = 'loginPhoneKz';
        }
        else {
            this.maskType = 'foreignPhone';
        }
        this.phoneMaskConfig = this.maskedService.getConfig(this.maskType);
    }
    ngAfterViewInit() {
        if (this.defaultFocus) {
            this.focus(5);
        }
    }
    inputChange() {
        this.formControl.setValue(this.formControl.value.replace(/\D/g, ''));
        const value = '+' + this.formControl.value;
        let found;
        if (this.countryCodes) {
            found = this.countryCodes.find((code) => code.code === value && code.countryCode);
        }
        if (found || value.length < 2) {
            this.countrySelected.emit(found);
        }
    }
    onPaste(event) {
        event.preventDefault();
        const clipboardData = event.clipboardData || window.clipboardData;
        const pastedText = clipboardData.getData('text');
        const toPasteRaw = this.maskedService.getPastedPhone(pastedText);
        this.formControl.setValue(this.getMaskedPhone(toPasteRaw));
    }
    onBackspace(event) {
        setTimeout(() => {
            if (this.formControl.value.length === 0) {
                this.focus(5);
            }
        }, 0);
    }
    clear() {
        super.clear();
        this.focus(5);
    }
    get isFilled() {
        return true;
    }
    get isShadowHidden() {
        return false;
    }
    get isClearEnabled() {
        const value = this.maskedService.getUnmaskedNumber(this.formControl.value);
        return value.length > 0;
    }
    get shadow() {
        // необходимо добавлять префикс чтобы маска могла учитывать символы префикса для корректной работы
        const valueWithPrefix = `${this.phoneMaskConfig.prefix || ''}${this.getMaskedPhone(this.formControl.value)}`;
        return this.maskedService.getShadow(this.maskType, valueWithPrefix);
    }
    getMaskedPhone(unmasked) {
        const maskedValue = this.maskPipe.transform(unmasked, this.phoneMaskConfig.mask);
        return maskedValue;
    }
};
PhoneInputComponent.ctorParameters = () => [
    { type: _masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_5__.MaskPipe }
];
PhoneInputComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    value: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    defaultFocus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    countryCodes: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    countryCode: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    countrySelected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }]
};
PhoneInputComponent = PhoneInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-phone-input',
        template: _phone_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => PhoneInputComponent_1),
                multi: true,
            },
        ],
        styles: [_phone_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PhoneInputComponent);



/***/ }),

/***/ 63590:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/input/phone-prefix-input/phone-prefix-input.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PhonePrefixInputComponent": () => (/* binding */ PhonePrefixInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _phone_prefix_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./phone-prefix-input.component.html?ngResource */ 51174);
/* harmony import */ var _phone_prefix_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./phone-prefix-input.component.scss?ngResource */ 28636);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _country_codes_country_codes_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../country-codes/country-codes.component */ 6697);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../input.component */ 50235);
var PhonePrefixInputComponent_1;









let PhonePrefixInputComponent = PhonePrefixInputComponent_1 = class PhonePrefixInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_4__.JInputComponent {
    constructor(maskedService, modalService) {
        super(maskedService);
        this.maskedService = maskedService;
        this.modalService = modalService;
        this.imageUrl = '/assets/countryflags/$blank_flag.png';
        this.label = 'COUNTRIES.CODE';
        this.countrySelected = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    }
    set countryCode(value) {
        var _a;
        this.countryCodeValue = value;
        const imageName = ((_a = this.countryCodeValue) === null || _a === void 0 ? void 0 : _a.countryCode) ? this.countryCodeValue.countryCode.toLowerCase() : 'blank_flag';
        this.imageUrl = `/assets/countryflags/$${imageName}.png`;
    }
    clear() {
    }
    get isFilled() {
        return true;
    }
    onFocusCountryCode() {
        var _a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const modalRef = this.modalService.open(_country_codes_country_codes_component__WEBPACK_IMPORTED_MODULE_3__.CountryCodesComponent, {
                backdropClass: 'backdrop_light',
                windowClass: 'modal_light modal-adaptive_sm modal_max-height modal-adaptive modal_md',
                backdrop: 'static',
            });
            modalRef.componentInstance.countryCodes = this.countryCodes;
            try {
                this.countryCode = yield modalRef.result;
                const imageName = ((_a = this.countryCodeValue) === null || _a === void 0 ? void 0 : _a.countryCode) ? this.countryCodeValue.countryCode.toLowerCase() : 'blank_flag';
                this.imageUrl = `/assets/countryflags/$${imageName}.png`;
                this.countrySelected.emit(this.countryCodeValue);
            }
            catch (error) {
            }
        });
    }
};
PhonePrefixInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_2__.MaskedService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbModal }
];
PhonePrefixInputComponent.propDecorators = {
    countryCodes: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    countryCode: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    countrySelected: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output }]
};
PhonePrefixInputComponent = PhonePrefixInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-phone-prefix-input',
        template: _phone_prefix_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(() => PhonePrefixInputComponent_1),
                multi: true,
            },
        ],
        styles: [_phone_prefix_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PhonePrefixInputComponent);



/***/ }),

/***/ 70542:
/*!*******************************************************************!*\
  !*** ./src/app/shared/input/range-input/range-input.component.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RangeInputComponent": () => (/* binding */ RangeInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _range_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./range-input.component.html?ngResource */ 58745);
/* harmony import */ var _range_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./range-input.component.scss?ngResource */ 69800);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 47509);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dayjs/plugin/isBetween */ 3520);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);











const TODAY = new Date();
const DATE_VALIDATOR = (control) => {
    if (!control.value) {
        return null;
    }
    if (!dayjs__WEBPACK_IMPORTED_MODULE_2___default()(control.value, 'DD.MM.YYYY', true).isValid()) {
        return { dateInvalid: true };
    }
    return null;
};
let RangeInputComponent = class RangeInputComponent {
    constructor(maskedService) {
        this.maskedService = maskedService;
        this.submitLabel = 'SHARED.APPLY';
        this.hideBorders = false;
        this.minDate = {
            year: 1970,
            month: 1,
            day: 1,
        };
        this.maxDate = {
            year: TODAY.getFullYear(),
            month: TODAY.getMonth() + 1,
            day: TODAY.getDate(),
        };
        this.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.submitted = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.hoveredDate = null;
        this.toDate = null;
        this.isFromActive = true;
        this.isToActive = false;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subscription();
        dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend((dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4___default()));
        dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend((dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3___default()));
        this.maskConfig = this.maskedService.getConfig('date');
        this.formGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
            from: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required,
                (control) => {
                    return DATE_VALIDATOR(control);
                },
            ]),
            to: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', [_angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required, DATE_VALIDATOR]),
        }, (formGroup) => {
            return this.isRangeValid(formGroup);
        });
        const formSubscription = this.formGroup.controls.from.valueChanges.subscribe((fromValue) => {
            if (fromValue.length == 0) {
                this.fromDate = null;
                if (this.toDate) {
                    this.datepickerModel = this.toDate;
                }
            }
        });
        this.subscription.add(formSubscription);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    onFromFocus() {
        this.isFromActive = true;
    }
    onToFocus() {
        this.isToActive = true;
    }
    onFromBlur() {
        this.isFromActive = false;
    }
    onToBlur() {
        this.isToActive = false;
    }
    onKeyUpFrom() {
        if (this.formGroup.controls.from.valid) {
            this.navigateDatepicker(this.formGroup.controls.from.value);
            this.fromInput.blur();
            this.toInput.focus();
        }
    }
    onKeyUpTo() {
        if (this.formGroup.controls.to.valid) {
            this.navigateDatepicker(this.formGroup.controls.to.value);
            this.toInput.blur();
        }
    }
    onDateSelection(date, updateInputs = true) {
        if (!this.fromDate && !this.toDate) {
            this.fromDate = date;
            updateInputs &&
                this.setDateInput(this.fromDate, this.formGroup.controls.from);
            this.isFromActive = false;
            this.isToActive = true;
        }
        else if (this.fromDate && !this.toDate && date.equals(this.fromDate)) {
            this.toDate = this.fromDate;
            updateInputs &&
                this.setDateInput(this.toDate, this.formGroup.controls.to);
        }
        else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {
            this.toDate = date;
            updateInputs &&
                this.setDateInput(this.toDate, this.formGroup.controls.to);
            this.isFromActive = false;
            this.isToActive = false;
        }
        else {
            this.toDate = null;
            this.fromDate = date;
            updateInputs &&
                this.setDateInput(this.toDate, this.formGroup.controls.to);
            updateInputs &&
                this.setDateInput(this.fromDate, this.formGroup.controls.from);
            this.isFromActive = false;
            this.isToActive = true;
        }
    }
    isHovered(date) {
        return (this.fromDate &&
            !this.toDate &&
            this.hoveredDate &&
            date.after(this.fromDate) &&
            date.before(this.hoveredDate));
    }
    isInside(date) {
        return this.toDate && date.after(this.fromDate) && date.before(this.toDate);
    }
    isRange(date) {
        return (date.equals(this.fromDate) ||
            (this.toDate && date.equals(this.toDate)) ||
            this.isInside(date) ||
            this.isHovered(date));
    }
    isRangeStart(date) {
        return date.equals(this.fromDate) && this.fromDate && this.toDate;
    }
    isRangeEnd(date) {
        return date.equals(this.toDate) && this.fromDate && this.toDate;
    }
    close() {
        this.fromDate = null;
        this.toDate = null;
        this.formGroup.controls.from.setValue('');
        this.formGroup.controls.to.setValue('');
        this.closed.emit();
    }
    submit() {
        let result = {};
        if (this.fromDate) {
            result.from = this.convertNgbToDate(this.fromDate);
        }
        if (this.toDate) {
            result.to = this.convertNgbToDate(this.toDate);
        }
        this.submitted.emit(result);
    }
    setDateInput(date, control) {
        const newValue = date
            ? dayjs__WEBPACK_IMPORTED_MODULE_2___default()(new Date(date.year, date.month - 1, date.day)).format('DD.MM.YYYY')
            : '';
        control.setValue(newValue);
    }
    isValidDate(dateString) {
        return dayjs__WEBPACK_IMPORTED_MODULE_2___default()(dateString, 'DD.MM.YYYY', true).isValid();
    }
    isRangeValid(formGroup) {
        if (!formGroup.value) {
            return null;
        }
        const from = formGroup.get('from').value;
        const to = formGroup.get('to').value;
        const fromDate = dayjs__WEBPACK_IMPORTED_MODULE_2___default()(from, 'DD.MM.YYYY', true);
        const toDate = dayjs__WEBPACK_IMPORTED_MODULE_2___default()(to, 'DD.MM.YYYY', true);
        const minDate = dayjs__WEBPACK_IMPORTED_MODULE_2___default()(new Date(this.minDate.year, this.minDate.month - 1, this.minDate.day));
        const maxDate = dayjs__WEBPACK_IMPORTED_MODULE_2___default()(new Date(this.maxDate.year, this.maxDate.month - 1, this.maxDate.day));
        if (!((fromDate.isSame(toDate) ||
            fromDate.isBetween(minDate, toDate) ||
            fromDate.isSame(minDate)) &&
            (toDate.isSame(fromDate) ||
                toDate.isBetween(fromDate, maxDate) ||
                toDate.isSame(maxDate)))) {
            return { dateRange: true };
        }
        return null;
    }
    navigateDatepicker(dateString) {
        if (this.isValidDate(dateString)) {
            const [day, month, year] = dateString.split('.');
            this.datepicker.navigateTo({
                day: parseInt(day),
                month: parseInt(month),
                year: parseInt(year),
            });
            const ngbDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__.NgbDate(parseInt(year), parseInt(month), parseInt(day));
            this.datepickerModel = ngbDate;
            this.onDateSelection(ngbDate, false);
        }
    }
    convertNgbToDate(ngbDate) {
        return dayjs__WEBPACK_IMPORTED_MODULE_2___default()(new Date(ngbDate.year, ngbDate.month - 1, ngbDate.day)).toDate();
    }
};
RangeInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_5__.MaskedService }
];
RangeInputComponent.propDecorators = {
    submitLabel: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    hideBorders: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    minDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    maxDate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    formGroup: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    closed: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    submitted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Output }],
    datepicker: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['datepicker',] }],
    fromInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['fromInput',] }],
    toInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewChild, args: ['toInput',] }]
};
RangeInputComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-range-input',
        template: _range_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_range_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], RangeInputComponent);



/***/ }),

/***/ 35446:
/*!*********************************************************************!*\
  !*** ./src/app/shared/input/search-input/search-input.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchInputComponent": () => (/* binding */ SearchInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _search_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./search-input.component.html?ngResource */ 20377);
/* harmony import */ var _search_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search-input.component.scss?ngResource */ 61876);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../input.component */ 50235);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);






let SearchInputComponent = class SearchInputComponent extends _input_component__WEBPACK_IMPORTED_MODULE_2__.JInputComponent {
    constructor(maskedService) {
        super(maskedService);
        this.maskedService = maskedService;
        this.placeholder = '';
        this.isClearEnabled = false;
    }
    ngOnInit() {
        this.isClearEnabled = this.value.length > 0;
        const formSubscription = this.formControl.valueChanges.subscribe((value) => {
            this.valueChanged.emit(value);
            this.isClearEnabled = value.length > 0;
        });
        this.subscription.add(formSubscription);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    clear() {
        super.clear();
        this.focus(5);
    }
};
SearchInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService }
];
SearchInputComponent.propDecorators = {
    placeholder: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
SearchInputComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-search-input',
        template: _search_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_search_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SearchInputComponent);



/***/ }),

/***/ 56418:
/*!***************************************************************!*\
  !*** ./src/app/shared/input/sms-input/sms-input.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SmsInputComponent": () => (/* binding */ SmsInputComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _sms_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sms-input.component.html?ngResource */ 65637);
/* harmony import */ var _sms_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sms-input.component.scss?ngResource */ 6519);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_input_input_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/input/input.component */ 50235);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
var SmsInputComponent_1;







let SmsInputComponent = SmsInputComponent_1 = class SmsInputComponent extends _shared_input_input_component__WEBPACK_IMPORTED_MODULE_2__.JInputComponent {
    constructor(maskedService) {
        super(maskedService);
        this.maskedService = maskedService;
        this.maskType = 'sms';
    }
    get smsSelectionIndex() {
        var _a, _b;
        return ((_b = (_a = this.formControl) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.length) || 0;
    }
    focus(selectionIndex = this.smsSelectionIndex) {
        // setTimeout(() => {
        this.input.nativeElement.addEventListener('onload', () => {
            this.input.nativeElement.focus();
            this.input.nativeElement.setSelectionRange(selectionIndex, selectionIndex);
        });
        // }, 0);
    }
};
SmsInputComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService }
];
SmsInputComponent.propDecorators = {
    errorTranslateParams: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    maskType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
SmsInputComponent = SmsInputComponent_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-sms-input',
        template: _sms_input_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        providers: [
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NG_VALUE_ACCESSOR,
                useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.forwardRef)(() => SmsInputComponent_1),
                multi: true,
            },
        ],
        styles: [_sms_input_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SmsInputComponent);



/***/ }),

/***/ 99430:
/*!*************************************************************!*\
  !*** ./src/app/shared/layout-home/layout-home.component.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LayoutHomeComponent": () => (/* binding */ LayoutHomeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _layout_home_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout-home.component.html?ngResource */ 36440);
/* harmony import */ var _layout_home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout-home.component.scss?ngResource */ 10227);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _payments_models_steps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @payments/models/steps */ 13389);
/* harmony import */ var _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/services/header.service */ 60940);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 32425);







let LayoutHomeComponent = class LayoutHomeComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.currentStep = _payments_models_steps__WEBPACK_IMPORTED_MODULE_2__.PAYMENTS_STEPS.NONE;
        this.steps = _payments_models_steps__WEBPACK_IMPORTED_MODULE_2__.PAYMENTS_STEPS;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subscription();
        this.headerService.setCurrentStep(this.steps.NONE);
        const headerSubscription = this.headerService
            .getCurrentStep()
            // .pipe(distinctUntilChanged())
            .subscribe((newStep) => {
            this.currentStep = newStep;
        });
        this.subscription.add(headerSubscription);
    }
    setStep(step) {
        this.headerService.setCurrentStep(step);
    }
};
LayoutHomeComponent.ctorParameters = () => [
    { type: _shared_services_header_service__WEBPACK_IMPORTED_MODULE_3__.HeaderService }
];
LayoutHomeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__.ViewEncapsulation.None,
        selector: 'j-layout-home',
        template: _layout_home_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_layout_home_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], LayoutHomeComponent);



/***/ }),

/***/ 194:
/*!***********************************************************!*\
  !*** ./src/app/shared/layout-home/main/main.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MainComponent": () => (/* binding */ MainComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.component.html?ngResource */ 46056);
/* harmony import */ var _main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main.component.scss?ngResource */ 72745);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let MainComponent = class MainComponent {
    constructor() {
        this.isCentered = false;
        this.isCenteredActive = false;
    }
    ngOnChanges() {
        this.isCenteredActive = this.isCentered;
    }
};
MainComponent.ctorParameters = () => [];
MainComponent.propDecorators = {
    isCentered: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isCenteredActive: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.HostBinding, args: ['class.is-centered',] }]
};
MainComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-main',
        template: _main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], MainComponent);



/***/ }),

/***/ 83617:
/*!*****************************************************!*\
  !*** ./src/app/shared/loading/loading.component.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoadingComponent": () => (/* binding */ LoadingComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _loading_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loading.component.html?ngResource */ 45451);
/* harmony import */ var _loading_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loading.component.scss?ngResource */ 630);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let LoadingComponent = class LoadingComponent {
    constructor() { }
    ngOnInit() {
    }
};
LoadingComponent.ctorParameters = () => [];
LoadingComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-loading',
        template: _loading_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_loading_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], LoadingComponent);



/***/ }),

/***/ 85814:
/*!*****************************************************!*\
  !*** ./src/app/shared/loading/loading.directive.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoadingDirective": () => (/* binding */ LoadingDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let LoadingDirective = class LoadingDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.jLoading = false;
        this.jLoadingInverted = false;
        this.loadingTemplate = `
    <div class="spinner">
      <div class="bounce1"></div>
      <div class="bounce2"></div>
      <div class="bounce3"></div>
    </div>
  `;
    }
    ngAfterViewInit() {
        this.el.nativeElement.insertAdjacentHTML('beforeend', this.loadingTemplate);
    }
    ngOnChanges(changes) {
        if (this.jLoading) {
            this.renderer.addClass(this.el.nativeElement, 'is-loading');
        }
        else {
            this.renderer.removeClass(this.el.nativeElement, 'is-loading');
        }
        if (this.jLoadingInverted) {
            this.renderer.addClass(this.el.nativeElement, 'is-loading-inverted');
        }
        else {
            this.renderer.removeClass(this.el.nativeElement, 'is-loading-inverted');
        }
    }
};
LoadingDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2 }
];
LoadingDirective.propDecorators = {
    jLoading: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }],
    jLoadingInverted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
LoadingDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jLoading]',
    })
], LoadingDirective);



/***/ }),

/***/ 26484:
/*!*************************************************!*\
  !*** ./src/app/shared/masked/masked.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaskedService": () => (/* binding */ MaskedService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _masked__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./masked */ 31475);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/index */ 96530);





let MaskedService = class MaskedService {
    constructor(maskPipe) {
        this.maskPipe = maskPipe;
    }
    getConfig(maskType, changeSuffix = null, changePrefix = null) {
        const foundConfig = _masked__WEBPACK_IMPORTED_MODULE_0__.Masks[maskType];
        if (changeSuffix) {
            foundConfig.suffix = changeSuffix;
        }
        if (changePrefix) {
            foundConfig.prefix = changePrefix;
        }
        return foundConfig || null;
    }
    getShadow(inputMask, inputValue) {
        if (!_masked__WEBPACK_IMPORTED_MODULE_0__.Masks[inputMask]) {
            return;
        }
        const maskShadow = _masked__WEBPACK_IMPORTED_MODULE_0__.Masks[inputMask].shadow;
        const result = [];
        if (maskShadow && typeof inputValue === 'string') {
            for (let i = 0; i < maskShadow.length; i++) {
                const inputChar = inputValue[i];
                const maskChar = maskShadow[i];
                const resultChar = inputChar || maskChar;
                result.push({
                    isInvisible: resultChar === inputChar,
                    hasPadding: resultChar === '_',
                    value: resultChar,
                });
            }
        }
        return result;
    }
    getUnmaskedAmount(value) {
        return value && value.replace(/ /g, '').replace(/,/g, '.');
    }
    getUnmaskedNumber(value) {
        return value && value.replace(/\D+/g, '');
    }
    getUnmaskedKZNumber(value) {
        return value && value
            .replace(/\D+\(\)\s\-/g, '')
            .replace(/^8/, '7')
            .padStart(11, '7');
    }
    isKZPhoneNumber(phone) {
        const isKZPhoneNumber = /^(\+7|7|8)?[\s\-]?\(?[7][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/;
        return isKZPhoneNumber.test(phone);
    }
    getUnmaskedPhone(value) {
        const result = value.replace(/\D+/g, '');
        return result;
    }
    getPastedPhone(value) {
        const unmasked = this.isKZPhoneNumber(value)
            ? this.getUnmaskedKZNumber(value)
            : this.getUnmaskedNumber(value);
        return unmasked;
    }
    getMaskedPhone(value) {
        const phoneWithCode = this.getPastedPhone(value);
        if ((phoneWithCode === null || phoneWithCode === void 0 ? void 0 : phoneWithCode[0]) === '7' && phoneWithCode.length === 11) {
            return `+${phoneWithCode[0]} ${this.maskPipe.transform(phoneWithCode.substring(1), _masked__WEBPACK_IMPORTED_MODULE_0__.Masks.phone.mask)}`;
        }
        else {
            return value;
        }
    }
    getPastedIban(value, prefix = '') {
        const unmasked = value.replace(/ /g, '');
        if (unmasked.length > 18) {
            return unmasked.substring(unmasked.length - 18);
        }
        return `${prefix}${unmasked}`;
    }
    getMaskedAmount(amount, suffix = '') {
        const unmaskedValue = this.getNumberedAmount(amount);
        const prefix = unmaskedValue < 1 ? '0' : '';
        return `${prefix}${this.formatAmount(unmaskedValue, true)}${suffix}`;
    }
    getNumberedAmount(amount) {
        let numberedValue = `${amount}`;
        if (typeof amount == 'string') {
            numberedValue = amount.replace(',', '.');
        }
        const numberedAmount = parseFloat(this.getUnmaskedAmount(numberedValue));
        return Math.round(numberedAmount * 100) / 100;
    }
    // formatAmount(amount: number | string, fixedZeroes?: boolean): string {
    //   if (amount) {
    //     // separator.2 issue with digits after dot
    //     return this.maskPipe
    //       .transform(
    //         fixedZeroes ? toFixedTrunc(amount, 2) : toFixedTrim(amount, 2),
    //         'separator.2'
    //       )
    //       .replace('.', ',');
    //   }
    //   return `0`;
    // }
    formatAmount(amount, fixedZeroes) {
        if (amount) {
            // separator.2 issues with digits after dot:
            // https://github.com/JsDaddy/ngx-mask/issues?q=is%3Aissue+is%3Aopen+separator.2
            const [integers, decimals] = (fixedZeroes ? (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.toFixedTrunc)(amount, 2) : (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.toFixedTrim)(amount, 2))
                .split('.');
            return this.maskPipe.transform(integers, 'separator') + ',' + (decimals !== null && decimals !== void 0 ? decimals : '00');
        }
        return `0`;
    }
};
MaskedService.ctorParameters = () => [
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_2__.MaskPipe }
];
MaskedService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
        providedIn: 'root',
    })
], MaskedService);



/***/ }),

/***/ 31475:
/*!*****************************************!*\
  !*** ./src/app/shared/masked/masked.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Masks": () => (/* binding */ Masks)
/* harmony export */ });
const Masks = {
    amount: {
        mask: '0*,99',
        separator: ' ',
        /**
         * @todo how about USD amount?
         */
        suffix: ' ₸',
    },
    amountSeparated: {
        mask: 'separator.2',
        separator: ' ',
        /**
         * @todo how about USD amount?
         */
        suffix: ' ₸',
    },
    phone: {
        mask: '(000) 000 00 00',
        shadow: '(___) ___ __ __',
    },
    phoneKz: {
        prefix: '+7',
        mask: ' (000) 000 00 00',
        shadow: '+7 (___) ___ __ __',
    },
    foreignPhone: {
        prefix: '+',
        mask: '9{14}'
    },
    loginPhoneKz: {
        prefix: '+',
        mask: '0 (000) 000 00 00',
        shadow: '+7 (___) ___ __ __'
    },
    sms: {
        mask: '000000',
        shadow: '••••••',
    },
    jmartSms: {
        mask: '0000',
        shadow: '••••',
    },
    iin: {
        prefix: '',
        mask: '0000 0000 0000',
        shadow: '____ ____ ____',
    },
    account: {
        prefix: '',
        shadow: '____ ____ ____ ____ ____',
        mask: 'II00 000I IIII IIII IIII',
    },
    tengeAccount: {
        prefix: 'KZ',
        shadow: '____ ____ ____ ____ ____',
        mask: '00 000I IIII IIII IIII',
    },
    foreignAccount: {
        prefix: '',
        mask: 'a*',
    },
    russianAccount: {
        prefix: '',
        mask: '0000 0000 0000 0000 0000',
    },
    iban: {
        prefix: 'KZ',
        shadow: '__ ____ ____ ____ ____',
        mask: '00 IIII IIII IIII IIII',
    },
    kbe: {
        shadow: '__',
        mask: '00',
    },
    knp: {
        shadow: '___',
        mask: '000',
    },
    kbk: {
        shadow: '______',
        mask: '000000',
    },
    /**
     * @todo vin format?
     */
    vin: {
        shadow: '',
        mask: 'aaaaaaaaaaaaaaaaa',
    },
    protocol: {
        mask: 'c*',
    },
    /**
     * @todo six or eight digits max?
     */
    paymentNum: {
        mask: '099999',
    },
    date: {
        mask: '00.00.0000',
        shadow: '__.__.____',
    },
    foreignLatin: {
        mask: 'f*',
    },
    foreignCyrillic: {
        mask: 'F*',
    },
    latin: {
        mask: 's*',
    },
    namedDate: {
        mask: 'ДД.ММ.ГГГГ',
        shadow: '__.__.____',
    },
    kvo: {
        mask: '00000',
    },
    kio: {
        mask: '0*',
    },
    kpp: {
        mask: '000000000',
        shadow: '_________',
    },
    oktmo: {
        mask: '00000000',
        shadow: '________',
    },
    basis: {
        mask: 'rr',
        shadow: '__',
    },
    budgetDocNumber: {
        mask: 'FFFFFFFFFFFFFFF',
        shadow: '_______________',
    },
    budgetPeriod: {
        mask: 'RR.00.0000',
        shadow: '__.__.____',
    },
    dayTime: {
        mask: '00:00',
    },
    daysCount: {
        mask: '00',
    }
};


/***/ }),

/***/ 34469:
/*!**********************************************************************!*\
  !*** ./src/app/shared/modals/import-error/import-error.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImportErrorComponent": () => (/* binding */ ImportErrorComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _import_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import-error.component.html?ngResource */ 57466);
/* harmony import */ var _import_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import-error.component.scss?ngResource */ 26057);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);





let ImportErrorComponent = class ImportErrorComponent {
    constructor(modal) {
        this.modal = modal;
        this.descriptionKey = 'FAILED';
    }
    dismissModal() {
        this.modal.dismiss();
    }
    closeModal() {
        this.modal.close();
    }
    get title() {
        return `IMPORT.${this.descriptionKey}.TITLE`;
    }
    get errorDescription() {
        if (this.filesCount === 1) {
            return `IMPORT.${this.descriptionKey}.ONE`;
        }
        else {
            return `IMPORT.${this.descriptionKey}.OTHER`;
        }
    }
};
ImportErrorComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbActiveModal }
];
ImportErrorComponent.propDecorators = {
    filesCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    errorText: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    descriptionKey: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
ImportErrorComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-import-error',
        template: _import_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_import_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ImportErrorComponent);



/***/ }),

/***/ 41865:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-error/import-partial-error.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImportPartialErrorComponent": () => (/* binding */ ImportPartialErrorComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _import_partial_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import-partial-error.component.html?ngResource */ 10254);
/* harmony import */ var _import_partial_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import-partial-error.component.scss?ngResource */ 67090);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);






let ImportPartialErrorComponent = class ImportPartialErrorComponent {
    constructor(modal) {
        this.modal = modal;
    }
    dismissModal() {
        this.modal.dismiss();
    }
    closeModal() {
        this.modal.close();
    }
    get draftedText() {
        switch (this.draftedOperationsCount % 20) {
            case 1:
                return 'IMPORT.DRAFTED.ONE';
            case 2:
            case 3:
            case 4:
                return 'IMPORT.DRAFTED.FEW';
            default:
                return 'IMPORT.DRAFTED.OTHER';
        }
    }
    get draftedTranslateParams() {
        return {
            operationsCount: this.draftedOperationsCount,
        };
    }
    get erroredText() {
        switch (this.erroredOperationsCount % 20) {
            case 1:
                return 'IMPORT.ERRORED.ONE';
            case 2:
            case 3:
            case 4:
                return 'IMPORT.ERRORED.FEW';
            default:
                return 'IMPORT.ERRORED.OTHER';
        }
    }
    get erroredTranslateParams() {
        return {
            operationsCount: this.erroredOperationsCount,
        };
    }
    get invalidText() {
        switch (this.invalidFilesCount % 20) {
            case 1:
                return 'IMPORT.INVALID.ONE';
            case 2:
            case 3:
            case 4:
                return 'IMPORT.INVALID.FEW';
            default:
                return 'IMPORT.INVALID.OTHER';
        }
    }
    get hasInvalidDateWarning() {
        let result = false;
        this.importResultList.forEach((item) => {
            if (result) {
                return result;
            }
            if (item.hasInvalidValueDate) {
                result = true;
            }
        });
        return result;
    }
    get alreadyImported() {
        const alreadyImportedCount = this.alreadyImportedList.length;
        switch (alreadyImportedCount) {
            case 1:
                return 'IMPORT.ALREADY_IMPORTED_WARNING.ONE';
            default:
                return 'IMPORT.ALREADY_IMPORTED_WARNING.OTHER';
        }
    }
    get alreadyImportedParams() {
        return {
            fileNames: this.alreadyImportedList.map((item, index) => {
                return `"${item.filename}"`;
            }),
        };
    }
    get alreadyImportedList() {
        return (this.importResultList.filter((item) => item.status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.IMPORT_STATUS.ALREADY_IMPORTED) || []);
    }
    get hasAlreadyImportedWarning() {
        return this.alreadyImportedList.length > 0;
    }
    get invalidTranslateParams() {
        return {
            filesCount: this.invalidFilesCount,
        };
    }
    fileTranslateParams(error) {
        return {
            fileName: error === null || error === void 0 ? void 0 : error.filename,
        };
    }
    getCollectedErrors(importResultList) {
        let collected = [];
        importResultList.forEach((importResult) => {
            var _a;
            collected = collected.concat((_a = importResult.failed) === null || _a === void 0 ? void 0 : _a.map((error) => {
                error.filename = importResult.filename;
                return error;
            }));
        });
        return collected;
    }
    mapError(error) {
        return `IMPORT.ERRORS.${error}`;
    }
};
ImportPartialErrorComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal }
];
ImportPartialErrorComponent.propDecorators = {
    importResultList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    invalidFilesCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    draftedOperationsCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    erroredOperationsCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
ImportPartialErrorComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-import-partial-error',
        template: _import_partial_error_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_import_partial_error_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ImportPartialErrorComponent);



/***/ }),

/***/ 41541:
/*!******************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-success/import-partial-success.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImportPartialSuccessComponent": () => (/* binding */ ImportPartialSuccessComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _import_partial_success_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import-partial-success.component.html?ngResource */ 13843);
/* harmony import */ var _import_partial_success_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import-partial-success.component.scss?ngResource */ 45713);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _import_partial_error_import_partial_error_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../import-partial-error/import-partial-error.component */ 41865);






let ImportPartialSuccessComponent = class ImportPartialSuccessComponent extends _import_partial_error_import_partial_error_component__WEBPACK_IMPORTED_MODULE_2__.ImportPartialErrorComponent {
    constructor(modal) {
        super(modal);
        this.modal = modal;
    }
    get successText() {
        switch (this.successOperationsCount % 20) {
            case 1:
                return 'IMPORT.SUCCESS.ONE';
            case 2:
            case 3:
            case 4:
                return 'IMPORT.SUCCESS.FEW';
            default:
                return 'IMPORT.SUCCESS.OTHER';
        }
    }
    get successTranslateParams() {
        return {
            operationsCount: this.successOperationsCount,
        };
    }
};
ImportPartialSuccessComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal }
];
ImportPartialSuccessComponent.propDecorators = {
    successOperationsCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
ImportPartialSuccessComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-import-partial-success',
        template: _import_partial_success_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_import_partial_success_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ImportPartialSuccessComponent);



/***/ }),

/***/ 52934:
/*!**************************************************************************!*\
  !*** ./src/app/shared/modals/import-success/import-success.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImportSuccessComponent": () => (/* binding */ ImportSuccessComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _import_success_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import-success.component.html?ngResource */ 18014);
/* harmony import */ var _import_success_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import-success.component.scss?ngResource */ 17075);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);






let ImportSuccessComponent = class ImportSuccessComponent {
    constructor(modal, router) {
        this.modal = modal;
        this.router = router;
        this.operationsCount = 0;
    }
    dismissModal() {
        this.modal.dismiss();
    }
    closeModal() {
        this.modal.close();
    }
    get successDescription() {
        switch (this.operationsCount % 20) {
            case 1:
                return 'IMPORT.SUCCESS.ONE';
            case 2:
            case 3:
            case 4:
                return 'IMPORT.SUCCESS.FEW';
            default:
                return 'IMPORT.SUCCESS.OTHER';
        }
    }
    get translateParams() {
        return {
            operationsCount: this.operationsCount,
        };
    }
    navigateToSigned() {
        this.router.navigate(['/history/tenge', {}]);
    }
};
ImportSuccessComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbActiveModal },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__.Router }
];
ImportSuccessComponent.propDecorators = {
    operationsCount: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
ImportSuccessComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-import-success',
        template: _import_success_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_import_success_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ImportSuccessComponent);



/***/ }),

/***/ 24358:
/*!****************************************!*\
  !*** ./src/app/shared/modals/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHARED_MODALS": () => (/* binding */ SHARED_MODALS),
/* harmony export */   "ImportSuccessComponent": () => (/* reexport safe */ _import_success_import_success_component__WEBPACK_IMPORTED_MODULE_0__.ImportSuccessComponent),
/* harmony export */   "ImportPartialSuccessComponent": () => (/* reexport safe */ _import_partial_success_import_partial_success_component__WEBPACK_IMPORTED_MODULE_1__.ImportPartialSuccessComponent),
/* harmony export */   "ImportPartialErrorComponent": () => (/* reexport safe */ _import_partial_error_import_partial_error_component__WEBPACK_IMPORTED_MODULE_2__.ImportPartialErrorComponent),
/* harmony export */   "ImportErrorComponent": () => (/* reexport safe */ _import_error_import_error_component__WEBPACK_IMPORTED_MODULE_3__.ImportErrorComponent),
/* harmony export */   "ListModalComponent": () => (/* reexport safe */ _list_modal_list_modal_component__WEBPACK_IMPORTED_MODULE_4__.ListModalComponent),
/* harmony export */   "MaintenanceModalComponent": () => (/* reexport safe */ _maintenance_modal_maintenance_modal_component__WEBPACK_IMPORTED_MODULE_5__.MaintenanceModalComponent)
/* harmony export */ });
/* harmony import */ var _import_success_import_success_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import-success/import-success.component */ 52934);
/* harmony import */ var _import_partial_success_import_partial_success_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./import-partial-success/import-partial-success.component */ 41541);
/* harmony import */ var _import_partial_error_import_partial_error_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./import-partial-error/import-partial-error.component */ 41865);
/* harmony import */ var _import_error_import_error_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./import-error/import-error.component */ 34469);
/* harmony import */ var _list_modal_list_modal_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list-modal/list-modal.component */ 44415);
/* harmony import */ var _maintenance_modal_maintenance_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./maintenance-modal/maintenance-modal.component */ 24171);






const SHARED_MODALS = [
    _import_success_import_success_component__WEBPACK_IMPORTED_MODULE_0__.ImportSuccessComponent,
    _import_partial_success_import_partial_success_component__WEBPACK_IMPORTED_MODULE_1__.ImportPartialSuccessComponent,
    _import_partial_error_import_partial_error_component__WEBPACK_IMPORTED_MODULE_2__.ImportPartialErrorComponent,
    _import_error_import_error_component__WEBPACK_IMPORTED_MODULE_3__.ImportErrorComponent,
    _list_modal_list_modal_component__WEBPACK_IMPORTED_MODULE_4__.ListModalComponent,
    _maintenance_modal_maintenance_modal_component__WEBPACK_IMPORTED_MODULE_5__.MaintenanceModalComponent,
];








/***/ }),

/***/ 44415:
/*!******************************************************************!*\
  !*** ./src/app/shared/modals/list-modal/list-modal.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListModalComponent": () => (/* binding */ ListModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _list_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list-modal.component.html?ngResource */ 17311);
/* harmony import */ var _list_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list-modal.component.scss?ngResource */ 56792);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);







let ListModalComponent = class ListModalComponent {
    constructor(modal) {
        this.modal = modal;
        this.imagePrefix = '/assets/img/history/modals';
        this.translatePrefix = 'LIST.MODAL';
        this.BULK_OPERATION_STATUS = _shared_models__WEBPACK_IMPORTED_MODULE_2__.BULK_OPERATION_STATUS;
    }
    ngOnInit() {
        switch (this.result.status) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.BULK_OPERATION_STATUS.FAILED:
                this.title = this.mapTranslate(`${this.key}.FAILED.TITLE`);
                this.imgSrc = `${this.imagePrefix}/error.svg`;
                break;
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.BULK_OPERATION_STATUS.PARTLY_SUCCESS:
                this.title = this.mapTranslate(`${this.key}.PARTIAL`);
                this.imgSrc = `${this.imagePrefix}/partial.svg`;
                break;
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.BULK_OPERATION_STATUS.SUCCESS:
                this.title = this.mapTranslate(`${this.key}.SUCCESS.TITLE`);
                this.imgSrc = `${this.imagePrefix}/success.svg`;
                break;
        }
    }
    get successText() {
        var _a;
        switch (((_a = this.result) === null || _a === void 0 ? void 0 : _a.numberOfSuccess) % 10) {
            case 1:
                return this.mapTranslate(`${this.key}.SUCCESS.ONE`);
            case 2:
            case 3:
            case 4:
                return this.mapTranslate(`${this.key}.SUCCESS.FEW`);
            default:
                return this.mapTranslate(`${this.key}.SUCCESS.OTHER`);
        }
    }
    get successParams() {
        var _a;
        return {
            count: (_a = this.result) === null || _a === void 0 ? void 0 : _a.numberOfSuccess,
        };
    }
    get failedText() {
        var _a;
        switch (((_a = this.result) === null || _a === void 0 ? void 0 : _a.numberOfFailed) % 10) {
            case 1:
                return this.mapTranslate(`${this.key}.FAILED.ONE`);
            case 2:
            case 3:
            case 4:
                return this.mapTranslate(`${this.key}.FAILED.FEW`);
            default:
                return this.mapTranslate(`${this.key}.FAILED.OTHER`);
        }
    }
    get failedParams() {
        var _a;
        return {
            count: (_a = this.result) === null || _a === void 0 ? void 0 : _a.numberOfFailed,
        };
    }
    get failedItems() {
        var _a, _b;
        return (_b = (_a = this.result) === null || _a === void 0 ? void 0 : _a.results) === null || _b === void 0 ? void 0 : _b.filter((item) => {
            return item.status === _shared_models__WEBPACK_IMPORTED_MODULE_2__.BULK_OPERATION_STATUS.FAILED;
        });
    }
    getItemTitle(bulkItem) {
        const foundItem = this.list.find((item) => {
            return item.id === bulkItem.itemId;
        });
        if (foundItem) {
            return this.partialTitleFn(foundItem);
        }
        return '';
    }
    dismissModal() {
        this.modal.dismiss();
    }
    closeModal() {
        this.modal.close();
    }
    retrieveErrors(bulkItem) {
        if (bulkItem.errorData) {
            const errors = Object.entries(bulkItem.errorData);
            const mappedErrors = errors.map((item) => {
                return item[1];
            });
            return mappedErrors;
        }
        else if (bulkItem.errorMsg) {
            return [bulkItem.errorMsg];
        }
    }
    mapTranslate(value) {
        return `${this.translatePrefix}.${value}`;
    }
};
ListModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal }
];
ListModalComponent.propDecorators = {
    imagePrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    translatePrefix: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    partialTitleFn: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    key: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    result: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    list: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
ListModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-list-modal',
        template: _list_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_list_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ListModalComponent);



/***/ }),

/***/ 24171:
/*!********************************************************************************!*\
  !*** ./src/app/shared/modals/maintenance-modal/maintenance-modal.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaintenanceModalComponent": () => (/* binding */ MaintenanceModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _maintenance_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maintenance-modal.component.html?ngResource */ 56602);
/* harmony import */ var _maintenance_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maintenance-modal.component.scss?ngResource */ 16093);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);





let MaintenanceModalComponent = class MaintenanceModalComponent {
    constructor(modal) {
        this.modal = modal;
        this.title = 'SHARED.MAINTENANCE.TITLE';
        this.description = 'SHARED.MAINTENANCE.DESCRIPTION';
    }
    dismissModal() {
        this.modal.dismiss();
    }
};
MaintenanceModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbActiveModal }
];
MaintenanceModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-maintenance-modal',
        template: _maintenance_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_maintenance_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], MaintenanceModalComponent);



/***/ }),

/***/ 1152:
/*!***************************************!*\
  !*** ./src/app/shared/models/bulk.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BULK_OPERATION_STATUS": () => (/* binding */ BULK_OPERATION_STATUS)
/* harmony export */ });
var BULK_OPERATION_STATUS;
(function (BULK_OPERATION_STATUS) {
    BULK_OPERATION_STATUS["FAILED"] = "FAILED";
    BULK_OPERATION_STATUS["SUCCESS"] = "SUCCESS";
    BULK_OPERATION_STATUS["PARTLY_SUCCESS"] = "PARTLY_SUCCESS";
})(BULK_OPERATION_STATUS || (BULK_OPERATION_STATUS = {}));


/***/ }),

/***/ 90593:
/*!********************************************!*\
  !*** ./src/app/shared/models/contracts.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FX_CONTRACT_ATTACHMENT_TYPE": () => (/* binding */ FX_CONTRACT_ATTACHMENT_TYPE),
/* harmony export */   "FX_CONTRACT_STATUS": () => (/* binding */ FX_CONTRACT_STATUS)
/* harmony export */ });
var FX_CONTRACT_ATTACHMENT_TYPE;
(function (FX_CONTRACT_ATTACHMENT_TYPE) {
    FX_CONTRACT_ATTACHMENT_TYPE["CONTRACT_TYPE"] = "CONTRACT_TYPE";
    FX_CONTRACT_ATTACHMENT_TYPE["UNK"] = "UNK";
})(FX_CONTRACT_ATTACHMENT_TYPE || (FX_CONTRACT_ATTACHMENT_TYPE = {}));
var FX_CONTRACT_STATUS;
(function (FX_CONTRACT_STATUS) {
    FX_CONTRACT_STATUS["PROCESSING"] = "PROCESSING";
    FX_CONTRACT_STATUS["REGISTERED"] = "REGISTERED";
    FX_CONTRACT_STATUS["REGED"] = "REGED";
    FX_CONTRACT_STATUS["REJECTED"] = "REJECTED";
    FX_CONTRACT_STATUS["CLOSED"] = "CLOSED";
    FX_CONTRACT_STATUS["ON_SIGN"] = "ON_SIGN";
})(FX_CONTRACT_STATUS || (FX_CONTRACT_STATUS = {}));


/***/ }),

/***/ 22544:
/*!*********************************************!*\
  !*** ./src/app/shared/models/dictionary.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 88389:
/*!***************************************!*\
  !*** ./src/app/shared/models/file.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 73540:
/*!*****************************************!*\
  !*** ./src/app/shared/models/import.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IMPORT_ERROR_STATUS": () => (/* binding */ IMPORT_ERROR_STATUS),
/* harmony export */   "IMPORT_STATUS": () => (/* binding */ IMPORT_STATUS)
/* harmony export */ });
var IMPORT_ERROR_STATUS;
(function (IMPORT_ERROR_STATUS) {
    IMPORT_ERROR_STATUS["FAILED"] = "FAILED";
    IMPORT_ERROR_STATUS["DRAFT"] = "DRAFT";
})(IMPORT_ERROR_STATUS || (IMPORT_ERROR_STATUS = {}));
var IMPORT_STATUS;
(function (IMPORT_STATUS) {
    IMPORT_STATUS["ALREADY_IMPORTED"] = "ALREADY_IMPORTED";
    IMPORT_STATUS["INVALID_FORMAT"] = "INVALID_FORMAT";
    IMPORT_STATUS["SUCCESS"] = "SUCCESS";
})(IMPORT_STATUS || (IMPORT_STATUS = {}));


/***/ }),

/***/ 63157:
/*!****************************************!*\
  !*** ./src/app/shared/models/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AUTHORITY_TYPE": () => (/* reexport safe */ _user__WEBPACK_IMPORTED_MODULE_1__.AUTHORITY_TYPE),
/* harmony export */   "SIGNATURE_SCHEME": () => (/* reexport safe */ _user__WEBPACK_IMPORTED_MODULE_1__.SIGNATURE_SCHEME),
/* harmony export */   "USER_STATUS": () => (/* reexport safe */ _user__WEBPACK_IMPORTED_MODULE_1__.USER_STATUS),
/* harmony export */   "User": () => (/* reexport safe */ _user__WEBPACK_IMPORTED_MODULE_1__.User),
/* harmony export */   "COLVIR_CODE": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.COLVIR_CODE),
/* harmony export */   "FOREIGN_PAYMENT_TYPE": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.FOREIGN_PAYMENT_TYPE),
/* harmony export */   "HISTORY_PAYMENT_STATE": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.HISTORY_PAYMENT_STATE),
/* harmony export */   "PAYMENT_CATEGORY": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_CATEGORY),
/* harmony export */   "PAYMENT_STATUS": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS),
/* harmony export */   "PAYMENT_TYPE": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE),
/* harmony export */   "SPECIAL_ACCOUNTS": () => (/* reexport safe */ _payment__WEBPACK_IMPORTED_MODULE_2__.SPECIAL_ACCOUNTS),
/* harmony export */   "SMS_CODE_LENGTH": () => (/* reexport safe */ _sms__WEBPACK_IMPORTED_MODULE_3__.SMS_CODE_LENGTH),
/* harmony export */   "SMS_ERROR_TYPES": () => (/* reexport safe */ _sms__WEBPACK_IMPORTED_MODULE_3__.SMS_ERROR_TYPES),
/* harmony export */   "SMS_TABS": () => (/* reexport safe */ _sms__WEBPACK_IMPORTED_MODULE_3__.SMS_TABS),
/* harmony export */   "SMS_TIMER_COUNTDOWN": () => (/* reexport safe */ _sms__WEBPACK_IMPORTED_MODULE_3__.SMS_TIMER_COUNTDOWN),
/* harmony export */   "TOKEN_TYPE": () => (/* reexport safe */ _token__WEBPACK_IMPORTED_MODULE_4__.TOKEN_TYPE),
/* harmony export */   "IMPORT_ERROR_STATUS": () => (/* reexport safe */ _import__WEBPACK_IMPORTED_MODULE_5__.IMPORT_ERROR_STATUS),
/* harmony export */   "IMPORT_STATUS": () => (/* reexport safe */ _import__WEBPACK_IMPORTED_MODULE_5__.IMPORT_STATUS),
/* harmony export */   "FX_CONTRACT_ATTACHMENT_TYPE": () => (/* reexport safe */ _contracts__WEBPACK_IMPORTED_MODULE_6__.FX_CONTRACT_ATTACHMENT_TYPE),
/* harmony export */   "FX_CONTRACT_STATUS": () => (/* reexport safe */ _contracts__WEBPACK_IMPORTED_MODULE_6__.FX_CONTRACT_STATUS),
/* harmony export */   "BULK_OPERATION_STATUS": () => (/* reexport safe */ _bulk__WEBPACK_IMPORTED_MODULE_9__.BULK_OPERATION_STATUS),
/* harmony export */   "LETTER_STATUS": () => (/* reexport safe */ _letter__WEBPACK_IMPORTED_MODULE_10__.LETTER_STATUS),
/* harmony export */   "SIGNATURE_TYPE": () => (/* reexport safe */ _signature__WEBPACK_IMPORTED_MODULE_11__.SIGNATURE_TYPE),
/* harmony export */   "OTP_STATUS": () => (/* reexport safe */ _otp__WEBPACK_IMPORTED_MODULE_12__.OTP_STATUS)
/* harmony export */ });
/* harmony import */ var _dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dictionary */ 22544);
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user */ 90193);
/* harmony import */ var _payment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./payment */ 7102);
/* harmony import */ var _sms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sms */ 35797);
/* harmony import */ var _token__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./token */ 99255);
/* harmony import */ var _import__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./import */ 73540);
/* harmony import */ var _contracts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contracts */ 90593);
/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./file */ 88389);
/* harmony import */ var _statuses__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./statuses */ 81070);
/* harmony import */ var _bulk__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bulk */ 1152);
/* harmony import */ var _letter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./letter */ 41959);
/* harmony import */ var _signature__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./signature */ 1848);
/* harmony import */ var _otp__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./otp */ 52648);















/***/ }),

/***/ 41959:
/*!*****************************************!*\
  !*** ./src/app/shared/models/letter.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LETTER_STATUS": () => (/* binding */ LETTER_STATUS)
/* harmony export */ });
var LETTER_STATUS;
(function (LETTER_STATUS) {
    LETTER_STATUS["DRAFT"] = "DRAFT";
    LETTER_STATUS["ON_SIGN"] = "ON_SIGN";
    LETTER_STATUS["READY_TO_SEND"] = "READY_TO_SEND";
    LETTER_STATUS["SENT"] = "SENT";
})(LETTER_STATUS || (LETTER_STATUS = {}));


/***/ }),

/***/ 52648:
/*!**************************************!*\
  !*** ./src/app/shared/models/otp.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OTP_STATUS": () => (/* binding */ OTP_STATUS)
/* harmony export */ });
var OTP_STATUS;
(function (OTP_STATUS) {
    OTP_STATUS["ASSIGNED"] = "ASSIGNED";
    OTP_STATUS["UNASSIGNED"] = "UNASSIGNED";
    OTP_STATUS["NOT_ENOUGH_DATA"] = "NOT_ENOUGH_DATA";
})(OTP_STATUS || (OTP_STATUS = {}));


/***/ }),

/***/ 7102:
/*!******************************************!*\
  !*** ./src/app/shared/models/payment.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PAYMENT_STATUS": () => (/* binding */ PAYMENT_STATUS),
/* harmony export */   "PAYMENT_CATEGORY": () => (/* binding */ PAYMENT_CATEGORY),
/* harmony export */   "PAYMENT_TYPE": () => (/* binding */ PAYMENT_TYPE),
/* harmony export */   "SPECIAL_ACCOUNTS": () => (/* binding */ SPECIAL_ACCOUNTS),
/* harmony export */   "HISTORY_PAYMENT_STATE": () => (/* binding */ HISTORY_PAYMENT_STATE),
/* harmony export */   "FOREIGN_PAYMENT_TYPE": () => (/* binding */ FOREIGN_PAYMENT_TYPE),
/* harmony export */   "COLVIR_CODE": () => (/* binding */ COLVIR_CODE)
/* harmony export */ });
var PAYMENT_STATUS;
(function (PAYMENT_STATUS) {
    // Черновики
    PAYMENT_STATUS["DRAFT"] = "DRAFT";
    // На подпись
    PAYMENT_STATUS["CREATED"] = "CREATED";
    // В обработке
    PAYMENT_STATUS["READY_TO_SEND"] = "READY_TO_SEND";
    PAYMENT_STATUS["IN_BANK"] = "IN_BANK";
    PAYMENT_STATUS["BANK_PROCESSING"] = "BANK_PROCESSING";
    PAYMENT_STATUS["BANK_SENT"] = "BANK_SENT";
    // Исполненные
    PAYMENT_STATUS["BANK_COMPLETED"] = "BANK_COMPLETED";
    // Отклоненные
    PAYMENT_STATUS["REJECTED"] = "REJECTED";
    PAYMENT_STATUS["TRANSFER_ROLLBACK"] = "TRANSFER_ROLLBACK";
})(PAYMENT_STATUS || (PAYMENT_STATUS = {}));
var PAYMENT_CATEGORY;
(function (PAYMENT_CATEGORY) {
    PAYMENT_CATEGORY["ALL"] = "ALL";
    PAYMENT_CATEGORY["DOMESTIC"] = "DOMESTIC";
    PAYMENT_CATEGORY["FOREIGN"] = "FOREIGN";
    PAYMENT_CATEGORY["CONVERSION"] = "CONVERSION";
})(PAYMENT_CATEGORY || (PAYMENT_CATEGORY = {}));
var PAYMENT_TYPE;
(function (PAYMENT_TYPE) {
    PAYMENT_TYPE["INTERNAL"] = "INTERNAL";
    PAYMENT_TYPE["EXTERNAL"] = "EXTERNAL";
    PAYMENT_TYPE["TAX"] = "TAX";
    PAYMENT_TYPE["PENSION"] = "PENSION";
    PAYMENT_TYPE["SOCIAL"] = "SOCIAL";
    PAYMENT_TYPE["MEDICAL"] = "MEDICAL";
    PAYMENT_TYPE["SALARY"] = "SALARY";
    // internal. Pick knp from dict;
    PAYMENT_TYPE["REGULAR_PAYMENT_ORDER"] = "REGULAR_PAYMENT_ORDER";
    // transfers
    PAYMENT_TYPE["IN_BETWEEN"] = "IN_BETWEEN";
    PAYMENT_TYPE["CARD_TO_ACCOUNT"] = "CARD_TO_ACCOUNT";
    PAYMENT_TYPE["ACCOUNT_TO_CARD"] = "ACCOUNT_TO_CARD";
    PAYMENT_TYPE["CARD_TO_CARD"] = "CARD_TO_CARD";
    PAYMENT_TYPE["FOREIGN"] = "FOREIGN";
    PAYMENT_TYPE["CONVERSION"] = "CONVERSION";
    PAYMENT_TYPE["DEPOSIT_WITHDRAWAL"] = "DEPOSIT_WITHDRAWAL";
    PAYMENT_TYPE["DEPOSIT_REPLENISHMENT"] = "DEPOSIT_REPLENISHMENT";
})(PAYMENT_TYPE || (PAYMENT_TYPE = {}));
var SPECIAL_ACCOUNTS;
(function (SPECIAL_ACCOUNTS) {
    SPECIAL_ACCOUNTS["TAX_ACCOUNT"] = "KZ24070105KSN0000000";
})(SPECIAL_ACCOUNTS || (SPECIAL_ACCOUNTS = {}));
var HISTORY_PAYMENT_STATE;
(function (HISTORY_PAYMENT_STATE) {
    HISTORY_PAYMENT_STATE["WAITING_FOR_TRANSACTION"] = "WAITING_FOR_TRANSACTION";
    HISTORY_PAYMENT_STATE["WAITING_FOR_DEPOSIT"] = "WAITING_FOR_DEPOSIT";
    HISTORY_PAYMENT_STATE["WAITING_FOR_UNLOCK"] = "WAITING_FOR_UNLOCK";
    HISTORY_PAYMENT_STATE["WAITING_FOR_VALUE_DATE"] = "WAITING_FOR_VALUE_DATE";
    HISTORY_PAYMENT_STATE["REJECTED_FOR_UNSUFFICIENT_SIGNATURES"] = "REJECTED_FOR_UNSUFFICIENT_SIGNATURES";
    HISTORY_PAYMENT_STATE["REJECTED_FOR_EXPIRATION"] = "REJECTED_FOR_EXPIRATION";
    HISTORY_PAYMENT_STATE["MIGRATED"] = "MIGRATED";
    HISTORY_PAYMENT_STATE["AML_VERIFICATION"] = "AML_VERIFICATION";
    HISTORY_PAYMENT_STATE["AML_VERIFICATION_FAILED"] = "AML_VERIFICATION_FAILED";
})(HISTORY_PAYMENT_STATE || (HISTORY_PAYMENT_STATE = {}));
var FOREIGN_PAYMENT_TYPE;
(function (FOREIGN_PAYMENT_TYPE) {
    FOREIGN_PAYMENT_TYPE["OUR"] = "OUR";
    FOREIGN_PAYMENT_TYPE["SHA"] = "SHA";
})(FOREIGN_PAYMENT_TYPE || (FOREIGN_PAYMENT_TYPE = {}));
var COLVIR_CODE;
(function (COLVIR_CODE) {
    COLVIR_CODE["NOT_BOOKED"] = "NOT_BOOKED";
})(COLVIR_CODE || (COLVIR_CODE = {}));


/***/ }),

/***/ 1848:
/*!********************************************!*\
  !*** ./src/app/shared/models/signature.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SIGNATURE_TYPE": () => (/* binding */ SIGNATURE_TYPE)
/* harmony export */ });
var SIGNATURE_TYPE;
(function (SIGNATURE_TYPE) {
    SIGNATURE_TYPE["LETTER"] = "LETTER";
    SIGNATURE_TYPE["PAYMENT"] = "PAYMENT";
})(SIGNATURE_TYPE || (SIGNATURE_TYPE = {}));


/***/ }),

/***/ 35797:
/*!**************************************!*\
  !*** ./src/app/shared/models/sms.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SMS_ERROR_TYPES": () => (/* binding */ SMS_ERROR_TYPES),
/* harmony export */   "SMS_TABS": () => (/* binding */ SMS_TABS),
/* harmony export */   "SMS_CODE_LENGTH": () => (/* binding */ SMS_CODE_LENGTH),
/* harmony export */   "SMS_TIMER_COUNTDOWN": () => (/* binding */ SMS_TIMER_COUNTDOWN)
/* harmony export */ });
var SMS_ERROR_TYPES;
(function (SMS_ERROR_TYPES) {
    SMS_ERROR_TYPES["EXPIRED"] = "expired";
    SMS_ERROR_TYPES["FORBIDDEN"] = "forbidden";
    SMS_ERROR_TYPES["UNKNOWN"] = "unknown";
})(SMS_ERROR_TYPES || (SMS_ERROR_TYPES = {}));
var SMS_TABS;
(function (SMS_TABS) {
    SMS_TABS["FORM"] = "form";
    SMS_TABS["EXPIRED"] = "expired";
    SMS_TABS["FORBIDDEN"] = "forbidden";
    SMS_TABS["FORBIDDEN_BLOCKED"] = "forbidden_blocked";
    SMS_TABS["ERRORED"] = "errored";
})(SMS_TABS || (SMS_TABS = {}));
const SMS_CODE_LENGTH = 6;
const SMS_TIMER_COUNTDOWN = 60;


/***/ }),

/***/ 81070:
/*!*******************************************!*\
  !*** ./src/app/shared/models/statuses.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 99255:
/*!****************************************!*\
  !*** ./src/app/shared/models/token.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TOKEN_TYPE": () => (/* binding */ TOKEN_TYPE)
/* harmony export */ });
var TOKEN_TYPE;
(function (TOKEN_TYPE) {
    TOKEN_TYPE["SMS"] = "PHONE";
    TOKEN_TYPE["OTP"] = "OTP";
    TOKEN_TYPE["EMAIL"] = "EMAIL";
})(TOKEN_TYPE || (TOKEN_TYPE = {}));


/***/ }),

/***/ 90193:
/*!***************************************!*\
  !*** ./src/app/shared/models/user.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "User": () => (/* binding */ User),
/* harmony export */   "USER_STATUS": () => (/* binding */ USER_STATUS),
/* harmony export */   "AUTHORITY_TYPE": () => (/* binding */ AUTHORITY_TYPE),
/* harmony export */   "SIGNATURE_SCHEME": () => (/* binding */ SIGNATURE_SCHEME)
/* harmony export */ });
class User {
}
var USER_STATUS;
(function (USER_STATUS) {
    USER_STATUS["ACTIVE"] = "ACTIVE";
    USER_STATUS["INACTIVE"] = "INACTIVE";
})(USER_STATUS || (USER_STATUS = {}));
var AUTHORITY_TYPE;
(function (AUTHORITY_TYPE) {
    AUTHORITY_TYPE["PRIMARY_SIGNATURE"] = "PRIMARY_SIGNATURE";
    AUTHORITY_TYPE["SECONDARY_SIGNATURE"] = "SECONDARY_SIGNATURE";
    AUTHORITY_TYPE["NO_SIGNATURE"] = "NO_SIGNATURE";
})(AUTHORITY_TYPE || (AUTHORITY_TYPE = {}));
var SIGNATURE_SCHEME;
(function (SIGNATURE_SCHEME) {
    SIGNATURE_SCHEME["MULTIPLE_SIGN"] = "MULTIPLE_SIGN";
    SIGNATURE_SCHEME["SINGLE_SIGN"] = "SINGLE_SIGN";
})(SIGNATURE_SCHEME || (SIGNATURE_SCHEME = {}));


/***/ }),

/***/ 91062:
/*!*************************************!*\
  !*** ./src/app/shared/nav/index.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NAV_COMPONENTS": () => (/* binding */ NAV_COMPONENTS)
/* harmony export */ });
/* harmony import */ var _nav_auth_nav_auth_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav-auth/nav-auth.component */ 91888);
/* harmony import */ var _nav_item_nav_item_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav-item/nav-item.component */ 24471);
/* harmony import */ var _nav_main_nav_main_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nav-main/nav-main.component */ 77337);



const NAV_COMPONENTS = [_nav_auth_nav_auth_component__WEBPACK_IMPORTED_MODULE_0__.NavAuthComponent, _nav_main_nav_main_component__WEBPACK_IMPORTED_MODULE_2__.NavMainComponent, _nav_item_nav_item_component__WEBPACK_IMPORTED_MODULE_1__.NavItemComponent];


/***/ }),

/***/ 91888:
/*!***********************************************************!*\
  !*** ./src/app/shared/nav/nav-auth/nav-auth.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavAuthComponent": () => (/* binding */ NavAuthComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _nav_auth_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav-auth.component.html?ngResource */ 96297);
/* harmony import */ var _nav_auth_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav-auth.component.scss?ngResource */ 23705);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _nav_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nav.service */ 77501);






let NavAuthComponent = class NavAuthComponent {
    constructor(navService) {
        this.navService = navService;
        this.navList = this.navService.registerList;
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
    }
    ngOnInit() {
        const navSubscription = this.navService
            .getRegisterList()
            .subscribe((navList) => {
            this.navList = navList;
        });
        this.subs.add(navSubscription);
        const showNoAccountSubscription = this.navService.showNoAccount.subscribe((data) => {
            this.showNoAccount = data;
        });
        this.subs.add(showNoAccountSubscription);
        const showNoEmailSubscription = this.navService.showNoEmail.subscribe((data) => {
            this.showNoEmail = data;
        });
        this.subs.add(showNoEmailSubscription);
        const showUserBlockedSubscription = this.navService.showUserBlocked.subscribe((data) => {
            this.showUserBlocked = data;
        });
        this.subs.add(showUserBlockedSubscription);
        const showPhoneNotMatchSubscription = this.navService.showPhoneNotMatch.subscribe((data) => {
            this.showPhoneNotMatch = data;
        });
        this.subs.add(showPhoneNotMatchSubscription);
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
    navItemClick(event) {
        event.preventDefault();
    }
};
NavAuthComponent.ctorParameters = () => [
    { type: _nav_service__WEBPACK_IMPORTED_MODULE_2__.NavService }
];
NavAuthComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-nav-auth',
        template: _nav_auth_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_nav_auth_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NavAuthComponent);



/***/ }),

/***/ 24471:
/*!***********************************************************!*\
  !*** ./src/app/shared/nav/nav-item/nav-item.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavItemComponent": () => (/* binding */ NavItemComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _nav_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav-item.component.html?ngResource */ 70090);
/* harmony import */ var _nav_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav-item.component.scss?ngResource */ 94241);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _nav_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nav.service */ 77501);






let NavItemComponent = class NavItemComponent {
    constructor(navService) {
        this.navService = navService;
        this.depth = 0;
        this.state = null;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    onItemClick() {
        this.navService.updateBadges();
    }
};
NavItemComponent.ctorParameters = () => [
    { type: _nav_service__WEBPACK_IMPORTED_MODULE_2__.NavService }
];
NavItemComponent.propDecorators = {
    navItem: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    depth: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
NavItemComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-nav-item',
        template: _nav_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewEncapsulation.None,
        styles: [_nav_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NavItemComponent);



/***/ }),

/***/ 77337:
/*!***********************************************************!*\
  !*** ./src/app/shared/nav/nav-main/nav-main.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavMainComponent": () => (/* binding */ NavMainComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _nav_main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav-main.component.html?ngResource */ 42017);
/* harmony import */ var _nav_main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav-main.component.scss?ngResource */ 88515);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _feature_flags_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @feature-flags/index */ 15057);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _nav_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../nav.service */ 77501);








const NAV_LIST = [
    {
        id: 'home',
        title: 'HOME.TITLE',
        url: '/accounts',
        disabled: false,
        badge: 0,
    },
    {
        id: 'history',
        title: 'HISTORY.TITLE',
        url: '/history',
        disabled: false,
        badge: 0,
    },
    // {
    //   id: 'history2',
    //   title: 'HISTORY.TITLE',
    //   url: '/history2',
    //   disabled: false,
    //   badge: 0,
    // },
    {
        id: 'contracts',
        title: 'CONTRACTS.TITLE',
        url: '/contracts',
        disabled: false,
        badge: 0,
    },
    {
        id: 'letters',
        title: 'LETTERS.TITLE',
        url: '/letters',
        disabled: false,
        badge: 0,
    },
    {
        id: 'directory',
        title: 'DIRECTORY.TITLE',
        url: '/directory',
        disabled: false,
        badge: 0,
    },
    {
        id: 'settings',
        title: 'SETTINGS.TITLE',
        url: '/settings',
        disabled: false,
        badge: 0,
    },
    {
        id: 'landing',
        title: 'JMART.NAV.TITLE',
        url: '/jmart/landing',
        disabled: false,
        badge: 'new',
    },
    {
        id: 'extraSettings',
        title: 'EXTRA_SETTINGS.TITLE',
        url: '/extraSettings',
        disabled: false,
        badge: 0,
        isCollapsed: false,
        children: [{
                id: 'faq',
                title: 'SETTINGS.FAQ.TITLE',
                url: '/extraSettings/faq',
                disabled: false,
                badge: 0
            },
            {
                id: 'feature-request',
                title: 'SETTINGS.FEATURE_REQUEST.TITLE',
                url: '/extraSettings/feature-request',
                disabled: false,
                badge: 0
            }]
    },
];
let NavMainComponent = class NavMainComponent {
    constructor(navService, featureFlagsService, router) {
        this.navService = navService;
        this.featureFlagsService = featureFlagsService;
        this.router = router;
        this.navList = NAV_LIST;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subscription();
        this.checkAndClearIfDisabled([
            [_feature_flags_index__WEBPACK_IMPORTED_MODULE_2__.FEATURE_FLAG.LETTER, 'letters'],
            [_feature_flags_index__WEBPACK_IMPORTED_MODULE_2__.FEATURE_FLAG.JUSAN_MARKET, 'landing'],
        ]);
        this.navService.getLetterBadges().subscribe((badges) => {
            this.updateNavItem('letters', {
                badge: badges ? badges.unread + badges.onSignForMe : null,
            });
        });
        this.navService.getContractBadges().subscribe((badges) => {
            this.updateNavItem('contracts', {
                badge: badges ? badges.onSignForMe : null,
            });
        });
    }
    checkAndClearIfDisabled(flags) {
        if (this.featureFlagsService.featureFlags$.isStopped) {
            flags.forEach(([flag, navItemId]) => {
                const isDisabled = this.featureFlagsService.isDisabled(flag);
                if (isDisabled) {
                    this.navList = this.navList.filter((navItem) => navItem.id != navItemId);
                }
            });
        }
        else {
            this.featureFlagsService.featureFlags$.subscribe({
                complete: () => {
                    this.checkAndClearIfDisabled(flags);
                }
            });
        }
    }
    updateNavItem(id, values) {
        if (this.featureFlagsService.isDisabled(_feature_flags_index__WEBPACK_IMPORTED_MODULE_2__.FEATURE_FLAG.LETTER)) {
            return;
        }
        Object.assign(this.navList.find((navItem) => navItem.id === id), Object.assign({}, values));
    }
};
NavMainComponent.ctorParameters = () => [
    { type: _nav_service__WEBPACK_IMPORTED_MODULE_3__.NavService },
    { type: _feature_flags_index__WEBPACK_IMPORTED_MODULE_2__.FeatureFlagsService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute }
];
NavMainComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'j-nav-main',
        template: _nav_main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_nav_main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NavMainComponent);



/***/ }),

/***/ 77501:
/*!*******************************************!*\
  !*** ./src/app/shared/nav/nav.service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NavItem": () => (/* binding */ NavItem),
/* harmony export */   "NavService": () => (/* binding */ NavService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 59151);







class NavItem {
}
let NavService = class NavService {
    constructor(router, apiService, companyService) {
        this.router = router;
        this.apiService = apiService;
        this.companyService = companyService;
        this.registerList = [
            {
                id: 'iin',
                label: 'SHARED.IIN',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
            {
                id: 'phone',
                label: 'SHARED.PHONE',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
            {
                id: 'sms',
                label: 'SHARED.SMS.TITLE',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
            {
                id: 'email',
                label: 'AUTH.EMAIL.CONFIRM',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
            {
                id: 'password',
                label: 'AUTH.PASSWORD.TITLE',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
            {
                id: 'result',
                label: 'SHARED.DONE',
                isPassed: false,
                isActive: false,
                isShown: true,
            },
        ];
        this.showNoAccount$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.showNoEmail$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.showNoIin$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.showPhoneNotMatch$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.showUserBlocked$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.showAlreadyOpened$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.registerList$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.letterBadges$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(null);
        this.contractBadges$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(null);
        this.companyService.refresh$.subscribe((companyRefresh) => {
            // const [routerEvent, companyRefresh] = values;
            const [user, company, isAuthorized] = companyRefresh;
            // if (routerEvent instanceof NavigationEnd) {
            if (isAuthorized) {
                this.retrieveLetterBadges();
                this.retrieveContractBadges();
            }
            else {
                this.updateNavigationLists();
            }
            //   if (
            //     this.shouldUpdateBadges(routerEvent, 'letters') ||
            //     this.letterBadges$.value === null
            //   ) {
            //     this.retrieveLetterBadges();
            //   }
            //   if (
            //     this.shouldUpdateBadges(routerEvent, 'contracts') ||
            //     this.contractBadges$.value === null
            //   ) {
            //     this.retrieveContractBadges();
            //   }
            // }
            // }
        });
    }
    getLetterBadges() {
        return this.letterBadges$.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((badges) => !!badges));
    }
    getContractBadges() {
        return this.contractBadges$
            .asObservable()
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.filter)((badges) => !!badges));
    }
    retrieveLetterBadges() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const url = `companies/${this.companyService.currentId}/letters/badges`;
                const badges = yield this.apiService.get(url);
                this.letterBadges$.next(badges);
            }
            catch (error) {
                this.letterBadges$.next({
                    unread: 0,
                    draft: 0,
                    onSignForOthers: 0,
                    onSignForMe: 0,
                });
            }
        });
    }
    retrieveContractBadges() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const url = `companies/${this.companyService.currentId}/fx-contracts/badges`;
                const badges = yield this.apiService.get(url);
                this.contractBadges$.next(badges);
            }
            catch (error) {
                this.contractBadges$.next({
                    onSignForOthers: 0,
                    onSignForMe: 0,
                });
            }
        });
    }
    getRegisterList() {
        return this.registerList$.asObservable();
    }
    triggerRegisterError(itemId, hasError = true) {
        this.registerList = this.triggerListError(this.registerList, itemId, hasError);
        if (itemId == 'no-account') {
            this.showNoAccount$.next(hasError);
        }
        if (itemId == 'no-email') {
            this.showNoEmail$.next(hasError);
        }
        if (itemId == 'user-blocked') {
            this.showUserBlocked$.next(hasError);
        }
        if (itemId == 'phone-not-match') {
            this.showPhoneNotMatch$.next(hasError);
        }
    }
    triggerActiveItem(itemId) {
        this.registerList = this.triggerListActive(this.registerList, itemId);
    }
    get showNoAccount() {
        return this.showNoAccount$.asObservable();
    }
    get showNoEmail() {
        return this.showNoEmail$.asObservable();
    }
    get showNoIin() {
        return this.showNoIin$.asObservable();
    }
    get showUserBlocked() {
        return this.showUserBlocked$.asObservable();
    }
    get showPhoneNotMatch() {
        return this.showPhoneNotMatch$.asObservable();
    }
    get showAlreadyOpened() {
        return this.showAlreadyOpened$.asObservable();
    }
    updateBadges() {
        this.retrieveLetterBadges();
        this.retrieveContractBadges();
    }
    // private shouldUpdateBadges(routerEvent: NavigationEnd, targetRoute: string) {
    //   const routes = routerEvent.url.split('/').filter((item) => !!item);
    //   console.log(routes);
    //   return routes[0] == targetRoute && routes.length > 1;
    // }
    triggerListError(list, itemId, hasError) {
        return list.map((navItem) => {
            if (navItem.id === itemId) {
                navItem.hasError = hasError;
            }
            return navItem;
        });
    }
    triggerListActive(list, itemId) {
        let foundCurrentItem = false;
        return list.map((navItem) => {
            navItem.isActive = !foundCurrentItem;
            if (navItem.id === itemId) {
                foundCurrentItem = true;
                navItem.isActive = true;
            }
            return navItem;
        });
    }
    updateNavigationLists() {
        this.registerList = this.updateList(this.registerList);
        this.registerList$.next(this.registerList);
    }
    updateList(navList) {
        let isShownNextValue = true;
        const result = [];
        navList.map((navItem) => {
            const itemIndex = navList.indexOf(navItem);
            const currentIndex = navList.findIndex((item) => {
                return this.routeLastChuck.includes(item.id);
            });
            navItem.isActive = itemIndex === currentIndex;
            navItem.isPassed = itemIndex < currentIndex;
            navItem.isShown = navItem.isActive || isShownNextValue;
            if (navItem.id == 'result' && navItem.isActive == true) {
                navItem.isPassed = true;
            }
            if (navItem.hasError) {
                isShownNextValue = false;
            }
            result.push(navItem);
        });
        return result;
    }
    get routeLastChuck() {
        const currentUrlFull = this.router.url.split('/');
        const currentUrl = currentUrlFull[currentUrlFull.length - 1];
        return currentUrl;
    }
};
NavService.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.Router },
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService }
];
NavService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)({
        providedIn: 'root',
    })
], NavService);



/***/ }),

/***/ 47365:
/*!****************************************************!*\
  !*** ./src/app/shared/pipes/amount-format.pipe.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AmountFormatPipe": () => (/* binding */ AmountFormatPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);



let AmountFormatPipe = class AmountFormatPipe {
    constructor(maskService) {
        this.maskService = maskService;
    }
    transform(value, fixedZeroes) {
        if (value) {
            return this.maskService.formatAmount(value, fixedZeroes);
        }
        return `0`;
    }
};
AmountFormatPipe.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__.MaskedService }
];
AmountFormatPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'amountFormat',
        pure: true,
    })
], AmountFormatPipe);



/***/ }),

/***/ 37217:
/*!********************************************************!*\
  !*** ./src/app/shared/pipes/bank-account-name.pipe.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BankAccountNamePipe": () => (/* binding */ BankAccountNamePipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bank-from-account.pipe */ 8295);



let BankAccountNamePipe = class BankAccountNamePipe {
    constructor(biq) {
        this.biq = biq;
    }
    transform(value, ...args) {
        return value ? this.biq.transform(value, 'name') : '';
    }
};
BankAccountNamePipe.ctorParameters = () => [
    { type: _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_0__.BankFromAccountPipe }
];
BankAccountNamePipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'bankAccountName',
        pure: true,
    })
], BankAccountNamePipe);



/***/ }),

/***/ 8295:
/*!********************************************************!*\
  !*** ./src/app/shared/pipes/bank-from-account.pipe.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UNKNOWN": () => (/* binding */ UNKNOWN),
/* harmony export */   "BankFromAccountPipe": () => (/* binding */ BankFromAccountPipe),
/* harmony export */   "dict": () => (/* binding */ dict)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils/index */ 96530);



const UNKNOWN = 'unknown';
let BankFromAccountPipe = class BankFromAccountPipe {
    transform(value = '', key, safePrefix) {
        if (!value || (value && value.length < 7)) {
            return '';
        }
        else if (value) {
            const bank = dict[((safePrefix && (0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.ibanPrefix)(value, safePrefix)) || value)
                .replace(' ', '')
                .slice(4, 7)];
            if (bank) {
                return key ? bank[key] : bank.bic;
            }
        }
        return '';
    }
};
BankFromAccountPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        pure: true,
        name: 'bankFromAccount',
    })
], BankFromAccountPipe);

const dict = {
    '922': {
        bic: 'ABNAKZKX',
        name: 'Акционерное общество "First Heartland Bank"',
    },
    '947': {
        bic: 'ALFAKZKA',
        name: 'АО "ДОЧЕРНИЙ БАНК "АЛЬФА-БАНК"',
    },
    '826': {
        bic: 'ALMNKZKA',
        name: 'АО "АТФБанк"',
    },
    '949': {
        bic: 'ATYNKZKA',
        name: 'АО "Altyn Bank" (ДБ China Citic Bank Corporation Limited)',
    },
    '913': {
        bic: 'BKCHKZKA',
        name: 'АО ДБ "БАНК КИТАЯ В КАЗАХСТАНЕ"',
    },
    '722': {
        bic: 'CASPKZKA',
        name: 'АО "KASPI BANK"',
    },
    '766': {
        bic: 'CEDUKZKA',
        name: 'АО "ЦЕНТРАЛЬНЫЙ ДЕПОЗИТАРИЙ ЦЕННЫХ БУМАГ"',
    },
    '832': {
        bic: 'CITIKZKA',
        name: 'АО "Ситибанк Казахстан"',
    },
    '620': {
        bic: 'TNGRKZKX',
        name: 'АО "Tengri Bank"',
    },
    '907': {
        bic: 'DVKAKZKA',
        name: 'АО "Банк Развития Казахстана"',
    },
    '700': {
        bic: 'EABRKZKA',
        name: 'АО "Евразийский банк развития"',
    },
    '948': {
        bic: 'EURIKZKA',
        name: 'АО "Евразийский Банк"',
    },
    '009': {
        bic: 'GCVPKZ2A',
        name: 'НАО "Государственная корпорация «Правительство для граждан»"',
    },
    '972': {
        bic: 'HCSKKZKA',
        name: 'АО "Жилстройсбербанк Казахстана"',
    },
    '246': {
        bic: 'HLALKZKZ',
        name: 'АО "Исламский Банк "Al Hilal"',
    },
    '601': {
        bic: 'HSBKKZKX',
        name: 'АО "Народный Банк Казахстана"',
    },
    '930': {
        bic: 'ICBKKZKX',
        name: 'АО "Торгово-промышленный Банк Китая в г. Алматы"',
    },
    '550': {
        bic: 'INEARUMM',
        name: 'г.Москва Межгосударственный Банк',
    },
    '886': {
        bic: 'INLMKZKA',
        name: 'ДБ АО "Хоум Кредит энд Финанс Банк"',
    },
    '965': {
        bic: 'IRTYKZKA',
        name: 'АО "ForteBank"',
    },
    '856': {
        bic: 'KCJBKZKX',
        name: 'АО "Банк ЦентрКредит"',
    },
    '927': {
        bic: 'KICEKZKX',
        name: 'АО "Казахстанская фондовая биржа"',
    },
    '821': {
        bic: 'KINCKZKA',
        name: 'Акционерное общество "Банк "Bank RBK""',
    },
    '224': {
        bic: 'KISCKZKX',
        name: 'РГП "Казахстанский центр межбанковских расчетов НБРК"',
    },
    '070': {
        bic: 'KKMFKZ2A',
        name: 'РГУ "Комитет казначейства Министерства финансов РК"',
    },
    '563': {
        bic: 'KPSTKZKA',
        name: 'АО "КАЗПОЧТА"',
    },
    '551': {
        bic: 'KSNVKZKA',
        name: 'АО "Банк Kassa Nova" (Дочерний банк АО "ForteBank")',
    },
    '885': {
        bic: 'KZIBKZKA',
        name: 'АО "ДБ "КАЗАХСТАН-ЗИРААТ ИНТЕРНЕШНЛ БАНК"',
    },
    '774': {
        bic: 'LARIKZKA',
        name: 'АО "AsiaCredit Bank (АзияКредит Банк)"',
    },
    '553': {
        bic: 'NBPAKZKA',
        name: 'АО ДБ "Национальный Банк Пакистана" в Казахстане',
    },
    '147': {
        bic: 'NBPFKZKX',
        name: 'Банк кастодиан АО "ЕНПФ"',
    },
    '125': {
        bic: 'NBRKKZKX',
        name: 'Республиканское Государств Учреждение  Национальный Банк РК',
    },
    '849': {
        bic: 'NURSKZKX',
        name: 'АО "Нурбанк"',
    },
    '914': {
        bic: 'SABRKZKA',
        name: 'ДБ АО "Сбербанк"',
    },
    '435': {
        bic: 'SHBKKZKA',
        name: 'АО "Шинхан Банк Казахстан"',
    },
    '781': {
        bic: 'TBKBKZKA',
        name: 'АО "Capital Bank Kazakhstan"',
    },
    '998': {
        bic: 'TSESKZKA',
        name: 'АО "First Heartland Jusan Bank"',
    },
    '432': {
        bic: 'VTBAKZKZ',
        name: 'Дочерняя организация АО Банк ВТБ (Казахстан)',
    },
    '896': {
        bic: 'ZAJSKZ22',
        name: 'АО "Исламский банк "Заман-Банк"',
    },
};


/***/ }),

/***/ 31308:
/*!*************************************************!*\
  !*** ./src/app/shared/pipes/cur-symbol.pipe.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurSymbolPipe": () => (/* binding */ CurSymbolPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


const symbols = {
    KZT: '₸',
    USD: '$',
    EUR: '€',
    RUB: '₽',
    AUD: '$',
    AZN: '₼',
    BYN: 'р.',
    DKK: 'kr.',
    SAR: '.ر.س',
    SGD: '$',
    XAU: 'XAU',
    KGS: 'С̲',
    GBP: '£',
    CNY: '¥',
    CHF: '₣',
    HKD: '$',
    GEL: 'ლ.',
    AED: 'د.إ',
    INR: '₹',
    CAD: '$',
    MYR: 'RM',
    PLN: 'zł',
    THB: '฿',
    TRY: '₺',
    UZS: "so'm",
    UAH: '₴',
    CZK: 'Kč',
    SEK: 'kr',
    KRW: '₩',
    JPY: '¥',
    KZT_RU: 'тг'
};
let CurSymbolPipe = class CurSymbolPipe {
    transform(value) {
        return symbols[value];
    }
};
CurSymbolPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'curSymbol',
        pure: true,
    })
], CurSymbolPipe);



/***/ }),

/***/ 21428:
/*!**************************************************!*\
  !*** ./src/app/shared/pipes/date-format.pipe.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateFormatPipe": () => (/* binding */ DateFormatPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 64139);





let DateFormatPipe = class DateFormatPipe {
    constructor(translateService) {
        this.translateService = translateService;
    }
    transform(value) {
        if (!value) {
            return this.translateService.get('PAYMENTS.DATE.AUTO');
        }
        const dateValue = (0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.ngbDateToDate)(value);
        const now = new Date();
        let tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(23, 59);
        if (value.day === now.getDate()) {
            return this.translateService.get('PAYMENTS.DATE.TODAY', {
                date: (0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.formatNgbDate)(value, this.translateService.currentLang),
            });
        }
        else if (tomorrow >= dateValue) {
            return this.translateService.get('PAYMENTS.DATE.TOMORROW', {
                date: (0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.formatNgbDate)(value, this.translateService.currentLang),
            });
        }
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)((0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.formatNgbDate)(value, this.translateService.currentLang));
    }
};
DateFormatPipe.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__.TranslateService }
];
DateFormatPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Pipe)({
        name: 'jDateFormat',
        // pure: true,
    })
], DateFormatPipe);



/***/ }),

/***/ 53571:
/*!**************************************************!*\
  !*** ./src/app/shared/pipes/format-iban.pipe.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormatIbanPipe": () => (/* binding */ FormatIbanPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);



let FormatIbanPipe = class FormatIbanPipe {
    constructor(masService) {
        this.masService = masService;
    }
    transform(value, prefix = '') {
        return this.masService.maskPipe.transform(prefix + value, this.masService.getConfig('account').mask);
    }
};
FormatIbanPipe.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__.MaskedService }
];
FormatIbanPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'formatIban',
        pure: true
    })
], FormatIbanPipe);



/***/ }),

/***/ 10532:
/*!************************************************!*\
  !*** ./src/app/shared/pipes/highlight.pipe.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HighlightPipe": () => (/* binding */ HighlightPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ 50318);



let HighlightPipe = class HighlightPipe {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    transform(value, args) {
        if (!args) {
            return value;
        }
        // Match in a case insensitive maneer
        const re = new RegExp(args, 'gi');
        const match = value.match(re);
        // If there's no match, just return the original value.
        if (!match) {
            return value;
        }
        const result = value.replace(re, '<mark>' + match[0] + '</mark>');
        return this.sanitizer.bypassSecurityTrustHtml(result);
    }
};
HighlightPipe.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__.DomSanitizer }
];
HighlightPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'highlight',
    })
], HighlightPipe);



/***/ }),

/***/ 39843:
/*!***************************************!*\
  !*** ./src/app/shared/pipes/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHARED_PIPES": () => (/* binding */ SHARED_PIPES),
/* harmony export */   "AmountFormatPipe": () => (/* reexport safe */ _amount_format_pipe__WEBPACK_IMPORTED_MODULE_0__.AmountFormatPipe),
/* harmony export */   "BankAccountNamePipe": () => (/* reexport safe */ _bank_account_name_pipe__WEBPACK_IMPORTED_MODULE_1__.BankAccountNamePipe),
/* harmony export */   "BankFromAccountPipe": () => (/* reexport safe */ _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_2__.BankFromAccountPipe),
/* harmony export */   "UNKNOWN": () => (/* reexport safe */ _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN),
/* harmony export */   "dict": () => (/* reexport safe */ _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_2__.dict),
/* harmony export */   "CurSymbolPipe": () => (/* reexport safe */ _cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_3__.CurSymbolPipe),
/* harmony export */   "DateFormatPipe": () => (/* reexport safe */ _date_format_pipe__WEBPACK_IMPORTED_MODULE_4__.DateFormatPipe),
/* harmony export */   "FormatIbanPipe": () => (/* reexport safe */ _format_iban_pipe__WEBPACK_IMPORTED_MODULE_5__.FormatIbanPipe),
/* harmony export */   "TrackByPropertyPipe": () => (/* reexport safe */ _track_by_property_pipe__WEBPACK_IMPORTED_MODULE_6__.TrackByPropertyPipe),
/* harmony export */   "MaskPhonePipe": () => (/* reexport safe */ _mask_phone_pipe__WEBPACK_IMPORTED_MODULE_7__.MaskPhonePipe),
/* harmony export */   "SvgPathPipe": () => (/* reexport safe */ _svg_path_pipe__WEBPACK_IMPORTED_MODULE_8__.SvgPathPipe),
/* harmony export */   "MoneyPipe": () => (/* reexport safe */ _money_pipe__WEBPACK_IMPORTED_MODULE_10__.MoneyPipe),
/* harmony export */   "MaskIbanPipe": () => (/* reexport safe */ _mask_iban_pipe__WEBPACK_IMPORTED_MODULE_11__.MaskIbanPipe),
/* harmony export */   "PipeFunction": () => (/* reexport safe */ _pure_function_pipe__WEBPACK_IMPORTED_MODULE_12__.PipeFunction)
/* harmony export */ });
/* harmony import */ var _amount_format_pipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amount-format.pipe */ 47365);
/* harmony import */ var _bank_account_name_pipe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bank-account-name.pipe */ 37217);
/* harmony import */ var _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bank-from-account.pipe */ 8295);
/* harmony import */ var _cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cur-symbol.pipe */ 31308);
/* harmony import */ var _date_format_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date-format.pipe */ 21428);
/* harmony import */ var _format_iban_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./format-iban.pipe */ 53571);
/* harmony import */ var _track_by_property_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./track-by-property.pipe */ 4602);
/* harmony import */ var _mask_phone_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mask-phone.pipe */ 71782);
/* harmony import */ var _svg_path_pipe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./svg-path.pipe */ 88090);
/* harmony import */ var _highlight_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./highlight.pipe */ 10532);
/* harmony import */ var _money_pipe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./money.pipe */ 67997);
/* harmony import */ var _mask_iban_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mask-iban.pipe */ 15239);
/* harmony import */ var _pure_function_pipe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pure-function.pipe */ 68068);
/* harmony import */ var _linkify_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./linkify.pipe */ 89584);














const SHARED_PIPES = [
    _track_by_property_pipe__WEBPACK_IMPORTED_MODULE_6__.TrackByPropertyPipe,
    _cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_3__.CurSymbolPipe,
    _bank_from_account_pipe__WEBPACK_IMPORTED_MODULE_2__.BankFromAccountPipe,
    _bank_account_name_pipe__WEBPACK_IMPORTED_MODULE_1__.BankAccountNamePipe,
    _date_format_pipe__WEBPACK_IMPORTED_MODULE_4__.DateFormatPipe,
    _amount_format_pipe__WEBPACK_IMPORTED_MODULE_0__.AmountFormatPipe,
    _format_iban_pipe__WEBPACK_IMPORTED_MODULE_5__.FormatIbanPipe,
    _mask_phone_pipe__WEBPACK_IMPORTED_MODULE_7__.MaskPhonePipe,
    _svg_path_pipe__WEBPACK_IMPORTED_MODULE_8__.SvgPathPipe,
    _highlight_pipe__WEBPACK_IMPORTED_MODULE_9__.HighlightPipe,
    _money_pipe__WEBPACK_IMPORTED_MODULE_10__.MoneyPipe,
    _mask_iban_pipe__WEBPACK_IMPORTED_MODULE_11__.MaskIbanPipe,
    _pure_function_pipe__WEBPACK_IMPORTED_MODULE_12__.PipeFunction,
    _linkify_pipe__WEBPACK_IMPORTED_MODULE_13__.LinkifyPipe
];














/***/ }),

/***/ 89584:
/*!**********************************************!*\
  !*** ./src/app/shared/pipes/linkify.pipe.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LinkifyPipe": () => (/* binding */ LinkifyPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ 50318);



let LinkifyPipe = class LinkifyPipe {
    constructor(_domSanitizer) {
        this._domSanitizer = _domSanitizer;
    }
    transform(value) {
        if (!value) {
            return;
        }
        const urlRegex = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        const html = value.replace(urlRegex, (url) => {
            return '<a target="_blank" href="' + url + '">' + url + '</a>';
        });
        const sanitizedHtml = this._sanitizeHtml(html);
        return sanitizedHtml;
    }
    _sanitizeHtml(html) {
        if (!html)
            return;
        return this._domSanitizer.bypassSecurityTrustHtml(html);
    }
};
LinkifyPipe.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__.DomSanitizer }
];
LinkifyPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'linkifyPipe',
    })
], LinkifyPipe);



/***/ }),

/***/ 15239:
/*!************************************************!*\
  !*** ./src/app/shared/pipes/mask-iban.pipe.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaskIbanPipe": () => (/* binding */ MaskIbanPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _utils_misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils/misc */ 37212);



let MaskIbanPipe = class MaskIbanPipe {
    transform(iban, ...args) {
        return iban && (0,_utils_misc__WEBPACK_IMPORTED_MODULE_0__.maskIban)(iban) || '-';
    }
};
MaskIbanPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'maskIban',
        pure: true
    })
], MaskIbanPipe);



/***/ }),

/***/ 71782:
/*!*************************************************!*\
  !*** ./src/app/shared/pipes/mask-phone.pipe.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaskPhonePipe": () => (/* binding */ MaskPhonePipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/index */ 96530);





let MaskPhonePipe = class MaskPhonePipe {
    constructor(mask, pipe) {
        this.pipe = pipe;
        this.config = mask.getConfig('phone');
    }
    transform(value) {
        return (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.maskPhone)(this.config.prefix + this.pipe.transform(value && value.replace('+7', ''), this.config.mask));
    }
};
MaskPhonePipe.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_0__.MaskedService },
    { type: ngx_mask__WEBPACK_IMPORTED_MODULE_2__.MaskPipe }
];
MaskPhonePipe = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Pipe)({
        name: 'maskPhone',
        pure: true,
    })
], MaskPhonePipe);



/***/ }),

/***/ 67997:
/*!********************************************!*\
  !*** ./src/app/shared/pipes/money.pipe.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MoneyPipe": () => (/* binding */ MoneyPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _amount_format_pipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./amount-format.pipe */ 47365);
/* harmony import */ var _cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cur-symbol.pipe */ 31308);




let MoneyPipe = class MoneyPipe {
    constructor(amountFormatPipe, curSymbolPipe) {
        this.amountFormatPipe = amountFormatPipe;
        this.curSymbolPipe = curSymbolPipe;
    }
    transform(value, args) {
        if (!value) {
            return;
        }
        const amount = this.amountFormatPipe.transform(value.amount);
        const currency = this.curSymbolPipe.transform(value.currency);
        return `${amount} ${currency}`;
    }
};
MoneyPipe.ctorParameters = () => [
    { type: _amount_format_pipe__WEBPACK_IMPORTED_MODULE_0__.AmountFormatPipe },
    { type: _cur_symbol_pipe__WEBPACK_IMPORTED_MODULE_1__.CurSymbolPipe }
];
MoneyPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Pipe)({
        name: 'money',
    })
], MoneyPipe);



/***/ }),

/***/ 68068:
/*!****************************************************!*\
  !*** ./src/app/shared/pipes/pure-function.pipe.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PipeFunction": () => (/* binding */ PipeFunction)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let PipeFunction = class PipeFunction {
    transform(value, handler, context) {
        if (context) {
            return handler.call(context, value);
        }
        return handler(value);
    }
};
PipeFunction = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'pipeFunction'
    })
], PipeFunction);



/***/ }),

/***/ 88090:
/*!***********************************************!*\
  !*** ./src/app/shared/pipes/svg-path.pipe.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SvgPathPipe": () => (/* binding */ SvgPathPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environments/environment */ 92340);



const base = _environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment.svgBasePath;
const suffix = '-current-color.svg';
let SvgPathPipe = class SvgPathPipe {
    transform(value) {
        return base + value + suffix;
    }
};
SvgPathPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
        name: 'svgPath',
        pure: true
    })
], SvgPathPipe);



/***/ }),

/***/ 4602:
/*!********************************************************!*\
  !*** ./src/app/shared/pipes/track-by-property.pipe.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrackByPropertyPipe": () => (/* binding */ TrackByPropertyPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


// Since the resultant TrackBy functions are based purely on a static property name, we
// can cache these Functions across the entire app. No need to generate more than one
// Function for the same property.
const cache = Object.create(null);
let TrackByPropertyPipe = class TrackByPropertyPipe {
    // I return a TrackBy function that plucks the given property from the ngFor item.
    transform(propertyName) {
        // Ensure cached function exists.
        if (!cache[propertyName]) {
            cache[propertyName] = function trackByProperty(index, item) {
                return item[propertyName];
            };
        }
        return cache[propertyName];
    }
};
TrackByPropertyPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'trackByProperty',
        pure: true,
    })
], TrackByPropertyPipe);



/***/ }),

/***/ 20112:
/*!********************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/constants.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BREAKPOINTS": () => (/* binding */ BREAKPOINTS),
/* harmony export */   "BOOTSTRAP_BREAKPOINTS": () => (/* binding */ BOOTSTRAP_BREAKPOINTS),
/* harmony export */   "breakpointProvider": () => (/* binding */ breakpointProvider)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);

const BREAKPOINTS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('BREAKPOINTS');
var BOOTSTRAP_BREAKPOINTS;
(function (BOOTSTRAP_BREAKPOINTS) {
    BOOTSTRAP_BREAKPOINTS["XS"] = "xs";
    BOOTSTRAP_BREAKPOINTS["SM"] = "sm";
    BOOTSTRAP_BREAKPOINTS["MD"] = "md";
    BOOTSTRAP_BREAKPOINTS["LG"] = "lg";
    BOOTSTRAP_BREAKPOINTS["XL"] = "xl";
})(BOOTSTRAP_BREAKPOINTS || (BOOTSTRAP_BREAKPOINTS = {}));
const breakpoints = [
    BOOTSTRAP_BREAKPOINTS.XS,
    BOOTSTRAP_BREAKPOINTS.SM,
    BOOTSTRAP_BREAKPOINTS.MD,
    BOOTSTRAP_BREAKPOINTS.LG,
    BOOTSTRAP_BREAKPOINTS.XL,
];
const breakpointProvider = {
    provide: BREAKPOINTS,
    useValue: breakpoints,
};


/***/ }),

/***/ 82956:
/*!*****************************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/is-breakpoint.pipe.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IsBreakpointPipe": () => (/* binding */ IsBreakpointPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _responsive_toolkit_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./responsive-toolkit.service */ 90536);



let IsBreakpointPipe = class IsBreakpointPipe {
    constructor(responsiveService, ref) {
        this.responsiveService = responsiveService;
        this.ref = ref;
    }
    transform(value, ...args) {
        if (this.lastParam === value) {
            return this.lastResult;
        }
        if (!this.subs) {
            this.subs = this.responsiveService.currentBreakpoint$.subscribe((event) => {
                this.updateValue(value, event);
            });
        }
        return this.updateValue(value);
    }
    updateValue(value, newBreakpoint) {
        this.lastParam = value;
        if (newBreakpoint) {
            this.lastBreakpoint = newBreakpoint;
        }
        this.lastResult = this.responsiveService.is(value);
        this.ref.markForCheck();
        return this.lastResult;
    }
    ngOnDestroy() {
        var _a;
        (_a = this.subs) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    }
};
IsBreakpointPipe.ctorParameters = () => [
    { type: _responsive_toolkit_service__WEBPACK_IMPORTED_MODULE_0__.ResponsiveToolkitService },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef }
];
IsBreakpointPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'isBreakpoint',
        pure: false,
    })
], IsBreakpointPipe);



/***/ }),

/***/ 48277:
/*!****************************************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/responsive-detector.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResponsiveDetector": () => (/* binding */ ResponsiveDetector)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _responsive_detector_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./responsive-detector.component.scss?ngResource */ 70608);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _responsive_toolkit_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./responsive-toolkit.service */ 90536);





let ResponsiveDetector = class ResponsiveDetector {
    constructor(el, s, platformId) {
        this.el = el;
        this.s = s;
        this.platformId = platformId;
        this.running = false;
    }
    onResize() {
        this.triggerBreakpointCheck();
    }
    ngAfterViewInit() {
        this.triggerBreakpointCheck();
    }
    triggerBreakpointCheck() {
        if (this.running) {
            return;
        }
        this.running = true;
        requestAnimationFrame(() => {
            this.running = false;
            this.s.currentBreakpoint = this.getCurrentBreakpointName();
        });
    }
    getCurrentBreakpointName() {
        if ((0,_angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformBrowser)(this.platformId)) {
            return window
                .getComputedStyle(this.el.nativeElement, ':before')
                .getPropertyValue('content');
        }
        else {
            return '';
        }
    }
};
ResponsiveDetector.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef },
    { type: _responsive_toolkit_service__WEBPACK_IMPORTED_MODULE_1__.ResponsiveToolkitService },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Inject, args: [_angular_core__WEBPACK_IMPORTED_MODULE_3__.PLATFORM_ID,] }] }
];
ResponsiveDetector.propDecorators = {
    onResize: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostListener, args: ['window:resize', [],] }]
};
ResponsiveDetector = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'responsive-detector',
        template: '',
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ViewEncapsulation.None,
        host: {
            class: 'responsive-detector'
        },
        styles: [_responsive_detector_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_0__]
    })
], ResponsiveDetector);



/***/ }),

/***/ 98292:
/*!************************************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/responsive-toolkit.module.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResponsiveToolkitModule": () => (/* binding */ ResponsiveToolkitModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _is_breakpoint_pipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-breakpoint.pipe */ 82956);
/* harmony import */ var _responsive_detector_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./responsive-detector.component */ 48277);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ 20112);
var ResponsiveToolkitModule_1;






let ResponsiveToolkitModule = ResponsiveToolkitModule_1 = class ResponsiveToolkitModule {
    static forRoot(config) {
        return {
            ngModule: ResponsiveToolkitModule_1,
            providers: [_constants__WEBPACK_IMPORTED_MODULE_2__.breakpointProvider],
        };
    }
};
ResponsiveToolkitModule = ResponsiveToolkitModule_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule)({
        declarations: [_is_breakpoint_pipe__WEBPACK_IMPORTED_MODULE_0__.IsBreakpointPipe, _responsive_detector_component__WEBPACK_IMPORTED_MODULE_1__.ResponsiveDetector],
        exports: [_is_breakpoint_pipe__WEBPACK_IMPORTED_MODULE_0__.IsBreakpointPipe, _responsive_detector_component__WEBPACK_IMPORTED_MODULE_1__.ResponsiveDetector],
        providers: [_constants__WEBPACK_IMPORTED_MODULE_2__.breakpointProvider],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule],
    })
], ResponsiveToolkitModule);



/***/ }),

/***/ 90536:
/*!*************************************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/responsive-toolkit.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CUSTOM_EVENT": () => (/* binding */ CUSTOM_EVENT),
/* harmony export */   "UNKNOWN_BREAKPOINT": () => (/* binding */ UNKNOWN_BREAKPOINT),
/* harmony export */   "ResponsiveToolkitService": () => (/* binding */ ResponsiveToolkitService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ 20112);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/index */ 96530);






const CUSTOM_EVENT = 'responsiveToolkitResize';
const UNKNOWN_BREAKPOINT = 'UNKNOWN_BREAKPOINT';
let ResponsiveToolkitService = class ResponsiveToolkitService {
    constructor(breakpoints) {
        // if (isPlatformBrowser(platformId)) {
        //   this.throttle('resize', CUSTOM_EVENT, window);
        //   this.target = window.document.querySelector('body');
        //   window.addEventListener(CUSTOM_EVENT, this.handleResize.bind(this));
        // }
        this.breakpoints = breakpoints;
        this.currentBreakpointSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(null);
        this.currentBreakpoint$ = this.currentBreakpointSubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.distinctUntilChanged)());
        this.currentBreakpoint = this.breakpoints[0];
    }
    get currentBreakpoint() {
        return this.currentBreakpointSubject$.getValue();
    }
    set currentBreakpoint(breakpoint) {
        this.currentBreakpointSubject$.next(breakpoint);
    }
    /**
     * Returns true if current breakpoint matches passed alias
     */
    is(str) {
        if ((0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.isAnExpression)(str)) {
            return (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.isAnyActive)(this.currentBreakpoint, (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.isMatchingExpression)(str, this.breakpoints));
        }
        return this.currentBreakpoint.includes(str);
    }
    /**
     * Returns current breakpoint alias
     */
    current() {
        let name = UNKNOWN_BREAKPOINT;
        this.breakpoints.some(alias => {
            if (this.is(alias)) {
                name = alias;
                return true;
            }
        });
        return name;
    }
};
ResponsiveToolkitService.ctorParameters = () => [
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject, args: [_constants__WEBPACK_IMPORTED_MODULE_0__.BREAKPOINTS,] }] }
];
ResponsiveToolkitService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
        providedIn: 'root',
    })
], ResponsiveToolkitService);



/***/ }),

/***/ 76179:
/*!******************************************************!*\
  !*** ./src/app/shared/services/app-state.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppStateService": () => (/* binding */ AppStateService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 88623);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 36312);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 29361);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 64398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 32647);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular-notifier */ 50449);





let AppStateService = class AppStateService {
    constructor(window, notifier // private translateService: TranslateService
    ) {
        this.window = window;
        this.notifier = notifier;
        this.navigatorOnlineSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(true);
        this.navigatorOnline$ = this.navigatorOnlineSubject$.asObservable();
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subscription();
        this.subs.add((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.fromEvent)(this.window, 'offline').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.mapTo)(false)), (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.fromEvent)(this.window, 'online').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.mapTo)(true)))
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.startWith)(window.navigator.onLine))
            .subscribe(this.navigatorOnlineSubject$));
        this.subs.add(this.navigatorOnlineSubject$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.throttleTime)(3000, undefined, { leading: true }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.distinctUntilChanged)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.scan)((acc, v) => {
            if (v && acc) {
                this.notifier.hide(acc);
                return '';
            }
            /**
             * @todo no autohide for concrete toast
             */
            // if (!v && !acc) {
            if (!v) {
                const message = localStorage.getItem('lang') == 'kk'
                    ? 'Интернет қолжетімді емес. Байланысты тексеріп, әрекетті қайталаңыз'
                    : 'Интернет недоступен. Проверьте соединение и повторите попытку';
                const id = Date.now().toString();
                this.notifier.show({
                    type: 'error',
                    message,
                    id,
                });
                return id;
            }
            return acc;
        }, ''))
            .subscribe());
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
    get isOnline() {
        return this.navigatorOnlineSubject$.getValue();
    }
    set isOnline(v) {
        this.navigatorOnlineSubject$.next(v);
    }
};
AppStateService.ctorParameters = () => [
    { type: Window },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_9__.NotifierService }
];
AppStateService = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_11__.Injectable)({
        providedIn: 'root',
    })
], AppStateService);



/***/ }),

/***/ 9010:
/*!*********************************************************!*\
  !*** ./src/app/shared/services/dictionaries.service.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DictionariesService": () => (/* binding */ DictionariesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils/index */ 96530);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);








let DictionariesService = class DictionariesService {
    constructor(api, http, translateService) {
        this.api = api;
        this.http = http;
        this.translateService = translateService;
        this.KNPDictionary = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.EntitiesStore([]);
        this.KBKDictionary = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.EntitiesStore([]);
        this.UGDictionary = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.EntitiesStore([]);
        this.bankDictionary = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.EntitiesStore([]);
        this.workingDays = new _utils_index__WEBPACK_IMPORTED_MODULE_0__.SingleEntityStore([]);
        this.fetchUGD$();
        this.fetchKNP$();
        this.fetchKBK$();
        this.fetchBanks();
        this.fetchWorkingDays();
    }
    fetchUGD$() {
        this.UGDictionary.fetching = true;
        return this.api.get('/dictionaries/general?pageSize=5000&type=TAX_BENEFICIAR&sortBy=CODE').then((v) => {
            this.UGDictionary.setState(v.map((item) => (Object.assign(Object.assign({}, item), { id: item.value.code, code: item.value.code, bin: item.additional.map.bin, name: item.value.name, label: item.value.code + ' - ' + item.value.name }))));
            this.UGDictionary.fetched = true;
        }).finally(() => {
            this.UGDictionary.fetching = false;
        });
    }
    fetchKNP$() {
        this.KNPDictionary.fetching = true;
        return this.api.get('/dictionaries/general?pageSize=10000&type=KNP&sortBy=CODE').then((v) => {
            this.KNPDictionary.setState(v.map((item) => {
                var _a, _b, _c, _d, _e, _f;
                return (Object.assign(Object.assign({}, item), { id: item.value.code, name: item.value.name, type: {
                        TAX: (_a = item.additional.map.paymentTypes) === null || _a === void 0 ? void 0 : _a.includes('TAX'),
                        PENSION: (_b = item.additional.map.paymentTypes) === null || _b === void 0 ? void 0 : _b.includes('PENSION'),
                        SOCIAL: (_c = item.additional.map.paymentTypes) === null || _c === void 0 ? void 0 : _c.includes('SOCIAL'),
                        MEDICAL: (_d = item.additional.map.paymentTypes) === null || _d === void 0 ? void 0 : _d.includes('MEDICAL'),
                        REGULAR_PAYMENT_ORDER: (_e = item.additional.map.paymentTypes) === null || _e === void 0 ? void 0 : _e.includes('REGULAR_PAYMENT_ORDER'),
                        FOREIGN: (_f = item.additional.map.paymentTypes) === null || _f === void 0 ? void 0 : _f.includes('FOREIGN'),
                    }, code: item.value.code, favourite: item.additional.map.isFavourite, label: `${item.value.code} ${item.value.name}` }));
            }));
            this.KNPDictionary.fetching = false;
            this.KNPDictionary.fetched = true;
        });
    }
    fetchKBK$() {
        this.KBKDictionary.fetching = true;
        this.KBKDictionary.items = [];
        return this.api.get('/dictionaries/general?pageSize=10000&type=KBK&sortBy=CODE').then((v) => {
            this.KBKDictionary.setState(v.map((item) => {
                var _a;
                return (Object.assign(Object.assign({}, item), { id: item.value.code, name: item.value.name, type: { TAX: (_a = item.additional.map.paymentType) === null || _a === void 0 ? void 0 : _a.includes('TAX') }, code: item.value.code, label: `${item.value.code} ${item.value.name}` }));
            }));
            this.KBKDictionary.fetching = false;
            this.KBKDictionary.fetched = true;
        });
    }
    fetchCountryCodesDictionary() {
        return this.api
            .get('/dictionaries/general?pageSize=300&type=PHONE_COUNTRY_CODES&sortBy=name');
    }
    fetchCountryCodes() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            return yield this.http
                .get('/assets/data/country-codes.json').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(res => {
                return res.map(el => (Object.assign(Object.assign({}, el), { country: this.translateService.instant(`COUNTRIES.${el.country}`), id: el.country })));
            })).toPromise();
        });
    }
    fetchBanks() {
        this.bankDictionary.fetching = true;
        return this.api
            .get('/dictionaries/banks')
            .then((banks) => this.bankDictionary.setState(banks))
            .finally(() => {
            this.bankDictionary.fetching = false;
            this.bankDictionary.fetched = true;
        });
    }
    fetchWorkingDays() {
        this.workingDays.fetching = true;
        return this.api
            .get('/calendar/working-days')
            .then((days) => (this.workingDays.entity = days))
            .finally(() => {
            this.workingDays.fetching = false;
            this.workingDays.fetched = true;
        });
    }
    /**
     *
     * @param from date in IS0 8061
     * @param to date in IS0 8061
     */
    selectDaysOff(from, to) {
        const start = moment__WEBPACK_IMPORTED_MODULE_2__(from, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061);
        const end = moment__WEBPACK_IMPORTED_MODULE_2__(to, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061);
        let daysInInterval = start.diff(end, 'days');
        const workingDays = this.workingDays.entity;
        const daysOff = [];
        const dict = this.selectDaysTimeline(from, to, workingDays).reduce((acc, day) => {
            acc[day] = true;
            return acc;
        }, {});
        const pointer = moment__WEBPACK_IMPORTED_MODULE_2__(end);
        let pointerFormat = '';
        while (daysInInterval) {
            pointerFormat = pointer.format(_utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061);
            if (!dict[pointerFormat]) {
                daysOff.push(pointerFormat);
            }
            daysInInterval--;
            pointer.add(-1, 'd');
        }
        return daysOff;
    }
    /**
     * slice working days from store
     * if days edge be triggered fallback will be applied (mark day as working from Mon to Fri)
     * @param from date in IS0 8061
     * @param to date in IS0 8061
     * @param workingDays array of working days
     */
    selectDaysTimeline(from, to, workingDays) {
        const start = moment__WEBPACK_IMPORTED_MODULE_2__(from, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061);
        const end = moment__WEBPACK_IMPORTED_MODULE_2__(to, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061);
        let startIndex;
        let endIndex;
        if (!workingDays || !workingDays.length) {
            this.fetchWorkingDays();
        }
        workingDays === null || workingDays === void 0 ? void 0 : workingDays.some((day, index, arr) => {
            if (start.isBetween(moment__WEBPACK_IMPORTED_MODULE_2__(day, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061), moment__WEBPACK_IMPORTED_MODULE_2__(arr[index + 1], _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061), undefined, '[]')) {
                startIndex = index;
                return true;
            }
            return false;
        });
        if (startIndex === undefined) {
            return this.handleEdgeOfTimeline(start.format(_utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061), end.format(_utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061));
        }
        const result = workingDays.slice(startIndex);
        result.some((day, index, arr) => {
            if (end.isBetween(moment__WEBPACK_IMPORTED_MODULE_2__(day, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061), moment__WEBPACK_IMPORTED_MODULE_2__(arr[index + 1], _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061), undefined, '[]')) {
                endIndex = index;
                return true;
            }
            return false;
        });
        if (endIndex === undefined) {
            return result.concat(this.handleEdgeOfTimeline(result[result.length - 1], end.format(_utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061)));
        }
        return result.slice(0, endIndex + 1);
    }
    /**
     * @param from date in IS0 8061
     * @param to date in IS0 8061
     */
    handleEdgeOfTimeline(from, to) {
        const start = moment__WEBPACK_IMPORTED_MODULE_2__(from, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061).set('h', 1);
        const end = moment__WEBPACK_IMPORTED_MODULE_2__(to, _utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061).set('h', 23);
        const result = [];
        const pointer = moment__WEBPACK_IMPORTED_MODULE_2__(start);
        while (pointer.isBefore(end)) {
            const day = start.isoWeekday();
            if (day < 6) {
                result.push(pointer.format(_utils_index__WEBPACK_IMPORTED_MODULE_0__.ISO_8061));
            }
            pointer.add(1, 'd');
        }
        return result;
    }
    selectByPaymentType(items, opts) {
        const result = items.filter((item) => {
            var _a;
            return (_a = item === null || item === void 0 ? void 0 : item.type) === null || _a === void 0 ? void 0 : _a[opts.type];
        });
        if (opts.sortFavourite) {
            result.sort((a, b) => {
                if (a.favourite && !b.favourite) {
                    return -1;
                }
                else if (b.favourite && !a.favourite) {
                    return 1;
                }
                return parseInt(a.code, 10) - parseInt(b.code, 10);
            });
        }
        return result;
    }
};
DictionariesService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_1__.ApiService },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpClient },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService }
];
DictionariesService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)({
        providedIn: 'root',
    })
], DictionariesService);



/***/ }),

/***/ 17687:
/*!**************************************************!*\
  !*** ./src/app/shared/services/files.service.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FilesService": () => (/* binding */ FilesService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 32647);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular-notifier */ 50449);








let FilesService = class FilesService {
    constructor(apiService, translateService, notifer) {
        this.apiService = apiService;
        this.translateService = translateService;
        this.notifer = notifer;
        this.imported$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
        this.uploading$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject([]);
    }
    downloadFileById(fileId, fileName) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `files/${fileId}`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders();
            // headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpParams();
            const fileBlob = yield this.apiService.get(url, headers, params, {
                responseType: 'blob',
            });
            return this.downloadFile(fileBlob, fileName);
        });
    }
    downloadFile(fileBlob, fileName) {
        const blob = new Blob([fileBlob], {
            type: 'application/octet-stream',
        });
        const downloadURL = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = downloadURL;
        link.download = fileName;
        link.click();
    }
    onImport() {
        return this.imported$.asObservable();
    }
    uploadPayments(companyId, fileList) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${companyId}/payments/import`;
            const formData = new FormData();
            for (let index = 0; index < fileList.length; index++) {
                formData.append('files', fileList[index]);
            }
            try {
                const importResult = yield this.apiService.post(url, formData);
                this.imported$.next(importResult);
                return importResult;
            }
            catch (error) {
                throw error;
            }
        });
    }
    uploadFile(file) {
        const url = `files`;
        const formData = new FormData();
        formData.append('file', file);
        const extras = {
            reportProgress: true,
            observe: 'events',
        };
        return this.apiService
            .postObservable(url, formData, null, null, extras)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.scan)(this.scanUploadProgress, {
            progress: 0,
            isLoading: true,
            file: null,
        }));
    }
    checkIfCanBeUploadedAndNotify(uploadingFiles) {
        const { result, reason } = this.canBeUploaded(uploadingFiles);
        if (reason) {
            this.notifer.notify(result ? 'info' : 'default', this.translateService.instant(reason));
        }
        return result;
    }
    canBeUploaded(uplodingFiles) {
        if (this.hasLoadingFiles(uplodingFiles)) {
            return {
                result: false,
                reason: this.mapTranslate('PLEASE_WAIT'),
            };
        }
        if (this.isAllFilesErrored(uplodingFiles)) {
            return {
                result: false,
                reason: this.mapTranslate('ALL_FILES_ERRORED'),
            };
        }
        if (this.hasErroredFiles(uplodingFiles)) {
            return {
                result: true,
                reason: this.mapTranslate('HAS_ERRORED_FILES'),
            };
        }
        return {
            result: true,
        };
    }
    mapTranslate(key) {
        return `FILES.${key}`;
    }
    scanUploadProgress(current, next) {
        if (next.type === _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpEventType.Response) {
            return {
                progress: 100,
                isLoading: false,
                file: next.body,
            };
        }
        if (next.type === _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpEventType.DownloadProgress ||
            next.type === _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpEventType.UploadProgress) {
            return {
                progress: next.total
                    ? Math.round((100 * next.loaded) / next.total)
                    : current.progress,
                isLoading: true,
                file: null,
            };
        }
        return current;
    }
    hasLoadingFiles(uploadingFiles) {
        return uploadingFiles.some((item) => {
            return item.isLoading;
        });
    }
    hasErroredFiles(uploadingFiles) {
        return uploadingFiles.some((item) => {
            return !!item.error;
        });
    }
    isAllFilesErrored(uploadingFiles) {
        let result = true;
        uploadingFiles.forEach((item) => {
            if (!item.error) {
                result = false;
            }
        });
        return result;
    }
};
FilesService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_7__.NotifierService }
];
FilesService = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)({
        providedIn: 'root',
    })
], FilesService);



/***/ }),

/***/ 60940:
/*!***************************************************!*\
  !*** ./src/app/shared/services/header.service.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderService": () => (/* binding */ HeaderService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _payments_models_steps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @payments/models/steps */ 13389);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 84505);




let HeaderService = class HeaderService {
    constructor() {
        this.currentStep$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(_payments_models_steps__WEBPACK_IMPORTED_MODULE_0__.PAYMENTS_STEPS.NONE);
    }
    getCurrentStep() {
        return this.currentStep$.asObservable();
    }
    setCurrentStep(newStep) {
        this.currentStep$.next(newStep);
    }
};
HeaderService.ctorParameters = () => [];
HeaderService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root',
    })
], HeaderService);



/***/ }),

/***/ 17253:
/*!******************************************!*\
  !*** ./src/app/shared/services/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AUTHORITY_ID": () => (/* reexport safe */ _user_service__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_ID),
/* harmony export */   "UserService": () => (/* reexport safe */ _user_service__WEBPACK_IMPORTED_MODULE_0__.UserService),
/* harmony export */   "SmsService": () => (/* reexport safe */ _sms_service__WEBPACK_IMPORTED_MODULE_1__.SmsService),
/* harmony export */   "HeaderService": () => (/* reexport safe */ _header_service__WEBPACK_IMPORTED_MODULE_2__.HeaderService),
/* harmony export */   "FilesService": () => (/* reexport safe */ _files_service__WEBPACK_IMPORTED_MODULE_3__.FilesService),
/* harmony export */   "DictionariesService": () => (/* reexport safe */ _dictionaries_service__WEBPACK_IMPORTED_MODULE_4__.DictionariesService),
/* harmony export */   "AppStateService": () => (/* reexport safe */ _app_state_service__WEBPACK_IMPORTED_MODULE_5__.AppStateService),
/* harmony export */   "JModalService": () => (/* reexport safe */ _j_modal_service__WEBPACK_IMPORTED_MODULE_6__.JModalService)
/* harmony export */ });
/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user.service */ 98613);
/* harmony import */ var _sms_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sms.service */ 97532);
/* harmony import */ var _header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./header.service */ 60940);
/* harmony import */ var _files_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./files.service */ 17687);
/* harmony import */ var _dictionaries_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dictionaries.service */ 9010);
/* harmony import */ var _app_state_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app-state.service */ 76179);
/* harmony import */ var _j_modal_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./j-modal.service */ 95232);









/***/ }),

/***/ 95232:
/*!****************************************************!*\
  !*** ./src/app/shared/services/j-modal.service.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JModalService": () => (/* binding */ JModalService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _shared_modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/modals */ 24358);




let JModalService = class JModalService {
    constructor(modalService) {
        this.modalService = modalService;
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_sm',
            centered: true,
        };
    }
    showMaintenanceModal() {
        this.modalService.open(_shared_modals__WEBPACK_IMPORTED_MODULE_0__.MaintenanceModalComponent, this.modalSmParams);
    }
};
JModalService.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__.NgbModal }
];
JModalService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root',
    })
], JModalService);



/***/ }),

/***/ 52848:
/*!*************************************************!*\
  !*** ./src/app/shared/services/lang.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LangService": () => (/* binding */ LangService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_locale_ru__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs/locale/ru */ 47019);
/* harmony import */ var dayjs_locale_ru__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_locale_ru__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dayjs_locale_kk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dayjs/locale/kk */ 22082);
/* harmony import */ var dayjs_locale_kk__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dayjs_locale_kk__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var dayjs_locale_en__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dayjs/locale/en */ 97400);
/* harmony import */ var dayjs_locale_en__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(dayjs_locale_en__WEBPACK_IMPORTED_MODULE_5__);









const APP_LANG_KEY = 'lang';
let LangService = class LangService {
    constructor(apiService, translateService, companyService) {
        this.apiService = apiService;
        this.translateService = translateService;
        this.companyService = companyService;
        this.isAuthorized = false;
    }
    init() {
        const savedLang = localStorage.getItem(APP_LANG_KEY) || this.translateService.defaultLang;
        this.translateService.use(savedLang);
        this.updateDayJsLocale(savedLang);
        localStorage.setItem(APP_LANG_KEY, savedLang);
        this.companyService.refresh$.subscribe(([user, company, isAuthorized]) => {
            this.isAuthorized = isAuthorized;
            if (isAuthorized) {
                this.loadServerLang();
            }
        });
    }
    setLang(lang, shouldUpdateServer = this.isAuthorized) {
        localStorage.setItem(APP_LANG_KEY, lang);
        this.translateService.use(lang);
        this.updateDayJsLocale(lang);
        if (shouldUpdateServer) {
            this.setLanguage(lang);
        }
    }
    loadServerLang() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const serverLang = yield this.retrieveLanguage();
                if (serverLang && serverLang !== this.translateService.currentLang) {
                    this.setLang(this.translateService.currentLang, false);
                }
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    setLanguage(language) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const url = `users/language`;
            return this.apiService.put(url, { language });
        });
    }
    retrieveLanguage() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function* () {
            const url = `users/language`;
            const serverProps = yield this.apiService.get(url);
            return serverProps === null || serverProps === void 0 ? void 0 : serverProps.language;
        });
    }
    updateDayJsLocale(lang) {
        switch (lang) {
            case 'ru':
                dayjs__WEBPACK_IMPORTED_MODULE_2___default().locale((dayjs_locale_ru__WEBPACK_IMPORTED_MODULE_3___default()));
                break;
            case 'kk':
                dayjs__WEBPACK_IMPORTED_MODULE_2___default().locale((dayjs_locale_kk__WEBPACK_IMPORTED_MODULE_4___default()));
                break;
            case 'en':
                dayjs__WEBPACK_IMPORTED_MODULE_2___default().locale((dayjs_locale_en__WEBPACK_IMPORTED_MODULE_5___default()));
                break;
        }
    }
};
LangService.ctorParameters = () => [
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__.TranslateService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService }
];
LangService = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)({
        providedIn: 'root',
    })
], LangService);



/***/ }),

/***/ 82499:
/*!*************************************************!*\
  !*** ./src/app/shared/services/list.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListService": () => (/* binding */ ListService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models */ 63157);
/* harmony import */ var _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/confirm-sms-modal/confirm-sms-modal.component */ 53917);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @company/company.service */ 26164);








let ListService = class ListService {
    constructor(apiService, companyService, modalService) {
        this.apiService = apiService;
        this.companyService = companyService;
        this.modalService = modalService;
        this.modalConfigMedium = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_md',
            backdrop: 'static',
            centered: true,
        };
    }
    deleteList(urlPath, itemIds) {
        const url = `companies/${this.companyService.currentId}/${urlPath}`;
        const body = {
            itemIds,
        };
        return this.apiService.deleteWithBody(url, body);
    }
    sign(urlPath, ids) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const itemIds = Array.isArray(ids) ? ids : [ids];
            const modalResult = yield this.showSignModal(itemIds);
            if (!modalResult) {
                return;
            }
            const { smsToken, modal } = modalResult;
            return this.signList(urlPath, ids, smsToken, modal);
        });
    }
    signList(urlPath, ids, smsToken, modal) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const suffix = Array.isArray(ids) ? '' : `${ids}/`;
            const url = `companies/${this.companyService.currentId}/${urlPath}/${suffix}signatures`;
            const body = {
                itemIds: Array.isArray(ids) ? ids : [ids],
            };
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders({
                [smsToken.type == _models__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE.OTP ? _api_api_service__WEBPACK_IMPORTED_MODULE_2__.HEADERS.OTP : _api_api_service__WEBPACK_IMPORTED_MODULE_2__.HEADERS.PHONE]: smsToken.signature,
            });
            const result = yield this.apiService.post(url, body, headers);
            modal.close();
            return result;
        });
    }
    showSignModal(actionIds) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const modal = this.modalService.open(_components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_1__.ConfirmSmsModalComponent, this.modalConfigMedium);
            Object.assign(modal.componentInstance, {
                isPaymentsSigning: false,
                additionalParams: {
                    actionIds,
                },
            });
            const modalResult = new Promise((resolve, reject) => {
                modal.componentInstance.submitted.subscribe((smsToken) => {
                    localStorage.setItem('preferredSignatureType', smsToken.type === _models__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE.OTP
                        ? _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_1__.CONFIRM_SIGNATURE_TYPE.OTP
                        : _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_1__.CONFIRM_SIGNATURE_TYPE.SMS);
                    resolve({ smsToken, modal });
                });
                modal.componentInstance.closed.subscribe(() => {
                    modal.close();
                    resolve(null);
                });
            });
            return modalResult;
        });
    }
};
ListService.ctorParameters = () => [
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_2__.ApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_3__.CompanyService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__.NgbModal }
];
ListService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injectable)({
        providedIn: 'root',
    })
], ListService);



/***/ }),

/***/ 25437:
/*!************************************************************!*\
  !*** ./src/app/shared/services/payments-shared.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaymentsSharedService": () => (/* binding */ PaymentsSharedService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_api_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/api.service */ 82524);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);




let PaymentsSharedService = class PaymentsSharedService {
    constructor(apiService, companyService) {
        this.apiService = apiService;
        this.companyService = companyService;
    }
    getPaymentById(paymentId) {
        const url = `companies/${this.companyService.currentId}/payments/${paymentId}`;
        return this.apiService.get(url);
    }
    getExchangeRate(body) {
        const url = `companies/${this.companyService.currentId}/payments/exchange-rate`;
        return this.apiService.post(url, body);
    }
    retrieveExhangeRates(payment) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
            const exchangeRate = payment.details.exchangeRate;
            const { currencyFrom, currencyTo, sum } = exchangeRate;
            const current = yield this.getExchangeRate({
                currencyFrom,
                currencyTo,
                sum,
            });
            return {
                original: exchangeRate,
                current,
            };
        });
    }
    getRateAmounts(exchangeRate) {
        if (!exchangeRate) {
            return;
        }
        if (exchangeRate.equation) {
            return {
                from: exchangeRate.equation.from,
                to: exchangeRate.equation.to,
            };
        }
        if (exchangeRate.currencyFrom &&
            exchangeRate.currencyTo &&
            exchangeRate.rate) {
            return {
                from: {
                    amount: exchangeRate.rate,
                    currency: exchangeRate.currencyFrom,
                },
                to: {
                    amount: 1,
                    currency: exchangeRate.currencyTo,
                },
            };
        }
    }
    updatePaymentExchangeRate(payment, exchangeRate) {
        const url = `companies/${this.companyService.currentId}/payments/${payment.id}/exchange-rate`;
        const body = Object.assign(Object.assign({}, exchangeRate), { commissionWithdrawalIban: payment.details.exchangeRate.commissionWithdrawalIban });
        return this.apiService.patch(url, body);
    }
    updatePayment(payment) {
        const url = `companies/${this.companyService.currentId}/payments/${payment.id}`;
        return this.apiService.put(url, payment);
    }
};
PaymentsSharedService.ctorParameters = () => [
    { type: _api_api_service__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService }
];
PaymentsSharedService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root',
    })
], PaymentsSharedService);



/***/ }),

/***/ 61558:
/*!*********************************************!*\
  !*** ./src/app/shared/services/platform.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Platform": () => (/* binding */ Platform)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ 36362);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



// Whether the current platform supports the V8 Break Iterator. The V8 check
// is necessary to detect all Blink based browsers.
let hasV8BreakIterator;
// We need a try/catch around the reference to `Intl`, because accessing it in some cases can
// cause IE to throw. These cases are tied to particular versions of Windows and can happen if
// the consumer is providing a polyfilled `Map`. See:
// https://github.com/Microsoft/ChakraCore/issues/3189
// https://github.com/angular/components/issues/15687
try {
    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);
}
catch (_a) {
    hasV8BreakIterator = false;
}
/**
 * Service to detect the current platform by comparing the userAgent strings and
 * checking browser-specific global properties.
 */
let Platform = class Platform {
    constructor(_platformId) {
        this._platformId = _platformId;
        // We want to use the Angular platform check because if the Document is shimmed
        // without the navigator, the following checks will fail. This is preferred because
        // sometimes the Document may be shimmed without the user's knowledge or intention
        /** Whether the Angular application is being rendered in the browser. */
        this.isBrowser = this._platformId ?
            (0,_angular_common__WEBPACK_IMPORTED_MODULE_0__.isPlatformBrowser)(this._platformId) : typeof document === 'object' && !!document;
        /** Whether the current browser is Microsoft Edge. */
        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);
        /** Whether the current rendering engine is Microsoft Trident. */
        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);
        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.
        /** Whether the current rendering engine is Blink. */
        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&
            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);
        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to
        // ensure that Webkit runs standalone and is not used as another engine's base.
        /** Whether the current rendering engine is WebKit. */
        this.WEBKIT = this.isBrowser &&
            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
        /** Whether the current platform is Apple iOS. */
        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&
            !('MSStream' in window);
        // It's difficult to detect the plain Gecko engine, because most of the browsers identify
        // them self as Gecko-like browsers and modify the userAgent's according to that.
        // Since we only cover one explicit Firefox case, we can simply check for Firefox
        // instead of having an unstable check for Gecko.
        /** Whether the current browser is Firefox. */
        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);
        /** Whether the current platform is Android. */
        // Trident on mobile adds the android platform to the userAgent to trick detections.
        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;
        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake
        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every
        // Safari browser should also use Webkit as its layout engine.
        /** Whether the current browser is Safari. */
        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;
    }
};
Platform.ctorParameters = () => [
    { type: Object, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__.PLATFORM_ID,] }] }
];
Platform = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({ providedIn: 'root' })
], Platform);



/***/ }),

/***/ 97532:
/*!************************************************!*\
  !*** ./src/app/shared/services/sms.service.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SmsService": () => (/* binding */ SmsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _models_token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/token */ 99255);
/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user.service */ 98613);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils/index */ 96530);







const endpoints = {
    requestSMS: 'auth/phone/token',
    verifySMS: 'auth/phone/token/::id',
    requestOTP: 'auth/otp/token/',
    verifyOTP: 'auth/otp/token/::id',
};
let SmsService = class SmsService {
    constructor(userService, api) {
        this.userService = userService;
        this.api = api;
    }
    requestSms(phone = this.userService.userPhone, params, headerParams) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = endpoints.requestSMS;
            const headers = headerParams
                ? new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set('code-destiny-type', headerParams.smsHeader)
                : null;
            const body = {
                phone,
            };
            params && Object.assign(body, params);
            const unsignedSmsToken = yield this.api.post(url, body, headers);
            return unsignedSmsToken;
        });
    }
    submitSms(smsToken) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.resolveURL)(endpoints.verifySMS, { id: smsToken.id });
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.SMS, smsToken.signature);
            const signedSmsToken = yield this.api.put(url, smsToken, headers);
            return signedSmsToken;
        });
    }
    requestOtp(phone = this.userService.userPhone, params, otp = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = endpoints.requestOTP;
            let body = {
                phone,
            };
            if (otp) {
                body.serial = otp.serial;
            }
            if (params) {
                body = Object.assign(Object.assign({}, body), params);
            }
            const unsignedOtpToken = yield this.api.post(url, body);
            return unsignedOtpToken;
        });
    }
    submitOtp(smsToken, params, otp = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const url = (0,_utils_index__WEBPACK_IMPORTED_MODULE_3__.resolveURL)(endpoints.verifyOTP, { id: smsToken.id });
            let body = {
                type: _models_token__WEBPACK_IMPORTED_MODULE_1__.TOKEN_TYPE.OTP,
                phone: smsToken.phone,
                code: smsToken.code,
                id: smsToken.id,
            };
            if (otp) {
                body.serial = otp.serial;
            }
            if (params) {
                body = Object.assign(Object.assign({}, body), params);
            }
            if (otp) {
                body.serial = otp.serial;
            }
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders().set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.OTP, smsToken.signature);
            const signedOtpToken = yield this.api.put(url, body, headers);
            return signedOtpToken;
        });
    }
};
SmsService.ctorParameters = () => [
    { type: _user_service__WEBPACK_IMPORTED_MODULE_2__.UserService },
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
SmsService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)({
        providedIn: 'root',
    })
], SmsService);



/***/ }),

/***/ 98613:
/*!*************************************************!*\
  !*** ./src/app/shared/services/user.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AUTHORITY_ID": () => (/* binding */ AUTHORITY_ID),
/* harmony export */   "UserService": () => (/* binding */ UserService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);





const AUTHORITY_ID = 'authority_id';
let UserService = class UserService {
    constructor(apiService) {
        this.apiService = apiService;
        this.user$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(JSON.parse(localStorage.getItem('user')));
    }
    get user() {
        return this.user$.getValue();
    }
    get userPhone() {
        return this.user && this.user.phone;
    }
    getUser() {
        return this.user$.asObservable();
    }
    setUser(user) {
        if (user == null) {
            this.lang = null;
            localStorage.removeItem('user');
        }
        else {
            localStorage.setItem('user', JSON.stringify(user));
        }
        this.user$.next(user);
    }
    changePassword(oldPassword, newPassword) {
        const url = 'users/password:change';
        const body = {
            oldPassword,
            newPassword,
        };
        return this.apiService.put(url, body);
    }
    retrieveUserLastSession() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
            const url = `users/latest-session`;
            return this.apiService.get(url);
        });
    }
    retrieveOtpInfo(companyId = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
            try {
                const url = `users/${this.user.id}/otp-devices`;
                let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpParams();
                params = params.append('companyId', companyId);
                const otpList = yield this.apiService.get(url, null, params);
                return (otpList === null || otpList === void 0 ? void 0 : otpList.length) > 0 ? otpList[0] : false;
            }
            catch (error) {
                return false;
            }
        });
    }
};
UserService.ctorParameters = () => [
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService }
];
UserService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({
        providedIn: 'root',
    })
], UserService);



/***/ }),

/***/ 44466:
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SharedModule": () => (/* binding */ SharedModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngspot_ngx_errors__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @ngspot/ngx-errors */ 47599);
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ 38495);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ngx-mask */ 7038);
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ngx-spinner */ 42777);
/* harmony import */ var ng_click_outside__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ng-click-outside */ 70128);
/* harmony import */ var ng_inline_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ng-inline-svg */ 12160);
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ngx-clipboard */ 21131);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-lottie */ 23875);
/* harmony import */ var ngx_skeleton_loader__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ngx-skeleton-loader */ 15034);
/* harmony import */ var ng_circle_progress__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ng-circle-progress */ 68072);
/* harmony import */ var ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-infinite-scroll */ 64503);
/* harmony import */ var _analytics_analytics_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @analytics/analytics.module */ 8419);
/* harmony import */ var _feature_flags_feature_flags_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @feature-flags/feature-flags.module */ 54821);
/* harmony import */ var _responsive_toolkit_responsive_toolkit_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./responsive-toolkit/responsive-toolkit.module */ 98292);
/* harmony import */ var _icon_icon_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./icon/icon.component */ 25370);
/* harmony import */ var _loading_loading_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./loading/loading.component */ 83617);
/* harmony import */ var _loading_loading_directive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./loading/loading.directive */ 85814);
/* harmony import */ var _layout_home_layout_home_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./layout-home/layout-home.component */ 99430);
/* harmony import */ var _layout_home_main_main_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./layout-home/main/main.component */ 194);
/* harmony import */ var _date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./date-picker/date-picker.component */ 22695);
/* harmony import */ var _form_field_form_field_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./form-field/form-field.component */ 31387);
/* harmony import */ var _form_field_hint_directive__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./form-field/hint.directive */ 99049);
/* harmony import */ var _form_field_label_directive__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./form-field/label.directive */ 86984);
/* harmony import */ var _form_field_prefix_directive__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./form-field/prefix.directive */ 43915);
/* harmony import */ var _form_field_suffix_directive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./form-field/suffix.directive */ 32534);
/* harmony import */ var _form_field_form_input__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./form-field/form-input */ 20591);
/* harmony import */ var _form_field_error_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./form-field/error.component */ 61235);
/* harmony import */ var _form_field_bottom_line__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./form-field/bottom-line */ 49364);
/* harmony import */ var _input_shadow_input_shadow_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./input-shadow/input-shadow.component */ 56209);
/* harmony import */ var _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/confirm-sms-modal/confirm-sms-modal.component */ 53917);
/* harmony import */ var _directives__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./directives */ 94221);
/* harmony import */ var _pipes__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pipes */ 39843);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components */ 7667);
/* harmony import */ var _nav__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./nav */ 91062);
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./input */ 66978);
/* harmony import */ var _f_page__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./f-page */ 74861);
/* harmony import */ var _employee__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./employee */ 6699);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./modals */ 24358);
/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./table */ 51187);
/* harmony import */ var _exchange_rates__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./exchange-rates */ 72802);
/* harmony import */ var _exchange_rates_components_bank_dropdown_bank_dropdown_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./exchange-rates/components/bank-dropdown/bank-dropdown.component */ 11071);
/* harmony import */ var _currencies_list_currencies_list_service_abstract__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./currencies-list/currencies-list.service.abstract */ 64188);
/* harmony import */ var _currencies_list_currensies_list_service__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./currencies-list/currensies-list.service */ 75149);



















































const EXPORT_COMPONENTS = [
    _components_confirm_sms_modal_confirm_sms_modal_component__WEBPACK_IMPORTED_MODULE_23__.ConfirmSmsModalComponent,
    _icon_icon_component__WEBPACK_IMPORTED_MODULE_8__.IconComponent,
    _loading_loading_component__WEBPACK_IMPORTED_MODULE_9__.LoadingComponent,
    _loading_loading_directive__WEBPACK_IMPORTED_MODULE_10__.LoadingDirective,
    _layout_home_layout_home_component__WEBPACK_IMPORTED_MODULE_11__.LayoutHomeComponent,
    _date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_13__.JDatePickerComponent,
    _layout_home_main_main_component__WEBPACK_IMPORTED_MODULE_12__.MainComponent,
    _form_field_form_field_component__WEBPACK_IMPORTED_MODULE_14__.JFormFieldComponent,
    _form_field_hint_directive__WEBPACK_IMPORTED_MODULE_15__.JHintDirective,
    _form_field_label_directive__WEBPACK_IMPORTED_MODULE_16__.JLabelDirective,
    _form_field_prefix_directive__WEBPACK_IMPORTED_MODULE_17__.JPrefixDirective,
    _form_field_suffix_directive__WEBPACK_IMPORTED_MODULE_18__.JSuffixDirective,
    _form_field_bottom_line__WEBPACK_IMPORTED_MODULE_21__.JBottomLineDirective,
    _form_field_error_component__WEBPACK_IMPORTED_MODULE_20__.JErrorComponent,
    _form_field_form_input__WEBPACK_IMPORTED_MODULE_19__.JFormInput,
    _input_shadow_input_shadow_component__WEBPACK_IMPORTED_MODULE_22__.InputShadowComponent,
    _employee__WEBPACK_IMPORTED_MODULE_30__.EMPLOYEE_COMPONENTS,
    _f_page__WEBPACK_IMPORTED_MODULE_29__.FPAGE_COMPONENTS,
    _components__WEBPACK_IMPORTED_MODULE_26__.SHARED_COMPONENTS,
    _input__WEBPACK_IMPORTED_MODULE_28__.INPUT_COMPONENTS,
    _nav__WEBPACK_IMPORTED_MODULE_27__.NAV_COMPONENTS,
    _exchange_rates__WEBPACK_IMPORTED_MODULE_33__.EXCHANGE_RATES_COMPONENTS,
];
const EXPORT_MODULES = [
    _angular_common__WEBPACK_IMPORTED_MODULE_37__.CommonModule,
    ngx_mask__WEBPACK_IMPORTED_MODULE_38__.NgxMaskModule,
    ngx_spinner__WEBPACK_IMPORTED_MODULE_39__.NgxSpinnerModule,
    ng_click_outside__WEBPACK_IMPORTED_MODULE_1__.ClickOutsideModule,
    _responsive_toolkit_responsive_toolkit_module__WEBPACK_IMPORTED_MODULE_7__.ResponsiveToolkitModule,
    ng_inline_svg__WEBPACK_IMPORTED_MODULE_2__.InlineSVGModule,
    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_40__.TranslateModule,
    _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__.NgbTooltipModule,
    _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__.NgbPopoverModule,
    ngx_clipboard__WEBPACK_IMPORTED_MODULE_42__.ClipboardModule,
    _feature_flags_feature_flags_module__WEBPACK_IMPORTED_MODULE_6__.FeatureFlagsModule,
    ng_circle_progress__WEBPACK_IMPORTED_MODULE_43__.NgCircleProgressModule,
    ngx_skeleton_loader__WEBPACK_IMPORTED_MODULE_44__.NgxSkeletonLoaderModule,
    ngx_infinite_scroll__WEBPACK_IMPORTED_MODULE_4__.InfiniteScrollModule,
    ngx_lottie__WEBPACK_IMPORTED_MODULE_3__.LottieModule,
];
let SharedModule = class SharedModule {
};
SharedModule = (0,tslib__WEBPACK_IMPORTED_MODULE_45__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_46__.NgModule)({
        declarations: [
            _pipes__WEBPACK_IMPORTED_MODULE_25__.SHARED_PIPES,
            _modals__WEBPACK_IMPORTED_MODULE_31__.SHARED_MODALS,
            _directives__WEBPACK_IMPORTED_MODULE_24__.DIRECTIVES,
            EXPORT_COMPONENTS,
            _table__WEBPACK_IMPORTED_MODULE_32__.DIRECTIVES,
            _exchange_rates__WEBPACK_IMPORTED_MODULE_33__.EXCHANGE_RATES_COMPONENTS,
            _exchange_rates_components_bank_dropdown_bank_dropdown_component__WEBPACK_IMPORTED_MODULE_34__.BankDropdownComponent,
        ],
        imports: [
            ngx_lottie__WEBPACK_IMPORTED_MODULE_3__.LottieModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_47__.HttpClientModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_48__.RouterModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_49__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_49__.ReactiveFormsModule,
            ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_0__.BsDatepickerModule.forRoot(),
            ngx_mask__WEBPACK_IMPORTED_MODULE_38__.NgxMaskModule.forChild(),
            _ngspot_ngx_errors__WEBPACK_IMPORTED_MODULE_50__.NgxErrorsModule,
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__.NgbDropdownModule,
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__.NgbDatepickerModule,
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_41__.NgbPaginationModule,
            _analytics_analytics_module__WEBPACK_IMPORTED_MODULE_5__.AnalyticsModule,
            EXPORT_MODULES,
        ],
        exports: [
            _pipes__WEBPACK_IMPORTED_MODULE_25__.SHARED_PIPES,
            _modals__WEBPACK_IMPORTED_MODULE_31__.SHARED_MODALS,
            _directives__WEBPACK_IMPORTED_MODULE_24__.DIRECTIVES,
            EXPORT_COMPONENTS,
            EXPORT_MODULES,
            _table__WEBPACK_IMPORTED_MODULE_32__.DIRECTIVES,
        ],
        providers: [
            _pipes__WEBPACK_IMPORTED_MODULE_25__.SHARED_PIPES,
            { provide: ngx_mask__WEBPACK_IMPORTED_MODULE_38__.MaskPipe, useClass: ngx_mask__WEBPACK_IMPORTED_MODULE_38__.MaskPipe },
            { provide: _currencies_list_currencies_list_service_abstract__WEBPACK_IMPORTED_MODULE_35__.CurrenciesListServiceAbstract, useClass: _currencies_list_currensies_list_service__WEBPACK_IMPORTED_MODULE_36__.CurrenciesListService },
        ],
        schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_46__.CUSTOM_ELEMENTS_SCHEMA],
    })
], SharedModule);



/***/ }),

/***/ 28390:
/*!**************************************************!*\
  !*** ./src/app/shared/table/directives/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectionRowDirective": () => (/* reexport safe */ _selection_row_directive__WEBPACK_IMPORTED_MODULE_0__.SelectionRowDirective),
/* harmony export */   "SelectionContainerDirective": () => (/* reexport safe */ _selection_container_directive__WEBPACK_IMPORTED_MODULE_1__.SelectionContainerDirective)
/* harmony export */ });
/* harmony import */ var _selection_row_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection-row.directive */ 95023);
/* harmony import */ var _selection_container_directive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selection-container.directive */ 34281);




/***/ }),

/***/ 34281:
/*!**************************************************************************!*\
  !*** ./src/app/shared/table/directives/selection-container.directive.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectionContainerDirective": () => (/* binding */ SelectionContainerDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let SelectionContainerDirective = class SelectionContainerDirective {
    constructor() { }
    get value() {
        return this.control.value;
    }
    patchValue(id, value) {
        let selected = this.control.value || [];
        if (value) {
            selected.push(id);
        }
        else {
            selected = selected.filter((check) => check !== id);
        }
        this.control.patchValue(selected);
    }
    selectAll() {
        this.control.patchValue(this.rows.map(({ id }) => id));
    }
    clearAll() {
        this.control.patchValue([]);
    }
    get isAllSelected() {
        return this.control.value.length === this.rows.length && this.rows.length > 0;
    }
    get valueChanges() {
        return this.control.valueChanges;
    }
};
SelectionContainerDirective.ctorParameters = () => [];
SelectionContainerDirective.propDecorators = {
    control: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input, args: ['jSelectionContainer',] }],
    rows: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
SelectionContainerDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[jSelectionContainer]',
    })
], SelectionContainerDirective);



/***/ }),

/***/ 95023:
/*!********************************************************************!*\
  !*** ./src/app/shared/table/directives/selection-row.directive.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectionRowDirective": () => (/* binding */ SelectionRowDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var _selection_container_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection-container.directive */ 34281);





let SelectionRowDirective = class SelectionRowDirective {
    constructor(container, cd) {
        this.container = container;
        this.cd = cd;
        this.subs = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subscription();
    }
    change(checked) {
        if (!this.masterSelect) {
            this.container.patchValue(this.id, checked);
        }
        else {
            if (this.container.isAllSelected) {
                this.container.clearAll();
            }
            else {
                this.container.selectAll();
            }
        }
        // this.cd.detectChanges();
    }
    ngOnInit() {
        this.subs.add(this.container.valueChanges
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.debounceTime)(0))
            .subscribe((v) => {
            if (!this.masterSelect) {
                const newValue = !!v.find((id) => id === this.id);
                if (newValue !== this.checked) {
                    this.checked = newValue;
                    this.cd.detectChanges();
                }
            }
            else {
                this.checked = this.container.isAllSelected;
                this.cd.detectChanges();
            }
        }));
    }
    ngAfterViewInit() {
        // this.cd.detach();
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
};
SelectionRowDirective.ctorParameters = () => [
    { type: _selection_container_directive__WEBPACK_IMPORTED_MODULE_0__.SelectionContainerDirective },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectorRef }
];
SelectionRowDirective.propDecorators = {
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input, args: ['jSelectionRow',] }],
    masterSelect: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    checked: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.HostListener, args: ['change', ['$event.target.checked'],] }]
};
SelectionRowDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Directive)({
        selector: '[jSelectionRow]',
    })
], SelectionRowDirective);



/***/ }),

/***/ 51187:
/*!***************************************!*\
  !*** ./src/app/shared/table/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DIRECTIVES": () => (/* binding */ DIRECTIVES)
/* harmony export */ });
/* harmony import */ var _directives__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives */ 28390);

const DIRECTIVES = [
    _directives__WEBPACK_IMPORTED_MODULE_0__.SelectionRowDirective,
    _directives__WEBPACK_IMPORTED_MODULE_0__.SelectionContainerDirective,
];


/***/ }),

/***/ 47083:
/*!***********************************************!*\
  !*** ./src/app/shared/token/token.service.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TokenService": () => (/* binding */ TokenService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-js */ 36240);
/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ua-parser-js */ 22454);
/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ua_parser_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environments/environment */ 92340);







let TokenService = class TokenService {
    constructor() {
        this.BASIC_TOKEN = btoa('webapp:rjZI9MfQOf');
        this.CLIENT_TOKEN_KEY = 'client_token';
        this.USER_TOKEN_KEY = 'user_token';
        this.DEVICE_TOKEN_KEY = 'device_token';
        this.uaParser = new ua_parser_js__WEBPACK_IMPORTED_MODULE_2__.UAParser();
    }
    getBasicHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders()) {
        headers = this.applyDeviceInfoHeaders(headers);
        return headers.set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.AUTHORIZATION, `Basic ${this.BASIC_TOKEN}`);
    }
    applyClientHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders()) {
        return headers.set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.AUTHORIZATION, `Bearer ${this.clientToken}`);
    }
    applyUserHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders()) {
        return headers.set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.AUTHORIZATION, `Bearer ${this.getUserToken()}`);
    }
    applyDeviceHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders(), password) {
        headers = this.applyDeviceInfoHeaders(headers);
        this.getDeviceToken(password);
        if (this.DEVICE_TOKEN != undefined) {
            return headers.set(_api_index__WEBPACK_IMPORTED_MODULE_0__.HEADERS.DEVICE, this.DEVICE_TOKEN);
        }
        return headers;
    }
    applyAuthHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders()) {
        headers = this.applyDeviceInfoHeaders(headers);
        if (this.userToken) {
            headers = this.applyUserHeaders(headers);
        }
        else if (this.clientToken) {
            headers = this.applyClientHeaders(headers);
        }
        return headers;
    }
    get clientToken() {
        if (!this.CLIENT_TOKEN) {
            this.clientToken = localStorage.getItem(this.CLIENT_TOKEN_KEY);
        }
        return this.CLIENT_TOKEN;
    }
    set clientToken(clientToken) {
        if (clientToken != null) {
            this.CLIENT_TOKEN = clientToken;
            localStorage.setItem(this.CLIENT_TOKEN_KEY, this.CLIENT_TOKEN);
        }
    }
    getUserToken() {
        if (!this.userToken) {
            this.userToken = localStorage.getItem(this.USER_TOKEN_KEY);
        }
        return this.userToken;
    }
    setUserToken(userToken) {
        if (!userToken) {
            return;
        }
        this.userToken = userToken;
        localStorage.setItem(this.USER_TOKEN_KEY, this.userToken);
    }
    getDeviceToken(password) {
        if (!this.DEVICE_TOKEN && localStorage.getItem(this.DEVICE_TOKEN_KEY)) {
            try {
                const decryptedDeviceToken = this.decryptData(localStorage.getItem(this.DEVICE_TOKEN_KEY), password);
                this.DEVICE_TOKEN = decryptedDeviceToken;
            }
            catch (error) {
                throw error;
            }
        }
        return this.DEVICE_TOKEN;
    }
    setDeviceToken(deviceToken, password) {
        if (deviceToken != null) {
            this.DEVICE_TOKEN = deviceToken;
            try {
                const encryptedDeviceToken = this.encryptData(deviceToken, password);
                localStorage.setItem(this.DEVICE_TOKEN_KEY, encryptedDeviceToken);
            }
            catch (error) { }
        }
    }
    clearClientToken() {
        this.CLIENT_TOKEN = null;
        localStorage.removeItem(this.CLIENT_TOKEN_KEY);
    }
    clearUserToken() {
        this.userToken = null;
        localStorage.removeItem(this.USER_TOKEN_KEY);
    }
    clearDeviceToken() {
        this.DEVICE_TOKEN = null;
        localStorage.removeItem(this.DEVICE_TOKEN_KEY);
    }
    applyDeviceInfoHeaders(headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders()) {
        this.uaParser.setUA(window.navigator.userAgent);
        const lang = localStorage.getItem('lang');
        const uaInfo = this.uaParser.getResult();
        const os = `${uaInfo.os.name} ${uaInfo.os.version}`;
        const browser = `${uaInfo.browser.name} ${uaInfo.browser.version}`;
        return headers
            .set('Client-Type', 'web')
            .set('X-Language', lang)
            .set('x-app-version', _environments_environment__WEBPACK_IMPORTED_MODULE_3__.environment.appVersion)
            .set('x-device-info', `${os} ${browser}`);
    }
    encryptData(data, encryptSecretKey) {
        return crypto_js__WEBPACK_IMPORTED_MODULE_1__.AES.encrypt(JSON.stringify(data), encryptSecretKey).toString();
    }
    decryptData(data, encryptSecretKey) {
        const bytes = crypto_js__WEBPACK_IMPORTED_MODULE_1__.AES.decrypt(data, encryptSecretKey);
        if (bytes.toString()) {
            return JSON.parse(bytes.toString(crypto_js__WEBPACK_IMPORTED_MODULE_1__.enc.Utf8));
        }
        return data;
    }
};
TokenService.ctorParameters = () => [];
TokenService = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)({
        providedIn: 'root',
    })
], TokenService);



/***/ }),

/***/ 58391:
/*!**********************************************!*\
  !*** ./src/app/shared/validators/account.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccountValidators": () => (/* binding */ AccountValidators)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ 15274);

class AccountValidators {
    static isTengeAcc(control) {
        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isEmptyInputValue)(control.value) ||
            typeof control.value !== 'string' ||
            control.value.length < 2) {
            return null;
        }
        if (control.value.substring(0, 2) !== 'KZ') {
            return { isTengeAcc: true };
        }
        return null;
    }
}


/***/ }),

/***/ 43449:
/*!*********************************************!*\
  !*** ./src/app/shared/validators/errors.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "errors": () => (/* binding */ errors)
/* harmony export */ });
const errors = {
    country: [
        {
            error: 'rubOnlyViaBranch',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_ONLY_VIA_BRANCH_ERROR',
        },
        {
            error: 'cnyOnlyToChina',
            message: 'ERRORS.CURRENCY_PAYMENT.CNY_ONLY_TO_CHINA_ERROR',
        },
    ],
    iinOrBin: [
        {
            error: 'mask',
            message: 'ERRORS.IIN_LENGTH',
        },
        {
            error: 'uniq',
            message: 'ERRORS.EMPLOYEE_ALREADY_SELECTED',
        },
    ],
    name: [
        {
            errors: 'maxlength',
            message: 'ERRORS.NAME_MAX_LENGTH',
        },
    ],
    bankReceiver: [
        {
            error: 'bankRestricted',
            message: 'ERRORS.BANK_RESTRICTED',
        },
    ],
    bankAccount: [
        // {
        //   error: 'isTengeAcc',
        //   message: 'Только счета KZT',
        // },
        {
            error: 'mask',
            message: 'ERRORS.IBAN_LENGTH',
        },
        {
            error: 'difReceiverAndBankBiq',
            message: 'ERRORS.IBAN_BANK_MISMATCH',
        },
        {
            error: 'isEqual',
            message: 'ERRORS.IBAN_EQUAL',
        },
        {
            error: 'bankExist',
            message: 'ERRORS.WRONG_BIC',
        },
        {
            error: 'rubInvalidNumbers',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_BUDGET_DISABLED',
        },
        {
            error: 'rubInvalidBudget',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_INVALID_BUDGET',
        },
        {
            error: 'rubBudgetDisabled',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_BUDGET_DISABLED',
        },
        {
            error: 'rubInvalid',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_INVALID_IBAN',
        },
        {
            error: 'rubLength',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_LENGTH_MISMATCH',
        },
        {
            error: 'currencyMismatch',
            message: 'ERRORS.CURRENCY_PAYMENT.CURRENCY_MISMATCH',
        },
        {
            error: 'bankRestricted',
            message: 'ERRORS.BANK_RESTRICTED',
        },
        {
            error: 'taxAccountError',
            message: 'ERRORS.TAX_ACCOUNT',
            params: {
                path: '/payments/tenge/state/tax',
            },
        },
        {
            error: 'wrongTaxAccountError',
            message: 'ERRORS.WRONG_TAX_ACCOUNT',
            params: {
                path: '/payments/tenge/state/tax',
            },
        },
    ],
    bankSelect: [
        {
            error: 'equalBanks',
            message: 'ERRORS.BANKS_EQUAL',
        },
        {
            error: 'bankRestricted',
            message: 'ERRORS.BANK_RESTRICTED',
        },
        {
            error: 'rubBudgetDisabled',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_BUDGET_DISABLED',
        },
        {
            error: 'rubBudgetWrongBic',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_BUDGET_WRONG_BIC',
        },
    ],
    kbeCode: [
        {
            error: 'mask',
            message: 'ERRORS.KBE.MASK',
        },
        {
            error: 'kbe',
            message: 'ERRORS.KBE.NOT_EXIST',
        },
    ],
    purpose: [
        {
            error: 'maxlength',
            message: 'ERRORS.MAX_LENGTH',
        },
    ],
    vin: [
        {
            error: 'mask',
            message: 'ERRORS.VIN',
        },
    ],
    email: [
        {
            error: 'email',
            message: 'ERRORS.EMAIL',
        },
    ],
    employees: [
        {
            error: 'required',
            message: 'ERRORS.EMPLOYEES.REQUIRED',
        },
        {
            error: 'minLength',
            message: 'ERRORS.EMPLOYEES.MIN_LENGTH',
        },
        {
            error: 'groupError',
            message: 'ERRORS.EMPLOYEES.GROUP_ERROR',
        },
        {
            error: 'uniq',
            message: 'uniq',
        },
    ],
    contractId: [
        {
            error: 'rubOnlyViaBranch',
            message: 'ERRORS.CURRENCY_PAYMENT.RUB_ONLY_VIA_BRANCH_ERROR',
        },
        {
            error: 'cnyOnlyToChina',
            message: 'ERRORS.CURRENCY_PAYMENT.CNY_ONLY_TO_CHINA_ERROR',
        },
    ],
    kio: [
        {
            error: 'lengthMismatch',
            message: 'ERRORS.CURRENCY_PAYMENT.KIO_LENGTH_MISMATCH',
        },
    ],
    payerInn: [
        {
            error: 'lengthMismatch',
            message: 'ERRORS.CURRENCY_PAYMENT.KIO_LENGTH_MISMATCH',
        },
    ],
    amount: [
        {
            error: 'mustIncludeContract',
            message: 'ERRORS.CURRENCY_PAYMENT.MUST_INCLUDE_CONTRACT',
        },
        {
            error: 'balanceNotEnough',
            message: 'ERRORS.CURRENCY_PAYMENT.BALANCE_NOT_ENOUGH',
        },
    ],
};


/***/ }),

/***/ 88228:
/*!********************************************!*\
  !*** ./src/app/shared/validators/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccountValidators": () => (/* reexport safe */ _account__WEBPACK_IMPORTED_MODULE_0__.AccountValidators),
/* harmony export */   "CompareOperation": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_1__.CompareOperation),
/* harmony export */   "MiscValidators": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_1__.MiscValidators),
/* harmony export */   "errors": () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_2__.errors)
/* harmony export */ });
/* harmony import */ var _account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account */ 58391);
/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc */ 91757);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ 43449);





/***/ }),

/***/ 91757:
/*!*******************************************!*\
  !*** ./src/app/shared/validators/misc.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompareOperation": () => (/* binding */ CompareOperation),
/* harmony export */   "MiscValidators": () => (/* binding */ MiscValidators)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ 15274);
/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/index */ 96530);



var CompareOperation;
(function (CompareOperation) {
    CompareOperation["EQUAL"] = "EQUAL";
})(CompareOperation || (CompareOperation = {}));
const operators = {
    [CompareOperation.EQUAL]: (a, b) => a === b,
};
class MiscValidators {
    static kbe(control) {
        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isEmptyInputValue)(control.value)) {
            return null;
        }
        const parsed = parseFloat(control.value);
        if (typeof parsed !== 'number' ||
            parsed > 29 ||
            parsed < 11 ||
            parsed === 20 ||
            parsed === 10) {
            return { kbe: true };
        }
        return null;
    }
    static isGreaterThan(thanControl) {
        return (control) => {
            if (thanControl.value && control.value) {
                if (thanControl.value >= control.value) {
                    return { isGreaterThan: true };
                }
            }
            return null;
        };
    }
    static isSmallerThan(thanControl) {
        return (control) => {
            if (thanControl.value && control.value) {
                if (thanControl.value <= control.value) {
                    return { isSmallerThan: true };
                }
            }
            return null;
        };
    }
    static wordsCount(count, operator = CompareOperation.EQUAL) {
        return (control) => {
            if (control.value && typeof control.value === 'string') {
                const isValid = operators[operator](count, (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.countWords)(control.value));
                if (!isValid) {
                    return { countWords: true };
                }
            }
            return null;
        };
    }
    static transformBeforeValidator(transformFn, validatorFn) {
        return (control) => {
            return validatorFn({
                value: transformFn(control.value),
            });
        };
    }
    static SafeMinAmount(min) {
        return MiscValidators.transformBeforeValidator(_utils_index__WEBPACK_IMPORTED_MODULE_1__.safeUnmaskAmount, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Validators.min(min));
    }
    static SafeMaxAmount(max) {
        return MiscValidators.transformBeforeValidator(_utils_index__WEBPACK_IMPORTED_MODULE_1__.safeUnmaskAmount, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.Validators.max(max));
    }
    static revalidateLinkControlIf(predicate, link) {
        return (control) => (predicate() && link.updateValueAndValidity(), null);
    }
}


/***/ }),

/***/ 15274:
/*!********************************************!*\
  !*** ./src/app/shared/validators/utils.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isEmptyInputValue": () => (/* binding */ isEmptyInputValue)
/* harmony export */ });
function isEmptyInputValue(value) {
    // we don't check for string here so it also works with arrays
    return value == null || value.length === 0;
}


/***/ }),

/***/ 87444:
/*!*****************************************************!*\
  !*** ./src/app/statement/models/statement.model.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "STATEMENT_LARGE_AMOUNT": () => (/* binding */ STATEMENT_LARGE_AMOUNT),
/* harmony export */   "STATEMENT_TYPE": () => (/* binding */ STATEMENT_TYPE),
/* harmony export */   "STATEMENT_MODE": () => (/* binding */ STATEMENT_MODE)
/* harmony export */ });
const STATEMENT_LARGE_AMOUNT = 1000000000;
var STATEMENT_TYPE;
(function (STATEMENT_TYPE) {
    STATEMENT_TYPE["INCOME"] = "INCOME";
    STATEMENT_TYPE["OUTCOME"] = "OUTCOME";
})(STATEMENT_TYPE || (STATEMENT_TYPE = {}));
var STATEMENT_MODE;
(function (STATEMENT_MODE) {
    STATEMENT_MODE["CARDS"] = "CARDS";
    STATEMENT_MODE["ACCOUNTS"] = "ACCOUNTS";
    STATEMENT_MODE["PAYMENTS"] = "PAYMENTS";
})(STATEMENT_MODE || (STATEMENT_MODE = {}));


/***/ }),

/***/ 26923:
/*!*******************************************************!*\
  !*** ./src/app/statement/models/transaction.model.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRANSACTION_GROUP_TYPE": () => (/* binding */ TRANSACTION_GROUP_TYPE),
/* harmony export */   "TRANSACTION_TYPE": () => (/* binding */ TRANSACTION_TYPE),
/* harmony export */   "TRANSACTION_CATEGORY": () => (/* binding */ TRANSACTION_CATEGORY),
/* harmony export */   "Transaction": () => (/* binding */ Transaction)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @accounts/account.model */ 5157);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 64139);






var TRANSACTION_GROUP_TYPE;
(function (TRANSACTION_GROUP_TYPE) {
    TRANSACTION_GROUP_TYPE["DAY"] = "DAY";
    TRANSACTION_GROUP_TYPE["MONTH"] = "MONTH";
    TRANSACTION_GROUP_TYPE["NONE"] = "NONE";
})(TRANSACTION_GROUP_TYPE || (TRANSACTION_GROUP_TYPE = {}));
var TRANSACTION_TYPE;
(function (TRANSACTION_TYPE) {
    TRANSACTION_TYPE["DEBIT"] = "DEBIT";
    TRANSACTION_TYPE["CREDIT"] = "CREDIT";
    TRANSACTION_TYPE["RETURN"] = "RETURN";
})(TRANSACTION_TYPE || (TRANSACTION_TYPE = {}));
var TRANSACTION_CATEGORY;
(function (TRANSACTION_CATEGORY) {
    TRANSACTION_CATEGORY["TRANSFER"] = "TRANSFER";
    TRANSACTION_CATEGORY["REFUND"] = "REFUND";
    TRANSACTION_CATEGORY["COMMISSION"] = "COMMISSION";
})(TRANSACTION_CATEGORY || (TRANSACTION_CATEGORY = {}));
class Transaction {
    constructor(transaction, translateService, accountType = _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.ACCOUNT) {
        this.translateService = translateService;
        this.accountType = accountType;
        this.id = transaction.id;
        this.category = transaction.category;
        this.iban = transaction.iban;
        this.reference = transaction.reference;
        this.documentNumber = this.getDocumentNumber(transaction);
        this.correspondentBankBic = transaction.correspondentBankBic;
        this.correspondentAccount = transaction.correspondentAccount;
        this.correspondentName = this.getCorrespondentName(transaction);
        this.kbe = transaction.kbe;
        this.correspondentBin = transaction.correspondentBin;
        this.debit = this.getDebit(transaction);
        this.credit = this.getCredit(transaction);
        this.description = this.getDescription(transaction);
        this.documentDate = transaction.documentDate;
        this.valueDate = transaction.valueDate;
        this.knp = transaction.knp;
        this.kbk = transaction.kbk;
        this.signHead = transaction.signHead;
        this.signBuch = transaction.signBuch;
        this.emailOnSuccess = transaction.emailOnSuccess;
        this.amount = transaction.amount;
        this.amountLCY = transaction.amountLCY;
        this.amountVat = transaction.amountVat;
        this.commissionFlag = transaction.commissionFlag;
        this.referenceKisc = transaction.referenceKisc;
        this.referenceRelatedDocument = transaction.referenceRelatedDocument;
        this.type = this.determineTransactionType();
        this.isPayment = transaction.isPayment;
        this.paymentType = transaction.paymentType;
        this.paymentStatus = transaction.paymentStatus;
        this.refundDetails = transaction.refundDetails;
        this.paymentEmployees = transaction.paymentEmployees;
        this.createDate = this.getCreateDate(transaction);
        this.paymentColvirId = transaction.paymentColvirId;
        this.paymentId = transaction.paymentId;
        this.parentReference = transaction.parentReference;
        this.signatures = transaction.signatures;
        this.signatureScheme = transaction.signatureScheme;
        this.isSignable = transaction.isSignable;
        this.isSignableByOthers = transaction.isSignableByOthers;
        this.signsCountText = transaction.signsCountText;
        this.isEditable = transaction.isEditable;
        this.isRemovable = transaction.isRemovable;
        this.isExportable = transaction.isExportable;
        this.isSendableForSign = transaction.isSendableForSign;
        this.isRepeatable = transaction.isRepeatable;
        this.isRevokable = transaction.isRevokable;
        this.foreignPaymentDetails = transaction.foreignPaymentDetails;
        this.foreignRecipient = transaction.foreignRecipient;
    }
    get isDebit() {
        return this.debit && this.debit.amount > 0;
    }
    get isCredit() {
        return this.credit && this.credit.amount > 0;
    }
    get balance() {
        if (this.isCredit) {
            return this.credit;
        }
        else {
            return this.debit;
        }
    }
    get sign() {
        if (this.isCredit) {
            return `+`;
        }
        else {
            return `-`;
        }
    }
    get dateStatusText() {
        var _a;
        const statusDate = ((_a = this.paymentStatus) === null || _a === void 0 ? void 0 : _a.timestamp) || this.date;
        return this.mapDateTime(statusDate);
    }
    get paymentMessageTranslateParams() {
        var _a;
        if (((_a = this.paymentStatus) === null || _a === void 0 ? void 0 : _a.state) === _shared_models__WEBPACK_IMPORTED_MODULE_1__.HISTORY_PAYMENT_STATE.WAITING_FOR_VALUE_DATE) {
            return {
                valueDate: this.convertToDayFormat(this.valueDate),
            };
        }
        return null;
    }
    get paymentMessage() {
        var _a, _b, _c, _d, _e;
        if ((_a = this.paymentStatus) === null || _a === void 0 ? void 0 : _a.message) {
            return (_b = this.paymentStatus) === null || _b === void 0 ? void 0 : _b.message;
        }
        else if (((_c = this.paymentStatus) === null || _c === void 0 ? void 0 : _c.state) === _shared_models__WEBPACK_IMPORTED_MODULE_1__.HISTORY_PAYMENT_STATE.WAITING_FOR_VALUE_DATE) {
            if (this.valueDate) {
                return `STATEMENT.TRANSACTION.STATE.${_shared_models__WEBPACK_IMPORTED_MODULE_1__.HISTORY_PAYMENT_STATE.WAITING_FOR_VALUE_DATE}`;
            }
            return null;
        }
        else if ((_d = this.paymentStatus) === null || _d === void 0 ? void 0 : _d.state) {
            return `STATEMENT.TRANSACTION.STATE.${(_e = this.paymentStatus) === null || _e === void 0 ? void 0 : _e.state}`;
        }
        return null;
    }
    determineTransactionType() {
        if (this.category == TRANSACTION_CATEGORY.REFUND) {
            return TRANSACTION_TYPE.RETURN;
        }
        else if (this.isCredit) {
            return TRANSACTION_TYPE.CREDIT;
        }
        else if (this.isDebit) {
            return TRANSACTION_TYPE.DEBIT;
        }
    }
    get date() {
        if (this.isPayment) {
            return new Date(this.createDate);
        }
        else {
            return new Date(this.documentDate);
        }
    }
    mapDateTime(date) {
        const isToday = dayjs__WEBPACK_IMPORTED_MODULE_3___default()().isSame(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(date), 'day');
        const isYesterday = dayjs__WEBPACK_IMPORTED_MODULE_3___default()().subtract(1, 'date').isSame(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(date), 'day');
        const time = dayjs__WEBPACK_IMPORTED_MODULE_3___default()(date).format('HH:mm');
        if (isToday) {
            return this.isPayment
                ? this.translateService.get('STATEMENT.TRANSACTION.DATE.TODAY_TIME', {
                    time,
                })
                : this.translateService.get('STATEMENT.TRANSACTION.DATE.TODAY');
        }
        else if (isYesterday) {
            return this.isPayment
                ? this.translateService.get('STATEMENT.TRANSACTION.DATE.YESTERDAY_TIME', {
                    time,
                })
                : this.translateService.get('STATEMENT.TRANSACTION.DATE.YESTERDAY');
        }
        else {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(this.convertToDayHourFormat(this.date));
        }
    }
    // private isToday(compareDate = this.date) {
    //   const today = new Date();
    //   return (
    //     this.convertToDayFormat(compareDate) == this.convertToDayFormat(today)
    //   );
    // }
    // private isYesterday(compareDate = this.date) {
    //   const today = new Date();
    //   const yesterday = new Date(today.setDate(today.getDate() - 1));
    //   return (
    //     this.convertToDayFormat(compareDate) == this.convertToDayFormat(yesterday)
    //   );
    // }
    convertToDayFormat(date) {
        return (0,_angular_common__WEBPACK_IMPORTED_MODULE_5__.formatDate)(date, 'd MMMM yyyy', this.translateService.currentLang);
    }
    convertToDayHourFormat(date) {
        const format = dayjs__WEBPACK_IMPORTED_MODULE_3___default()().isSame(this.date, 'year')
            ? 'd MMMM HH:mm'
            : 'd MMMM yyyy HH:mm';
        return (0,_angular_common__WEBPACK_IMPORTED_MODULE_5__.formatDate)(this.date, format, this.translateService.currentLang);
    }
    getCreateDate(transaction) {
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.documentDate;
        }
        return transaction.createDate;
    }
    getDescription(transaction) {
        var _a;
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.details;
        }
        return ((_a = transaction.description) === null || _a === void 0 ? void 0 : _a.replace(/^\s+|\s+$/g, '')) || '';
    }
    getDebit(transaction) {
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.transactionType === TRANSACTION_TYPE.DEBIT
                ? this.getCardTransactionAmount(transaction)
                : null;
        }
        return transaction.debit;
    }
    getCredit(transaction) {
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.transactionType === TRANSACTION_TYPE.CREDIT
                ? this.getCardTransactionAmount(transaction)
                : null;
        }
        return transaction.credit;
    }
    getCardTransactionAmount(cardTransaction) {
        var _a, _b, _c, _d;
        if (((_a = cardTransaction.amount) === null || _a === void 0 ? void 0 : _a.amount) && ((_b = cardTransaction.amount) === null || _b === void 0 ? void 0 : _b.currency)) {
            return cardTransaction.amount;
        }
        else if ((_c = cardTransaction.feeAmount) === null || _c === void 0 ? void 0 : _c.amount) {
            return {
                amount: Math.abs((_d = cardTransaction.feeAmount) === null || _d === void 0 ? void 0 : _d.amount),
                currency: _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__.CURRENCY.KZT,
            };
        }
        return null;
    }
    getCorrespondentName(transaction) {
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.description;
        }
        return transaction.correspondentName || transaction.description;
    }
    getDocumentNumber(transaction) {
        if (this.accountType === _accounts_account_model__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_TYPE.CARD) {
            return transaction.finDocId;
        }
        return transaction.documentNumber || transaction.documentId;
    }
}


/***/ }),

/***/ 78232:
/*!************************************************!*\
  !*** ./src/app/statement/statement.service.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StatementService": () => (/* binding */ StatementService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _api_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @api/index */ 39354);
/* harmony import */ var _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @filter/filter.model */ 41359);
/* harmony import */ var _shared_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models */ 63157);
/* harmony import */ var _models_statement_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models/statement.model */ 87444);
/* harmony import */ var _models_transaction_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models/transaction.model */ 26923);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @payments/payments-routes */ 38114);
/* harmony import */ var _payments_services_payment_api_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @payments/services/payment-api.service */ 74967);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);
/* harmony import */ var _shared_services_payments_shared_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/services/payments-shared.service */ 25437);
















let StatementService = class StatementService {
    constructor(datePipe, api, router, companyService, translateService, paymentsApiService, maskedService, paymentsSharedService) {
        this.datePipe = datePipe;
        this.api = api;
        this.router = router;
        this.companyService = companyService;
        this.translateService = translateService;
        this.paymentsApiService = paymentsApiService;
        this.maskedService = maskedService;
        this.paymentsSharedService = paymentsSharedService;
    }
    getTransactionDetails(transaction) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            return this.paymentsSharedService.getPaymentById(transaction.id);
        });
    }
    getStatement(url, filterParams, cashedStatement, isNextPage = false, pageNumber = 1, pageSize = 50, isPayment = false, exportType = null, accountType = null) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpHeaders();
            if (exportType) {
                headers = headers.set('Accept-File', exportType);
                headers = headers.set('Content-Type', 'application/octet-stream');
            }
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            params = params.append('dateFrom', this.datePipe.transform(filterParams.periodFrom, 'yyyy-MM-dd'));
            params = params.append('dateTo', this.datePipe.transform(filterParams.periodTo, 'yyyy-MM-dd'));
            if (filterParams.documentNumber) {
                params = params.append('documentNumber', filterParams.documentNumber);
            }
            if (filterParams.recipientIban) {
                params = params.append('correspondentAccount', filterParams.recipientIban);
            }
            if (filterParams.recipientBin) {
                params = params.append('correspondentBin', filterParams.recipientBin);
            }
            if (filterParams.operationType &&
                (filterParams.operationType === _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.OPERATION_CODE.INCOME ||
                    filterParams.operationType === _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.OPERATION_CODE.OUTCOME)) {
                params = params.append('type', filterParams.operationType);
            }
            if (filterParams.sortBy !== _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.FILTER_SORT.DEFAULT) {
                params = params.append('sort', filterParams.sortBy);
            }
            if (filterParams.amountFrom) {
                params = params.append('amountFrom', `${this.maskedService.getNumberedAmount(filterParams.amountFrom)}`);
            }
            if (filterParams.amountTo) {
                params = params.append('amountTo', `${this.maskedService.getNumberedAmount(filterParams.amountTo)}`);
            }
            if (filterParams.comission) {
                switch (filterParams.comission) {
                    case _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.FILTER_COMISSION.WITH_COMISSION:
                        params = params.append('withCommission', 'true');
                        break;
                    case _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.FILTER_COMISSION.WITHOUT_COMISSION:
                        params = params.append('withCommission', 'false');
                        break;
                }
            }
            params = params.append('page', `${pageNumber}`);
            params = params.append('pageSize', `${pageSize}`);
            try {
                if (exportType) {
                    const downloadStatement = yield this.api.get(url, headers, params, {
                        responseType: 'blob',
                    });
                    return downloadStatement;
                }
                else {
                    const retrievedStatement = yield this.api.get(url, headers, params);
                    return this.mapStatement(cashedStatement, retrievedStatement, isNextPage, isPayment, accountType);
                }
            }
            catch (error) {
                throw error.description || error.code || error;
            }
        });
    }
    checkListForLargeTransactions(transactions) {
        let result = false;
        transactions.forEach((transaction) => {
            if (result) {
                return result;
            }
            if ((transaction.credit &&
                transaction.credit.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT) ||
                (transaction.debit &&
                    transaction.debit.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT)) {
                result = true;
                return result;
            }
        });
        return result;
    }
    repeatPayment(transaction) {
        if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.IN_BETWEEN ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_CARD ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.ACCOUNT_TO_CARD ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_ACCOUNT ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_REPLENISHMENT ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_WITHDRAWAL) {
            this.router.navigate([`/transfers`], {
                state: {
                    repeatPaymentId: transaction.paymentId,
                },
            });
        }
        else if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION) {
            this.router.navigate([`/conversion`], {
                state: {
                    repeatPaymentId: transaction.paymentId,
                },
            });
        }
        else if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.FOREIGN) {
            this.router.navigate([`/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.root}/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.foreignCurrency}`], {
                state: {
                    repeatPaymentId: transaction.paymentId,
                },
            });
        }
        else {
            this.router.navigate([`/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.tenge.root}`], {
                state: {
                    repeatPayment: {
                        type: transaction.paymentStatus.code,
                        id: transaction.paymentId,
                    },
                },
            });
        }
    }
    editPayment(transaction) {
        if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.IN_BETWEEN ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_CARD ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.ACCOUNT_TO_CARD ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_ACCOUNT ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_REPLENISHMENT ||
            transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_WITHDRAWAL) {
            this.router.navigate([`/transfers/${transaction.id}`]);
        }
        else if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION) {
            this.router.navigate([`/conversion/${transaction.id}`]);
        }
        else if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.FOREIGN) {
            this.router.navigate([
                `/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.root}/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.foreignCurrency}`,
                transaction.id,
            ]);
        }
        else {
            this.router.navigate([`/${_payments_payments_routes__WEBPACK_IMPORTED_MODULE_6__.paymentsRoutes.tenge.root}`, transaction.id]);
        }
    }
    generatePaymentStatusLabel(transaction, hasSuffix = false) {
        if (!transaction || !transaction.paymentStatus) {
            return;
        }
        switch (transaction.paymentStatus.code) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.DRAFT:
                return {
                    label: hasSuffix
                        ? 'HISTORY.STATUS.CREATED'
                        : 'HISTORY.STATUS.CREATED',
                    classList: 'text-muted',
                };
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.CREATED:
                if (transaction.isSignable) {
                    return {
                        label: hasSuffix
                            ? 'HISTORY.STATUS.CREATED'
                            : 'HISTORY.STATUS.FOR_SIGN',
                        classList: 'text-info',
                    };
                }
                else {
                    return {
                        label: hasSuffix
                            ? 'HISTORY.STATUS.SIGNING_SUFFIX'
                            : 'HISTORY.STATUS.SIGNING',
                        classList: 'text-muted',
                    };
                }
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.READY_TO_SEND:
                return {
                    label: hasSuffix
                        ? 'HISTORY.STATUS.READY_TO_SEND_SUFFIX'
                        : 'HISTORY.STATUS.READY_TO_SEND',
                    classList: 'text-warning',
                };
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.IN_BANK:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.BANK_PROCESSING:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.BANK_SENT:
                return {
                    label: hasSuffix
                        ? 'HISTORY.STATUS.WORKING_SUFFIX'
                        : 'HISTORY.STATUS.WORKING',
                    classList: 'text-warning',
                };
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.BANK_COMPLETED:
                return {
                    label: 'HISTORY.STATUS.COMPLETED',
                    classList: 'text-success',
                };
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_STATUS.REJECTED:
                return {
                    label: 'HISTORY.STATUS.REJECTED',
                    classList: 'text-danger',
                };
        }
    }
    getTransactionTitle(transaction, params = null) {
        if (transaction.category === _models_transaction_model__WEBPACK_IMPORTED_MODULE_4__.TRANSACTION_CATEGORY.COMMISSION) {
            if (transaction.parentReference) {
                return this.translateService.instant('STATEMENT.TRANSACTION.COMMISSION_FOR_OPERATION');
            }
            else {
                return this.translateService.instant('STATEMENT.TRANSACTION.COMMISSION_FOR_ACCOUNT');
            }
        }
        switch (transaction.paymentType) {
            default:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.EXTERNAL:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.FOREIGN:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.INTERNAL:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.REGULAR_PAYMENT_ORDER:
                return (transaction.correspondentName ||
                    this.translateService.instant('STATEMENT.TRANSACTION.NO_TITLE'));
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.SALARY:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.TAX:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.SOCIAL:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.PENSION:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.MEDICAL:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION:
                return this.translateService.instant(`PAYMENTS.TYPE.${transaction.paymentType}`);
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.IN_BETWEEN:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_ACCOUNT:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CARD_TO_CARD:
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.ACCOUNT_TO_CARD:
                return this.translateService.instant(`PAYMENTS.TYPE.IN_BETWEEN`);
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_WITHDRAWAL:
                return this.translateService.instant(`PAYMENTS.TYPE.DEPOSIT_WITHDRAWAL`, params);
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_REPLENISHMENT:
                return this.translateService.instant(`PAYMENTS.TYPE.DEPOSIT_REPLENISHMENT`, params);
        }
    }
    mapTransactionDescription(transaction, params = null) {
        switch (transaction.paymentType) {
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_REPLENISHMENT:
                return this.translateService.instant('STATEMENT.TRANSACTION.DESCRIPTION.DEPOSIT_REPLENISHMENT', params);
            case _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.DEPOSIT_WITHDRAWAL:
                return this.translateService.instant('STATEMENT.TRANSACTION.DESCRIPTION.DEPOSIT_WITHDRAWAL', params);
            default:
                return (transaction.description ||
                    this.translateService.instant('STATEMENT.TRANSACTION.DESCRIPTION.NO_DESCRIPTION'));
        }
    }
    getStatusHistory(transaction) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.companyService.currentId}/payments/${transaction.paymentId}/status-history`;
            return this.api.get(url);
        });
    }
    getPaymentDetails(paymentId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const payment = yield this.paymentsApiService.getPaymentById(paymentId);
            return payment;
        });
    }
    exportTransaction(transaction) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            let url = `companies/${this.companyService.currentId}/multiple-payments?paymentId=${transaction.paymentId}`;
            if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.CONVERSION) {
                url = `companies/${this.companyService.currentId}/conversion/payments?paymentId=${transaction.paymentId}`;
            }
            else if (transaction.paymentType === _shared_models__WEBPACK_IMPORTED_MODULE_2__.PAYMENT_TYPE.FOREIGN) {
                url = `companies/${this.companyService.currentId}/payments/${transaction.paymentId}`;
            }
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            const exportedTransaction = yield this.api.get(url, headers, params, {
                responseType: 'blob',
            });
            return exportedTransaction;
        });
    }
    exportIncomingPayment(transaction) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.companyService.currentId}/accounts/${transaction.iban}` +
                `/statements/paymentReference?reference=${transaction.reference}`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            return yield this.api.get(url, headers, params, {
                responseType: 'blob',
            });
        });
    }
    exportIncomingPaymentsList(transactions) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const transactionInfo = transactions[0];
            const url = `companies/${this.companyService.currentId}/accounts/${transactionInfo.iban}/statements/paymentReference`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            transactions.forEach(element => {
                params = params.append('reference', element.reference);
            });
            return yield this.api.get(url, headers, params, {
                responseType: 'blob',
            });
        });
    }
    exportTransactions(transactions) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.companyService.currentId}/multiple-payments`;
            let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpHeaders();
            headers = headers.set('Accept-File', 'application/pdf');
            headers = headers.set('Content-Type', 'application/octet-stream');
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            transactions.forEach((transaction) => {
                params = params.append('paymentId', transaction.id);
            });
            return yield this.api.get(url, headers, params, {
                responseType: 'blob',
            });
        });
    }
    loadParentPayment(iban, paymentReference) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.companyService.currentId}/accounts/${iban}/transactions`;
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            params = params.append('reference', paymentReference);
            const initial = yield this.api.get(url, null, params);
            if (initial) {
                return new _models_transaction_model__WEBPACK_IMPORTED_MODULE_4__.Transaction(initial, this.translateService);
            }
            else {
                throw _api_index__WEBPACK_IMPORTED_MODULE_0__.ERRORS.RESOURCE_NOT_FOUND;
            }
        });
    }
    getPaymentDetailsFromColvir(colvirId) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const url = `companies/${this.companyService.currentId}/payments/colvir`;
            let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_11__.HttpParams();
            params = params.append('id', colvirId);
            return this.api.get(url, null, params);
        });
    }
    mapStatement(cashedStatement, retrievedStatement, isNextPage = false, isPayment = false, accountType = null) {
        if (retrievedStatement.totalTransactionsCount === 0) {
            retrievedStatement.hasLargeBalances = false;
            retrievedStatement.hasLargeTransactions = false;
            if (isNextPage && cashedStatement) {
                return cashedStatement;
            }
            return retrievedStatement;
        }
        retrievedStatement.hasLargeBalances =
            this.checkForLargeBalances(retrievedStatement);
        retrievedStatement.hasLargeTransactions =
            this.checkForLargeTransactions(retrievedStatement);
        if (isNextPage && cashedStatement && retrievedStatement.transactionGroups) {
            const lastGroupIndex = cashedStatement.transactionGroups.length - 1;
            const lastGroup = cashedStatement.transactionGroups[lastGroupIndex];
            const firstGroup = retrievedStatement.transactionGroups[0];
            if (lastGroup.groupDate === firstGroup.groupDate) {
                const mappedGroup = this.mapTransactionGroup(firstGroup, isPayment, accountType);
                cashedStatement.transactionGroups[lastGroupIndex].transactions =
                    lastGroup.transactions.concat(mappedGroup.transactions);
                retrievedStatement.transactionGroups.splice(0, 1);
            }
            const mappedGroups = this.mapTransactionGroups(retrievedStatement.transactionGroups, isPayment, accountType);
            cashedStatement.transactionGroups =
                cashedStatement.transactionGroups.concat(mappedGroups);
            cashedStatement.totalTransactionsCount =
                retrievedStatement.totalTransactionsCount;
            return cashedStatement;
        }
        else if (isNextPage && cashedStatement) {
            retrievedStatement.transactionGroups = this.mapTransactionGroups(cashedStatement.transactionGroups, isPayment, accountType);
        }
        else {
            retrievedStatement.transactionGroups = this.mapTransactionGroups(retrievedStatement.transactionGroups, isPayment, accountType);
        }
        return retrievedStatement;
    }
    isEmpty(obj) {
        for (const prop in obj) {
            if (obj.hasOwnProperty(prop)) {
                return false;
            }
        }
        return JSON.stringify(obj) === JSON.stringify({});
    }
    checkForLargeBalances(statement) {
        return ((statement.creditTotalSum &&
            statement.creditTotalSum.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT) ||
            (statement.debitTotalSum &&
                statement.debitTotalSum.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT) ||
            (statement.balanceIn &&
                statement.balanceIn.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT) ||
            (statement.balanceOut &&
                statement.balanceOut.amount >= _models_statement_model__WEBPACK_IMPORTED_MODULE_3__.STATEMENT_LARGE_AMOUNT));
    }
    checkForLargeTransactions(statement) {
        let result = false;
        statement.transactionGroups.forEach((group) => {
            if (result) {
                return result;
            }
            result = this.checkListForLargeTransactions(group.transactions);
        });
        return result;
    }
    mapTransactionGroups(groups, isPayment, accountType = null) {
        return groups.map((group) => {
            return this.mapTransactionGroup(group, isPayment, accountType);
        });
    }
    mapTransactionGroup(group, isPayment, accountType) {
        group.transactions = group.transactions.map((transaction) => {
            transaction.isPayment = isPayment;
            transaction.isRepeatable = transaction.paymentId ? true : false;
            return new _models_transaction_model__WEBPACK_IMPORTED_MODULE_4__.Transaction(transaction, this.translateService, accountType);
        });
        return group;
    }
};
StatementService.ctorParameters = () => [
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_12__.DatePipe },
    { type: _api_index__WEBPACK_IMPORTED_MODULE_0__.ApiService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_13__.Router },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_5__.CompanyService },
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__.TranslateService },
    { type: _payments_services_payment_api_service__WEBPACK_IMPORTED_MODULE_7__.PaymentApiService },
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_8__.MaskedService },
    { type: _shared_services_payments_shared_service__WEBPACK_IMPORTED_MODULE_9__.PaymentsSharedService }
];
StatementService = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_15__.Injectable)({
        providedIn: 'root',
    })
], StatementService);



/***/ }),

/***/ 52890:
/*!******************************!*\
  !*** ./src/app/utils/api.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapParams": () => (/* binding */ mapParams)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 28784);

function mapParams(data) {
    let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpParams();
    for (const key in data) {
        if (!data.hasOwnProperty(key)) {
            continue;
        }
        const value = data[key];
        if (!value) {
            continue;
        }
        params = params.append(key, value);
    }
    return params;
}


/***/ }),

/***/ 20051:
/*!*********************************************!*\
  !*** ./src/app/utils/compare-operations.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COMPARE_OPERATORS": () => (/* binding */ COMPARE_OPERATORS),
/* harmony export */   "isAnExpression": () => (/* binding */ isAnExpression),
/* harmony export */   "splitExpression": () => (/* binding */ splitExpression),
/* harmony export */   "isMatchingExpression": () => (/* binding */ isMatchingExpression),
/* harmony export */   "isAnyActive": () => (/* binding */ isAnyActive)
/* harmony export */ });
var COMPARE_OPERATORS;
(function (COMPARE_OPERATORS) {
    COMPARE_OPERATORS["EQUAL"] = "=";
    COMPARE_OPERATORS["GREATER"] = ">";
    COMPARE_OPERATORS["GREATER_OR_EQUAL"] = ">=";
    COMPARE_OPERATORS["SMALLER"] = "<";
    COMPARE_OPERATORS["SMALLER_OR_EQUAL"] = "<=";
})(COMPARE_OPERATORS || (COMPARE_OPERATORS = {}));
/**
 * Determines whether passed string is a parsable expression
 */
function isAnExpression(str) {
    return (str.charAt(0) === COMPARE_OPERATORS.SMALLER ||
        str.charAt(0) === COMPARE_OPERATORS.GREATER);
}
/**
 * Splits the expression in into <|> [=] alias
 */
function splitExpression(str) {
    // Used operator
    const operator = str.charAt(0);
    // Include breakpoint equal to alias?
    const orEqual = str.charAt(1) === COMPARE_OPERATORS.EQUAL ? true : false;
    /**
     * Index at which breakpoint name starts.
     *
     * For:  >sm, index = 1
     * For: >=sm, index = 2
     */
    const index = 1 + (orEqual ? 1 : 0);
    /**
     * The remaining part of the expression, after the operator, will be treated as the
     * breakpoint name to compare with
     */
    const operandName = str.slice(index);
    return {
        operator,
        orEqual,
        operandName,
    };
}
/**
 * Determines whether current breakpoint matches the expression given
 */
function isMatchingExpression(str, variants) {
    const expression = splitExpression(str);
    // Get index of sought breakpoint in the list
    let pos = variants.indexOf(expression.operandName);
    // Breakpoint found
    if (pos !== -1) {
        let start = 0;
        let end = 0;
        /**
         * Parsing viewport.is('<=md') we interate from smallest breakpoint ('xs') and end
         * at 'md' breakpoint, indicated in the expression,
         * That makes: start = 0, end = 2 (index of 'md' breakpoint)
         *
         * Parsing viewport.is('<md') we start at index 'xs' breakpoint, and end at
         * 'sm' breakpoint, one before 'md'.
         * Which makes: start = 0, end = 1
         */
        if (expression.operator === COMPARE_OPERATORS.SMALLER) {
            start = 0;
            end = expression.orEqual ? ++pos : pos;
        }
        /**
         * Parsing viewport.is('>=sm') we interate from breakpoint 'sm' and end at the end
         * of breakpoint list.
         * That makes: start = 1, end = undefined
         *
         * Parsing viewport.is('>sm') we start at breakpoint 'md' and end at the end of
         * breakpoint list.
         * Which makes: start = 2, end = undefined
         */
        if (expression.operator === COMPARE_OPERATORS.GREATER) {
            start = expression.orEqual ? pos : ++pos;
            end = undefined;
        }
        return variants.slice(start, end);
    }
    /**
     * Returns true if currently active breakpoint matches the expression
     */
}
function isAnyActive(current, acceptedVariants) {
    return acceptedVariants.some((variant) => {
        // Once first breakpoint matches, return true and break out of the loop
        if (current.includes(variant)) {
            return true;
        }
    });
}


/***/ }),

/***/ 12266:
/*!********************************!*\
  !*** ./src/app/utils/dates.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UI_DATE_FORMAT": () => (/* binding */ UI_DATE_FORMAT),
/* harmony export */   "API_DATE_FORMAT": () => (/* binding */ API_DATE_FORMAT),
/* harmony export */   "ISO_8061": () => (/* binding */ ISO_8061),
/* harmony export */   "edgeTimeLabel": () => (/* binding */ edgeTimeLabel),
/* harmony export */   "convertApiDateToUiFormat": () => (/* binding */ convertApiDateToUiFormat),
/* harmony export */   "dateToNgbStruct": () => (/* binding */ dateToNgbStruct),
/* harmony export */   "ngbDateToDate": () => (/* binding */ ngbDateToDate),
/* harmony export */   "ngbDateToUTCStartDay": () => (/* binding */ ngbDateToUTCStartDay),
/* harmony export */   "toUTCStartDay": () => (/* binding */ toUTCStartDay),
/* harmony export */   "toUTCStartMonth": () => (/* binding */ toUTCStartMonth),
/* harmony export */   "ngbStructToISO": () => (/* binding */ ngbStructToISO),
/* harmony export */   "dateToISO": () => (/* binding */ dateToISO),
/* harmony export */   "dateTimeToISO": () => (/* binding */ dateTimeToISO),
/* harmony export */   "getTimeZoneOffset": () => (/* binding */ getTimeZoneOffset),
/* harmony export */   "month": () => (/* binding */ month),
/* harmony export */   "formatNgbDate": () => (/* binding */ formatNgbDate),
/* harmony export */   "periodInputDateToISODateSafe": () => (/* binding */ periodInputDateToISODateSafe),
/* harmony export */   "isoDateToDateSafe": () => (/* binding */ isoDateToDateSafe),
/* harmony export */   "isoDateToPeriodInput": () => (/* binding */ isoDateToPeriodInput),
/* harmony export */   "isoDateToPeriodInputSafe": () => (/* binding */ isoDateToPeriodInputSafe),
/* harmony export */   "convertDateToString": () => (/* binding */ convertDateToString),
/* harmony export */   "convertDateToApiFormat": () => (/* binding */ convertDateToApiFormat)
/* harmony export */ });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ 56908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @filter/filter.model */ 41359);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs */ 16901);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 47509);
/* harmony import */ var dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dayjs/plugin/isBetween */ 3520);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4__);





dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend((dayjs_plugin_customParseFormat__WEBPACK_IMPORTED_MODULE_3___default()));
dayjs__WEBPACK_IMPORTED_MODULE_2___default().extend((dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_4___default()));
const UI_DATE_FORMAT = 'DD.MM.YYYY';
const API_DATE_FORMAT = 'YYYY-MM-DD';
const ISO_8061 = 'YYYY-MM-DD';
const edgeTimeLabel = '19:00';
const convertApiDateToUiFormat = (date) => {
    if (!date) {
        return null;
    }
    return dayjs__WEBPACK_IMPORTED_MODULE_2___default()(date, API_DATE_FORMAT).format(UI_DATE_FORMAT);
};
function dateToNgbStruct(date) {
    return {
        year: date.getFullYear(),
        month: date.getMonth() + 1,
        day: date.getDate(),
    };
}
function ngbDateToDate({ year, month, day }) {
    return new Date(year, month - 1, day);
}
function ngbDateToUTCStartDay({ year, month, day, }) {
    return new Date(Date.UTC(year, month - 1, day, 0, 0, 1));
}
function toUTCStartDay(date) {
    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 1));
}
function toUTCStartMonth(date) {
    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), 1, 0, 0, 1));
}
function ngbStructToISO({ year, month, day }) {
    return `${year}-${month.toString().padStart(2, '0')}-${day
        .toString()
        .padStart(2, '0')}`;
}
function dateToISO(date) {
    return `${date.getFullYear()}-${(date.getMonth() + 1)
        .toString()
        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;
}
function dateTimeToISO(date) {
    return `${dateToISO(date)}T${date
        .getHours()
        .toString()
        .padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date
        .getSeconds()
        .toString()
        .padStart(2, '0')}`;
}
/**
 * @param date local now time
 * @param timeZone to compare ex: Asia/Almaty
 * @returns offset in minutes
 */
function getTimeZoneOffset(date, timeZone) {
    try {
        // Abuse the Intl API to get a local ISO 8601 string for a given time zone.
        let iso = date
            .toLocaleString('en-ca', { timeZone, hour12: false })
            .replace(', ', 'T');
        // Include the milliseconds from the original timestamp
        iso += '.' + date.getMilliseconds().toString().padStart(3, '0');
        // Lie to the Date object constructor that it's a UTC time.
        // const lie = new Date(iso + 'Z');
        const lie = new Date(iso);
        // Return the difference in timestamps, as minutes
        // Positive values are West of Current Timezone, opposite of ISO 8601
        // this matches the output of `Date.getTimeZoneOffset`
        return -(+lie - +date) / 60 / 1000;
    }
    catch (e) {
        return 0;
    }
}
const month = {
    // gentive case (Родительный падеж)
    ru: [
        'января',
        'февраля',
        'марта',
        'апреля',
        'мая',
        'июня',
        'июля',
        'августа',
        'сентября',
        'октября',
        'ноября',
        'декабря',
    ],
    kk: [
        'қаңтар',
        'ақпан',
        'наурыз',
        'сәуір',
        'мамыр',
        'маусым',
        'шілде',
        'тамыз',
        'қыркүйек',
        'қазан',
        'қараша',
        'желтоқсан',
    ],
    en: [
        'january',
        'february',
        'march',
        'april',
        'may',
        'june',
        'july',
        'august',
        'september',
        'october',
        'november',
        'december',
    ],
};
function formatNgbDate(struct, locale) {
    const lang = Object.keys(month).includes(locale) ? locale : localStorage.getItem('lang');
    return struct.day + ' ' + month[lang][struct.month - 1];
}
function periodInputDateToISODateSafe(date) {
    if (typeof date === 'string') {
        return ((date && moment__WEBPACK_IMPORTED_MODULE_0__(date, _filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.PERIOD_FORMAT_INPUT).format(ISO_8061)) || undefined);
    }
    if (date instanceof Date) {
        return moment__WEBPACK_IMPORTED_MODULE_0__(date).format(ISO_8061);
    }
    return '';
}
function isoDateToDateSafe(date) {
    if (typeof date === 'string') {
        return (date && moment__WEBPACK_IMPORTED_MODULE_0__(date, ISO_8061).toDate()) || undefined;
    }
    if (date instanceof Date) {
        return date;
    }
}
function isoDateToPeriodInput(date) {
    return moment__WEBPACK_IMPORTED_MODULE_0__(date, ISO_8061).format(_filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.PERIOD_FORMAT_INPUT);
}
function isoDateToPeriodInputSafe(date) {
    if (typeof date === 'string') {
        return (date && isoDateToPeriodInput(date)) || '';
    }
    else if (date) {
        return moment__WEBPACK_IMPORTED_MODULE_0__(date).format(_filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.PERIOD_FORMAT_INPUT);
    }
}
function convertDateToString(date) {
    return moment__WEBPACK_IMPORTED_MODULE_0__(date).format(_filter_filter_model__WEBPACK_IMPORTED_MODULE_1__.PERIOD_FORMAT_INPUT);
}
function convertDateToApiFormat(date) {
    return moment__WEBPACK_IMPORTED_MODULE_0__(date).format(ISO_8061);
}


/***/ }),

/***/ 96530:
/*!********************************!*\
  !*** ./src/app/utils/index.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EntitiesStore": () => (/* reexport safe */ _simple_store__WEBPACK_IMPORTED_MODULE_0__.EntitiesStore),
/* harmony export */   "SimpleStore": () => (/* reexport safe */ _simple_store__WEBPACK_IMPORTED_MODULE_0__.SimpleStore),
/* harmony export */   "SingleEntityStore": () => (/* reexport safe */ _simple_store__WEBPACK_IMPORTED_MODULE_0__.SingleEntityStore),
/* harmony export */   "FormBuilderTypeSafe": () => (/* reexport safe */ _typed_reactive_form_helper__WEBPACK_IMPORTED_MODULE_1__.FormBuilderTypeSafe),
/* harmony export */   "generateGetSafeFunction": () => (/* reexport safe */ _typed_reactive_form_helper__WEBPACK_IMPORTED_MODULE_1__.generateGetSafeFunction),
/* harmony export */   "generateSetControlSafeFunction": () => (/* reexport safe */ _typed_reactive_form_helper__WEBPACK_IMPORTED_MODULE_1__.generateSetControlSafeFunction),
/* harmony export */   "getPropertyName": () => (/* reexport safe */ _typed_reactive_form_helper__WEBPACK_IMPORTED_MODULE_1__.getPropertyName),
/* harmony export */   "API_DATE_FORMAT": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.API_DATE_FORMAT),
/* harmony export */   "ISO_8061": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.ISO_8061),
/* harmony export */   "UI_DATE_FORMAT": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.UI_DATE_FORMAT),
/* harmony export */   "convertApiDateToUiFormat": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.convertApiDateToUiFormat),
/* harmony export */   "convertDateToApiFormat": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.convertDateToApiFormat),
/* harmony export */   "convertDateToString": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.convertDateToString),
/* harmony export */   "dateTimeToISO": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.dateTimeToISO),
/* harmony export */   "dateToISO": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.dateToISO),
/* harmony export */   "dateToNgbStruct": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.dateToNgbStruct),
/* harmony export */   "edgeTimeLabel": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.edgeTimeLabel),
/* harmony export */   "formatNgbDate": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.formatNgbDate),
/* harmony export */   "getTimeZoneOffset": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.getTimeZoneOffset),
/* harmony export */   "isoDateToDateSafe": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.isoDateToDateSafe),
/* harmony export */   "isoDateToPeriodInput": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.isoDateToPeriodInput),
/* harmony export */   "isoDateToPeriodInputSafe": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.isoDateToPeriodInputSafe),
/* harmony export */   "month": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.month),
/* harmony export */   "ngbDateToDate": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.ngbDateToDate),
/* harmony export */   "ngbDateToUTCStartDay": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.ngbDateToUTCStartDay),
/* harmony export */   "ngbStructToISO": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.ngbStructToISO),
/* harmony export */   "periodInputDateToISODateSafe": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.periodInputDateToISODateSafe),
/* harmony export */   "toUTCStartDay": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.toUTCStartDay),
/* harmony export */   "toUTCStartMonth": () => (/* reexport safe */ _dates__WEBPACK_IMPORTED_MODULE_2__.toUTCStartMonth),
/* harmony export */   "countWords": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.countWords),
/* harmony export */   "generateUniqueId": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.generateUniqueId),
/* harmony export */   "getGroupRawValue": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.getGroupRawValue),
/* harmony export */   "getLang": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.getLang),
/* harmony export */   "ibanPrefix": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.ibanPrefix),
/* harmony export */   "maskIban": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.maskIban),
/* harmony export */   "maskPhone": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.maskPhone),
/* harmony export */   "safeUnmaskAmount": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.safeUnmaskAmount),
/* harmony export */   "toFixedTrim": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.toFixedTrim),
/* harmony export */   "toFixedTrunc": () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_3__.toFixedTrunc),
/* harmony export */   "factoryUserPageMatcher": () => (/* reexport safe */ _routes__WEBPACK_IMPORTED_MODULE_4__.factoryUserPageMatcher),
/* harmony export */   "makeChildren": () => (/* reexport safe */ _routes__WEBPACK_IMPORTED_MODULE_4__.makeChildren),
/* harmony export */   "resolveURL": () => (/* reexport safe */ _routes__WEBPACK_IMPORTED_MODULE_4__.resolveURL),
/* harmony export */   "COMPARE_OPERATORS": () => (/* reexport safe */ _compare_operations__WEBPACK_IMPORTED_MODULE_5__.COMPARE_OPERATORS),
/* harmony export */   "isAnExpression": () => (/* reexport safe */ _compare_operations__WEBPACK_IMPORTED_MODULE_5__.isAnExpression),
/* harmony export */   "isAnyActive": () => (/* reexport safe */ _compare_operations__WEBPACK_IMPORTED_MODULE_5__.isAnyActive),
/* harmony export */   "isMatchingExpression": () => (/* reexport safe */ _compare_operations__WEBPACK_IMPORTED_MODULE_5__.isMatchingExpression),
/* harmony export */   "splitExpression": () => (/* reexport safe */ _compare_operations__WEBPACK_IMPORTED_MODULE_5__.splitExpression),
/* harmony export */   "countDown$": () => (/* reexport safe */ _reactive__WEBPACK_IMPORTED_MODULE_6__.countDown$),
/* harmony export */   "mapParams": () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_9__.mapParams)
/* harmony export */ });
/* harmony import */ var _simple_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simple-store */ 3464);
/* harmony import */ var _typed_reactive_form_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typed-reactive-form-helper */ 87497);
/* harmony import */ var _dates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dates */ 12266);
/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./misc */ 37212);
/* harmony import */ var _routes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routes */ 52394);
/* harmony import */ var _compare_operations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compare-operations */ 20051);
/* harmony import */ var _reactive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reactive */ 40876);
/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clamp.js */ 90625);
/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_clamp_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _clamp_js__WEBPACK_IMPORTED_MODULE_7__) if(["default","EntitiesStore","SimpleStore","SingleEntityStore","FormBuilderTypeSafe","generateGetSafeFunction","generateSetControlSafeFunction","getPropertyName","API_DATE_FORMAT","ISO_8061","UI_DATE_FORMAT","convertApiDateToUiFormat","convertDateToApiFormat","convertDateToString","dateTimeToISO","dateToISO","dateToNgbStruct","edgeTimeLabel","formatNgbDate","getTimeZoneOffset","isoDateToDateSafe","isoDateToPeriodInput","isoDateToPeriodInputSafe","month","ngbDateToDate","ngbDateToUTCStartDay","ngbStructToISO","periodInputDateToISODateSafe","toUTCStartDay","toUTCStartMonth","countWords","generateUniqueId","getGroupRawValue","getLang","ibanPrefix","maskIban","maskPhone","safeUnmaskAmount","toFixedTrim","toFixedTrunc","factoryUserPageMatcher","makeChildren","resolveURL","COMPARE_OPERATORS","isAnExpression","isAnyActive","isMatchingExpression","splitExpression","countDown$"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _clamp_js__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types */ 89822);
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./api */ 52890);












/***/ }),

/***/ 17923:
/*!********************************!*\
  !*** ./src/app/utils/keyBy.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "collectionKeyBy": () => (/* binding */ collectionKeyBy)
/* harmony export */ });
const keyBy = (array, key) => (array || []).reduce((r, x) => (Object.assign(Object.assign({}, r), { [key ? x[key] : x]: x })), {});
function collectionKeyBy(collection, key) {
    const c = collection || {};
    return c.isArray() ? keyBy(c, key) : Object.values(keyBy(c, key));
}


/***/ }),

/***/ 37212:
/*!*******************************!*\
  !*** ./src/app/utils/misc.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getLang": () => (/* binding */ getLang),
/* harmony export */   "toFixedTrunc": () => (/* binding */ toFixedTrunc),
/* harmony export */   "toFixedTrim": () => (/* binding */ toFixedTrim),
/* harmony export */   "generateUniqueId": () => (/* binding */ generateUniqueId),
/* harmony export */   "maskPhone": () => (/* binding */ maskPhone),
/* harmony export */   "maskIban": () => (/* binding */ maskIban),
/* harmony export */   "ibanPrefix": () => (/* binding */ ibanPrefix),
/* harmony export */   "safeUnmaskAmount": () => (/* binding */ safeUnmaskAmount),
/* harmony export */   "countWords": () => (/* binding */ countWords),
/* harmony export */   "getGroupRawValue": () => (/* binding */ getGroupRawValue)
/* harmony export */ });
/* harmony import */ var _shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/currency/currency.model */ 80457);

function getLang() {
    if (navigator.languages !== undefined) {
        return navigator.languages[0];
    }
    else {
        return navigator.language;
    }
}
/**
 *
 * @param number
 * @param precision
 * ceil number to selected precision, add zeros to float part
 */
function toFixedTrunc(number, precision) {
    const v = (typeof number === 'string' ? number : number.toString()).split('.');
    if (precision <= 0)
        return v[0];
    let f = v[1] || '';
    if (f.length > precision) {
        return `${v[0]}.${f.substr(0, precision)}`;
    }
    while (f.length < precision)
        f += '0';
    return `${v[0]}.${f}`;
}
/**
 *
 * @param number
 * @param precision
 * ceil number to selected precision, no adding zeros to float part
 */
function toFixedTrim(number, precision) {
    return parseFloat(toFixedTrunc(number, precision)).toString();
}
function generateUniqueId() {
    const array = new Uint32Array(8);
    window.crypto.getRandomValues(array);
    let str = '';
    for (let i = 0; i < array.length; i++) {
        str += (i < 2 || i > 5 ? '' : '-') + array[i].toString(16).slice(-4);
    }
    // start HTML id attr with string only
    return 'a' + str.slice(1);
}
function maskPhone(phone) {
    return `${phone.slice(0, 11)} ••• ${phone.slice(16)}`;
}
function maskIban(iban) {
    return `${iban.slice(0, 2)} •• ${iban.slice(16)}`;
}
const currencyToPrefix = {
    [_shared_currency_currency_model__WEBPACK_IMPORTED_MODULE_0__.CURRENCY.KZT]: 'KZ',
};
function ibanPrefix(iban = '', currency) {
    const prefix = currencyToPrefix[currency];
    return (prefix + iban).replace(prefix + prefix, '');
}
function safeUnmaskAmount(value) {
    return typeof value == 'string'
        ? parseFloat((value && value.replace(/ /g, '').replace(/,/g, '.')) || '0')
        : value;
}
function countWords(str) {
    return str
        .trim()
        .split(' ')
        .filter(function (n) {
        return n !== '';
    }).length;
}
/**
 * Pick values for all controls (disabled too)
 * @param group
 * @param pick
 */
function getGroupRawValue(group, pick) {
    return (pick ? pick : Object.keys(group.controls)).reduce((rawModel, controlName) => {
        rawModel[controlName] = group.controls[controlName].value;
        return rawModel;
    }, {});
}


/***/ }),

/***/ 2694:
/*!*******************************!*\
  !*** ./src/app/utils/pick.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pick": () => (/* binding */ pick)
/* harmony export */ });
function pick(object, keys) {
    return keys.reduce((obj, key) => {
        if (object && object.hasOwnProperty(key)) {
            obj[key] = object[key];
        }
        return obj;
    }, {});
}


/***/ }),

/***/ 40876:
/*!***********************************!*\
  !*** ./src/app/utils/reactive.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "countDown$": () => (/* binding */ countDown$)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 45398);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 32647);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 45050);


function countDown$(ticks) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.timer)(1000, 1000).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.scan)((acc) => --acc, ticks), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.takeWhile)((v) => v >= 0));
}


/***/ }),

/***/ 52394:
/*!*********************************!*\
  !*** ./src/app/utils/routes.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makeChildren": () => (/* binding */ makeChildren),
/* harmony export */   "resolveURL": () => (/* binding */ resolveURL),
/* harmony export */   "factoryUserPageMatcher": () => (/* binding */ factoryUserPageMatcher)
/* harmony export */ });
function makeChildren(parentString, childrenRoutes) {
    return Object.keys(childrenRoutes).reduce((acc, key) => {
        if (typeof childrenRoutes[key] === 'string') {
            if (key === 'root') {
                acc[key] = (parentString + '/' + childrenRoutes.root).replace(/\/\//g, '/').replace(acc[key] + '/' + acc[key], acc[key]);
                return acc;
            }
            acc[key] = (parentString +
                '/' +
                childrenRoutes.root +
                '/' +
                childrenRoutes[key])
                .replace(/\/\//g, '/')
                .replace(childrenRoutes.root + '/' + childrenRoutes.root, childrenRoutes.root);
        }
        else {
            acc[key] = makeChildren(parentString, childrenRoutes[key]);
        }
        return acc;
    }, {});
}
function resolveURL(url, params) {
    if (!params) {
        return url;
    }
    const resolved = Object.keys(params).reduce((acc, param) => {
        return acc.replace(`::${param}`, params[param] || '');
    }, url);
    return resolved;
}
/**
 * Prevent recreation the component when changing between the route
 * entries the route entry with the parameter and the entry without the parameter.
 * empty string as second segment will decoded as param and navigation by relative route can be affected
 * @param fragment url fragment to check for reload
 * @param paramName param name to be passed in params map
 */
function factoryUserPageMatcher(fragment, paramName) {
    return function userPageMatcher(segments) {
        if (segments.length > 0 && segments[0].path === fragment) {
            if (segments.length === 2) {
                return {
                    consumed: segments,
                    posParams: { [paramName]: segments[1] },
                };
            }
            if (segments.length === 1) {
                return {
                    consumed: segments,
                    posParams: {},
                };
            }
            return null;
        }
        return null;
    };
}


/***/ }),

/***/ 3464:
/*!***************************************!*\
  !*** ./src/app/utils/simple-store.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SimpleStore": () => (/* binding */ SimpleStore),
/* harmony export */   "EntitiesStore": () => (/* binding */ EntitiesStore),
/* harmony export */   "SingleEntityStore": () => (/* binding */ SingleEntityStore)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 1635);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 86942);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 24514);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 53298);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 83910);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 54671);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 79128);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ 59151);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 25670);
/* harmony import */ var _keyBy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyBy */ 17923);



const DEFAULT = {
    ttl: 60000,
};
class SimpleStore {
    constructor(initialState, opts = {}) {
        this.fetchingSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetching$ = this.fetchingSubject$.asObservable();
        this.fetchedSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetched$ = this.fetchedSubject$.asObservable();
        this.updated = 0;
        this.config = Object.assign(opts, DEFAULT);
        this.itemsSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject((this.initialState = initialState || []));
        this.dict$ = this.itemsSubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)((v) => (0,_keyBy__WEBPACK_IMPORTED_MODULE_0__.collectionKeyBy)(v, 'id')), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.share)());
        if (this.config.onSubscribe) {
            (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.defer)(() => (this.config.onSubscribe(this), this.items$));
        }
        else {
            this.items$ = this.itemsSubject$.asObservable();
        }
        this.isExpiredSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(this.expired);
        // .pipe(
        // startWith(this.expired),
        // switchMap(v => timer(this.config.ttl).pipe(mapTo(true)))
        // );
        this.isExpired$ = this.isExpiredSubject$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.distinctUntilChanged)())
            .asObservable();
    }
    get dict() {
        let r;
        this.dict$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.take)(1)).subscribe((v) => (r = v));
        return r;
    }
    get items() {
        return this.itemsSubject$.getValue();
    }
    set items(items) {
        this.itemsSubject$.next(items);
    }
    get fetching() {
        return this.fetchingSubject$.getValue();
    }
    set fetching(state) {
        this.fetchingSubject$.next(state);
    }
    get fetched() {
        return this.fetchedSubject$.getValue();
    }
    set fetched(state) {
        this.fetchedSubject$.next(state);
    }
    addItem(item, opts) {
        const newItem = item;
        this.items = [...this.items, newItem];
    }
    get expired() {
        return Date.now() - this.updated > this.config.ttl;
    }
    getItemById(id) {
        return this.dict[id];
    }
    getItemByKey(v, key) {
        return this.items.find((item) => item[key] === v);
    }
    setUpdated(updateAt = 0) {
        this.updated = updateAt;
    }
    updateItem(toUpdate) {
        const index = this.items.findIndex((item) => item.id === toUpdate.id);
        if (~index) {
            const updatedItem = Object.assign(Object.assign({}, this.items[index]), toUpdate);
            this.items = [...this.items.splice(index, 1, updatedItem)];
        }
    }
    replaceItem(toReplace) {
        const index = this.items.findIndex((item) => item.id === toReplace.id);
        if (~index) {
            this.items = [...this.items.splice(index, 1, toReplace)];
        }
    }
    removeItem(id) {
        this.items = this.items.filter((item) => item.id !== id);
    }
    setState(items, opts = {}) {
        this.items = items;
        this.updated = opts.updatedAt || Date.now();
        this.isExpiredSubject$.next(this.expired);
    }
    resetState() {
        this.items = [...this.initialState];
        this.fetching = false;
        this.fetched = false;
    }
    purge() {
        this.fetching = false;
        this.fetched = false;
        this.items = [];
    }
}
// @TODO use on behaviour subject to store state
// export class EntitiesStore<T extends { id: string }> extends BehaviorSubject<T[]> {
class EntitiesStore {
    constructor(initialState = [], opts = {}) {
        this.fetchingSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetching$ = this.fetchingSubject$.asObservable();
        this.fetchedSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetched$ = this.fetchedSubject$.asObservable();
        this.suspend$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.updated = 0;
        // super(initialState);
        this.config = Object.assign(opts, DEFAULT);
        this.entitiesSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject({});
        this.idsSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject([]);
        this.isExpiredSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(this.expired);
        this.isExpired$ = this.isExpiredSubject$
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.distinctUntilChanged)())
            .asObservable();
        this.items$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.combineLatest)([
            this.ids$,
            this.entities$,
            this.suspend$,
        ]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.skipWhile)(() => this.suspend$.getValue()), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(([ids, entities]) => ids.map((id) => entities[id])), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.shareReplay)(1));
        this.items = initialState;
        this.initialState = initialState;
        this.fetchedItems$ = this.fetchedSubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.distinctUntilChanged)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.filter)((loaded) => {
            return loaded;
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)((loaded) => this.items), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.shareReplay)(1));
    }
    get entities() {
        return this.entitiesSubject$.getValue();
    }
    set entities(dict) {
        this.entitiesSubject$.next(dict);
    }
    get entities$() {
        return this.entitiesSubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.distinctUntilChanged)());
    }
    get items() {
        let r;
        this.items$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.first)()).subscribe((v) => (r = v));
        return r;
    }
    get ids$() {
        return this.idsSubject$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.distinctUntilChanged)());
    }
    get ids() {
        return this.idsSubject$.getValue();
    }
    set ids(ids) {
        this.idsSubject$.next(ids);
    }
    set items(items) {
        let i = 0;
        let length = items.length;
        const entities = {};
        const ids = [];
        this.suspend$.next(true);
        for (; i < length; i++) {
            entities[items[i].id] = items[i];
            ids.push(items[i].id);
        }
        this.idsSubject$.next(ids);
        this.entitiesSubject$.next(entities);
        this.suspend$.next(false);
    }
    get fetching() {
        return this.fetchingSubject$.getValue();
    }
    set fetching(state) {
        this.fetchingSubject$.next(state);
    }
    get fetched() {
        return this.fetchedSubject$.getValue();
    }
    set fetched(state) {
        this.fetchedSubject$.next(state);
    }
    // addItem(item: T, opts?: { insertBefore?: any; insertAfter?: any }) {
    //   const newItem = item;
    //   this.items = [...this.items, newItem];
    // }
    get expired() {
        return Date.now() - this.updated > this.config.ttl;
    }
    getItemsByIds(ids) {
        if (Array.isArray(ids)) {
            const entities = this.entities;
            return ids.reduce((acc, knpCode) => (entities[knpCode] && acc.push(entities[knpCode]), acc), []);
        }
        else {
            return this.entities[ids];
        }
    }
    getItemByKey(v, key) {
        return this.items.find((item) => item[key] === v);
    }
    setUpdated(updateAt = 0) {
        this.updated = updateAt;
    }
    // updateItem(toUpdate: Partial<T>) {
    //   const index = this.items.findIndex((item) => item.id === toUpdate.id);
    //   if (~index) {
    //     const updatedItem = { ...this.items[index], ...toUpdate };
    //     this.items = [...this.items.splice(index, 1, updatedItem)];
    //   }
    // }
    // replaceItem(toReplace: T) {
    //   const index = this.items.findIndex((item) => item.id === toReplace.id);
    //   if (~index) {
    //     this.items = [...this.items.splice(index, 1, toReplace)];
    //   }
    // }
    upsertItem(item, shift) {
        const dict = Object.assign({}, this.entities);
        let ids = this.ids;
        if (dict[item.id]) {
            dict[item.id] = Object.assign(Object.assign({}, dict[item.id]), item);
            this.entities = dict;
        }
        else {
            dict[item.id] = item;
            ids = shift ? [item.id].concat(ids) : ids.concat([item.id]);
            this.suspend$.next(true);
            this.entities = dict;
            this.ids = ids;
            this.suspend$.next(false);
        }
    }
    removeItems(ids) {
        if (!Array.isArray(ids)) {
            ids = [ids];
        }
        const dict = ids.reduce((acc, id) => {
            acc[id] = true;
            return acc;
        }, {});
        this.items = this.items.filter((item) => !(item.id in dict));
    }
    setState(items, opts = {}) {
        this.items = items;
        this.updated = opts.updatedAt || Date.now();
        this.isExpiredSubject$.next(this.expired);
    }
    resetState() {
        this.items = [...this.initialState];
        this.fetching = false;
        this.fetched = false;
    }
    purge() {
        this.fetching = false;
        this.fetched = false;
        this.items = [];
    }
}
class SingleEntityStore {
    constructor(initialState) {
        this.fetchingSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetching$ = this.fetchingSubject$.asObservable();
        this.fetchedSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.fetched$ = this.fetchedSubject$.asObservable();
        this.entitySubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject((this.initialState = initialState));
        this.entity$ = this.entitySubject$.asObservable();
    }
    get entity() {
        return this.entitySubject$.getValue();
    }
    set entity(item) {
        this.entitySubject$.next(item);
    }
    get fetching() {
        return this.fetchingSubject$.getValue();
    }
    set fetching(state) {
        this.fetchingSubject$.next(state);
    }
    get fetched() {
        return this.fetchedSubject$.getValue();
    }
    set fetched(state) {
        this.fetchedSubject$.next(state);
    }
    purge() {
        this.fetching = false;
        this.fetched = false;
        this.entity = null;
    }
}
// type MappingFunction<T, R> = (mappable: T) => R;
// type MemoizationFunction<R> = (previousResult: R, currentResult: R) => boolean;
// function defaultMemoization(previousValue, currentValue): boolean {
//   if (typeof previousValue === 'object' && typeof currentValue === 'object') {
//     return naiveObjectComparison(previousValue, currentValue);
//   }
//   return previousValue === currentValue;
// }
// export function select$<T, R>(
//   source$: Observable<T>,
//   mappingFunction: MappingFunction<T, R>,
//   memoizationFunction?: MemoizationFunction<R>
// ): Observable<R> {
//   return source$.pipe(
//     map(mappingFunction),
//     distinctUntilChanged(memoizationFunction || defaultMemoization),
//     shareReplay(1)
//   );
// }
// export function naiveObjectComparison(objOne, objTwo): boolean {
//   return JSON.stringify(objOne) === JSON.stringify(objTwo);
// }
// function deepFreeze<T>(inObj: T): T {
//   Object.freeze(inObj);
//   Object.getOwnPropertyNames(inObj).forEach(function (prop) {
//     if (
//       inObj.hasOwnProperty(prop) &&
//       inObj[prop] != null &&
//       typeof inObj[prop] === 'object' &&
//       !Object.isFrozen(inObj[prop])
//     ) {
//       deepFreeze(inObj[prop]);
//     }
//   });
//   return inObj;
// }
// export class Store<T> extends BehaviorSubject<T> {
//   constructor(initialData: T) {
//     super(deepFreeze(initialData));
//   }
//   next(newData: T): void {
//     const frozenData = deepFreeze(newData);
//     if (!naiveObjectComparison(frozenData, this.getValue())) {
//       super.next(frozenData);
//     }
//   }
// }


/***/ }),

/***/ 87497:
/*!*****************************************************!*\
  !*** ./src/app/utils/typed-reactive-form-helper.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateGetSafeFunction": () => (/* binding */ generateGetSafeFunction),
/* harmony export */   "generateSetControlSafeFunction": () => (/* binding */ generateSetControlSafeFunction),
/* harmony export */   "getPropertyName": () => (/* binding */ getPropertyName),
/* harmony export */   "FormBuilderTypeSafe": () => (/* binding */ FormBuilderTypeSafe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/compiler */ 28305);




const generateGetSafeFunction = (gr) => {
    return (propertyFunction) => {
        const getStr = getPropertyName(propertyFunction.toString());
        const p = gr.get(getStr);
        return p;
    };
};
const generateSetControlSafeFunction = (gr) => {
    return (propertyFunction, control) => {
        const getStr = getPropertyName(propertyFunction.toString());
        gr.setControl(getStr, control);
    };
};
const getPropertyName = (propertyFunction) => {
    let properties = [];
    if (propertyFunction) {
        if (propertyFunction.toString().indexOf('=>') !== -1) {
            // propertyFunction.toString() sample value:
            // x => x.hero.address.postcode
            // we need the 'hero.address.postcode'
            // for gr.get('hero.address.postcode') function
            properties = propertyFunction.split('=>')[1].trim().split('.').splice(1);
        }
        else {
            const step1 = propertyFunction &&
                propertyFunction.match(/(return [;.a-zA-Z0-9 ]+)/gi);
            const step2 = step1 && step1[0].match(/(?![. ])([a-z0-9_]+)(?=[};.])/gi);
            properties = (step2 && step2.splice(1)) || [];
        }
    }
    return properties.join('.');
};
// tslint:disable-next-line: max-classes-per-file
let FormBuilderTypeSafe = class FormBuilderTypeSafe extends _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormBuilder {
    // override group to be type safe
    group(controlsConfig, options) {
        /* NOTE the return FormGroupTypeSafe<T> */
        // instantiate group from angular type
        const gr = super.group(controlsConfig, options);
        if (gr) {
            // implement getSafe method
            gr.getSafe = generateGetSafeFunction(gr);
            // implement setControlSafe
            gr.setControlSafe = generateSetControlSafeFunction(gr);
        }
        return gr;
    }
};
FormBuilderTypeSafe = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root'
    })
], FormBuilderTypeSafe);



/***/ }),

/***/ 89822:
/*!********************************!*\
  !*** ./src/app/utils/types.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 92340:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "environment": () => (/* binding */ environment)
/* harmony export */ });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false,
    baseUrl: window['env']['baseUrl'] ||
        'https://business-staging.jysanbank.kz:8460/api/v1',
    appVersion: window['env']['appVersion'] || '',
    bankLogo: './assets/banks/',
    curLogo: './assets/currency/',
    ga: window['env']['gaTrackingId'] || '',
    svgBasePath: '/assets/icons/',
    amplitudeApiKey: window['env']['AmplitudeApiKey'] || 'e74d47f441f931f8d6a2875b8af3d6ab',
    jmartCabinetBaseUrl: 'https://test3.jmart.kz',
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ 14431:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ 68150);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 36747);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 92340);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();
}
(0,_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__.platformBrowserDynamic)().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule)
    .catch(err => console.error(err));


/***/ }),

/***/ 90625:
/*!********************************!*\
  !*** ./src/app/utils/clamp.js ***!
  \********************************/
/***/ (() => {

/*!
 * Clamp.js 0.5.1
 *
 * Copyright 2011-2013, Joseph Schmitt http://joe.sh
 * Released under the WTFPL license
 * http://sam.zoy.org/wtfpl/
 */

(function () {
  /**
   * Clamps a text node.
   * @param {HTMLElement} element. Element containing the text node to clamp.
   * @param {Object} options. Options to pass to the clamper.
   */
  function clamp(element, options) {
    options = options || {};

    var self = this,
      win = window,
      opt = {
        clamp: options.clamp || 2,
        useNativeClamp:
          typeof options.useNativeClamp != 'undefined'
            ? options.useNativeClamp
            : true,
        splitOnChars: options.splitOnChars || ['.', '-', '–', '—', ' '], //Split on sentences (periods), hypens, en-dashes, em-dashes, and words (spaces).
        animate: options.animate || false,
        truncationChar: options.truncationChar || '…',
        truncationHTML: options.truncationHTML,
      },
      sty = element.style,
      originalText = element.innerHTML,
      supportsNativeClamp = typeof element.style.webkitLineClamp != 'undefined',
      clampValue = opt.clamp,
      isCSSValue =
        clampValue.indexOf &&
        (clampValue.indexOf('px') > -1 || clampValue.indexOf('em') > -1),
      truncationHTMLContainer;

    if (opt.truncationHTML) {
      truncationHTMLContainer = document.createElement('span');
      truncationHTMLContainer.innerHTML = opt.truncationHTML;
    }

    // UTILITY FUNCTIONS __________________________________________________________

    /**
     * Return the current style for an element.
     * @param {HTMLElement} elem The element to compute.
     * @param {string} prop The style property.
     * @returns {number}
     */
    function computeStyle(elem, prop) {
      if (!win.getComputedStyle) {
        win.getComputedStyle = function (el, pseudo) {
          this.el = el;
          this.getPropertyValue = function (prop) {
            var re = /(\-([a-z]){1})/g;
            if (prop == 'float') prop = 'styleFloat';
            if (re.test(prop)) {
              prop = prop.replace(re, function () {
                return arguments[2].toUpperCase();
              });
            }
            return el.currentStyle && el.currentStyle[prop]
              ? el.currentStyle[prop]
              : null;
          };
          return this;
        };
      }

      return win.getComputedStyle(elem, null).getPropertyValue(prop);
    }

    /**
     * Returns the maximum number of lines of text that should be rendered based
     * on the current height of the element and the line-height of the text.
     */
    function getMaxLines(height) {
      var availHeight = height || element.clientHeight,
        lineHeight = getLineHeight(element);

      return Math.max(Math.floor(availHeight / lineHeight), 0);
    }

    /**
     * Returns the maximum height a given element should have based on the line-
     * height of the text and the given clamp value.
     */
    function getMaxHeight(clmp) {
      var lineHeight = getLineHeight(element);
      return lineHeight * clmp;
    }

    /**
     * Returns the line-height of an element as an integer.
     */
    function getLineHeight(elem) {
      var lh = computeStyle(elem, 'line-height');
      if (lh == 'normal') {
        // Normal line heights vary from browser to browser. The spec recommends
        // a value between 1.0 and 1.2 of the font size. Using 1.1 to split the diff.
        lh = parseInt(computeStyle(elem, 'font-size')) * 1.2;
      }
      return parseInt(lh);
    }

    // MEAT AND POTATOES (MMMM, POTATOES...) ______________________________________
    var splitOnChars = opt.splitOnChars.slice(0),
      splitChar = splitOnChars[0],
      chunks,
      lastChunk;

    /**
     * Gets an element's last child. That may be another node or a node's contents.
     */
    function getLastChild(elem) {
      //Current element has children, need to go deeper and get last child as a text node
      if (elem.lastChild.children && elem.lastChild.children.length > 0) {
        return getLastChild(Array.prototype.slice.call(elem.children).pop());
      }
      //This is the absolute last child, a text node, but something's wrong with it. Remove it and keep trying
      else if (
        !elem.lastChild ||
        !elem.lastChild.nodeValue ||
        elem.lastChild.nodeValue == '' ||
        elem.lastChild.nodeValue == opt.truncationChar
      ) {
        elem.lastChild.parentNode.removeChild(elem.lastChild);
        return getLastChild(element);
      }
      //This is the last child we want, return it
      else {
        return elem.lastChild;
      }
    }

    /**
     * Removes one character at a time from the text until its width or
     * height is beneath the passed-in max param.
     */
    function truncate(target, maxHeight) {
      if (!maxHeight) {
        return;
      }

      /**
       * Resets global variables.
       */
      function reset() {
        splitOnChars = opt.splitOnChars.slice(0);
        splitChar = splitOnChars[0];
        chunks = null;
        lastChunk = null;
      }

      var nodeValue = target.nodeValue.replace(opt.truncationChar, '');

      //Grab the next chunks
      if (!chunks) {
        //If there are more characters to try, grab the next one
        if (splitOnChars.length > 0) {
          splitChar = splitOnChars.shift();
        }
        //No characters to chunk by. Go character-by-character
        else {
          splitChar = '';
        }

        chunks = nodeValue.split(splitChar);
      }

      //If there are chunks left to remove, remove the last one and see if
      // the nodeValue fits.
      if (chunks.length > 1) {
        // console.log('chunks', chunks);
        lastChunk = chunks.pop();
        // console.log('lastChunk', lastChunk);
        applyEllipsis(target, chunks.join(splitChar));
      }
      //No more chunks can be removed using this character
      else {
        chunks = null;
      }

      //Insert the custom HTML before the truncation character
      if (truncationHTMLContainer) {
        target.nodeValue = target.nodeValue.replace(opt.truncationChar, '');
        element.innerHTML =
          target.nodeValue +
          ' ' +
          truncationHTMLContainer.innerHTML +
          opt.truncationChar;
      }

      //Search produced valid chunks
      if (chunks) {
        //It fits
        if (element.clientHeight <= maxHeight) {
          //There's still more characters to try splitting on, not quite done yet
          if (splitOnChars.length >= 0 && splitChar != '') {
            applyEllipsis(
              target,
              chunks.join(splitChar) + splitChar + lastChunk
            );
            chunks = null;
          }
          //Finished!
          else {
            return element.innerHTML;
          }
        }
      }
      //No valid chunks produced
      else {
        //No valid chunks even when splitting by letter, time to move
        //on to the next node
        if (splitChar == '') {
          applyEllipsis(target, '');
          target = getLastChild(element);

          reset();
        }
      }

      //If you get here it means still too big, let's keep truncating
      if (opt.animate) {
        setTimeout(
          function () {
            truncate(target, maxHeight);
          },
          opt.animate === true ? 10 : opt.animate
        );
      } else {
        return truncate(target, maxHeight);
      }
    }

    function applyEllipsis(elem, str) {
      elem.nodeValue = str + opt.truncationChar;
    }

    // CONSTRUCTOR ________________________________________________________________

    if (clampValue == 'auto') {
      clampValue = getMaxLines();
    } else if (isCSSValue) {
      clampValue = getMaxLines(parseInt(clampValue));
    }

    var clampedText;
    if (supportsNativeClamp && opt.useNativeClamp) {
      sty.overflow = 'hidden';
      sty.textOverflow = 'ellipsis';
      sty.webkitBoxOrient = 'vertical';
      sty.display = '-webkit-box';
      sty.webkitLineClamp = clampValue;

      if (isCSSValue) {
        sty.height = opt.clamp + 'px';
      }
    } else {
      var height = getMaxHeight(clampValue);
      if (height <= element.clientHeight) {
        clampedText = truncate(getLastChild(element), height);
      }
    }

    return {
      original: originalText,
      clamped: clampedText,
    };
  }

  window.$clamp = clamp;
})();


/***/ }),

/***/ 46700:
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": 58685,
	"./af.js": 58685,
	"./ar": 254,
	"./ar-dz": 4312,
	"./ar-dz.js": 4312,
	"./ar-kw": 32614,
	"./ar-kw.js": 32614,
	"./ar-ly": 18630,
	"./ar-ly.js": 18630,
	"./ar-ma": 28674,
	"./ar-ma.js": 28674,
	"./ar-sa": 49032,
	"./ar-sa.js": 49032,
	"./ar-tn": 24730,
	"./ar-tn.js": 24730,
	"./ar.js": 254,
	"./az": 53052,
	"./az.js": 53052,
	"./be": 60150,
	"./be.js": 60150,
	"./bg": 63069,
	"./bg.js": 63069,
	"./bm": 13466,
	"./bm.js": 13466,
	"./bn": 18516,
	"./bn-bd": 90557,
	"./bn-bd.js": 90557,
	"./bn.js": 18516,
	"./bo": 26273,
	"./bo.js": 26273,
	"./br": 9588,
	"./br.js": 9588,
	"./bs": 19815,
	"./bs.js": 19815,
	"./ca": 83331,
	"./ca.js": 83331,
	"./cs": 21320,
	"./cs.js": 21320,
	"./cv": 72219,
	"./cv.js": 72219,
	"./cy": 68266,
	"./cy.js": 68266,
	"./da": 66427,
	"./da.js": 66427,
	"./de": 67435,
	"./de-at": 52871,
	"./de-at.js": 52871,
	"./de-ch": 12994,
	"./de-ch.js": 12994,
	"./de.js": 67435,
	"./dv": 82357,
	"./dv.js": 82357,
	"./el": 95649,
	"./el.js": 95649,
	"./en-au": 59961,
	"./en-au.js": 59961,
	"./en-ca": 19878,
	"./en-ca.js": 19878,
	"./en-gb": 3924,
	"./en-gb.js": 3924,
	"./en-ie": 70864,
	"./en-ie.js": 70864,
	"./en-il": 91579,
	"./en-il.js": 91579,
	"./en-in": 30940,
	"./en-in.js": 30940,
	"./en-nz": 16181,
	"./en-nz.js": 16181,
	"./en-sg": 44301,
	"./en-sg.js": 44301,
	"./eo": 85291,
	"./eo.js": 85291,
	"./es": 54529,
	"./es-do": 53764,
	"./es-do.js": 53764,
	"./es-mx": 12584,
	"./es-mx.js": 12584,
	"./es-us": 63425,
	"./es-us.js": 63425,
	"./es.js": 54529,
	"./et": 35203,
	"./et.js": 35203,
	"./eu": 70678,
	"./eu.js": 70678,
	"./fa": 83483,
	"./fa.js": 83483,
	"./fi": 96262,
	"./fi.js": 96262,
	"./fil": 52521,
	"./fil.js": 52521,
	"./fo": 34555,
	"./fo.js": 34555,
	"./fr": 63131,
	"./fr-ca": 88239,
	"./fr-ca.js": 88239,
	"./fr-ch": 21702,
	"./fr-ch.js": 21702,
	"./fr.js": 63131,
	"./fy": 267,
	"./fy.js": 267,
	"./ga": 23821,
	"./ga.js": 23821,
	"./gd": 71753,
	"./gd.js": 71753,
	"./gl": 4074,
	"./gl.js": 4074,
	"./gom-deva": 92762,
	"./gom-deva.js": 92762,
	"./gom-latn": 5969,
	"./gom-latn.js": 5969,
	"./gu": 82809,
	"./gu.js": 82809,
	"./he": 45402,
	"./he.js": 45402,
	"./hi": 315,
	"./hi.js": 315,
	"./hr": 10410,
	"./hr.js": 10410,
	"./hu": 38288,
	"./hu.js": 38288,
	"./hy-am": 67928,
	"./hy-am.js": 67928,
	"./id": 71334,
	"./id.js": 71334,
	"./is": 86959,
	"./is.js": 86959,
	"./it": 34864,
	"./it-ch": 51124,
	"./it-ch.js": 51124,
	"./it.js": 34864,
	"./ja": 36141,
	"./ja.js": 36141,
	"./jv": 29187,
	"./jv.js": 29187,
	"./ka": 42136,
	"./ka.js": 42136,
	"./kk": 94332,
	"./kk.js": 94332,
	"./km": 18607,
	"./km.js": 18607,
	"./kn": 84305,
	"./kn.js": 84305,
	"./ko": 70234,
	"./ko.js": 70234,
	"./ku": 16003,
	"./ku.js": 16003,
	"./ky": 75061,
	"./ky.js": 75061,
	"./lb": 32786,
	"./lb.js": 32786,
	"./lo": 66183,
	"./lo.js": 66183,
	"./lt": 50029,
	"./lt.js": 50029,
	"./lv": 24169,
	"./lv.js": 24169,
	"./me": 68577,
	"./me.js": 68577,
	"./mi": 68177,
	"./mi.js": 68177,
	"./mk": 50337,
	"./mk.js": 50337,
	"./ml": 65260,
	"./ml.js": 65260,
	"./mn": 52325,
	"./mn.js": 52325,
	"./mr": 14695,
	"./mr.js": 14695,
	"./ms": 75334,
	"./ms-my": 37151,
	"./ms-my.js": 37151,
	"./ms.js": 75334,
	"./mt": 63570,
	"./mt.js": 63570,
	"./my": 97963,
	"./my.js": 97963,
	"./nb": 88028,
	"./nb.js": 88028,
	"./ne": 86638,
	"./ne.js": 86638,
	"./nl": 50302,
	"./nl-be": 66782,
	"./nl-be.js": 66782,
	"./nl.js": 50302,
	"./nn": 33501,
	"./nn.js": 33501,
	"./oc-lnc": 50563,
	"./oc-lnc.js": 50563,
	"./pa-in": 50869,
	"./pa-in.js": 50869,
	"./pl": 65302,
	"./pl.js": 65302,
	"./pt": 49687,
	"./pt-br": 74884,
	"./pt-br.js": 74884,
	"./pt.js": 49687,
	"./ro": 79107,
	"./ro.js": 79107,
	"./ru": 33627,
	"./ru.js": 33627,
	"./sd": 30355,
	"./sd.js": 30355,
	"./se": 83427,
	"./se.js": 83427,
	"./si": 11848,
	"./si.js": 11848,
	"./sk": 54590,
	"./sk.js": 54590,
	"./sl": 20184,
	"./sl.js": 20184,
	"./sq": 56361,
	"./sq.js": 56361,
	"./sr": 78965,
	"./sr-cyrl": 81287,
	"./sr-cyrl.js": 81287,
	"./sr.js": 78965,
	"./ss": 25456,
	"./ss.js": 25456,
	"./sv": 70451,
	"./sv.js": 70451,
	"./sw": 77558,
	"./sw.js": 77558,
	"./ta": 51356,
	"./ta.js": 51356,
	"./te": 73693,
	"./te.js": 73693,
	"./tet": 21243,
	"./tet.js": 21243,
	"./tg": 42500,
	"./tg.js": 42500,
	"./th": 55768,
	"./th.js": 55768,
	"./tk": 77761,
	"./tk.js": 77761,
	"./tl-ph": 35780,
	"./tl-ph.js": 35780,
	"./tlh": 29590,
	"./tlh.js": 29590,
	"./tr": 33807,
	"./tr.js": 33807,
	"./tzl": 93857,
	"./tzl.js": 93857,
	"./tzm": 60654,
	"./tzm-latn": 8806,
	"./tzm-latn.js": 8806,
	"./tzm.js": 60654,
	"./ug-cn": 30845,
	"./ug-cn.js": 30845,
	"./uk": 19232,
	"./uk.js": 19232,
	"./ur": 47052,
	"./ur.js": 47052,
	"./uz": 77967,
	"./uz-latn": 32233,
	"./uz-latn.js": 32233,
	"./uz.js": 77967,
	"./vi": 98615,
	"./vi.js": 98615,
	"./x-pseudo": 12320,
	"./x-pseudo.js": 12320,
	"./yo": 31313,
	"./yo.js": 31313,
	"./zh-cn": 64490,
	"./zh-cn.js": 64490,
	"./zh-hk": 55910,
	"./zh-hk.js": 55910,
	"./zh-mo": 98262,
	"./zh-mo.js": 98262,
	"./zh-tw": 44223,
	"./zh-tw.js": 44223
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 46700;

/***/ }),

/***/ 79259:
/*!***********************************************!*\
  !*** ./src/app/app.component.scss?ngResource ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = ".router-wrapper {\n  position: relative;\n}\n\n.app-loader {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n}\n\n.app-loader ng-lottie {\n  max-width: 50%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBTUE7RUFDRSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtBQUhGOztBQUtFO0VBQ0UsY0FBQTtBQUhKIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3V0ZXItd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLy8gLmYtcGFnZS1ib2R5IHtcbiAgLy8g0K3RgtC+INC70L7QvNCw0LXRgiDRhNC40LvRjNGC0YAg0LIg0LLRi9C/0LjRgdC60LVcbiAgLy8gb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLy8gfVxufVxuXG4uYXBwLWxvYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogNTtcblxuICBuZy1sb3R0aWUge1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG59XG4iXX0= */";

/***/ }),

/***/ 90637:
/*!***************************************************************!*\
  !*** ./src/app/heartbeat/heartbeat.component.scss?ngResource ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFydGJlYXQuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 63485:
/*!*************************************************************************************************************!*\
  !*** ./src/app/payments/components/limit-not-passed-modal/limit-not-passed-modal.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaW1pdC1ub3QtcGFzc2VkLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 49661:
/*!*****************************************************************************************************!*\
  !*** ./src/app/payments/components/working-time-modal/working-time-modal.component.scss?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3b3JraW5nLXRpbWUtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 5688:
/*!***********************************************************************************************!*\
  !*** ./src/app/shared/components/animated-loading/animated-loading.component.scss?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".animated-loading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n  min-height: 200px;\n  width: 100%;\n  height: 100%;\n}\n.animated-loading ng-lottie {\n  max-width: 50%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGVkLWxvYWRpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FBQ0Y7QUFDRTtFQUNFLGNBQUE7QUFDSiIsImZpbGUiOiJhbmltYXRlZC1sb2FkaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFuaW1hdGVkLWxvYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogNTtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5cbiAgbmctbG90dGllIHtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxufVxuIl19 */";

/***/ }),

/***/ 61799:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/aside/aside.component.scss?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  padding: 1rem;\n  overflow: hidden;\n  position: relative;\n}\n@media (min-width: 960px) {\n  :host {\n    background: #f6f7f8;\n    border-bottom: 1px solid #eceef1;\n  }\n}\n@media (min-width: 1280px) {\n  :host {\n    flex-direction: column;\n    width: 280px;\n    height: 100vh;\n    bottom: 0;\n    right: auto;\n  }\n}\n.aside-wrap {\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  top: 0;\n  z-index: 100;\n  right: 0;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s, opacity 0.4s linear;\n}\n.aside-wrap.is-shown {\n  visibility: visible;\n  opacity: 1;\n}\n@media (min-width: 1280px) {\n  .aside-wrap {\n    left: 0;\n    right: 0;\n    background: transparent;\n    position: absolute;\n    visibility: visible;\n    opacity: 1;\n  }\n}\n.aside-backdrop {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(246, 247, 248, 0.8);\n}\n@media (min-width: 1280px) {\n  .aside-backdrop {\n    display: none;\n  }\n}\n.aside {\n  z-index: 1;\n  position: absolute;\n  top: 0px;\n  bottom: 0;\n  width: 80%;\n  left: -100%;\n  background: #fff;\n  overflow-y: auto;\n  padding: 2rem 0 1rem;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  max-width: 20rem;\n  transition: all 0.4s ease-out;\n}\n.is-shown .aside {\n  left: 0;\n}\n@media (min-width: 670px) {\n  .aside {\n    width: 50%;\n  }\n}\n@media (min-width: 1280px) {\n  .aside {\n    left: 0;\n    width: 100%;\n  }\n}\n.aside-mobile {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n.aside-header {\n  width: 100%;\n}\n.logo-wrap {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 0;\n}\n@media (min-width: 1280px) {\n  .logo-wrap {\n    padding: 0 2.5rem;\n  }\n}\n.logo {\n  display: block;\n  flex-shrink: 0;\n  height: 33px;\n  pointer-events: none;\n}\n@media (min-width: 1280px) {\n  .logo {\n    height: 40px;\n  }\n}\n.logo img {\n  max-width: 100%;\n  max-height: 100%;\n}\n.user-toggle {\n  display: flex;\n  width: 100%;\n  border-top: 1px solid #eceef1;\n  border-bottom: 1px solid #eceef1;\n  padding: 10px 2.5rem;\n  margin: 1.5rem 0;\n  align-items: center;\n}\n.user-toggle:hover {\n  background: #f6f7f8;\n}\n.user-text {\n  display: block;\n  max-width: 100%;\n}\n.aside-dropdown-menu {\n  width: 100%;\n  border-color: #e9ebec;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 24px 32px rgba(0, 0, 0, 0.04);\n  border-radius: 0px 0px 16px 16px;\n  display: block;\n  top: 4rem;\n  padding: 0;\n  position: absolute;\n  background: #fff;\n  z-index: 5;\n  overflow: hidden;\n  max-height: 0;\n  opacity: 0;\n  transition: max-height 0.5s linear, opacity 0.3s linear;\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n}\n.aside-dropdown-menu::-webkit-scrollbar {\n  width: 8px;\n}\n.aside-dropdown-menu::-webkit-scrollbar-track {\n  background: #fff;\n}\n.aside-dropdown-menu::-webkit-scrollbar-thumb {\n  background: #b7bec5;\n  border-radius: 10px;\n}\n.aside-create {\n  padding: 0;\n  flex-shrink: 0;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n}\n.aside-dropdown-item {\n  padding: 1rem;\n  white-space: normal;\n  border-bottom: 1px solid #e9ebec;\n}\n.aside-dropdown-item:hover, .aside-dropdown-item:active {\n  background-color: #f5f9fd;\n}\n.user {\n  position: relative;\n}\n.user .dropdown-arrow {\n  transform: rotate(0deg);\n  transition: all 0.2s ease-in-out;\n}\n.user.shown .dropdown-arrow {\n  transform: rotate(180deg);\n}\n.user.shown .aside-dropdown-menu {\n  max-height: 60vh;\n  overflow-y: auto;\n  opacity: 1;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 57309:
/*!***********************************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-body/collapsible-body.component.scss?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2xsYXBzaWJsZS1ib2R5LmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 51347:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-trigger/collapsible-trigger.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2xsYXBzaWJsZS10cmlnZ2VyLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 94329:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible.component.scss?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-collapsed .j-collapsible-arrow {\n  transform: rotate(540deg);\n}\n\n.j-collapsible-arrow {\n  transition: all 0.2s ease-in-out;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 23309:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/confirm-sms-modal/confirm-sms-modal.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".confirm-body {\n  min-height: 200px;\n  position: relative;\n}\n\n.confirm-tabs {\n  height: 3rem;\n  display: flex;\n}\n\n.confirm-tabs a {\n  padding: 12px 0;\n  display: block;\n  color: #666c72;\n  border-bottom: 2px solid transparent;\n}\n\n.confirm-tabs a.active {\n  color: #1a1c1f;\n  font-weight: 500;\n  border-bottom-color: #ef5630;\n}\n\n.confirm-tabs a + a {\n  margin-left: 2.5rem;\n}\n\n.j-modal-header.confirm-modal-header {\n  padding-top: 1.5rem;\n  padding-bottom: 2.5rem;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 65732:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/components/conversion-confirm/conversion-confirm.component.scss?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  text-align: center;\n}\n\n.conversion-confirm__amounts {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n}\n\n.conversion-confirm__amounts img {\n  transform: rotate(-90deg);\n  margin: 0 1rem;\n}\n\n.conversion-confirm__rates {\n  margin-bottom: 1.5rem;\n  font-size: 1.25rem;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 9603:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/copyright/copyright.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".copyright {\n  display: block;\n  line-height: 17px;\n  color: #b7bec5;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 74998:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/empty-placeholder/empty-placeholder.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: block;\n}\n\n.empty {\n  padding: 1.5rem 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.empty-text {\n  line-height: 24px;\n}\n\n.empty-img {\n  border-radius: 50%;\n  box-shadow: 0px 14px 16px rgba(0, 0, 0, 0.05);\n  margin: 1rem 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 32373:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/components/entity-logo/entity-logo.component.scss?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-entity-logo {\n  display: inline-block;\n  border-radius: 16px;\n  background: #fff;\n  overflow: hidden;\n  line-height: 0;\n  height: 1em;\n  width: 1em;\n  flex-shrink: 0;\n  transition: 0.2s ease-in-out all;\n}\n.j-entity-logo.j-entity-logo_empty {\n  width: 0;\n  opacity: 0;\n}\n.j-entity-logo.j-entity-logo--small {\n  border-radius: 8px;\n}\n.j-entity-logo img {\n  max-width: 100%;\n  max-height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0eS1sb2dvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0VBQ0EsZ0NBQUE7QUFDRjtBQUNFO0VBQ0UsUUFBQTtFQUNBLFVBQUE7QUFDSjtBQUVFO0VBQ0Usa0JBQUE7QUFBSjtBQUdFO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0FBREoiLCJmaWxlIjoiZW50aXR5LWxvZ28uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuai1lbnRpdHktbG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIGhlaWdodDogMWVtO1xuICB3aWR0aDogMWVtO1xuICBmbGV4LXNocmluazogMDtcbiAgdHJhbnNpdGlvbjogMC4ycyBlYXNlLWluLW91dCBhbGw7XG5cbiAgJi5qLWVudGl0eS1sb2dvX2VtcHR5IHtcbiAgICB3aWR0aDogMDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgJi5qLWVudGl0eS1sb2dvLS1zbWFsbCB7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgfVxufVxuIl19 */";

/***/ }),

/***/ 80018:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/components/environment-change/environment-change.component.scss?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnZpcm9ubWVudC1jaGFuZ2UuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 20160:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/error-placeholder/error-placeholder.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: block;\n  min-height: 250px;\n}\n\n.error-placeholder {\n  padding: 1.5rem 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.error-placeholder__text {\n  line-height: 24px;\n}\n\n.error-placeholder__img {\n  border-radius: 50%;\n  box-shadow: 0px 14px 16px rgba(0, 0, 0, 0.05);\n  margin: 1rem 0;\n}\n\n.badge-gray {\n  font-size: 1rem;\n  background-color: grey;\n  color: white;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 60434:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/footer/footer.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb290ZXIuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 25501:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/header/header.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: none;\n  width: 100%;\n}\n@media (min-width: 1280px) {\n  :host {\n    display: block;\n    padding-top: 40px;\n    padding-bottom: 24px;\n    border-bottom: 1px solid #eceef1;\n    display: flex;\n    align-items: center;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5jb21wb25lbnQuc2NzcyIsIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMvX2JyZWFrcG9pbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxhQUFBO0VBQ0EsV0FBQTtBQURGO0FDeURJO0VEMURKO0lBS0ksY0FBQTtJQUNBLGlCQUFBO0lBQ0Esb0JBQUE7SUFDQSxnQ0FBQTtJQUNBLGFBQUE7SUFDQSxtQkFBQTtFQUFGO0FBQ0YiLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuOmhvc3Qge1xuICBkaXNwbGF5OiBub25lO1xuICB3aWR0aDogMTAwJTtcblxuICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDI0cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmF5LTMwMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cblxuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbiAhPSBudWxsIGFuZCAkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBsYXJnZXN0IChsYXN0KSBicmVha3BvaW50LlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgY2FsY3VsYXRlZCBhcyB0aGUgbWluaW11bSBvZiB0aGUgbmV4dCBvbmUgbGVzcyAwLjAycHhcbi8vIHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIC4wMiwgbnVsbCk7XG59XG5cbi8vIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuXG4vLyBVc2VmdWwgZm9yIG1ha2luZyByZXNwb25zaXZlIHV0aWxpdGllcy5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCJcIiAgKFJldHVybnMgYSBibGFuayBzdHJpbmcpXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCItc21cIlxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1heCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBiZXR3ZWVuIHRoZSBtaW4gYW5kIG1heCBicmVha3BvaW50c1xuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtYmV0d2VlbigkbG93ZXIsICR1cHBlciwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbG93ZXIsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCR1cHBlciwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCR1cHBlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gTWVkaWEgYmV0d2VlbiB0aGUgYnJlYWtwb2ludCdzIG1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhzLlxuLy8gTm8gbWluaW11bSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQsIGFuZCBubyBtYXhpbXVtIGZvciB0aGUgbGFyZ2VzdCBvbmUuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgb25seSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCwgbm90IHZpZXdwb3J0cyBhbnkgd2lkZXIgb3IgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */";

/***/ }),

/***/ 50612:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/import/import.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".header-import {\n  color: #1a1c1f;\n}\n.header-import input {\n  display: none;\n}\n@media (min-width: 670px) {\n  .header-icon {\n    margin-right: 12px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 45806:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/components/kbe-info/kbe-info.component.scss?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJrYmUtaW5mby5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 51232:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/lang-list/lang-list.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".lang-list {\n  display: flex;\n  justify-content: center;\n}\n.lang-list a {\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  margin-right: 0.5rem;\n  color: #b7bec5;\n}\n@media (min-width: 670px) {\n  .lang-list a {\n    font-size: 14px;\n  }\n}\n@media (min-width: 960px) {\n  .lang-list a {\n    font-size: 16px;\n  }\n}\n@media (min-width: 1280px) {\n  .lang-list a {\n    font-size: 16px;\n  }\n}\n@media (min-width: 1920px) {\n  .lang-list a {\n    font-size: 16px;\n  }\n}\n.lang-list a::after {\n  content: \"\";\n  margin-left: 0.5rem;\n  position: relative;\n  display: block;\n  border-radius: 50%;\n  background-color: #b7bec5;\n  width: 4px;\n  height: 4px;\n}\n.lang-list a:last-child {\n  margin-right: 0;\n}\n.lang-list a:last-child::after {\n  display: none;\n}\n.lang-list a.active, .lang-list a:hover {\n  color: #1a1c1f;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 23954:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/list-item/list-item.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LWl0ZW0uY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 90896:
/*!***********************************************************************!*\
  !*** ./src/app/shared/components/list/list.component.scss?ngResource ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 14225:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/mobile/mobile.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".mobile-panel {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 72px;\n  padding: 16px 12px;\n  background: #f5f9fd;\n  border-bottom: 1px solid #e9ebec;\n  display: none;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 1000;\n}\n\n.mobile__close {\n  display: inline-block;\n  font-weight: 400;\n  color: #1a1c1f;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  background-color: transparent;\n  border: 1px solid transparent;\n  cursor: pointer;\n  flex-shrink: 0;\n  padding: 0;\n}\n\n.mobile__center {\n  display: flex;\n  align-items: center;\n}\n\n.mobile__logo {\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 57943:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/modal/modal.component.scss?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".close-modal {\n  position: absolute;\n  right: 26px;\n  top: 26px;\n  z-index: 1;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7QUFDSiIsImZpbGUiOiJtb2RhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbG9zZS1tb2RhbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAyNnB4O1xuICAgIHRvcDogMjZweDtcbiAgICB6LWluZGV4OiAxO1xufSJdfQ== */";

/***/ }),

/***/ 25616:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/money/money.component.scss?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  white-space: nowrap;\n}\n\n.money-decimals {\n  opacity: 0.6;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbmV5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRiIsImZpbGUiOiJtb25leS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLm1vbmV5LWRlY2ltYWxzIHtcbiAgb3BhY2l0eTogMC42O1xufVxuIl19 */";

/***/ }),

/***/ 15423:
/*!***************************************************************************************!*\
  !*** ./src/app/shared/components/new-password/new-password.component.scss?ngResource ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".requirements {\n  opacity: 0;\n  overflow: hidden;\n  max-height: 0;\n  margin: 0;\n  transition: all 0.6s ease;\n}\n.requirements.shown {\n  opacity: 1;\n  max-height: 250px;\n  margin-bottom: 1rem;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 8957:
/*!*********************************************************************!*\
  !*** ./src/app/shared/components/otp/otp.component.scss?ngResource ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvdHAuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 24093:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/components/password-requirement/password-requirement.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: flex;\n  align-items: center;\n  margin: 0.5rem 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N3b3JkLXJlcXVpcmVtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFERiIsImZpbGUiOiJwYXNzd29yZC1yZXF1aXJlbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiBzcGFjZSgyKSAwO1xufVxuIl19 */";

/***/ }),

/***/ 10327:
/*!*******************************************************************************************!*\
  !*** ./src/app/shared/components/payment-select/payment-select.component.scss?ngResource ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.p-select-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem;\n  background: #fff;\n}\n\n.p-select-item {\n  display: flex;\n  align-items: center;\n  height: 3.5rem;\n  padding: 1rem;\n  color: #1a1c1f;\n  background: #fff;\n  transition: all 0.2s ease-in-out;\n  margin-bottom: 12px;\n  border-radius: 0.5rem;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n}\n\n.p-select-item.is-disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.p-select-item:hover:not(.is-disabled) {\n  box-shadow: 0px 14px 16px rgba(0, 0, 0, 0.05);\n  border-color: transparent;\n}\n\n.p-select-icon {\n  margin-right: 1rem;\n}\n\n.p-select-arrow {\n  margin-left: auto;\n}\n\n.p-select-nav {\n  background: #f6f7f8;\n  flex-grow: 1;\n  padding: 2rem;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 76073:
/*!***********************************************************************************************************!*\
  !*** ./src/app/shared/components/restricted-placeholder/restricted-placeholder.component.scss?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: block;\n  margin: 80px auto;\n  max-width: 320px;\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RyaWN0ZWQtcGxhY2Vob2xkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBREYiLCJmaWxlIjoicmVzdHJpY3RlZC1wbGFjZWhvbGRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XHJcblxyXG46aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luOiA4MHB4IGF1dG87XHJcbiAgbWF4LXdpZHRoOiAzMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */";

/***/ }),

/***/ 56729:
/*!*****************************************************************************!*\
  !*** ./src/app/shared/components/sidebar/sidebar.component.scss?ngResource ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".sidebar {\n  width: 412px;\n  height: 100vh;\n  background: red;\n  position: fixed;\n  right: -500px;\n  top: 0;\n  transition: 0.5s ease-in-out;\n  background: #F6F7F8;\n  border-radius: 0px 0px 0px 24px;\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.04), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04);\n  border-radius: 24px 0px 0px 0px;\n}\n.sidebar--open {\n  right: 0;\n  z-index: 1;\n}\n.sidebar__header {\n  width: 100%;\n  height: 78px;\n  background: #FFFFFF;\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.04), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04);\n  border-radius: 24px 0px 0px 0px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGViYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLE1BQUE7RUFDQSw0QkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0JBQUE7RUFDQSwrR0FBQTtFQUNBLCtCQUFBO0FBREo7QUFHSTtFQUNJLFFBQUE7RUFDQSxVQUFBO0FBRFI7QUFJSTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSwrR0FBQTtFQUNBLCtCQUFBO0FBRlIiLCJmaWxlIjoic2lkZWJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJzaGFyZWRcIjtcblxuLnNpZGViYXIge1xuICAgIHdpZHRoOiA0MTJweDtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQ6IHJlZDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IC01MDBweDtcbiAgICB0b3A6IDA7XG4gICAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbiAgICBiYWNrZ3JvdW5kOiAjRjZGN0Y4O1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMHB4IDI0cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDEwcHggMjBweCByZ2IoMCAwIDAgLyA0JSksIDBweCAycHggNnB4IHJnYigwIDAgMCAvIDQlKSwgMHB4IDBweCAxcHggcmdiKDAgMCAwIC8gNCUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDI0cHggMHB4IDBweCAwcHg7XG5cbiAgICAmLS1vcGVuIHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxuXG4gICAgJl9faGVhZGVyIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogNzhweDtcbiAgICAgICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDEwcHggMjBweCByZ2IoMCAwIDAgLyA0JSksIDBweCAycHggNnB4IHJnYigwIDAgMCAvIDQlKSwgMHB4IDBweCAxcHggcmdiKDAgMCAwIC8gNCUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAyNHB4IDBweCAwcHggMHB4O1xuICAgIH1cbn0iXX0= */";

/***/ }),

/***/ 76739:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/sms-error/sms-error.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzbXMtZXJyb3IuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 11829:
/*!*********************************************************************!*\
  !*** ./src/app/shared/components/sms/sms.component.scss?ngResource ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzbXMuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 79580:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/components/statuses/statuses.component.scss?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0dXNlcy5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 16353:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/switch/switch.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-switch-wrap {\n  padding: 1rem;\n  background: #fff;\n  border-radius: 0.75rem;\n  display: flex;\n  align-items: center;\n}\n.j-switch-wrap.disabled {\n  opacity: 0.5;\n  -webkit-user-select: none;\n          user-select: none;\n}\n.j-switch {\n  display: block;\n  position: relative;\n  color: #ef5630;\n}\n.j-switch input {\n  display: none;\n}\n.j-switch label {\n  padding-left: 0;\n}\n.j-switch--toggle {\n  border: 1px solid #b7bec5;\n  border-radius: 100px;\n  cursor: pointer;\n  display: inline-block;\n  width: 3em;\n  position: relative;\n  box-sizing: content-box;\n  vertical-align: middle;\n}\n.j-switch--toggle,\n.j-switch--toggle > .j-switch--toggler {\n  background-color: #fff;\n  height: 1.8em;\n}\ninput + .j-switch--toggle {\n  background-color: #b7bec5;\n  border-color: #b7bec5;\n  box-shadow: #b7bec5 0px 0px 0px 0px inset;\n  transition: border 0.4s, box-shadow 0.4s;\n  margin-right: 7px;\n}\ninput:checked + .j-switch--toggle {\n  background-color: currentColor;\n  border-color: currentColor;\n  box-shadow: currentColor 0px 0px 0px 1em inset;\n  transition: border 0.4s, box-shadow 0.4s, background-color 1.2s;\n}\n.j-switch_double .j-switch--toggle {\n  position: relative;\n  margin-left: 7px;\n  margin-right: 7px;\n}\n.j-switch--toggle > .j-switch--toggler {\n  background-color: #fff;\n  border-radius: 100px;\n  width: calc(1.8em - 2px);\n  height: calc(1.8em - 2px);\n  position: absolute;\n  left: 1px;\n  top: 1px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n  transition: background-color 0.4s, left 0.2s;\n}\ninput:checked + .j-switch--toggle > .j-switch--toggler {\n  left: 1.3em;\n  transition: background-color 0.4s, left 0.2s;\n  background-color: #fff;\n}\n/* DISABLED */\n.disabled .j-switch--toggle {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n/* Full Width Switch - Right Aligned */\n.j-switch.j-switch_right label {\n  display: block;\n}\n.j-switch.j-switch_right .j-switch--toggle {\n  position: absolute;\n  left: auto;\n  right: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 6022:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/toggle/toggle.component.scss?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-switch-wrap {\n  padding: 1rem;\n  background: #fff;\n  border-radius: 0.75rem;\n  display: flex;\n  align-items: center;\n}\n.j-switch-wrap.disabled {\n  opacity: 0.5;\n  -webkit-user-select: none;\n          user-select: none;\n}\n.j-switch {\n  display: block;\n  position: relative;\n  color: #ef5630;\n}\n.j-switch input {\n  display: none;\n}\n.j-switch label {\n  padding-left: 0;\n}\n.j-switch--toggle {\n  border: 1px solid #b7bec5;\n  border-radius: 100px;\n  cursor: pointer;\n  display: inline-block;\n  width: 3em;\n  position: relative;\n  box-sizing: content-box;\n  vertical-align: middle;\n}\n.j-switch--toggle,\n.j-switch--toggle > .j-switch--toggler {\n  background-color: #fff;\n  height: 1.8em;\n}\ninput + .j-switch--toggle {\n  background-color: #b7bec5;\n  border-color: #b7bec5;\n  box-shadow: #b7bec5 0px 0px 0px 0px inset;\n  transition: border 0.4s, box-shadow 0.4s;\n  margin-right: 7px;\n}\ninput:checked + .j-switch--toggle {\n  background-color: currentColor;\n  border-color: currentColor;\n  box-shadow: currentColor 0px 0px 0px 1em inset;\n  transition: border 0.4s, box-shadow 0.4s, background-color 1.2s;\n}\n.j-switch_double .j-switch--toggle {\n  position: relative;\n  margin-left: 7px;\n  margin-right: 7px;\n}\n.j-switch--toggle > .j-switch--toggler {\n  background-color: #fff;\n  border-radius: 100px;\n  width: calc(1.8em - 2px);\n  height: calc(1.8em - 2px);\n  position: absolute;\n  left: 1px;\n  top: 1px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n  transition: background-color 0.4s, left 0.2s;\n}\ninput:checked + .j-switch--toggle > .j-switch--toggler {\n  left: 1.3em;\n  transition: background-color 0.4s, left 0.2s;\n  background-color: #fff;\n}\n/* DISABLED */\n.disabled .j-switch--toggle {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n/* Full Width Switch - Right Aligned */\n.j-switch.j-switch_right label {\n  display: block;\n}\n.j-switch.j-switch_right .j-switch--toggle {\n  position: absolute;\n  left: auto;\n  right: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS5jb21wb25lbnQuc2NzcyIsIi4uLy4uLy4uLy4uL3Njc3MvX3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsYUFBQTtFQUNBLGdCQ0dNO0VERk4sc0JDNk1pQjtFRDVNakIsYUFBQTtFQUNBLG1CQUFBO0FBREY7QUFHRTtFQUNFLFlBQUE7RUFDQSx5QkFBQTtVQUFBLGlCQUFBO0FBREo7QUFLQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGNDb0JPO0FEdEJUO0FBS0E7RUFDRSxhQUFBO0FBRkY7QUFLQTtFQUNFLGVBQUE7QUFGRjtBQUtBO0VBQ0UseUJBQUE7RUFDQSxvQkFBQTtFQUNBLGVBQUE7RUFDQSxxQkFBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtFQUNBLHVCQUFBO0VBQ0Esc0JBQUE7QUFGRjtBQUtBOztFQUVFLHNCQUFBO0VBQ0EsYUFBQTtBQUZGO0FBS0E7RUFDRSx5QkNuQ1M7RURvQ1QscUJDcENTO0VEcUNULHlDQUFBO0VBQ0Esd0NBQUE7RUFDQSxpQkFBQTtBQUZGO0FBS0E7RUFDRSw4QkFBQTtFQUNBLDBCQUFBO0VBQ0EsOENBQUE7RUFDQSwrREFBQTtBQUZGO0FBS0E7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFGRjtBQUtBO0VBQ0Usc0JBQUE7RUFDQSxvQkFBQTtFQUNBLHdCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBRUEsd0NBQUE7RUFDQSw0Q0FBQTtBQUZGO0FBS0E7RUFDRSxXQUFBO0VBQ0EsNENBQUE7RUFDQSxzQkFBQTtBQUZGO0FBS0EsYUFBQTtBQUVBO0VBQ0UsbUJBQUE7RUFDQSxZQUFBO0FBSEY7QUFNQSxzQ0FBQTtBQUVBO0VBQ0UsY0FBQTtBQUpGO0FBT0E7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxRQUFBO0FBSkYiLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcclxuXHJcbi5qLXN3aXRjaC13cmFwIHtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1tZDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICYuZGlzYWJsZWQge1xyXG4gICAgb3BhY2l0eTogMC41O1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4uai1zd2l0Y2gge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBjb2xvcjogJHByaW1hcnk7XHJcbn1cclxuXHJcbi5qLXN3aXRjaCBpbnB1dCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmotc3dpdGNoIGxhYmVsIHtcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbn1cclxuXHJcbi5qLXN3aXRjaC0tdG9nZ2xlIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS01MDA7XHJcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogM2VtO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG4uai1zd2l0Y2gtLXRvZ2dsZSxcclxuLmotc3dpdGNoLS10b2dnbGUgPiAuai1zd2l0Y2gtLXRvZ2dsZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgaGVpZ2h0OiAxLjhlbTtcclxufVxyXG5cclxuaW5wdXQgKyAuai1zd2l0Y2gtLXRvZ2dsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktNTAwO1xyXG4gIGJvcmRlci1jb2xvcjogJGdyYXktNTAwO1xyXG4gIGJveC1zaGFkb3c6ICRncmF5LTUwMCAwcHggMHB4IDBweCAwcHggaW5zZXQ7XHJcbiAgdHJhbnNpdGlvbjogYm9yZGVyIDAuNHMsIGJveC1zaGFkb3cgMC40cztcclxuICBtYXJnaW4tcmlnaHQ6IDdweDtcclxufVxyXG5cclxuaW5wdXQ6Y2hlY2tlZCArIC5qLXN3aXRjaC0tdG9nZ2xlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgYm94LXNoYWRvdzogY3VycmVudENvbG9yIDBweCAwcHggMHB4IDFlbSBpbnNldDtcclxuICB0cmFuc2l0aW9uOiBib3JkZXIgMC40cywgYm94LXNoYWRvdyAwLjRzLCBiYWNrZ3JvdW5kLWNvbG9yIDEuMnM7XHJcbn1cclxuXHJcbi5qLXN3aXRjaF9kb3VibGUgLmotc3dpdGNoLS10b2dnbGUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tbGVmdDogN3B4O1xyXG4gIG1hcmdpbi1yaWdodDogN3B4O1xyXG59XHJcblxyXG4uai1zd2l0Y2gtLXRvZ2dsZSA+IC5qLXN3aXRjaC0tdG9nZ2xlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXItcmFkaXVzOiAxMDBweDtcclxuICB3aWR0aDogY2FsYygxLjhlbSAtIDJweCk7XHJcbiAgaGVpZ2h0OiBjYWxjKDEuOGVtIC0gMnB4KTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMXB4O1xyXG4gIHRvcDogMXB4O1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC40KTtcclxuICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC40cywgbGVmdCAwLjJzO1xyXG59XHJcblxyXG5pbnB1dDpjaGVja2VkICsgLmotc3dpdGNoLS10b2dnbGUgPiAuai1zd2l0Y2gtLXRvZ2dsZXIge1xyXG4gIGxlZnQ6IDEuM2VtO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC40cywgbGVmdCAwLjJzO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi8qIERJU0FCTEVEICovXHJcblxyXG4uZGlzYWJsZWQgLmotc3dpdGNoLS10b2dnbGUge1xyXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgb3BhY2l0eTogMC41O1xyXG59XHJcblxyXG4vKiBGdWxsIFdpZHRoIFN3aXRjaCAtIFJpZ2h0IEFsaWduZWQgKi9cclxuXHJcbi5qLXN3aXRjaC5qLXN3aXRjaF9yaWdodCBsYWJlbCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5qLXN3aXRjaC5qLXN3aXRjaF9yaWdodCAuai1zd2l0Y2gtLXRvZ2dsZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IGF1dG87XHJcbiAgcmlnaHQ6IDA7XHJcbn1cclxuIiwiLy8gVmFyaWFibGVzXHJcbi8vXHJcbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxyXG4vLyBjb25zaXN0ZW50IG5hbWluZy4gRXg6ICRuYXYtbGluay1kaXNhYmxlZC1jb2xvciBhbmQgJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14cy5cclxuXHJcbi8vIENvbG9yIHN5c3RlbVxyXG5cclxuJHdoaXRlOiAjZmZmO1xyXG4kZ3JheS0xMDA6ICNmYWY3Zjc7XHJcbiRncmF5LTIwMDogI2Y2ZjdmODtcclxuJGdyYXktMzAwOiAjZWNlZWYxO1xyXG4kZ3JheS00MDA6ICNkNmRhZGY7XHJcbiRncmF5LTUwMDogI2I3YmVjNTtcclxuJGdyYXktNjAwOiAjNjY2YzcyO1xyXG4kZ3JheS03MDA6ICM0NzRiNTI7XHJcbiRncmF5LTgwMDogI2U5ZWNmMTtcclxuJGdyYXktOTAwOiAjZGJkZmUyO1xyXG4kZ3JheS0xMDAwOiAjODI4MjgyO1xyXG4kYmxhY2s6ICMxYTFjMWY7XHJcblxyXG4kZ3JheXM6ICgpO1xyXG4kZ3JheXM6IG1hcC1tZXJnZShcclxuICAoXHJcbiAgICAnMTAwJzogJGdyYXktMTAwLFxyXG4gICAgJzIwMCc6ICRncmF5LTIwMCxcclxuICAgICczMDAnOiAkZ3JheS0zMDAsXHJcbiAgICAnNDAwJzogJGdyYXktNDAwLFxyXG4gICAgJzUwMCc6ICRncmF5LTUwMCxcclxuICAgICc2MDAnOiAkZ3JheS02MDAsXHJcbiAgICAnNzAwJzogJGdyYXktNzAwLFxyXG4gICAgJzgwMCc6ICRncmF5LTgwMCxcclxuICApLFxyXG4gICRncmF5c1xyXG4pO1xyXG5cclxuJGJsdWU6ICMyMDQxNzc7XHJcbiRibHVlLWxpZ2h0OiAjMTU4NmJiO1xyXG4kYmx1ZS13aGl0ZTogI2Y1ZjlmZDtcclxuJG9yYW5nZTogI2VmNTYzMDtcclxuJG9yYW5nZS1kYXJrOiAjZDQzZTE5O1xyXG4kb3JhbmdlLWxpZ2h0OiAjZjdhYjk4O1xyXG4keWVsbG93OiAjZWY4ZjAwO1xyXG4kZ3JlZW46ICMyMzlhNTQ7XHJcbiRncmVlbi1saWdodDogIzc0YmE3MjtcclxuJHJlZDogI2ZmMDAwMDtcclxuJHJlZC1saWdodDogI2ZmZWZlZjtcclxuXHJcbiRncmF5OiAkZ3JheS01MDA7XHJcbiRncmF5LWRhcms6ICRncmF5LTYwMDtcclxuJGdyYXktbGlnaHQ6ICRncmF5LTQwMDtcclxuXHJcbiRjb2xvcnM6ICgpO1xyXG4kY29sb3JzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJ2JsdWUnOiAkYmx1ZSxcclxuICAgICdibHVlLWxpZ2h0JzogJGJsdWUtbGlnaHQsXHJcbiAgICAnYmx1ZS13aGl0ZSc6ICRibHVlLXdoaXRlLFxyXG4gICAgJ29yYW5nZSc6ICRvcmFuZ2UsXHJcbiAgICAnb3JhbmdlLWRhcmsnOiAkb3JhbmdlLWRhcmssXHJcbiAgICAnb3JhbmdlLWxpZ2h0JzogJG9yYW5nZS1saWdodCxcclxuICAgICd5ZWxsb3cnOiAkeWVsbG93LFxyXG4gICAgJ2dyZWVuJzogJGdyZWVuLFxyXG4gICAgJ2dyZWVuLWxpZ2h0JzogJGdyZWVuLWxpZ2h0LFxyXG4gICAgJ3JlZCc6ICRyZWQsXHJcbiAgICAncmVkLWxpZ2h0JzogJHJlZC1saWdodCxcclxuICAgICdibGFjayc6ICRibGFjayxcclxuICAgICdibGFjay1saWdodCc6ICRncmF5LTcwMCxcclxuICAgICdncmF5JzogJGdyYXktNTAwLFxyXG4gICAgJ2dyYXktZGFyayc6ICRncmF5LTYwMCxcclxuICAgICdncmF5LWxpZ2h0JzogJGdyYXktNDAwLFxyXG4gICksXHJcbiAgJGNvbG9yc1xyXG4pO1xyXG5cclxuJHByaW1hcnk6ICRvcmFuZ2U7XHJcbiRzZWNvbmRhcnk6ICRibHVlO1xyXG4kc3VjY2VzczogJGdyZWVuO1xyXG4kaW5mbzogJGJsdWUtbGlnaHQ7XHJcbiR3YXJuaW5nOiAkeWVsbG93O1xyXG4kZGFuZ2VyOiAkcmVkO1xyXG4kbGlnaHQ6ICRncmF5LTUwMDtcclxuJGRhcms6ICRibGFjaztcclxuXHJcbiR0aGVtZS1jb2xvcnM6ICgpO1xyXG4kdGhlbWUtY29sb3JzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcclxuICAgICdzZWNvbmRhcnknOiAkc2Vjb25kYXJ5LFxyXG4gICAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAgICdpbmZvJzogJGluZm8sXHJcbiAgICAnd2FybmluZyc6ICR3YXJuaW5nLFxyXG4gICAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgICAnbGlnaHQnOiAkbGlnaHQsXHJcbiAgICAnZGFyayc6ICRkYXJrLFxyXG4gICAgJ3doaXRlJzogJHdoaXRlLFxyXG4gICksXHJcbiAgJHRoZW1lLWNvbG9yc1xyXG4pO1xyXG5cclxuLy8gJHRleHQtY29sb3JzOiAoKTtcclxuLy8gJHRleHQtY29sb3JzOiBtYXAtbWVyZ2UoXHJcbi8vICAgKFxyXG4vLyAgICAgJ2RlZmF1bHQnOiAkYmxhY2ssXHJcbi8vICAgICAnbG93LWNvbnRyYXN0JzogJGdyYXktNjAwLFxyXG4vLyAgICAgJ2luZm8nOiAkZ3JheS01MDAsXHJcbi8vICAgICAnZXJyb3InOiAkcmVkLFxyXG4vLyAgICAgJ2xpbmsnOiAkYmx1ZSxcclxuLy8gICAgICdiYWxhbmNlJzogJGdyZWVuLFxyXG4vLyAgICAgJ2JhbGFuY2UtY29pbnMnOiAkZ3JlZW4tbGlnaHQsXHJcbi8vICAgKSxcclxuLy8gICAkdGV4dC1jb2xvcnNcclxuLy8gKTtcclxuXHJcbi8vIFNwYWNpbmdcclxuLy9cclxuLy8gQ29udHJvbCB0aGUgZGVmYXVsdCBzdHlsaW5nIG9mIG1vc3QgQm9vdHN0cmFwIGVsZW1lbnRzIGJ5IG1vZGlmeWluZyB0aGVzZVxyXG4vLyB2YXJpYWJsZXMuIE1vc3RseSBmb2N1c2VkIG9uIHNwYWNpbmcuXHJcbi8vIFlvdSBjYW4gYWRkIG1vcmUgZW50cmllcyB0byB0aGUgJHNwYWNlcnMgbWFwLCBzaG91bGQgeW91IG5lZWQgbW9yZSB2YXJpYXRpb24uXHJcblxyXG4kc3BhY2VyOiAxcmVtO1xyXG4kc3BhY2VyczogKCk7XHJcbiRzcGFjZXJzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgMDogMCxcclxuICAgIC8vIDBweFxyXG4gICAgMTogJHNwYWNlciAqIDAuMjUsXHJcbiAgICAvLyA0cHggeHhzLFxyXG4gICAgMjogJHNwYWNlciAqIDAuNSxcclxuICAgIC8vIDhweCB4cyxcclxuICAgIDM6ICRzcGFjZXIsXHJcbiAgICAvLyAxNnB4IHNtXHJcbiAgICA0OiAkc3BhY2VyICogMS41LFxyXG4gICAgLy8gMjRweCBtZCxcclxuICAgIDU6ICRzcGFjZXIgKiAyLFxyXG4gICAgLy8gMzJweCBsZyxcclxuICAgIDY6ICRzcGFjZXIgKiAyLjUsXHJcbiAgICAvLyA0MHB4IHhsLFxyXG4gICAgNzogJHNwYWNlciAqIDMuNSxcclxuICAgIC8vIDU2cHggeHhsXHJcbiAgICA4OiAkc3BhY2VyICogNCxcclxuICAgIC8vIDY0cHggeHhsXHJcbiAgKSxcclxuICAkc3BhY2Vyc1xyXG4pO1xyXG5cclxuLy8gQm9keVxyXG4vL1xyXG4vLyBTZXR0aW5ncyBmb3IgdGhlIGA8Ym9keT5gIGVsZW1lbnQuXHJcblxyXG4kYm9keS1iZzogJHdoaXRlO1xyXG4kYm9keS1jb2xvcjogJGRhcms7XHJcblxyXG4vLyBMaW5rc1xyXG4vL1xyXG4vLyBTdHlsZSBhbmNob3IgZWxlbWVudHMuXHJcblxyXG4kbGluay1jb2xvcjogdGhlbWUtY29sb3IoJ3ByaW1hcnknKTtcclxuJGxpbmstZGVjb3JhdGlvbjogbm9uZTtcclxuJGxpbmstaG92ZXItY29sb3I6ICRvcmFuZ2UtZGFyaztcclxuJGxpbmstaG92ZXItZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbi8vIFBhcmFncmFwaHNcclxuLy9cclxuLy8gU3R5bGUgcCBlbGVtZW50LlxyXG5cclxuJHBhcmFncmFwaC1tYXJnaW4tYm90dG9tOiAxcmVtO1xyXG5cclxuLy8gR3JpZCBicmVha3BvaW50c1xyXG4vL1xyXG4vLyBEZWZpbmUgdGhlIG1pbmltdW0gZGltZW5zaW9ucyBhdCB3aGljaCB5b3VyIGxheW91dCB3aWxsIGNoYW5nZSxcclxuLy8gYWRhcHRpbmcgdG8gZGlmZmVyZW50IHNjcmVlbiBzaXplcywgZm9yIHVzZSBpbiBtZWRpYSBxdWVyaWVzLlxyXG5cclxuJGdyaWQtYnJlYWtwb2ludHM6IChcclxuICB4czogMCxcclxuICBzbTogNjcwcHgsXHJcbiAgbWQ6IDk2MHB4LFxyXG4gIGxnOiAxMjgwcHgsXHJcbiAgeGw6IDE5MjBweCxcclxuKTtcclxuXHJcbi8vIEdyaWQgY29udGFpbmVyc1xyXG4vL1xyXG4vLyBEZWZpbmUgdGhlIG1heGltdW0gd2lkdGggb2YgYC5jb250YWluZXJgIGZvciBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLlxyXG5cclxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXHJcbiAgc206IDU0MHB4LFxyXG4gIG1kOiA3MjBweCxcclxuICBsZzogOTYwcHgsXHJcbiAgeGw6IDEyODBweCxcclxuKTtcclxuXHJcbi8vIEdyaWQgY29sdW1uc1xyXG4vL1xyXG4vLyBTZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIGFuZCBzcGVjaWZ5IHRoZSB3aWR0aCBvZiB0aGUgZ3V0dGVycy5cclxuXHJcbiRncmlkLWNvbHVtbnM6IDEyO1xyXG4kZ3JpZC1ndXR0ZXItd2lkdGg6IDMwcHg7XHJcbiRncmlkLXJvdy1jb2x1bW5zOiA2O1xyXG5cclxuLy8gQ29tcG9uZW50c1xyXG4vL1xyXG4vLyBEZWZpbmUgY29tbW9uIHBhZGRpbmcgYW5kIGJvcmRlciByYWRpdXMgc2l6ZXMgYW5kIG1vcmUuXHJcblxyXG4kbGluZS1oZWlnaHQtbGc6IDEuNTtcclxuJGxpbmUtaGVpZ2h0LXNtOiAxLjU7XHJcblxyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRib3JkZXItY29sb3I6ICRncmF5LTMwMDtcclxuXHJcbiRib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiRib3JkZXItcmFkaXVzLW1kOiByZW15KDEyKTtcclxuJGJvcmRlci1yYWRpdXMtbGc6IDIuNXJlbTtcclxuJGJvcmRlci1yYWRpdXMtc206IDAuMnJlbTtcclxuXHJcbi8vIEwwXHJcbiRib3gtc2hhZG93LXhzOiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4vLyBMMVxyXG4kYm94LXNoYWRvdy1zbTogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDBweCAycHggcmdiYSgwLCAwLCAwLCAwLjA2KSxcclxuICAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG4vLyBMMlxyXG4kYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjA0KSxcclxuICAwcHggMTBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7XHJcbi8vIEwzXHJcbiRib3gtc2hhZG93LWxnOiAwcHggMTRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XHJcbi8vIEw0XHJcbiRib3gtc2hhZG93LXhsOiAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDQpLFxyXG4gIDBweCAxNnB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDI0cHggMzJweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICR3aGl0ZTtcclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6IHRoZW1lLWNvbG9yKCdwcmltYXJ5Jyk7XHJcblxyXG4kdHJhbnNpdGlvbi1iYXNlOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcclxuJHRyYW5zaXRpb24tZmFkZTogb3BhY2l0eSAwLjE1cyBsaW5lYXI7XHJcbiR0cmFuc2l0aW9uLWNvbGxhcHNlOiBoZWlnaHQgMC4zNXMgZWFzZTtcclxuJHRyYW5zaXRpb24tbWF4LWhlaWdodDogYWxsIDAuNnMgZWFzZTtcclxuXHJcbi8vIFR5cG9ncmFwaHlcclxuLy9cclxuLy8gRm9udCwgbGluZS1oZWlnaHQsIGFuZCBjb2xvciBmb3IgYm9keSB0ZXh0LCBoZWFkaW5ncywgYW5kIG1vcmUuXHJcblxyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiRmb250LWZhbWlseS1tb25vc3BhY2U6IFNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcyxcclxuICAnTGliZXJhdGlvbiBNb25vJywgJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlICFkZWZhdWx0O1xyXG4kZm9udC1mYW1pbHktYmFzZTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XHJcblxyXG4kZm9udC1zaXplLWJhc2U6IDFyZW07IC8vIDE2cHhcclxuJGZvbnQtc2l6ZS1sZzogJGZvbnQtc2l6ZS1iYXNlICogMS4yNSAhZGVmYXVsdDsgLy8gMjBweFxyXG4kZm9udC1zaXplLXNtOiAkZm9udC1zaXplLWJhc2UgKiAwLjg3NSAhZGVmYXVsdDsgLy8gMTRweFxyXG4kZm9udC1zaXplLXhzOiByZW15KDEyKTtcclxuXHJcbiRmb250LXdlaWdodC1saWdodGVyOiBsaWdodGVyO1xyXG4kZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcclxuJGZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwO1xyXG4kZm9udC13ZWlnaHQtYm9sZDogNTAwO1xyXG4kZm9udC13ZWlnaHQtYm9sZGVyOiBib2xkZXI7XHJcblxyXG4kZm9udC13ZWlnaHQtYmFzZTogJGZvbnQtd2VpZ2h0LW5vcm1hbDtcclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNTtcclxuXHJcbiRoMS1mb250LXNpemU6IHJlbXkoMzApO1xyXG4kaDItZm9udC1zaXplOiByZW15KDI2KTtcclxuJGgzLWZvbnQtc2l6ZTogcmVteSgyNCk7XHJcbiRoNC1mb250LXNpemU6IHJlbXkoMjIpO1xyXG4kaDUtZm9udC1zaXplOiByZW15KDIwKTtcclxuJGg2LWZvbnQtc2l6ZTogcmVteSgxOCk7XHJcblxyXG4kaDEtZm9udC1zaXplczogKFxyXG4gIHhzOiAzMHB4LFxyXG4gIHNtOiAzNnB4LFxyXG4gIG1kOiA0OHB4LFxyXG4gIGxnOiA0OHB4LFxyXG4gIHhsOiA2MHB4LFxyXG4pO1xyXG5cclxuLy8gaDIgc2l6ZXNcclxuJGgyLWZvbnQtc2l6ZXM6IChcclxuICB4czogMjZweCxcclxuICBzbTogMzBweCxcclxuICBtZDogNDBweCxcclxuICBsZzogNDRweCxcclxuICB4bDogNTRweCxcclxuKTtcclxuXHJcbi8vIGgzIHNpemVzXHJcbiRoMy1mb250LXNpemVzOiAoXHJcbiAgeHM6IDI0cHgsXHJcbiAgc206IDI2cHgsXHJcbiAgbWQ6IDMycHgsXHJcbiAgbGc6IDM2cHgsXHJcbiAgeGw6IDQ0cHgsXHJcbik7XHJcblxyXG4vLyBoNCBzaXplc1xyXG4kaDQtZm9udC1zaXplczogKFxyXG4gIHhzOiAyMnB4LFxyXG4gIHNtOiAyNHB4LFxyXG4gIG1kOiAyNHB4LFxyXG4gIGxnOiAyOHB4LFxyXG4gIHhsOiAyOHB4LFxyXG4pO1xyXG5cclxuLy8gaDUgc2l6ZXNcclxuJGg1LWZvbnQtc2l6ZXM6IChcclxuICB4czogMjBweCxcclxuICBzbTogMjJweCxcclxuICBtZDogMjJweCxcclxuICBsZzogMjRweCxcclxuICB4bDogMjRweCxcclxuKTtcclxuXHJcbi8vIGg2IHNpemVzXHJcbiRoNi1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE4cHgsXHJcbiAgc206IDE4cHgsXHJcbiAgbWQ6IDE4cHgsXHJcbiAgbGc6IDIwcHgsXHJcbiAgeGw6IDIwcHgsXHJcbik7XHJcblxyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAvIDIgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1mb250LWZhbWlseTogbnVsbDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA1MDA7XHJcbiRoZWFkaW5ncy1mb250LXdlaWdodC1saWdodDogNDAwO1xyXG4kaGVhZGluZ3MtbGluZS1oZWlnaHQ6IDEuNTtcclxuJGhlYWRpbmdzLWNvbG9yOiBudWxsO1xyXG5cclxuJHAwLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTZweCxcclxuICBzbTogMTZweCxcclxuICBtZDogMTZweCxcclxuICBsZzogMTZweCxcclxuICB4bDogMTZweCxcclxuKTtcclxuXHJcbiRwMS1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE2cHgsXHJcbiAgc206IDE2cHgsXHJcbiAgbWQ6IDE4cHgsXHJcbiAgbGc6IDE4cHgsXHJcbiAgeGw6IDE4cHgsXHJcbik7XHJcblxyXG4kcDItZm9udC1zaXplczogKFxyXG4gIHhzOiAxNHB4LFxyXG4gIHNtOiAxNHB4LFxyXG4gIG1kOiAxNnB4LFxyXG4gIGxnOiAxNnB4LFxyXG4gIHhsOiAxNnB4LFxyXG4pO1xyXG5cclxuJHAzLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTJweCxcclxuICBzbTogMTJweCxcclxuICBtZDogMTRweCxcclxuICBsZzogMTRweCxcclxuICB4bDogMTRweCxcclxuKTtcclxuXHJcbiRwNC1mb250LXNpemVzOiAoXHJcbiAgeHM6IDEwcHgsXHJcbiAgc206IDEwcHgsXHJcbiAgbWQ6IDEycHgsXHJcbiAgbGc6IDEycHgsXHJcbiAgeGw6IDEycHgsXHJcbik7XHJcblxyXG4kc21hbGwtZm9udC1zaXplOiAkZm9udC1zaXplLXhzO1xyXG5cclxuJHRleHQtbXV0ZWQ6ICRncmF5LTYwMDtcclxuXHJcbi8vICRibG9ja3F1b3RlLXNtYWxsLWNvbG9yOiAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGJsb2NrcXVvdGUtc21hbGwtZm9udC1zaXplOiAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGJsb2NrcXVvdGUtZm9udC1zaXplOiAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS4yNSAhZGVmYXVsdDtcclxuXHJcbi8vICRoci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRoci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkbWFyay1wYWRkaW5nOiAgICAgICAgICAgICAgICAuMmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGR0LWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAka2JkLWJveC1zaGFkb3c6ICAgICAgICAgICAgICBpbnNldCAwIC0uMXJlbSAwIHJnYmEoJGJsYWNrLCAuMjUpICFkZWZhdWx0O1xyXG4vLyAkbmVzdGVkLWtiZC1mb250LXdlaWdodDogICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWlubGluZS1wYWRkaW5nOiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG1hcmstYmc6ICAgICAgICAgICAgICAgICAgICAgI2ZjZjhlMyAhZGVmYXVsdDtcclxuXHJcbi8vICRoci1tYXJnaW4teTogICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBUYWJsZXNcclxuLy8gLy9cclxuLy8gLy8gQ3VzdG9taXplcyB0aGUgYC50YWJsZWAgY29tcG9uZW50IHdpdGggYmFzaWMgdmFsdWVzLCBlYWNoIHVzZWQgYWNyb3NzIGFsbCB0YWJsZSB2YXJpYXRpb25zLlxyXG5cclxuLy8gJHRhYmxlLWNlbGwtcGFkZGluZzogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtY2VsbC1wYWRkaW5nLXNtOiAgICAgICAuM3JlbSAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1jb2xvcjogICAgICAgICAgICAgICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYmc6ICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYWNjZW50LWJnOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJHRhYmxlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtaG92ZXItYmc6ICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1hY3RpdmUtYmc6ICAgICAgICAgICAgICR0YWJsZS1ob3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ib3JkZXItY29sb3I6ICAgICAgICAgICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtaGVhZC1iZzogICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1oZWFkLWNvbG9yOiAgICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1kYXJrLWNvbG9yOiAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYmc6ICAgICAgICAgICAgICAgJGdyYXktODAwICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1hY2NlbnQtYmc6ICAgICAgICByZ2JhKCR3aGl0ZSwgLjA1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstaG92ZXItY29sb3I6ICAgICAgJHRhYmxlLWRhcmstY29sb3IgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWhvdmVyLWJnOiAgICAgICAgIHJnYmEoJHdoaXRlLCAuMDc1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYm9yZGVyLWNvbG9yOiAgICAgbGlnaHRlbigkdGFibGUtZGFyay1iZywgNy41JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtc3RyaXBlZC1vcmRlcjogICAgICAgICBvZGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtY2FwdGlvbi1jb2xvcjogICAgICAgICAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1iZy1sZXZlbDogICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYm9yZGVyLWxldmVsOiAgICAgICAgICAtNiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEJ1dHRvbnMgKyBGb3Jtc1xyXG4vLyAvL1xyXG4vLyAvLyBTaGFyZWQgdmFyaWFibGVzIHRoYXQgYXJlIHJlYXNzaWduZWQgdG8gYCRpbnB1dC1gIGFuZCBgJGJ0bi1gIHNwZWNpZmljIHZhcmlhYmxlcy5cclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15OiAxcmVtO1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteDogMS43NXJlbTtcclxuJGlucHV0LWJ0bi1mb250LWZhbWlseTogbnVsbDtcclxuJGlucHV0LWJ0bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS41O1xyXG5cclxuJGlucHV0LWJ0bi1mb2N1cy13aWR0aDogcmVteSgxKTtcclxuJGlucHV0LWJ0bi1mb2N1cy1jb2xvcjogJHByaW1hcnk7XHJcbiRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjI1cmVtO1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogMS4ycmVtO1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc207XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LWxnOiAyLjVyZW07XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAkZm9udC1zaXplLWJhc2U7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQ7XHJcblxyXG4kaW5wdXQtYnRuLWJvcmRlci13aWR0aDogJGJvcmRlci13aWR0aDtcclxuXHJcbi8vIEJ1dHRvbnNcclxuLy9cclxuLy8gRm9yIGVhY2ggb2YgQm9vdHN0cmFwJ3MgYnV0dG9ucywgZGVmaW5lIHRleHQsIGJhY2tncm91bmQsIGFuZCBib3JkZXIgY29sb3IuXHJcblxyXG4kYnRuLXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRidG4tcGFkZGluZy14OiAkaW5wdXQtYnRuLXBhZGRpbmcteDtcclxuJGJ0bi1mb250LWZhbWlseTogJGlucHV0LWJ0bi1mb250LWZhbWlseTtcclxuJGJ0bi1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplO1xyXG4kYnRuLWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0O1xyXG4kYnRuLXdoaXRlLXNwYWNlOiBudWxsOyAvLyBTZXQgdG8gYG5vd3JhcGAgdG8gcHJldmVudCB0ZXh0IHdyYXBwaW5nXHJcblxyXG4kYnRuLXBhZGRpbmcteS1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXktc207XHJcbiRidG4tcGFkZGluZy14LXNtOiAkaW5wdXQtYnRuLXBhZGRpbmcteC1zbTtcclxuJGJ0bi1mb250LXNpemUtc206ICRpbnB1dC1idG4tZm9udC1zaXplLXNtO1xyXG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtO1xyXG5cclxuJGJ0bi1wYWRkaW5nLXktbGc6ICRpbnB1dC1idG4tcGFkZGluZy15LWxnO1xyXG4kYnRuLXBhZGRpbmcteC1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc7XHJcbiRidG4tZm9udC1zaXplLWxnOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZztcclxuJGJ0bi1saW5lLWhlaWdodC1sZzogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZztcclxuXHJcbiRidG4tYm9yZGVyLXdpZHRoOiAkaW5wdXQtYnRuLWJvcmRlci13aWR0aDtcclxuXHJcbiRidG4tZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1ub3JtYWw7XHJcbiRidG4tYm94LXNoYWRvdzogbm9uZTtcclxuJGJ0bi1mb2N1cy13aWR0aDogJGlucHV0LWJ0bi1mb2N1cy13aWR0aDtcclxuJGJ0bi1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c7XHJcbiRidG4tZGlzYWJsZWQtb3BhY2l0eTogMC41O1xyXG4kYnRuLWFjdGl2ZS1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuLy8gJGJ0bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJGJ0bi1ibG9jay1zcGFjaW5nLXk6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBBbGxvd3MgZm9yIGN1c3RvbWl6aW5nIGJ1dHRvbiByYWRpdXMgaW5kZXBlbmRlbnRseSBmcm9tIGdsb2JhbCBib3JkZXIgcmFkaXVzXHJcbiRidG4tYm9yZGVyLXJhZGl1czogMTJweDtcclxuJGJ0bi1ib3JkZXItcmFkaXVzLWxnOiAxMnB4O1xyXG4kYnRuLWJvcmRlci1yYWRpdXMtc206IDhweDtcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tYmFzZTtcclxuXHJcbi8vIC8vIEZvcm1zXHJcblxyXG4vLyAkbGFiZWwtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteTtcclxuJGlucHV0LXBhZGRpbmcteDogcmVteSgyMCk7XHJcbiRpbnB1dC1mb250LWZhbWlseTogJGlucHV0LWJ0bi1mb250LWZhbWlseTtcclxuJGlucHV0LWZvbnQtc2l6ZTogJGlucHV0LWJ0bi1mb250LXNpemU7XHJcbiRpbnB1dC1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJhc2U7XHJcbiRpbnB1dC1saW5lLWhlaWdodDogJGlucHV0LWJ0bi1saW5lLWhlaWdodDtcclxuXHJcbi8vICRpbnB1dC1wYWRkaW5nLXktc206ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LXBhZGRpbmcteC1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtZm9udC1zaXplLXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1saW5lLWhlaWdodC1zbTogICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LXBhZGRpbmcteS1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LWxnICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtcGFkZGluZy14LWxnOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1mb250LXNpemUtbGc6ICRpbnB1dC1idG4tZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtbGluZS1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1iZzogJHdoaXRlO1xyXG4kaW5wdXQtZGlzYWJsZWQtYmc6ICRncmF5LTIwMDtcclxuXHJcbiRpbnB1dC1jb2xvcjogJGRhcms7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6ICRncmF5LTQwMDtcclxuJGlucHV0LWJvcmRlci13aWR0aDogJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg7XHJcbiRpbnB1dC1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuJGlucHV0LWJvcmRlci1yYWRpdXM6IDhweDtcclxuJGlucHV0LWJvcmRlci1yYWRpdXMtbGc6ICRpbnB1dC1ib3JkZXItcmFkaXVzO1xyXG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1zbTogJGlucHV0LWJvcmRlci1yYWRpdXM7XHJcblxyXG4kaW5wdXQtZm9jdXMtYmc6ICR3aGl0ZTtcclxuJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjogJHByaW1hcnk7XHJcbiRpbnB1dC1mb2N1cy1jb2xvcjogJGlucHV0LWNvbG9yO1xyXG4kaW5wdXQtZm9jdXMtd2lkdGg6ICRpbnB1dC1idG4tZm9jdXMtd2lkdGg7XHJcbiRpbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c7XHJcblxyXG4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICRncmF5LTYwMDtcclxuJGlucHV0LXBsYWludGV4dC1jb2xvcjogJGJvZHktY29sb3I7XHJcblxyXG4vLyAkaW5wdXQtaGVpZ2h0LWJvcmRlcjogICAgICAgICAgICAgICAgICAgJGlucHV0LWJvcmRlci13aWR0aCAqIDIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyOiAgICAgICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIDFlbSwgJGlucHV0LXBhZGRpbmcteSAqIDIpICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyLWhhbGY6ICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIC41ZW0sICRpbnB1dC1wYWRkaW5nLXkpICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyLXF1YXJ0ZXI6ICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIC4yNWVtLCAkaW5wdXQtcGFkZGluZy15IC8gMikgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtaGVpZ2h0OiA1NnB4O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodC1zbSAqIDFlbSwgYWRkKCRpbnB1dC1wYWRkaW5nLXktc20gKiAyLCAkaW5wdXQtaGVpZ2h0LWJvcmRlciwgZmFsc2UpKSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1sZzogICAgICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQtbGcgKiAxZW0sIGFkZCgkaW5wdXQtcGFkZGluZy15LWxnICogMiwgJGlucHV0LWhlaWdodC1ib3JkZXIsIGZhbHNlKSkgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tYmFzZTtcclxuXHJcbi8vICRmb3JtLXRleHQtbWFyZ2luLXRvcDogICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS1jaGVjay1pbnB1dC1ndXR0ZXI6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXk6ICAgICAgICAgICAgIC4zcmVtICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1jaGVjay1pbnB1dC1tYXJnaW4teDogICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tY2hlY2staW5saW5lLW1hcmdpbi14OiAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5saW5lLWlucHV0LW1hcmdpbi14OiAgICAgIC4zMTI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tZ3JpZC1ndXR0ZXItd2lkdGg6ICAgICAgICAgICAgICAgIDEwcHggIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWdyb3VwLW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWNvbG9yOiAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWJnOiAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWZvcm1zLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWd1dHRlcjogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtc3BhY2VyLXg6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWN1cnNvcjogICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemU6ICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1iZzogICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmctc2l6ZTogICAgICA1MCUgNTAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJveC1zaGFkb3c6ICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLWNvbG9yOiAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoOiAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWxhYmVsLWNvbG9yOiAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWRpc2FibGVkLWJnOiAgICAgICAgICAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1sYWJlbC1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcjogICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWRpc2FibGVkLWJnOiAgcmdiYSh0aGVtZS1jb2xvcihcInByaW1hcnlcIiksIC41KSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJveC1zaGFkb3c6ICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1mb2N1cy1ib3gtc2hhZG93OiAgICAgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZm9jdXMtYm9yZGVyLWNvbG9yOiAgICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1jb2xvcjogICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYmc6ICAgICAgICAgICAgbGlnaHRlbigkY29tcG9uZW50LWFjdGl2ZS1iZywgMzUlKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm94LXNoYWRvdzogICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBmaWxsPScjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcn0nIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNmwyLjk3NCAyLjk5TDggMi4xOTN6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1iZzogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWNvbG9yOiAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pY29uLWluZGV0ZXJtaW5hdGU6ICAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc0JyB2aWV3Qm94PScwIDAgNCA0Jz48cGF0aCBzdHJva2U9JyN7JGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1jb2xvcn0nIGQ9J00wIDJoNCcvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1ib3gtc2hhZG93OiAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYm9yZGVyLWNvbG9yOiAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAgNTAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhZGlvLWluZGljYXRvci1pY29uLWNoZWNrZWQ6ICAgICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzMnIGZpbGw9JyN7JGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tc3dpdGNoLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSAqIDEuNzUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tc3dpdGNoLWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSAvIDIgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tc3dpdGNoLWluZGljYXRvci1zaXplOiAgICAgICAgICAgICAgICAgIHN1YnRyYWN0KCRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSwgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItd2lkdGggKiA0KSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteTogJGlucHV0LXBhZGRpbmcteTtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14OiAxLjI1cmVtO1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LWZhbWlseTogJGlucHV0LWZvbnQtZmFtaWx5ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemU6ICRpbnB1dC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodDogJGlucHV0LWhlaWdodDtcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmc6IDEuMjVyZW07IC8vIEV4dHJhIHBhZGRpbmcgdG8gYWNjb3VudCBmb3IgdGhlIHByZXNlbmNlIG9mIHRoZSBiYWNrZ3JvdW5kLWltYWdlIGJhc2VkIGluZGljYXRvclxyXG4kY3VzdG9tLXNlbGVjdC1mb250LXdlaWdodDogJGlucHV0LWZvbnQtd2VpZ2h0ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1saW5lLWhlaWdodDogJGlucHV0LWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1jb2xvcjogJGlucHV0LWNvbG9yICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1kaXNhYmxlZC1iZzogJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1iZy1zaXplOiA4cHggMTBweCAhZGVmYXVsdDsgLy8gSW4gcGl4ZWxzIGJlY2F1c2UgaW1hZ2UgZGltZW5zaW9uc1xyXG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRncmF5LTgwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzUnIHZpZXdCb3g9JzAgMCA0IDUnPjxwYXRoIGZpbGw9JyN7JGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmFja2dyb3VuZDogZXNjYXBlLXN2ZygkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3IpIG5vLXJlcGVhdCByaWdodFxyXG4gICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCBjZW50ZXIgLyAkY3VzdG9tLXNlbGVjdC1iZy1zaXplICFkZWZhdWx0OyAvLyBVc2VkIHNvIHdlIGNhbiBoYXZlIG11bHRpcGxlIGJhY2tncm91bmQgZWxlbWVudHMgKGUuZy4sIGFycm93IGFuZCBmZWVkYmFjayBpY29uKVxyXG5cclxuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXJpZ2h0OiBhZGQoXHJcbiAgMWVtICogMC43NSxcclxuICAoMiAqICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteSAqIDAuNzUpICsgJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14ICtcclxuICAgICRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nXHJcbikgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tcG9zaXRpb246IGNlbnRlciByaWdodFxyXG4gICgkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggKyAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZykgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tc2l6ZTogJGlucHV0LWhlaWdodC1pbm5lci1oYWxmXHJcbiAgJGlucHV0LWhlaWdodC1pbm5lci1oYWxmICFkZWZhdWx0O1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLXdpZHRoOiAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItY29sb3I6ICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kY3VzdG9tLXNlbGVjdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgkYmxhY2ssIDAuMDc1KSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJvcmRlci1jb2xvcjogJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjtcclxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtd2lkdGg6ICRpbnB1dC1mb2N1cy13aWR0aCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteS1zbTogJGlucHV0LXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LXNtOiAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemUtc206ICRpbnB1dC1mb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodC1zbTogJGlucHV0LWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteS1sZzogJGlucHV0LXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LWxnOiAkaW5wdXQtcGFkZGluZy14LWxnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemUtbGc6ICRpbnB1dC1mb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodC1sZzogJGlucHV0LWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2std2lkdGg6ICAgICAgICAgIDEwMCUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2staGVpZ2h0OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWN1cnNvcjogICAgICAgICBwb2ludGVyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJnOiAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stYm9yZGVyLXJhZGl1czogIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogICAgIGluc2V0IDAgLjI1cmVtIC4yNXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi13aWR0aDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgJGN1c3RvbS1yYW5nZS10aHVtYi13aWR0aCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1iZzogICAgICAgICAgICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm9yZGVyOiAgICAgICAgICAgICAgICAgIDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm9yZGVyLXJhZGl1czogICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgLjFyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogICAgICAgIDAgMCAwIDFweCAkYm9keS1iZywgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdy13aWR0aDogICRpbnB1dC1mb2N1cy13aWR0aCAhZGVmYXVsdDsgLy8gRm9yIGZvY3VzIGJveCBzaGFkb3cgaXNzdWUgaW4gSUUvRWRnZVxyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWFjdGl2ZS1iZzogICAgICAgICAgICAgICBsaWdodGVuKCRjb21wb25lbnQtYWN0aXZlLWJnLCAzNSUpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWRpc2FibGVkLWJnOiAgICAgICAgICAgICAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWZpbGUtaGVpZ2h0OiAgICAgICAgICAgICAgICAkaW5wdXQtaGVpZ2h0ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtaGVpZ2h0LWlubmVyOiAgICAgICAgICAkaW5wdXQtaGVpZ2h0LWlubmVyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9jdXMtYm9yZGVyLWNvbG9yOiAgICAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9jdXMtYm94LXNoYWRvdzogICAgICAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWRpc2FibGVkLWJnOiAgICAgICAgICAgJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1maWxlLXBhZGRpbmcteTogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLXBhZGRpbmcteDogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgJGlucHV0LWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9udC1mYW1pbHk6ICAgICAgICAgICAkaW5wdXQtZm9udC1mYW1pbHkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1mb250LXdlaWdodDogICAgICAgICAgICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWNvbG9yOiAgICAgICAgICAgICAgICAgJGlucHV0LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYmc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItY29sb3I6ICAgICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItcmFkaXVzOiAgICAgICAgICRpbnB1dC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm94LXNoYWRvdzogICAgICAgICAgICAkaW5wdXQtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJ1dHRvbi1jb2xvcjogICAgICAgICAgJGN1c3RvbS1maWxlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYnV0dG9uLWJnOiAgICAgICAgICAgICAkaW5wdXQtZ3JvdXAtYWRkb24tYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS10ZXh0OiAoXHJcbi8vICAgZW46IFwiQnJvd3NlXCJcclxuLy8gKSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gJGZvcm0tZmVlZGJhY2stbWFyZ2luLXRvcDogICAgICAgICAgJGZvcm0tdGV4dC1tYXJnaW4tdG9wICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1mb250LXNpemU6ICAgICAgICAgICAkc21hbGwtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvcjogICAgICAgICB0aGVtZS1jb2xvcihcInN1Y2Nlc3NcIikgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3I6ICAgICAgIHRoZW1lLWNvbG9yKFwiZGFuZ2VyXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZC1jb2xvcjogICAgJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQ6ICAgICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZmlsbD0nI3skZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkLWNvbG9yfScgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yOiAgJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkOiAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3J9JyB2aWV3Qm94PScwIDAgMTIgMTInPjxjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLz48cGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLz48Y2lyY2xlIGN4PSc2JyBjeT0nOC4yJyByPScuNicgZmlsbD0nI3skZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3J9JyBzdHJva2U9J25vbmUnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS12YWxpZGF0aW9uLXN0YXRlczogKCkgIWRlZmF1bHQ7XHJcbi8vIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XHJcbi8vICRmb3JtLXZhbGlkYXRpb24tc3RhdGVzOiBtYXAtbWVyZ2UoXHJcbi8vICAgKFxyXG4vLyAgICAgXCJ2YWxpZFwiOiAoXHJcbi8vICAgICAgIFwiY29sb3JcIjogJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3IsXHJcbi8vICAgICAgIFwiaWNvblwiOiAkZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkXHJcbi8vICAgICApLFxyXG4vLyAgICAgXCJpbnZhbGlkXCI6IChcclxuLy8gICAgICAgXCJjb2xvclwiOiAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yLFxyXG4vLyAgICAgICBcImljb25cIjogJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkXHJcbi8vICAgICApLFxyXG4vLyAgICksXHJcbi8vICAgJGZvcm0tdmFsaWRhdGlvbi1zdGF0ZXNcclxuLy8gKTtcclxuXHJcbi8vIC8vIFotaW5kZXggbWFzdGVyIGxpc3RcclxuLy8gLy9cclxuLy8gLy8gV2FybmluZzogQXZvaWQgY3VzdG9taXppbmcgdGhlc2UgdmFsdWVzLiBUaGV5J3JlIHVzZWQgZm9yIGEgYmlyZCdzIGV5ZSB2aWV3XHJcbi8vIC8vIG9mIGNvbXBvbmVudHMgZGVwZW5kZW50IG9uIHRoZSB6LWF4aXMgYW5kIGFyZSBkZXNpZ25lZCB0byBhbGwgd29yayB0b2dldGhlci5cclxuXHJcbi8vICR6aW5kZXgtZHJvcGRvd246ICAgICAgICAgICAgICAgICAgIDEwMDAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtc3RpY2t5OiAgICAgICAgICAgICAgICAgICAgIDEwMjAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtZml4ZWQ6ICAgICAgICAgICAgICAgICAgICAgIDEwMzAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWwtYmFja2Ryb3A6ICAgICAgICAgICAgIDEwNDAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWw6ICAgICAgICAgICAgICAgICAgICAgIDEwNTAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtcG9wb3ZlcjogICAgICAgICAgICAgICAgICAgIDEwNjAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtdG9vbHRpcDogICAgICAgICAgICAgICAgICAgIDEwNzAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBOYXZzXHJcblxyXG4vLyAkbmF2LWxpbmstcGFkZGluZy15OiAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdi10YWJzLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAgJGdyYXktMjAwICRncmF5LTIwMCAkbmF2LXRhYnMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtY29sb3I6ICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDAgJGdyYXktMzAwICRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXYtcGlsbHMtYm9yZGVyLXJhZGl1czogICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkbmF2LXBpbGxzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2LWRpdmlkZXItY29sb3I6ICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRuYXYtZGl2aWRlci1tYXJnaW4teTogICAgICAgICAgICAgICRzcGFjZXIgLyAyICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTmF2YmFyXHJcblxyXG4vLyAkbmF2YmFyLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgJHNwYWNlciAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbmF2LWxpbmstcGFkZGluZy14OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1icmFuZC1mb250LXNpemU6ICAgICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gLy8gQ29tcHV0ZSB0aGUgbmF2YmFyLWJyYW5kIHBhZGRpbmcteSBzbyB0aGUgbmF2YmFyLWJyYW5kIHdpbGwgaGF2ZSB0aGUgc2FtZSBoZWlnaHQgYXMgbmF2YmFyLXRleHQgYW5kIG5hdi1saW5rXHJcbi8vICRuYXYtbGluay1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlICsgJG5hdi1saW5rLXBhZGRpbmcteSAqIDIgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItYnJhbmQtaGVpZ2h0OiAgICAgICAgICAgICAgICRuYXZiYXItYnJhbmQtZm9udC1zaXplICogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItYnJhbmQtcGFkZGluZy15OiAgICAgICAgICAgICgkbmF2LWxpbmstaGVpZ2h0IC0gJG5hdmJhci1icmFuZC1oZWlnaHQpIC8gMiAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXk6ICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLXBhZGRpbmcteDogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXRvZ2dsZXItZm9udC1zaXplOiAgICAgICAgICAkZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXRvZ2dsZXItYm9yZGVyLXJhZGl1czogICAgICAkYnRuLWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWRhcmstY29sb3I6ICAgICAgICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjUpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjc1KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstZGlzYWJsZWQtY29sb3I6ICAgICAgICByZ2JhKCR3aGl0ZSwgLjI1KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRvZ2dsZXItaWNvbi1iZzogICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMzAnIGhlaWdodD0nMzAnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PHBhdGggc3Ryb2tlPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBzdHJva2Utd2lkdGg9JzInIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstdG9nZ2xlci1ib3JkZXItY29sb3I6ICByZ2JhKCR3aGl0ZSwgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1saWdodC1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC41KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogICAgICAgICAgcmdiYSgkYmxhY2ssIC43KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICAgICAgICAgcmdiYSgkYmxhY2ssIC45KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogICAgICAgcmdiYSgkYmxhY2ssIC4zKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC10b2dnbGVyLWljb24tYmc6ICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMzAnIGhlaWdodD0nMzAnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PHBhdGggc3Ryb2tlPScjeyRuYXZiYXItbGlnaHQtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbGlnaHQtdGhlbWUtY29sb3I6ICAgICAgICAgICAgICAgICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LWJyYW5kLWhvdmVyLWNvbG9yOiAgICAgICAgICAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRoZW1lLWNvbG9yOiAgICAgICAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWJyYW5kLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vIERyb3Bkb3duc1xyXG4vL1xyXG4vLyBEcm9wZG93biBtZW51IGNvbnRhaW5lciBhbmQgY29udGVudHMuXHJcblxyXG4kZHJvcGRvd24tbWluLXdpZHRoOiAxMHJlbTtcclxuJGRyb3Bkb3duLXBhZGRpbmcteTogMC41cmVtO1xyXG4kZHJvcGRvd24tc3BhY2VyOiAwLjEyNXJlbTtcclxuJGRyb3Bkb3duLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kZHJvcGRvd24tY29sb3I6ICRib2R5LWNvbG9yO1xyXG4kZHJvcGRvd24tYmc6ICR3aGl0ZTtcclxuJGRyb3Bkb3duLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMTUpO1xyXG4kZHJvcGRvd24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRkcm9wZG93bi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcbiRkcm9wZG93bi1pbm5lci1ib3JkZXItcmFkaXVzOiBzdWJ0cmFjdChcclxuICAkZHJvcGRvd24tYm9yZGVyLXJhZGl1cyxcclxuICAkZHJvcGRvd24tYm9yZGVyLXdpZHRoXHJcbik7XHJcbiRkcm9wZG93bi1kaXZpZGVyLWJnOiAkZ3JheS0yMDA7XHJcbiRkcm9wZG93bi1kaXZpZGVyLW1hcmdpbi15OiAkbmF2LWRpdmlkZXItbWFyZ2luLXk7XHJcbiRkcm9wZG93bi1ib3gtc2hhZG93OiAwIDAuNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAwLjE3NSk7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGdyYXktMjAwO1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogZGFya2VuKCRncmF5LTIwMCwgNSUpO1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1iZzogJGdyYXktMTAwO1xyXG5cclxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvcjtcclxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWJnOiAkY29tcG9uZW50LWFjdGl2ZS1iZztcclxuXHJcbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAkZ3JheS02MDA7XHJcblxyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXk6IDAuMjVyZW07XHJcbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteDogMS41cmVtO1xyXG5cclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJGdyYXktNjAwO1xyXG5cclxuLy8gLy8gUGFnaW5hdGlvblxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjZyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteDogMC43NXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LXNtOiAwLjI1cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtc206IDAuNXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAwLjc1cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6IDEuNXJlbTtcclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEuMjU7XHJcblxyXG4kcGFnaW5hdGlvbi1jb2xvcjogJGdyYXktNjAwO1xyXG4kcGFnaW5hdGlvbi1iZzogJHdoaXRlO1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcbiRwYWdpbmF0aW9uLWJvcmRlci1jb2xvcjogJGdyYXktODAwO1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuJHBhZ2luYXRpb24tZm9jdXMtb3V0bGluZTogMDtcclxuXHJcbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAkbGluay1ob3Zlci1jb2xvcjtcclxuJHBhZ2luYXRpb24taG92ZXItYmc6ICRncmF5LTIwMDtcclxuJHBhZ2luYXRpb24taG92ZXItYm9yZGVyLWNvbG9yOiAkZ3JheS04MDA7XHJcblxyXG4kcGFnaW5hdGlvbi1hY3RpdmUtY29sb3I6ICRncmF5LTYwMDtcclxuJHBhZ2luYXRpb24tYWN0aXZlLWJnOiAkZ3JheS04MDA7XHJcbiRwYWdpbmF0aW9uLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRncmF5LTgwMDtcclxuXHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAkd2hpdGU7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJvcmRlci1jb2xvcjogJGdyYXktMzAwO1xyXG5cclxuLy8gLy8gSnVtYm90cm9uXHJcblxyXG4vLyAkanVtYm90cm9uLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAycmVtICFkZWZhdWx0O1xyXG4vLyAkanVtYm90cm9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkanVtYm90cm9uLWJnOiAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDYXJkc1xyXG5cclxuLy8gJGNhcmQtc3BhY2VyLXk6ICAgICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1zcGFjZXIteDogICAgICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xMjUpICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1pbm5lci1ib3JkZXItcmFkaXVzOiAgICAgICAgICBzdWJ0cmFjdCgkY2FyZC1ib3JkZXItcmFkaXVzLCAkY2FyZC1ib3JkZXItd2lkdGgpICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jYXAtYmc6ICAgICAgICAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjAzKSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY2FwLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcmQtaW1nLW92ZXJsYXktcGFkZGluZzogICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWdyb3VwLW1hcmdpbjogICAgICAgICAgICAgICAgICRncmlkLWd1dHRlci13aWR0aCAvIDIgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWRlY2stbWFyZ2luOiAgICAgICAgICAgICAgICAgICRjYXJkLWdyb3VwLW1hcmdpbiAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWNvbHVtbnMtY291bnQ6ICAgICAgICAgICAgICAgIDMgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbHVtbnMtZ2FwOiAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbHVtbnMtbWFyZ2luOiAgICAgICAgICAgICAgICRjYXJkLXNwYWNlci15ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVG9vbHRpcHNcclxuXHJcbi8vICR0b29sdGlwLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICRmb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLW1heC13aWR0aDogICAgICAgICAgICAgICAgIDIwMHB4ICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLW9wYWNpdHk6ICAgICAgICAgICAgICAgICAgIC45ICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLXBhZGRpbmcteDogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1tYXJnaW46ICAgICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xyXG5cclxuLy8gJHRvb2x0aXAtYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgLjhyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWFycm93LWhlaWdodDogICAgICAgICAgICAgIC40cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkdG9vbHRpcC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZvcm0gdG9vbHRpcHMgbXVzdCBjb21lIGFmdGVyIHJlZ3VsYXIgdG9vbHRpcHNcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAkdG9vbHRpcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtcGFkZGluZy14OiAgICAgJHRvb2x0aXAtcGFkZGluZy14ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLWZvbnQtc2l6ZTogICAgICR0b29sdGlwLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1saW5lLWhlaWdodDogICAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1vcGFjaXR5OiAgICAgICAkdG9vbHRpcC1vcGFjaXR5ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLWJvcmRlci1yYWRpdXM6ICR0b29sdGlwLWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBQb3BvdmVyc1xyXG5cclxuJHBvcG92ZXItZm9udC1zaXplOiAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1tYXgtd2lkdGg6IDI0NnB4ICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDA7XHJcbiRwb3BvdmVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1pbm5lci1ib3JkZXItcmFkaXVzOiBzdWJ0cmFjdChcclxuICAkcG9wb3Zlci1ib3JkZXItcmFkaXVzLFxyXG4gICRwb3BvdmVyLWJvcmRlci13aWR0aFxyXG4pICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy14bCAhZGVmYXVsdDtcclxuXHJcbi8vICRwb3BvdmVyLWhlYWRlci1iZzogICAgICAgICAgICAgICAgIGRhcmtlbigkcG9wb3Zlci1iZywgMyUpICFkZWZhdWx0O1xyXG4vLyAkcG9wb3Zlci1oZWFkZXItY29sb3I6ICAgICAgICAgICAgICAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXk6IDAuNzVyZW07XHJcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXg6IDFyZW07XHJcblxyXG4vLyAkcG9wb3Zlci1ib2R5LWNvbG9yOiAgICAgICAgICAgICAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6ICRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXk7XHJcbiRwb3BvdmVyLWJvZHktcGFkZGluZy14OiAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy14O1xyXG5cclxuLy8gJHBvcG92ZXItYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJHBvcG92ZXItYXJyb3ctaGVpZ2h0OiAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRwb3BvdmVyLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICRwb3BvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJHBvcG92ZXItYXJyb3ctb3V0ZXItY29sb3I6ICAgICAgICAgZmFkZS1pbigkcG9wb3Zlci1ib3JkZXItY29sb3IsIC4wNSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBUb2FzdHNcclxuXHJcbi8vICR0b2FzdC1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAgIDM1MHB4ICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgLjg3NXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJhY2tncm91bmQtY29sb3I6ICAgICAgICAgICAgcmdiYSgkd2hpdGUsIC44NSkgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgIDFweCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgICAgMCAuMjVyZW0gLjc1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdG9hc3QtaGVhZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1oZWFkZXItYmFja2dyb3VuZC1jb2xvcjogICAgIHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtaGVhZGVyLWJvcmRlci1jb2xvcjogICAgICAgICByZ2JhKDAsIDAsIDAsIC4wNSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBCYWRnZXNcclxuXHJcbiRiYWRnZS1mb250LXNpemU6IHJlbXkoMTIpO1xyXG4kYmFkZ2UtZm9udC13ZWlnaHQ6IDUwMDtcclxuLy8gJGJhZGdlLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgMC4yNWVtICFkZWZhdWx0O1xyXG4kYmFkZ2UtcGFkZGluZy14OiAwLjVyZW07XHJcbiRiYWRnZS1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1tZDtcclxuXHJcbi8vICRiYWRnZS10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgICRidG4tdHJhbnNpdGlvbiAhZGVmYXVsdDtcclxuLy8gJGJhZGdlLWZvY3VzLXdpZHRoOiAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRiYWRnZS1waWxsLXBhZGRpbmcteDogICAgICAgICAgICAgIC42ZW0gIWRlZmF1bHQ7XHJcbi8vIC8vIFVzZSBhIGhpZ2hlciB0aGFuIG5vcm1hbCB2YWx1ZSB0byBlbnN1cmUgY29tcGxldGVseSByb3VuZGVkIGVkZ2VzIHdoZW5cclxuLy8gLy8gY3VzdG9taXppbmcgcGFkZGluZyBvciBmb250LXNpemUgb24gbGFiZWxzLlxyXG4vLyAkYmFkZ2UtcGlsbC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAxMHJlbSAhZGVmYXVsdDtcclxuXHJcbi8vIE1vZGFsc1xyXG5cclxuLy8gUGFkZGluZyBhcHBsaWVkIHRvIHRoZSBtb2RhbCBib2R5XHJcbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAwLjc1cmVtO1xyXG5cclxuLy8gTWFyZ2luIGJldHdlZW4gZWxlbWVudHMgaW4gZm9vdGVyLCBtdXN0IGJlIGxvd2VyIHRoYW4gb3IgZXF1YWwgdG8gMiAqICRtb2RhbC1pbm5lci1wYWRkaW5nXHJcbi8vICRtb2RhbC1mb290ZXItbWFyZ2luLWJldHdlZW46ICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG1vZGFsLWRpYWxvZy1tYXJnaW46ICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1kaWFsb2ctbWFyZ2luLXktc20tdXA6ICAgICAgIDEuNzVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kbW9kYWwtdGl0bGUtbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1iYXNlO1xyXG5cclxuJG1vZGFsLWNvbnRlbnQtY29sb3I6IG51bGw7XHJcbiRtb2RhbC1jb250ZW50LWJnOiAkd2hpdGU7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMDtcclxuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRtb2RhbC1jb250ZW50LWlubmVyLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiBub25lO1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAkYm9yZGVyLXJhZGl1cztcclxuXHJcbiRtb2RhbC1iYWNrZHJvcC1iZzogJGJsYWNrO1xyXG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogMC43O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1mb290ZXItYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuJG1vZGFsLWhlYWRlci1ib3JkZXItd2lkdGg6IDA7XHJcbiRtb2RhbC1mb290ZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteTogMC43NXJlbTtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg6IDEuNXJlbTtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteDtcclxuXHJcbi8vICRtb2RhbC14bDogICAgICAgICAgICAgICAgICAgICAgICAgIDExNDBweCAhZGVmYXVsdDtcclxuJG1vZGFsLWxnOiAxMDQ0cHg7XHJcbi8vICRtb2RhbC1tZDogICAgICAgICAgICAgICAgICAgICAgICAgIDUwMHB4ICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc206ICAgICAgICAgICAgICAgICAgICAgICAgICAzMDBweCAhZGVmYXVsdDtcclxuXHJcbi8vICRtb2RhbC1mYWRlLXRyYW5zZm9ybTogICAgICAgICAgICAgIHRyYW5zbGF0ZSgwLCAtNTBweCkgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1zaG93LXRyYW5zZm9ybTogICAgICAgICAgICAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAuM3MgZWFzZS1vdXQgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1zY2FsZS10cmFuc2Zvcm06ICAgICAgICAgICAgIHNjYWxlKDEuMDIpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQWxlcnRzXHJcbi8vIC8vXHJcbi8vIC8vIERlZmluZSBhbGVydCBjb2xvcnMsIGJvcmRlciByYWRpdXMsIGFuZCBwYWRkaW5nLlxyXG5cclxuLy8gJGFsZXJ0LXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWxpbmstZm9udC13ZWlnaHQ6ICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkYWxlcnQtYmctbGV2ZWw6ICAgICAgICAgICAgICAgICAgICAtMTAgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1ib3JkZXItbGV2ZWw6ICAgICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtY29sb3ItbGV2ZWw6ICAgICAgICAgICAgICAgICA2ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUHJvZ3Jlc3MgYmFyc1xyXG5cclxuLy8gJHByb2dyZXNzLWhlaWdodDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogLjc1ICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmc6ICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYm94LXNoYWRvdzogICAgICAgICAgICAgICBpbnNldCAwIC4xcmVtIC4xcmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItY29sb3I6ICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci1iZzogICAgICAgICAgICAgICAgICAgdGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLWFuaW1hdGlvbi10aW1pbmc6ICAgICAxcyBsaW5lYXIgaW5maW5pdGUgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItdHJhbnNpdGlvbjogICAgICAgICAgIHdpZHRoIC42cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTGlzdCBncm91cFxyXG5cclxuLy8gJGxpc3QtZ3JvdXAtY29sb3I6ICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYmc6ICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1ib3JkZXItY29sb3I6ICAgICAgICAgICByZ2JhKCRibGFjaywgLjEyNSkgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJvcmRlci13aWR0aDogMHB4O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuXHJcbi8vICRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy15OiAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXg6ICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWhvdmVyLWJnOiAgICAgICAgICAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGl2ZS1iZzogICAgICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgICAkbGlzdC1ncm91cC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1kaXNhYmxlZC1jb2xvcjogICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWRpc2FibGVkLWJnOiAgICAgICAgICAgICRsaXN0LWdyb3VwLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWNvbG9yOiAgICAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICAgICAkbGlzdC1ncm91cC1hY3Rpb24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWNvbG9yOiAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gSW1hZ2UgdGh1bWJuYWlsc1xyXG5cclxuLy8gJHRodW1ibmFpbC1wYWRkaW5nOiAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJnOiAgICAgICAgICAgICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZpZ3VyZXNcclxuXHJcbi8vICRmaWd1cmUtY2FwdGlvbi1mb250LXNpemU6ICAgICAgICAgIDkwJSAhZGVmYXVsdDtcclxuLy8gJGZpZ3VyZS1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQnJlYWRjcnVtYnNcclxuXHJcbi8vICRicmVhZGNydW1iLWZvbnQtc2l6ZTogICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLXBhZGRpbmcteDogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWl0ZW0tcGFkZGluZzogICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItbWFyZ2luLWJvdHRvbTogICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLWJnOiAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvcjogICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWRpdmlkZXI6ICAgICAgICAgICAgICAgIHF1b3RlKFwiL1wiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ2Fyb3VzZWxcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLXdpZHRoOiAgICAgICAgICAgICAxNSUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLW9wYWNpdHk6ICAgICAgICAgICAuNSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtaG92ZXItb3BhY2l0eTogICAgIC45ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC10cmFuc2l0aW9uOiAgICAgICAgb3BhY2l0eSAuMTVzIGVhc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXdpZHRoOiAgICAgICAgICAgMzBweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1oZWlnaHQ6ICAgICAgICAgIDNweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1oaXQtYXJlYS1oZWlnaHQ6IDEwcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3Itc3BhY2VyOiAgICAgICAgICAzcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItdHJhbnNpdGlvbjogICAgICBvcGFjaXR5IC42cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWNhcHRpb24td2lkdGg6ICAgICAgICAgICAgIDcwJSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNhcHRpb24tY29sb3I6ICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6ICAgICAgICAyMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNUw0LjI1IDRsMi41LTIuNUw1LjI1IDB6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6ICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPScjeyRjYXJvdXNlbC1jb250cm9sLWNvbG9yfScgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZD0nTTIuNzUgMGwtMS41IDEuNUwzLjc1IDRsLTIuNSAyLjVMMi43NSA4bDQtNC00LTR6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLXRyYW5zaXRpb24tZHVyYXRpb246ICAgICAgIC42cyAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAkY2Fyb3VzZWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLWluLW91dCAhZGVmYXVsdDsgLy8gRGVmaW5lIHRyYW5zZm9ybSB0cmFuc2l0aW9uIGZpcnN0IGlmIHVzaW5nIG11bHRpcGxlIHRyYW5zaXRpb25zIChlLmcuLCBgdHJhbnNmb3JtIDJzIGVhc2UsIG9wYWNpdHkgLjVzIGVhc2Utb3V0YClcclxuXHJcbi8vIC8vIFNwaW5uZXJzXHJcblxyXG4vLyAkc3Bpbm5lci13aWR0aDogICAgICAgICAycmVtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1oZWlnaHQ6ICAgICAgICAkc3Bpbm5lci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItYm9yZGVyLXdpZHRoOiAgLjI1ZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkc3Bpbm5lci13aWR0aC1zbTogICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWhlaWdodC1zbTogICAgICAgJHNwaW5uZXItd2lkdGgtc20gIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWJvcmRlci13aWR0aC1zbTogLjJlbSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENsb3NlXHJcblxyXG4vLyAkY2xvc2UtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAxLjUgIWRlZmF1bHQ7XHJcbi8vICRjbG9zZS1mb250LXdlaWdodDogICAgICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAkYmxhY2sgIWRlZmF1bHQ7XHJcbi8vICRjbG9zZS10ZXh0LXNoYWRvdzogICAgICAgICAgICAgICAgIDAgMXB4IDAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ29kZVxyXG5cclxuLy8gJGNvZGUtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgODcuNSUgIWRlZmF1bHQ7XHJcbi8vICRjb2RlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICRwaW5rICFkZWZhdWx0O1xyXG5cclxuLy8gJGtiZC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgICAgLjJyZW0gIWRlZmF1bHQ7XHJcbi8vICRrYmQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgIC40cmVtICFkZWZhdWx0O1xyXG4vLyAka2JkLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgICAkY29kZS1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRrYmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGtiZC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJHByZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkcHJlLXNjcm9sbGFibGUtbWF4LWhlaWdodDogICAgICAgICAzNDBweCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFV0aWxpdGllc1xyXG5cclxuLy8gJGRpc3BsYXlzOiBub25lLCBpbmxpbmUsIGlubGluZS1ibG9jaywgYmxvY2ssIHRhYmxlLCB0YWJsZS1yb3csIHRhYmxlLWNlbGwsIGZsZXgsIGlubGluZS1mbGV4ICFkZWZhdWx0O1xyXG4vLyAkb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4gIWRlZmF1bHQ7XHJcbi8vICRwb3NpdGlvbnM6IHN0YXRpYywgcmVsYXRpdmUsIGFic29sdXRlLCBmaXhlZCwgc3RpY2t5ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUHJpbnRpbmdcclxuXHJcbi8vICRwcmludC1wYWdlLXNpemU6ICAgICAgICAgICAgICAgICAgIGEzICFkZWZhdWx0O1xyXG4vLyAkcHJpbnQtYm9keS1taW4td2lkdGg6ICAgICAgICAgICAgICBtYXAtZ2V0KCRncmlkLWJyZWFrcG9pbnRzLCBcImxnXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gSnlzYW4gVmFyaWFibGVzXHJcblxyXG5AZnVuY3Rpb24gc3BhY2UoJHNpemUpIHtcclxuICBAcmV0dXJuIG1hcC1nZXQoJG1hcDogJHNwYWNlcnMsICRrZXk6ICRzaXplKTtcclxufVxyXG5cclxuJGhlYWRlci1oZWlnaHQ6IDYycHg7XHJcbiRoZWFkZXItaGVpZ2h0LW1kOiAxMDBweDtcclxuJGhlYWRlci13aWR0aDogMjgwcHg7XHJcblxyXG4kYnRuLW1pbi13aWR0aDogMTY0cHg7XHJcblxyXG4vLyBKLWlucHV0XHJcbiRqLWlucHV0LWZvbnQtc2l6ZTogMXJlbTtcclxuJGotaW5wdXQtZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS1iYXNlO1xyXG4kai1pbnB1dC1mb250LXN0eWxlOiBub3JtYWw7XHJcbiRqLWlucHV0LWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYmFzZTtcclxuXHJcbiRqLWlucHV0LWxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4kai1pbnB1dC1wYWRkaW5nLXk6IDE3LjVweDtcclxuJGotaW5wdXQtcGFkZGluZy14OiAyMHB4O1xyXG5cclxuJGotaW5wdXQtYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRqLWlucHV0LWJvcmRlci1yYWRpdXM6IDhweDtcclxuJGotaW5wdXQtYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuXHJcbiRqLWlucHV0LWJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuJGotaW5wdXQtbGFiZWwtY29sb3I6ICRncmF5LWRhcms7XHJcbiRqLWlucHV0LWJvcmRlci1jb2xvcjogJGdyYXktbGlnaHQ7XHJcbiRqLWlucHV0LXRleHQtY29sb3I6ICRibGFjaztcclxuJGotaW5wdXQtbWFzay1jb2xvcjogJGdyYXk7XHJcbiRqLWlucHV0LWljb24tY29sb3I6ICRvcmFuZ2U7XHJcbiRqLWlucHV0LWhlbHBlci1jb2xvcjogJGdyYXktZGFyaztcclxuXHJcbiRqLWlucHV0LWJvcmRlci1jb2xvci0tYWN0aXZlOiAkcHJpbWFyeTtcclxuJGotaW5wdXQtbGFiZWwtY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcbiRqLWlucHV0LXRleHQtY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yLS1lcnJvcjogJHJlZC1saWdodDtcclxuJGotaW5wdXQtaGVscGVyLWNvbG9yLS1lcnJvcjogJHJlZDtcclxuJGotaW5wdXQtYm9yZGVyLWNvbG9yLS1lcnJvcjogJHJlZDtcclxuXHJcbiRqLWlucHV0LWJhY2tncm91bmQtY29sb3ItLWRpc2FibGVkOiAkaW5wdXQtZGlzYWJsZWQtYmc7IC8vIGZyb20gZmlnbWEgcHJpbWl0aXZlcyBzaG91bGQgYmUgZ3JheS0yMDBcclxuXHJcbiRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLXRvcDogJGotaW5wdXQtcGFkZGluZy15ICsgJGotaW5wdXQtYm9yZGVyLXdpZHRoO1xyXG4kai1pbnB1dC1sYWJlbC1wb3NpdGlvbi10b3AtYWN0aXZlOiAxMHB4O1xyXG4kai1pbnB1dC1saW5rLXBvc2l0aW9uLXRvcDogMTZweDtcclxuJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tbGVmdDogJGotaW5wdXQtcGFkZGluZy14ICsgJGotaW5wdXQtYm9yZGVyLXdpZHRoO1xyXG4kai1pbnB1dC1sYWJlbC1saW5lLWhlaWdodDogJGotaW5wdXQtbGluZS1oZWlnaHQ7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG5cclxuJGotaW5wdXQtcGFkZGluZy10b3A6IDI3cHg7XHJcbiRqLWlucHV0LXBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4kai1pbnB1dC1tYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4kai1pbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogJGdyYXk7XHJcbiRqLWlucHV0LXBsYWNlaG9sZGVyLXBvc2l0aW9uOiAkai1pbnB1dC1wYWRkaW5nLXRvcCArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtY2hhci1sZW5ndGg6IDguOTlweDtcclxuXHJcbiRqLWlucHV0LWJ1dHRvbi1wb3NpdGlvbjogMjBweDtcclxuJGotaW5wdXQtc2hhZG93LXBvc2l0aW9uOiAkai1pbnB1dC1sYWJlbC1wb3NpdGlvbi1sZWZ0O1xyXG5cclxuJGotaW5wdXQtbGFiZWwtei1pbmRleDogMDtcclxuJGotaW5wdXQtc2hhZG93LXotaW5kZXg6IDE7XHJcbiRqLWlucHV0LXotaW5kZXg6IDI7XHJcbiRqLWlucHV0LWxpbmstei1pbmRleDogMztcclxuJGotaW5wdXQtYnV0dG9uLXotaW5kZXg6IDQ7XHJcblxyXG4kYm94LXNoYWRvdy10by10b3AtbGc6IDAgLTFyZW0gM3JlbSByZ2JhKCRibGFjaywgMC4xNzUpO1xyXG5cclxuJGVuYWJsZS1wb2ludGVyLWN1cnNvci1mb3ItYnV0dG9uczogdHJ1ZTtcclxuIl19 */";

/***/ }),

/***/ 4514:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/components/uploading-files/uploading-files.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".uploading-files {\n  padding: 24px 0;\n  margin: 0;\n}\n\n.uploading-files__item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.uploading-files__item:last-child {\n  margin-bottom: 0;\n}\n\n.uploading-files__delete {\n  margin-left: auto;\n  padding: 0;\n  cursor: pointer;\n  color: #b7bec5;\n}\n\n.uploading-files__delete:hover {\n  color: #ef5630;\n}\n\n.uploading-files__icon {\n  align-self: start;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.uploading-files__icon--loading {\n  width: 40px;\n  height: 40px;\n}\n\n.uploading-files__progress {\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 22853:
/*!**************************************************************************!*\
  !*** ./src/app/shared/date-picker/date-picker.component.scss?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-form-field-datepicker input.form-control {\n  color: transparent;\n  caret-color: transparent;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  font-size: 0px;\n}\n.j-form-field-datepicker.j-form-field-should-float .j-input--float-label {\n  top: 10px;\n  transform: scale(0.75);\n}\n.j-form-field-datepicker.j-form-field-open input {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.j-form-field-datepicker.j-focused input.form-control {\n  border-color: #ef5630;\n}\n.j-form-field-datepicker .dropdown-menu {\n  padding: 15px;\n  right: 0;\n  margin-top: 0px;\n  border: 0px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 10px 20px rgba(0, 0, 0, 0.04);\n  border-radius: 0 0 8px 8px;\n}\n.j-form-field-datepicker .ngb-dp-month:nth-last-child(2),\n.j-form-field-datepicker .ngb-dp-month:nth-last-child(2) + .ngb-dp-month {\n  width: 50%;\n}\n.j-form-field-datepicker .ngb-dp-header,\n.j-form-field-datepicker .ngb-dp-month-name,\n.j-form-field-datepicker .ngb-dp-weekdays {\n  background: none;\n}\n.j-form-field-datepicker .ngb-dp-month {\n  padding: 15px;\n}\n.j-form-field-datepicker .ngb-dp-weekdays {\n  border: none;\n}\n.j-form-field-datepicker .ngb-dp-weekday {\n  color: #666c72;\n  font-style: normal;\n}\n.j-form-field-datepicker .ngb-dp-day,\n.j-form-field-datepicker .ngb-dp-week-number,\n.j-form-field-datepicker .ngb-dp-weekday {\n  width: 2.5em;\n  height: 2.5em;\n  font-size: 0.8rem;\n}\n.j-form-field-datepicker .ngb-dp-today .btn-light {\n  border: 1px solid #666c72;\n}\n.j-form-field-datepicker .ngb-dp-day {\n  border-radius: 50%;\n}\n.j-form-field-datepicker .ngb-dp-day:focus {\n  background: none;\n  outline: none;\n  box-shadow: 0px 0px 0px 1px rgba(239, 86, 48, 0.75);\n}\n.j-form-field-datepicker .ngb-dp-day .btn-light {\n  width: 2.5em;\n  height: 2.5em;\n  line-height: 2.5;\n  border-radius: 50%;\n}\n.j-form-field-datepicker .ngb-dp-day .btn-light:focus {\n  outline: none;\n}\n.j-form-field-datepicker .ngb-dp-day .btn-light:hover, .j-form-field-datepicker .ngb-dp-day .btn-light:active, .j-form-field-datepicker .ngb-dp-day .btn-light.active {\n  background: none;\n}\n.j-form-field-datepicker .btn-link {\n  color: #666c72;\n}\n.j-form-field-datepicker .btn-link:hover {\n  color: #ef5630;\n  text-decoration: none;\n}\n.j-form-field-datepicker .ngb-dp-content {\n  justify-content: center;\n}\n.j-form-field-datepicker .date-picker--formated {\n  padding: 0;\n  border: 0;\n  background: transparent;\n  position: absolute;\n  height: 1.2em;\n  border-radius: 0;\n  left: 1.3em;\n  bottom: 0.6em;\n  right: 2em;\n  width: auto;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 13582:
/*!************************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-edit-item/employee-edit-item.component.scss?ngResource ***!
  \************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".employee-edit-item .j-form-field {\n  width: 100%;\n}\n.employee-edit-item .narrow .form-control {\n  height: 46px;\n  padding: 1rem 0.7rem 0rem;\n}\n@media (max-width: 1279.98px) {\n  .employee-edit-item .narrow .form-control {\n    font-size: 14px;\n  }\n}\n.employee-edit-item .narrow .j-input-shadow {\n  left: 1rem;\n  position: absolute;\n  line-height: 20px;\n  color: #b7bec5;\n  top: 21px;\n}\n.employee-edit-item .narrow label.j-input--float-label {\n  left: 14px;\n  top: 14.5px;\n  max-width: 100%;\n}\n@media (max-width: 1279.98px) {\n  .employee-edit-item .narrow label.j-input--float-label {\n    top: 12.5px;\n  }\n}\n.employee-edit-item .narrow .j-input input.is-filled ~ label.j-input--float-label,\n.employee-edit-item .narrow .j-input input:focus ~ label.j-input--float-label,\n.employee-edit-item .narrow .j-input input:active ~ label.j-input--float-label {\n  top: 7px;\n}\n.employee-edit-item_removing .employee-edit-item--cell {\n  opacity: 0;\n  pointer-events: none;\n}\n.employee-edit-item_removing .employee-edit-item--cell_controls {\n  opacity: 1;\n  pointer-events: initial;\n  min-width: 6em;\n}\n.employee-edit-item {\n  display: flex;\n  margin: 0 1.5em 1.25em 1.25em;\n  background: #FFFFFF;\n  padding: 20px 0;\n  overflow-x: hidden;\n  /* Shadow / L2 */\n  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.04), 0px 2px 6px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04);\n  border-radius: 8px;\n}\n.employee-edit-item .employee-info {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-right: 1.25em;\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n.employee-edit-item .employee-info .add-period {\n  margin-bottom: 1em;\n  margin-left: 1em;\n}\n.employee-edit-item .employee-info .info-row {\n  display: flex;\n  padding-bottom: 1.25rem;\n}\n.employee-edit-item .employee-info .info-row:last-child {\n  padding-bottom: 0;\n}\n.employee-edit-item--cell {\n  padding: 0 7px;\n  color: #666c72;\n  display: flex;\n  align-items: flex-start;\n  flex-grow: 1;\n}\n.employee-edit-item--cell_num {\n  margin-left: 1.25em;\n  position: sticky;\n  left: 0px;\n  z-index: 3;\n  min-width: 2.5em;\n  line-height: 4em;\n  flex-grow: 0;\n  align-content: center;\n  align-self: flex-start;\n  background-color: #fff;\n}\n.employee-edit-item--cell_iin {\n  min-width: 10em;\n  max-width: 10em;\n  flex-grow: 1;\n}\n.employee-edit-item--cell_birth {\n  min-width: 9em;\n  max-width: 9em;\n  flex-grow: 10;\n}\n.employee-edit-item--cell_iban {\n  min-width: 14em;\n}\n@media (min-width: 960px) {\n  .employee-edit-item--cell_iban {\n    min-width: 15em;\n  }\n}\n.employee-edit-item--cell_name {\n  min-width: 8em;\n  flex-grow: 8;\n  flex-direction: column;\n}\n.employee-edit-item--cell_name .j-input-helper {\n  white-space: normal;\n  padding-top: 3.2em;\n  position: relative;\n  width: 100%;\n}\n.employee-edit-item--cell_name .j-input-helper span {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n}\n.employee-edit-item--cell_period {\n  min-width: 9em;\n  max-width: 11em;\n  flex-grow: 9;\n}\n.employee-edit-item--cell_amount {\n  min-width: 7em;\n  max-width: 9em;\n  flex-grow: 6;\n}\n.employee-edit-item--cell_amount .j-input {\n  margin: 0;\n}\n.employee-edit-item--cell_amount .min-amount {\n  top: 100%;\n}\n.employee-edit-item--cell_controls {\n  min-height: 3em;\n  flex-direction: row;\n  align-self: flex-start;\n  align-items: center;\n}\n.employee-edit-item--cell_controls .btn[title=add] {\n  max-width: 6em;\n}\n.employee-edit-item--cell_controls .btn {\n  line-height: 1;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 62115:
/*!********************************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-group-control/employee-group-control.component.scss?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".employee-group--trigger {\n  cursor: pointer;\n}\n.employee-group--trigger .btn-icon {\n  position: absolute;\n  right: 0.5em;\n  top: 50%;\n  margin-top: -22px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLWdyb3VwLWNvbnRyb2wuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxlQUFBO0FBREY7QUFFRTtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFFBQUE7RUFDQSxpQkFBQTtBQUFKIiwiZmlsZSI6ImVtcGxveWVlLWdyb3VwLWNvbnRyb2wuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdzaGFyZWQnO1xuXG4uZW1wbG95ZWUtZ3JvdXAtLXRyaWdnZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC5idG4taWNvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwLjVlbTtcbiAgICB0b3A6IDUwJTtcbiAgICBtYXJnaW4tdG9wOiAtMjJweDtcbiAgfVxufVxuIl19 */";

/***/ }),

/***/ 21568:
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/saved-employee/saved-employee.component.scss?ngResource ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYXZlZC1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 40480:
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/edit-saved-employee/edit-saved-employee.component.scss?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".saved-employees {\n  padding: 1.5rem;\n}\n\n.edit-employees-close {\n  width: 44px;\n  height: 44px;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 1rem;\n}\n\n.list-header-wrap {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.edit-delete {\n  flex-shrink: 0;\n  margin-left: auto;\n  width: 3.5rem;\n  height: 3.5rem;\n  transition: all 0.2s ease-in-out;\n  position: relative;\n}\n\n.edit-delete .edit-delete-icon {\n  display: block;\n  position: absolute;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 16px;\n  height: 24px;\n  transform: translate(-50%, -50%);\n}\n\n.edit-delete .edit-delete-icon--hover {\n  display: none;\n}\n\n.edit-delete:hover .edit-delete-icon {\n  display: none;\n}\n\n.edit-delete:hover .edit-delete-icon--hover {\n  display: block;\n}\n\n.saved-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.employee-form {\n  position: relative;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 55819:
/*!**************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/employees-modal/employees-modal.component.scss?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".employees-modal {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n@media (min-width: 960px) {\n  .employees-modal {\n    max-height: calc(100vh - 80px);\n  }\n}\n.employees-modal .modal-header {\n  padding: 0.5rem 1rem;\n}\n.employees-modal .modal-header h4 {\n  margin: 0;\n}\n@media (min-width: 960px) {\n  .employees-modal .modal-header {\n    padding: 1rem 1.5rem;\n  }\n}\n.employees-modal .modal-body {\n  padding: 0 1rem 0.5rem;\n  flex-grow: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n@media (min-width: 960px) {\n  .employees-modal .modal-body {\n    padding: 0 1.5rem 1rem;\n  }\n}\n.employees-modal .modal-footer {\n  display: block;\n  padding: 0.5rem 1rem;\n}\n@media (min-width: 960px) {\n  .employees-modal .modal-footer {\n    display: flex;\n    border-top: 1px solid #b7bec5;\n    padding: 1rem 1.5rem;\n    background: #fff;\n  }\n}\n.employees-modal .modal-footer .btn-primary {\n  width: 100%;\n  margin: 0;\n  display: block;\n}\n@media (min-width: 960px) {\n  .employees-modal .modal-footer .btn-primary {\n    width: auto;\n  }\n}\n.employees-modal .scrolled {\n  margin-bottom: 1rem;\n  flex-grow: 1;\n  overflow-y: auto;\n}\n@media (min-width: 960px) {\n  .employees-modal .scrolled {\n    overflow-x: hidden;\n  }\n}\n.employees-modal .employees-modal--total {\n  text-align: center;\n  margin-bottom: 1rem;\n}\n@media (min-width: 960px) {\n  .employees-modal .employees-modal--total {\n    display: inline-block;\n    margin-right: 1rem;\n  }\n}\n@media (min-width: 960px) {\n  .employees-modal .employees-modal--total .p2 {\n    margin-right: 0.5rem;\n  }\n}\n.employees-modal--search {\n  background-color: #f6f7f8;\n  padding: 0.5rem 1rem;\n  margin-left: -space(3);\n  margin-right: -space(3);\n}\n@media (min-width: 960px) {\n  .employees-modal--search {\n    padding: 1rem 1.5rem;\n    margin-left: -space(4);\n    margin-right: -space(4);\n  }\n}\n.employees-list {\n  position: relative;\n}\n.employees-list_filtered .btn[title=add] {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 1911:
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/saved-employee-list/saved-employee-list.component.scss?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".modal--close {\n  display: inline-block;\n}\n.modal--close .close {\n  display: none;\n  position: fixed;\n  margin: 0;\n  top: 2vh;\n  right: 2vw;\n}\n@media (min-width: 960px) {\n  .modal--close .close {\n    display: block;\n  }\n}\n.modal--close .btn {\n  padding: 0.25rem;\n  min-width: 2em;\n  margin: 1rem 0 0 1rem;\n  margin-right: 1rem;\n}\n@media (min-width: 960px) {\n  .modal--close .btn {\n    display: none;\n  }\n}\n.modal-back {\n  width: 40px;\n  height: 40px;\n}\n.list-header {\n  margin-bottom: 2rem;\n}\n.saved-employees {\n  padding: 2rem 1.5rem;\n}\n.saved-employee {\n  width: 100%;\n  background: #f6f7f8;\n  padding: 1rem;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n  transition: all 0.2s ease-in-out;\n  position: relative;\n}\n.saved-employee:hover {\n  background: #e9ecf1;\n}\n.saved-employee .custom-control {\n  padding-left: 36px;\n}\n.saved-employee .custom-control-label::before, .saved-employee .custom-control-label::after {\n  width: 24px;\n  height: 24px;\n  top: 0;\n  left: -36px;\n}\n.saved-employee .custom-control-input:checked ~ .custom-control-label::before {\n  border-color: #ef5630;\n  background-color: #ef5630;\n}\n.saved-employee .custom-control-input:focus ~ .custom-control-label::before {\n  box-shadow: 0 0 0 0.2rem rgba(239, 86, 48, 0.25);\n}\n.saved-employee .custom-control-input:not(:disabled):active ~ .custom-control-label::before {\n  border-color: rgba(239, 86, 48, 0.25);\n  background-color: rgba(239, 86, 48, 0.25);\n}\n.saved-employee .custom-control-input:focus:not(:checked) ~ .custom-control-label::before {\n  border-color: rgba(239, 86, 48, 0.25);\n}\n.saved-employee .saved-name {\n  display: block;\n  line-height: 24px;\n}\n.saved-employee__last_child {\n  margin-bottom: 0;\n}\n.saved-employee-list {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n.saved-employee-footer {\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 1rem;\n}\n.select-all-wrap {\n  display: flex;\n}\n.saved-delete-all {\n  flex-shrink: 0;\n  margin-left: 1rem;\n  width: 3.5rem;\n  height: 3.5rem;\n  background: #f6f7f8;\n  border-radius: 8px;\n  transition: all 0.2s ease-in-out;\n  position: relative;\n}\n.saved-delete-all .saved-delete-all-icon {\n  display: block;\n  position: absolute;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 16px;\n  height: 24px;\n  transform: translate(-50%, -50%);\n}\n.saved-delete-all .saved-delete-all-icon--hover {\n  display: none;\n}\n.saved-delete-all:hover {\n  background: #e9ecf1;\n}\n.saved-delete-all:hover .saved-delete-all-icon {\n  display: none;\n}\n.saved-delete-all:hover .saved-delete-all-icon--hover {\n  display: block;\n}\n.spinner-wrap {\n  position: relative;\n  min-height: 100px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 74670:
/*!********************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/bank-dropdown/bank-dropdown.component.scss?ngResource ***!
  \********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".bank-dropdown {\n  position: relative;\n}\n\n.bank-dropdown__header {\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.bank-dropdown__arrow {\n  transition: all 0.2s ease-in-out;\n  padding: 4px;\n}\n\n.bank-dropdown__trigger-wrapper {\n  display: grid;\n  height: 30px;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.bank-dropdown__trigger {\n  display: flex;\n  align-items: center;\n  text-align: left;\n  padding: 0;\n  height: 30px;\n}\n\n.bank-dropdown__trigger:hover {\n  transform: scale(1);\n}\n\n.bank-dropdown__trigger--collapsed {\n  border-radius: 0.5rem 0.5rem 0 0;\n}\n\n.bank-dropdown__trigger--collapsed .bank-dropdown__arrow {\n  transform: rotate(180deg);\n}\n\n.bank-dropdown__body {\n  position: absolute;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 24px 32px rgba(0, 0, 0, 0.04);\n  width: 100%;\n  overflow: hidden;\n  z-index: 5;\n  background: #fff;\n  border-radius: 0 0 0.5rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.bank-dropdown__item {\n  display: block;\n  padding: 1rem;\n  text-align: left;\n  border-radius: 0;\n}\n\n.bank-dropdown__item:hover {\n  transform: scale(1);\n}\n\n.bank-dropdown__item--selected {\n  background: #eceef1;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 36646:
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/currency-selector/currency-selector.component.scss?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.currency-selector__header {\n  display: flex;\n  padding: 1.5rem;\n  background-color: #fff;\n}\n\n.currency-selector__search {\n  padding: 0 1.5rem 1.5rem 1.5rem;\n  background-color: #fff;\n}\n\n.currency-selector__info {\n  color: #666c72;\n  padding: 0.75rem 1rem;\n  background-color: #f6f7f8;\n  border-radius: 0.75rem;\n}\n\n.currency-selector__header_size_b {\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n}\n\n.currency-selector-block {\n  border-radius: 0.75rem;\n  overflow-y: auto;\n  height: 100%;\n}\n\n.currency-selector-block__row {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-content: space-around;\n  justify-content: space-between;\n  padding: 0.5rem;\n  background: #fff;\n  margin: 1rem 2rem;\n}\n\n.currency-selector-block__cell {\n  margin: 0.5rem 0.5rem 0 0.5rem;\n}\n\n.currency-selector-block__cell-grid {\n  display: grid;\n}\n\n.currency-selector-block__desc {\n  font-size: 12px;\n}\n\n.currency-selector-block__error {\n  color: #666c72;\n  padding: 2.5rem 4.75rem 1.5rem 4.75rem;\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1cnJlbmN5LXNlbGVjdG9yLmNvbXBvbmVudC5zY3NzIiwiLi4vLi4vLi4vLi4vLi4vc2Nzcy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQ0hNO0FER1I7O0FBR0E7RUFDRSwrQkFBQTtFQUNBLHNCQ1JNO0FEUVI7O0FBR0E7RUFDRSxjQ05TO0VET1QscUJBQUE7RUFDQSx5QkNaUztFRGFULHNCQzRMaUI7QUQ1TG5COztBQUdBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLHNCQUFBO0VBRUEsZ0JBQUE7RUFDQSxZQUFBO0FBREY7O0FBSUE7RUFDRSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSwyQkFBQTtFQUNBLDhCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQ3JDTTtFRHNDTixpQkFBQTtBQURGOztBQUlBO0VBQ0UsOEJBQUE7QUFERjs7QUFJQTtFQUNFLGFBQUE7QUFERjs7QUFJQTtFQUNFLGVBQUE7QUFERjs7QUFJQTtFQUNFLGNDaERTO0VEaURULHNDQUFBO0VBQ0Esa0JBQUE7QUFERiIsImZpbGUiOiJjdXJyZW5jeS1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yX19oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiAxLjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yX19zZWFyY2gge1xuICBwYWRkaW5nOiAwIDEuNXJlbSAxLjVyZW0gMS41cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG59XG5cbi5jdXJyZW5jeS1zZWxlY3Rvcl9faW5mbyB7XG4gIGNvbG9yOiAkZ3JheS02MDA7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktMjAwO1xuICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1tZDtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yX19oZWFkZXJfc2l6ZV9iIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMzBweDtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yLWJsb2NrIHtcbiAgYm9yZGVyLXJhZGl1czogMC43NXJlbTtcbiAgLy8gbWF4LXdpZHRoOiA1MTJweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY3VycmVuY3ktc2VsZWN0b3ItYmxvY2tfX3JvdyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnIgYXV0bztcbiAgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgYmFja2dyb3VuZDogJHdoaXRlO1xuICBtYXJnaW46IDFyZW0gMnJlbTtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yLWJsb2NrX19jZWxsIHtcbiAgbWFyZ2luOiAwLjVyZW0gMC41cmVtIDAgMC41cmVtO1xufVxuXG4uY3VycmVuY3ktc2VsZWN0b3ItYmxvY2tfX2NlbGwtZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG59XG5cbi5jdXJyZW5jeS1zZWxlY3Rvci1ibG9ja19fZGVzYyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yLWJsb2NrX19lcnJvciB7XG4gIGNvbG9yOiAkZ3JheS02MDA7XG4gIHBhZGRpbmc6IDIuNXJlbSA0Ljc1cmVtIDEuNXJlbSA0Ljc1cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iLCIvLyBWYXJpYWJsZXNcclxuLy9cclxuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXHJcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG5cclxuLy8gQ29sb3Igc3lzdGVtXHJcblxyXG4kd2hpdGU6ICNmZmY7XHJcbiRncmF5LTEwMDogI2ZhZjdmNztcclxuJGdyYXktMjAwOiAjZjZmN2Y4O1xyXG4kZ3JheS0zMDA6ICNlY2VlZjE7XHJcbiRncmF5LTQwMDogI2Q2ZGFkZjtcclxuJGdyYXktNTAwOiAjYjdiZWM1O1xyXG4kZ3JheS02MDA6ICM2NjZjNzI7XHJcbiRncmF5LTcwMDogIzQ3NGI1MjtcclxuJGdyYXktODAwOiAjZTllY2YxO1xyXG4kZ3JheS05MDA6ICNkYmRmZTI7XHJcbiRncmF5LTEwMDA6ICM4MjgyODI7XHJcbiRibGFjazogIzFhMWMxZjtcclxuXHJcbiRncmF5czogKCk7XHJcbiRncmF5czogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgICcxMDAnOiAkZ3JheS0xMDAsXHJcbiAgICAnMjAwJzogJGdyYXktMjAwLFxyXG4gICAgJzMwMCc6ICRncmF5LTMwMCxcclxuICAgICc0MDAnOiAkZ3JheS00MDAsXHJcbiAgICAnNTAwJzogJGdyYXktNTAwLFxyXG4gICAgJzYwMCc6ICRncmF5LTYwMCxcclxuICAgICc3MDAnOiAkZ3JheS03MDAsXHJcbiAgICAnODAwJzogJGdyYXktODAwLFxyXG4gICksXHJcbiAgJGdyYXlzXHJcbik7XHJcblxyXG4kYmx1ZTogIzIwNDE3NztcclxuJGJsdWUtbGlnaHQ6ICMxNTg2YmI7XHJcbiRibHVlLXdoaXRlOiAjZjVmOWZkO1xyXG4kb3JhbmdlOiAjZWY1NjMwO1xyXG4kb3JhbmdlLWRhcms6ICNkNDNlMTk7XHJcbiRvcmFuZ2UtbGlnaHQ6ICNmN2FiOTg7XHJcbiR5ZWxsb3c6ICNlZjhmMDA7XHJcbiRncmVlbjogIzIzOWE1NDtcclxuJGdyZWVuLWxpZ2h0OiAjNzRiYTcyO1xyXG4kcmVkOiAjZmYwMDAwO1xyXG4kcmVkLWxpZ2h0OiAjZmZlZmVmO1xyXG5cclxuJGdyYXk6ICRncmF5LTUwMDtcclxuJGdyYXktZGFyazogJGdyYXktNjAwO1xyXG4kZ3JheS1saWdodDogJGdyYXktNDAwO1xyXG5cclxuJGNvbG9yczogKCk7XHJcbiRjb2xvcnM6IG1hcC1tZXJnZShcclxuICAoXHJcbiAgICAnYmx1ZSc6ICRibHVlLFxyXG4gICAgJ2JsdWUtbGlnaHQnOiAkYmx1ZS1saWdodCxcclxuICAgICdibHVlLXdoaXRlJzogJGJsdWUtd2hpdGUsXHJcbiAgICAnb3JhbmdlJzogJG9yYW5nZSxcclxuICAgICdvcmFuZ2UtZGFyayc6ICRvcmFuZ2UtZGFyayxcclxuICAgICdvcmFuZ2UtbGlnaHQnOiAkb3JhbmdlLWxpZ2h0LFxyXG4gICAgJ3llbGxvdyc6ICR5ZWxsb3csXHJcbiAgICAnZ3JlZW4nOiAkZ3JlZW4sXHJcbiAgICAnZ3JlZW4tbGlnaHQnOiAkZ3JlZW4tbGlnaHQsXHJcbiAgICAncmVkJzogJHJlZCxcclxuICAgICdyZWQtbGlnaHQnOiAkcmVkLWxpZ2h0LFxyXG4gICAgJ2JsYWNrJzogJGJsYWNrLFxyXG4gICAgJ2JsYWNrLWxpZ2h0JzogJGdyYXktNzAwLFxyXG4gICAgJ2dyYXknOiAkZ3JheS01MDAsXHJcbiAgICAnZ3JheS1kYXJrJzogJGdyYXktNjAwLFxyXG4gICAgJ2dyYXktbGlnaHQnOiAkZ3JheS00MDAsXHJcbiAgKSxcclxuICAkY29sb3JzXHJcbik7XHJcblxyXG4kcHJpbWFyeTogJG9yYW5nZTtcclxuJHNlY29uZGFyeTogJGJsdWU7XHJcbiRzdWNjZXNzOiAkZ3JlZW47XHJcbiRpbmZvOiAkYmx1ZS1saWdodDtcclxuJHdhcm5pbmc6ICR5ZWxsb3c7XHJcbiRkYW5nZXI6ICRyZWQ7XHJcbiRsaWdodDogJGdyYXktNTAwO1xyXG4kZGFyazogJGJsYWNrO1xyXG5cclxuJHRoZW1lLWNvbG9yczogKCk7XHJcbiR0aGVtZS1jb2xvcnM6IG1hcC1tZXJnZShcclxuICAoXHJcbiAgICAncHJpbWFyeSc6ICRwcmltYXJ5LFxyXG4gICAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXHJcbiAgICAnc3VjY2Vzcyc6ICRzdWNjZXNzLFxyXG4gICAgJ2luZm8nOiAkaW5mbyxcclxuICAgICd3YXJuaW5nJzogJHdhcm5pbmcsXHJcbiAgICAnZGFuZ2VyJzogJGRhbmdlcixcclxuICAgICdsaWdodCc6ICRsaWdodCxcclxuICAgICdkYXJrJzogJGRhcmssXHJcbiAgICAnd2hpdGUnOiAkd2hpdGUsXHJcbiAgKSxcclxuICAkdGhlbWUtY29sb3JzXHJcbik7XHJcblxyXG4vLyAkdGV4dC1jb2xvcnM6ICgpO1xyXG4vLyAkdGV4dC1jb2xvcnM6IG1hcC1tZXJnZShcclxuLy8gICAoXHJcbi8vICAgICAnZGVmYXVsdCc6ICRibGFjayxcclxuLy8gICAgICdsb3ctY29udHJhc3QnOiAkZ3JheS02MDAsXHJcbi8vICAgICAnaW5mbyc6ICRncmF5LTUwMCxcclxuLy8gICAgICdlcnJvcic6ICRyZWQsXHJcbi8vICAgICAnbGluayc6ICRibHVlLFxyXG4vLyAgICAgJ2JhbGFuY2UnOiAkZ3JlZW4sXHJcbi8vICAgICAnYmFsYW5jZS1jb2lucyc6ICRncmVlbi1saWdodCxcclxuLy8gICApLFxyXG4vLyAgICR0ZXh0LWNvbG9yc1xyXG4vLyApO1xyXG5cclxuLy8gU3BhY2luZ1xyXG4vL1xyXG4vLyBDb250cm9sIHRoZSBkZWZhdWx0IHN0eWxpbmcgb2YgbW9zdCBCb290c3RyYXAgZWxlbWVudHMgYnkgbW9kaWZ5aW5nIHRoZXNlXHJcbi8vIHZhcmlhYmxlcy4gTW9zdGx5IGZvY3VzZWQgb24gc3BhY2luZy5cclxuLy8gWW91IGNhbiBhZGQgbW9yZSBlbnRyaWVzIHRvIHRoZSAkc3BhY2VycyBtYXAsIHNob3VsZCB5b3UgbmVlZCBtb3JlIHZhcmlhdGlvbi5cclxuXHJcbiRzcGFjZXI6IDFyZW07XHJcbiRzcGFjZXJzOiAoKTtcclxuJHNwYWNlcnM6IG1hcC1tZXJnZShcclxuICAoXHJcbiAgICAwOiAwLFxyXG4gICAgLy8gMHB4XHJcbiAgICAxOiAkc3BhY2VyICogMC4yNSxcclxuICAgIC8vIDRweCB4eHMsXHJcbiAgICAyOiAkc3BhY2VyICogMC41LFxyXG4gICAgLy8gOHB4IHhzLFxyXG4gICAgMzogJHNwYWNlcixcclxuICAgIC8vIDE2cHggc21cclxuICAgIDQ6ICRzcGFjZXIgKiAxLjUsXHJcbiAgICAvLyAyNHB4IG1kLFxyXG4gICAgNTogJHNwYWNlciAqIDIsXHJcbiAgICAvLyAzMnB4IGxnLFxyXG4gICAgNjogJHNwYWNlciAqIDIuNSxcclxuICAgIC8vIDQwcHggeGwsXHJcbiAgICA3OiAkc3BhY2VyICogMy41LFxyXG4gICAgLy8gNTZweCB4eGxcclxuICAgIDg6ICRzcGFjZXIgKiA0LFxyXG4gICAgLy8gNjRweCB4eGxcclxuICApLFxyXG4gICRzcGFjZXJzXHJcbik7XHJcblxyXG4vLyBCb2R5XHJcbi8vXHJcbi8vIFNldHRpbmdzIGZvciB0aGUgYDxib2R5PmAgZWxlbWVudC5cclxuXHJcbiRib2R5LWJnOiAkd2hpdGU7XHJcbiRib2R5LWNvbG9yOiAkZGFyaztcclxuXHJcbi8vIExpbmtzXHJcbi8vXHJcbi8vIFN0eWxlIGFuY2hvciBlbGVtZW50cy5cclxuXHJcbiRsaW5rLWNvbG9yOiB0aGVtZS1jb2xvcigncHJpbWFyeScpO1xyXG4kbGluay1kZWNvcmF0aW9uOiBub25lO1xyXG4kbGluay1ob3Zlci1jb2xvcjogJG9yYW5nZS1kYXJrO1xyXG4kbGluay1ob3Zlci1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuLy8gUGFyYWdyYXBoc1xyXG4vL1xyXG4vLyBTdHlsZSBwIGVsZW1lbnQuXHJcblxyXG4kcGFyYWdyYXBoLW1hcmdpbi1ib3R0b206IDFyZW07XHJcblxyXG4vLyBHcmlkIGJyZWFrcG9pbnRzXHJcbi8vXHJcbi8vIERlZmluZSB0aGUgbWluaW11bSBkaW1lbnNpb25zIGF0IHdoaWNoIHlvdXIgbGF5b3V0IHdpbGwgY2hhbmdlLFxyXG4vLyBhZGFwdGluZyB0byBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLCBmb3IgdXNlIGluIG1lZGlhIHF1ZXJpZXMuXHJcblxyXG4kZ3JpZC1icmVha3BvaW50czogKFxyXG4gIHhzOiAwLFxyXG4gIHNtOiA2NzBweCxcclxuICBtZDogOTYwcHgsXHJcbiAgbGc6IDEyODBweCxcclxuICB4bDogMTkyMHB4LFxyXG4pO1xyXG5cclxuLy8gR3JpZCBjb250YWluZXJzXHJcbi8vXHJcbi8vIERlZmluZSB0aGUgbWF4aW11bSB3aWR0aCBvZiBgLmNvbnRhaW5lcmAgZm9yIGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMuXHJcblxyXG4kY29udGFpbmVyLW1heC13aWR0aHM6IChcclxuICBzbTogNTQwcHgsXHJcbiAgbWQ6IDcyMHB4LFxyXG4gIGxnOiA5NjBweCxcclxuICB4bDogMTI4MHB4LFxyXG4pO1xyXG5cclxuLy8gR3JpZCBjb2x1bW5zXHJcbi8vXHJcbi8vIFNldCB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgYW5kIHNwZWNpZnkgdGhlIHdpZHRoIG9mIHRoZSBndXR0ZXJzLlxyXG5cclxuJGdyaWQtY29sdW1uczogMTI7XHJcbiRncmlkLWd1dHRlci13aWR0aDogMzBweDtcclxuJGdyaWQtcm93LWNvbHVtbnM6IDY7XHJcblxyXG4vLyBDb21wb25lbnRzXHJcbi8vXHJcbi8vIERlZmluZSBjb21tb24gcGFkZGluZyBhbmQgYm9yZGVyIHJhZGl1cyBzaXplcyBhbmQgbW9yZS5cclxuXHJcbiRsaW5lLWhlaWdodC1sZzogMS41O1xyXG4kbGluZS1oZWlnaHQtc206IDEuNTtcclxuXHJcbiRib3JkZXItd2lkdGg6IDFweDtcclxuJGJvcmRlci1jb2xvcjogJGdyYXktMzAwO1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcclxuJGJvcmRlci1yYWRpdXMtbWQ6IHJlbXkoMTIpO1xyXG4kYm9yZGVyLXJhZGl1cy1sZzogMi41cmVtO1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogMC4ycmVtO1xyXG5cclxuLy8gTDBcclxuJGJveC1zaGFkb3cteHM6IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XHJcbi8vIEwxXHJcbiRib3gtc2hhZG93LXNtOiAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggMHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDYpLFxyXG4gIDBweCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7XHJcbi8vIEwyXHJcbiRib3gtc2hhZG93OiAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMDQpLFxyXG4gIDBweCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjA0KTtcclxuLy8gTDNcclxuJGJveC1zaGFkb3ctbGc6IDBweCAxNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuLy8gTDRcclxuJGJveC1zaGFkb3cteGw6IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wNCksXHJcbiAgMHB4IDE2cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggMjRweCAzMnB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7XHJcblxyXG4kY29tcG9uZW50LWFjdGl2ZS1jb2xvcjogJHdoaXRlO1xyXG4kY29tcG9uZW50LWFjdGl2ZS1iZzogdGhlbWUtY29sb3IoJ3ByaW1hcnknKTtcclxuXHJcbiR0cmFuc2l0aW9uLWJhc2U6IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xyXG4kdHJhbnNpdGlvbi1mYWRlOiBvcGFjaXR5IDAuMTVzIGxpbmVhcjtcclxuJHRyYW5zaXRpb24tY29sbGFwc2U6IGhlaWdodCAwLjM1cyBlYXNlO1xyXG4kdHJhbnNpdGlvbi1tYXgtaGVpZ2h0OiBhbGwgMC42cyBlYXNlO1xyXG5cclxuLy8gVHlwb2dyYXBoeVxyXG4vL1xyXG4vLyBGb250LCBsaW5lLWhlaWdodCwgYW5kIGNvbG9yIGZvciBib2R5IHRleHQsIGhlYWRpbmdzLCBhbmQgbW9yZS5cclxuXHJcbiRmb250LWZhbWlseS1zYW5zLXNlcmlmOiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLFxyXG4gICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2UgIWRlZmF1bHQ7XHJcbiRmb250LWZhbWlseS1iYXNlOiAkZm9udC1mYW1pbHktc2Fucy1zZXJpZjtcclxuXHJcbiRmb250LXNpemUtYmFzZTogMXJlbTsgLy8gMTZweFxyXG4kZm9udC1zaXplLWxnOiAkZm9udC1zaXplLWJhc2UgKiAxLjI1ICFkZWZhdWx0OyAvLyAyMHB4XHJcbiRmb250LXNpemUtc206ICRmb250LXNpemUtYmFzZSAqIDAuODc1ICFkZWZhdWx0OyAvLyAxNHB4XHJcbiRmb250LXNpemUteHM6IHJlbXkoMTIpO1xyXG5cclxuJGZvbnQtd2VpZ2h0LWxpZ2h0ZXI6IGxpZ2h0ZXI7XHJcbiRmb250LXdlaWdodC1saWdodDogMzAwO1xyXG4kZm9udC13ZWlnaHQtbm9ybWFsOiA0MDA7XHJcbiRmb250LXdlaWdodC1ib2xkOiA1MDA7XHJcbiRmb250LXdlaWdodC1ib2xkZXI6IGJvbGRlcjtcclxuXHJcbiRmb250LXdlaWdodC1iYXNlOiAkZm9udC13ZWlnaHQtbm9ybWFsO1xyXG4kbGluZS1oZWlnaHQtYmFzZTogMS41O1xyXG5cclxuJGgxLWZvbnQtc2l6ZTogcmVteSgzMCk7XHJcbiRoMi1mb250LXNpemU6IHJlbXkoMjYpO1xyXG4kaDMtZm9udC1zaXplOiByZW15KDI0KTtcclxuJGg0LWZvbnQtc2l6ZTogcmVteSgyMik7XHJcbiRoNS1mb250LXNpemU6IHJlbXkoMjApO1xyXG4kaDYtZm9udC1zaXplOiByZW15KDE4KTtcclxuXHJcbiRoMS1mb250LXNpemVzOiAoXHJcbiAgeHM6IDMwcHgsXHJcbiAgc206IDM2cHgsXHJcbiAgbWQ6IDQ4cHgsXHJcbiAgbGc6IDQ4cHgsXHJcbiAgeGw6IDYwcHgsXHJcbik7XHJcblxyXG4vLyBoMiBzaXplc1xyXG4kaDItZm9udC1zaXplczogKFxyXG4gIHhzOiAyNnB4LFxyXG4gIHNtOiAzMHB4LFxyXG4gIG1kOiA0MHB4LFxyXG4gIGxnOiA0NHB4LFxyXG4gIHhsOiA1NHB4LFxyXG4pO1xyXG5cclxuLy8gaDMgc2l6ZXNcclxuJGgzLWZvbnQtc2l6ZXM6IChcclxuICB4czogMjRweCxcclxuICBzbTogMjZweCxcclxuICBtZDogMzJweCxcclxuICBsZzogMzZweCxcclxuICB4bDogNDRweCxcclxuKTtcclxuXHJcbi8vIGg0IHNpemVzXHJcbiRoNC1mb250LXNpemVzOiAoXHJcbiAgeHM6IDIycHgsXHJcbiAgc206IDI0cHgsXHJcbiAgbWQ6IDI0cHgsXHJcbiAgbGc6IDI4cHgsXHJcbiAgeGw6IDI4cHgsXHJcbik7XHJcblxyXG4vLyBoNSBzaXplc1xyXG4kaDUtZm9udC1zaXplczogKFxyXG4gIHhzOiAyMHB4LFxyXG4gIHNtOiAyMnB4LFxyXG4gIG1kOiAyMnB4LFxyXG4gIGxnOiAyNHB4LFxyXG4gIHhsOiAyNHB4LFxyXG4pO1xyXG5cclxuLy8gaDYgc2l6ZXNcclxuJGg2LWZvbnQtc2l6ZXM6IChcclxuICB4czogMThweCxcclxuICBzbTogMThweCxcclxuICBtZDogMThweCxcclxuICBsZzogMjBweCxcclxuICB4bDogMjBweCxcclxuKTtcclxuXHJcbiRoZWFkaW5ncy1tYXJnaW4tYm90dG9tOiAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiBudWxsO1xyXG4kaGVhZGluZ3MtZm9udC13ZWlnaHQ6IDUwMDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0LWxpZ2h0OiA0MDA7XHJcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS41O1xyXG4kaGVhZGluZ3MtY29sb3I6IG51bGw7XHJcblxyXG4kcDAtZm9udC1zaXplczogKFxyXG4gIHhzOiAxNnB4LFxyXG4gIHNtOiAxNnB4LFxyXG4gIG1kOiAxNnB4LFxyXG4gIGxnOiAxNnB4LFxyXG4gIHhsOiAxNnB4LFxyXG4pO1xyXG5cclxuJHAxLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTZweCxcclxuICBzbTogMTZweCxcclxuICBtZDogMThweCxcclxuICBsZzogMThweCxcclxuICB4bDogMThweCxcclxuKTtcclxuXHJcbiRwMi1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE0cHgsXHJcbiAgc206IDE0cHgsXHJcbiAgbWQ6IDE2cHgsXHJcbiAgbGc6IDE2cHgsXHJcbiAgeGw6IDE2cHgsXHJcbik7XHJcblxyXG4kcDMtZm9udC1zaXplczogKFxyXG4gIHhzOiAxMnB4LFxyXG4gIHNtOiAxMnB4LFxyXG4gIG1kOiAxNHB4LFxyXG4gIGxnOiAxNHB4LFxyXG4gIHhsOiAxNHB4LFxyXG4pO1xyXG5cclxuJHA0LWZvbnQtc2l6ZXM6IChcclxuICB4czogMTBweCxcclxuICBzbTogMTBweCxcclxuICBtZDogMTJweCxcclxuICBsZzogMTJweCxcclxuICB4bDogMTJweCxcclxuKTtcclxuXHJcbiRzbWFsbC1mb250LXNpemU6ICRmb250LXNpemUteHM7XHJcblxyXG4kdGV4dC1tdXRlZDogJGdyYXktNjAwO1xyXG5cclxuLy8gJGJsb2NrcXVvdGUtc21hbGwtY29sb3I6ICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkYmxvY2txdW90ZS1zbWFsbC1mb250LXNpemU6ICAkc21hbGwtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAkYmxvY2txdW90ZS1mb250LXNpemU6ICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAxLjI1ICFkZWZhdWx0O1xyXG5cclxuLy8gJGhyLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuLy8gJGhyLWJvcmRlci13aWR0aDogICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRtYXJrLXBhZGRpbmc6ICAgICAgICAgICAgICAgIC4yZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkZHQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuXHJcbi8vICRrYmQtYm94LXNoYWRvdzogICAgICAgICAgICAgIGluc2V0IDAgLS4xcmVtIDAgcmdiYSgkYmxhY2ssIC4yNSkgIWRlZmF1bHQ7XHJcbi8vICRuZXN0ZWQta2JkLWZvbnQtd2VpZ2h0OiAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtaW5saW5lLXBhZGRpbmc6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkbWFyay1iZzogICAgICAgICAgICAgICAgICAgICAjZmNmOGUzICFkZWZhdWx0O1xyXG5cclxuLy8gJGhyLW1hcmdpbi15OiAgICAgICAgICAgICAgICAgJHNwYWNlciAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFRhYmxlc1xyXG4vLyAvL1xyXG4vLyAvLyBDdXN0b21pemVzIHRoZSBgLnRhYmxlYCBjb21wb25lbnQgd2l0aCBiYXNpYyB2YWx1ZXMsIGVhY2ggdXNlZCBhY3Jvc3MgYWxsIHRhYmxlIHZhcmlhdGlvbnMuXHJcblxyXG4vLyAkdGFibGUtY2VsbC1wYWRkaW5nOiAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1jZWxsLXBhZGRpbmctc206ICAgICAgIC4zcmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWNvbG9yOiAgICAgICAgICAgICAgICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1iZzogICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1hY2NlbnQtYmc6ICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMDUpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtaG92ZXItY29sb3I6ICAgICAgICAgICAkdGFibGUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ob3Zlci1iZzogICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWFjdGl2ZS1iZzogICAgICAgICAgICAgJHRhYmxlLWhvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWJvcmRlci13aWR0aDogICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWJvcmRlci1jb2xvcjogICAgICAgICAgJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1oZWFkLWJnOiAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWhlYWQtY29sb3I6ICAgICAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWRhcmstY29sb3I6ICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1iZzogICAgICAgICAgICAgICAkZ3JheS04MDAgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWFjY2VudC1iZzogICAgICAgIHJnYmEoJHdoaXRlLCAuMDUpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1ob3Zlci1jb2xvcjogICAgICAkdGFibGUtZGFyay1jb2xvciAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstaG92ZXItYmc6ICAgICAgICAgcmdiYSgkd2hpdGUsIC4wNzUpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1ib3JkZXItY29sb3I6ICAgICBsaWdodGVuKCR0YWJsZS1kYXJrLWJnLCA3LjUlKSAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1zdHJpcGVkLW9yZGVyOiAgICAgICAgIG9kZCAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1jYXB0aW9uLWNvbG9yOiAgICAgICAgICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWJnLWxldmVsOiAgICAgICAgICAgICAgLTkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ib3JkZXItbGV2ZWw6ICAgICAgICAgIC02ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQnV0dG9ucyArIEZvcm1zXHJcbi8vIC8vXHJcbi8vIC8vIFNoYXJlZCB2YXJpYWJsZXMgdGhhdCBhcmUgcmVhc3NpZ25lZCB0byBgJGlucHV0LWAgYW5kIGAkYnRuLWAgc3BlY2lmaWMgdmFyaWFibGVzLlxyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXk6IDFyZW07XHJcbiRpbnB1dC1idG4tcGFkZGluZy14OiAxLjc1cmVtO1xyXG4kaW5wdXQtYnRuLWZvbnQtZmFtaWx5OiBudWxsO1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0OiAxLjU7XHJcblxyXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiByZW15KDEpO1xyXG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yOiAkcHJpbWFyeTtcclxuJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuMjVyZW07XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAxLjJyZW07XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAkZm9udC1zaXplLWJhc2U7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbTtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LWxnOiAkaW5wdXQtYnRuLXBhZGRpbmcteTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc6IDIuNXJlbTtcclxuJGlucHV0LWJ0bi1mb250LXNpemUtbGc6ICRmb250LXNpemUtYmFzZTtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZzogJGlucHV0LWJ0bi1saW5lLWhlaWdodDtcclxuXHJcbiRpbnB1dC1idG4tYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoO1xyXG5cclxuLy8gQnV0dG9uc1xyXG4vL1xyXG4vLyBGb3IgZWFjaCBvZiBCb290c3RyYXAncyBidXR0b25zLCBkZWZpbmUgdGV4dCwgYmFja2dyb3VuZCwgYW5kIGJvcmRlciBjb2xvci5cclxuXHJcbiRidG4tcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteTtcclxuJGJ0bi1wYWRkaW5nLXg6ICRpbnB1dC1idG4tcGFkZGluZy14O1xyXG4kYnRuLWZvbnQtZmFtaWx5OiAkaW5wdXQtYnRuLWZvbnQtZmFtaWx5O1xyXG4kYnRuLWZvbnQtc2l6ZTogJGlucHV0LWJ0bi1mb250LXNpemU7XHJcbiRidG4tbGluZS1oZWlnaHQ6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQ7XHJcbiRidG4td2hpdGUtc3BhY2U6IG51bGw7IC8vIFNldCB0byBgbm93cmFwYCB0byBwcmV2ZW50IHRleHQgd3JhcHBpbmdcclxuXHJcbiRidG4tcGFkZGluZy15LXNtOiAkaW5wdXQtYnRuLXBhZGRpbmcteS1zbTtcclxuJGJ0bi1wYWRkaW5nLXgtc206ICRpbnB1dC1idG4tcGFkZGluZy14LXNtO1xyXG4kYnRuLWZvbnQtc2l6ZS1zbTogJGlucHV0LWJ0bi1mb250LXNpemUtc207XHJcbiRidG4tbGluZS1oZWlnaHQtc206ICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc207XHJcblxyXG4kYnRuLXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXktbGc7XHJcbiRidG4tcGFkZGluZy14LWxnOiAkaW5wdXQtYnRuLXBhZGRpbmcteC1sZztcclxuJGJ0bi1mb250LXNpemUtbGc6ICRpbnB1dC1idG4tZm9udC1zaXplLWxnO1xyXG4kYnRuLWxpbmUtaGVpZ2h0LWxnOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnO1xyXG5cclxuJGJ0bi1ib3JkZXItd2lkdGg6ICRpbnB1dC1idG4tYm9yZGVyLXdpZHRoO1xyXG5cclxuJGJ0bi1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LW5vcm1hbDtcclxuJGJ0bi1ib3gtc2hhZG93OiBub25lO1xyXG4kYnRuLWZvY3VzLXdpZHRoOiAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoO1xyXG4kYnRuLWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdztcclxuJGJ0bi1kaXNhYmxlZC1vcGFjaXR5OiAwLjU7XHJcbiRidG4tYWN0aXZlLWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4vLyAkYnRuLWxpbmstZGlzYWJsZWQtY29sb3I6ICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnRuLWJsb2NrLXNwYWNpbmcteTogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEFsbG93cyBmb3IgY3VzdG9taXppbmcgYnV0dG9uIHJhZGl1cyBpbmRlcGVuZGVudGx5IGZyb20gZ2xvYmFsIGJvcmRlciByYWRpdXNcclxuJGJ0bi1ib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4kYnRuLWJvcmRlci1yYWRpdXMtbGc6IDEycHg7XHJcbiRidG4tYm9yZGVyLXJhZGl1cy1zbTogOHB4O1xyXG5cclxuJGJ0bi10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbi1iYXNlO1xyXG5cclxuLy8gLy8gRm9ybXNcclxuXHJcbi8vICRsYWJlbC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15O1xyXG4kaW5wdXQtcGFkZGluZy14OiByZW15KDIwKTtcclxuJGlucHV0LWZvbnQtZmFtaWx5OiAkaW5wdXQtYnRuLWZvbnQtZmFtaWx5O1xyXG4kaW5wdXQtZm9udC1zaXplOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZTtcclxuJGlucHV0LWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYmFzZTtcclxuJGlucHV0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0O1xyXG5cclxuLy8gJGlucHV0LXBhZGRpbmcteS1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtcGFkZGluZy14LXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1mb250LXNpemUtc206ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWxpbmUtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XHJcblxyXG4vLyAkaW5wdXQtcGFkZGluZy15LWxnOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteC1sZyAhZGVmYXVsdDtcclxuJGlucHV0LWZvbnQtc2l6ZS1sZzogJGlucHV0LWJ0bi1mb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1saW5lLWhlaWdodC1sZzogICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJnOiAkd2hpdGU7XHJcbiRpbnB1dC1kaXNhYmxlZC1iZzogJGdyYXktMjAwO1xyXG5cclxuJGlucHV0LWNvbG9yOiAkZGFyaztcclxuJGlucHV0LWJvcmRlci1jb2xvcjogJGdyYXktNDAwO1xyXG4kaW5wdXQtYm9yZGVyLXdpZHRoOiAkaW5wdXQtYnRuLWJvcmRlci13aWR0aDtcclxuJGlucHV0LWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4kaW5wdXQtYm9yZGVyLXJhZGl1czogOHB4O1xyXG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1sZzogJGlucHV0LWJvcmRlci1yYWRpdXM7XHJcbiRpbnB1dC1ib3JkZXItcmFkaXVzLXNtOiAkaW5wdXQtYm9yZGVyLXJhZGl1cztcclxuXHJcbiRpbnB1dC1mb2N1cy1iZzogJHdoaXRlO1xyXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAkcHJpbWFyeTtcclxuJGlucHV0LWZvY3VzLWNvbG9yOiAkaW5wdXQtY29sb3I7XHJcbiRpbnB1dC1mb2N1cy13aWR0aDogJGlucHV0LWJ0bi1mb2N1cy13aWR0aDtcclxuJGlucHV0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdztcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogJGdyYXktNjAwO1xyXG4kaW5wdXQtcGxhaW50ZXh0LWNvbG9yOiAkYm9keS1jb2xvcjtcclxuXHJcbi8vICRpbnB1dC1oZWlnaHQtYm9yZGVyOiAgICAgICAgICAgICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICogMiAhZGVmYXVsdDtcclxuXHJcbi8vICRpbnB1dC1oZWlnaHQtaW5uZXI6ICAgICAgICAgICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0ICogMWVtLCAkaW5wdXQtcGFkZGluZy15ICogMikgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1oZWlnaHQtaW5uZXItaGFsZjogICAgICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0ICogLjVlbSwgJGlucHV0LXBhZGRpbmcteSkgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1oZWlnaHQtaW5uZXItcXVhcnRlcjogICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0ICogLjI1ZW0sICRpbnB1dC1wYWRkaW5nLXkgLyAyKSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1oZWlnaHQ6IDU2cHg7XHJcbi8vICRpbnB1dC1oZWlnaHQtc206ICAgICAgICAgICAgICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0LXNtICogMWVtLCBhZGQoJGlucHV0LXBhZGRpbmcteS1zbSAqIDIsICRpbnB1dC1oZWlnaHQtYm9yZGVyLCBmYWxzZSkpICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LWxnOiAgICAgICAgICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodC1sZyAqIDFlbSwgYWRkKCRpbnB1dC1wYWRkaW5nLXktbGcgKiAyLCAkaW5wdXQtaGVpZ2h0LWJvcmRlciwgZmFsc2UpKSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbi1iYXNlO1xyXG5cclxuLy8gJGZvcm0tdGV4dC1tYXJnaW4tdG9wOiAgICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWNoZWNrLWlucHV0LWd1dHRlcjogICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1jaGVjay1pbnB1dC1tYXJnaW4teTogICAgICAgICAgICAgLjNyZW0gIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWNoZWNrLWlucHV0LW1hcmdpbi14OiAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS1jaGVjay1pbmxpbmUtbWFyZ2luLXg6ICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1jaGVjay1pbmxpbmUtaW5wdXQtbWFyZ2luLXg6ICAgICAgLjMxMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS1ncmlkLWd1dHRlci13aWR0aDogICAgICAgICAgICAgICAgMTBweCAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZ3JvdXAtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkaW5wdXQtZ3JvdXAtYWRkb24tY29sb3I6ICAgICAgICAgICAgICAgJGlucHV0LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtZ3JvdXAtYWRkb24tYmc6ICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtZ3JvdXAtYWRkb24tYm9yZGVyLWNvbG9yOiAgICAgICAgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tZm9ybXMtdHJhbnNpdGlvbjogICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtZ3V0dGVyOiAgICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1zcGFjZXIteDogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtY3Vyc29yOiAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZTogICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJnOiAgICAgICAgICAgJGlucHV0LWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1iZy1zaXplOiAgICAgIDUwJSA1MCUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm94LXNoYWRvdzogICAkaW5wdXQtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItY29sb3I6ICRncmF5LTUwMCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItd2lkdGg6ICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtbGFiZWwtY29sb3I6ICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZGlzYWJsZWQtYmc6ICAgICAgICAgICRpbnB1dC1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWxhYmVsLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yOiAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1iZzogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtZGlzYWJsZWQtYmc6ICByZ2JhKHRoZW1lLWNvbG9yKFwicHJpbWFyeVwiKSwgLjUpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYm94LXNoYWRvdzogICBub25lICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYm9yZGVyLWNvbG9yOiAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWZvY3VzLWJveC1zaGFkb3c6ICAgICAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1mb2N1cy1ib3JkZXItY29sb3I6ICAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWNvbG9yOiAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1iZzogICAgICAgICAgICBsaWdodGVuKCRjb21wb25lbnQtYWN0aXZlLWJnLCAzNSUpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1ib3gtc2hhZG93OiAgICBub25lICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1ib3JkZXItY29sb3I6ICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pY29uLWNoZWNrZWQ6ICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGZpbGw9JyN7JGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yfScgZD0nTTYuNTY0Ljc1bC0zLjU5IDMuNjEyLTEuNTM4LTEuNTVMMCA0LjI2bDIuOTc0IDIuOTlMOCAyLjE5M3onLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtY29sb3I6ICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWljb24taW5kZXRlcm1pbmF0ZTogICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzQnIHZpZXdCb3g9JzAgMCA0IDQnPjxwYXRoIHN0cm9rZT0nI3skY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWNvbG9yfScgZD0nTTAgMmg0Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJveC1zaGFkb3c6ICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1ib3JkZXItY29sb3I6ICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXJhZGlvLWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAgICA1MCUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFkaW8taW5kaWNhdG9yLWljb24tY2hlY2tlZDogICAgICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyB2aWV3Qm94PSctNCAtNCA4IDgnPjxjaXJjbGUgcj0nMycgZmlsbD0nI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3J9Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1zd2l0Y2gtd2lkdGg6ICAgICAgICAgICAgICAgICAgICAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplICogMS43NSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1zd2l0Y2gtaW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplIC8gMiAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1zd2l0Y2gtaW5kaWNhdG9yLXNpemU6ICAgICAgICAgICAgICAgICAgc3VidHJhY3QoJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplLCAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci13aWR0aCAqIDQpICFkZWZhdWx0O1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtcGFkZGluZy15O1xyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXg6IDEuMjVyZW07XHJcbiRjdXN0b20tc2VsZWN0LWZvbnQtZmFtaWx5OiAkaW5wdXQtZm9udC1mYW1pbHkgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZvbnQtc2l6ZTogJGlucHV0LWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0OiAkaW5wdXQtaGVpZ2h0O1xyXG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZzogMS4yNXJlbTsgLy8gRXh0cmEgcGFkZGluZyB0byBhY2NvdW50IGZvciB0aGUgcHJlc2VuY2Ugb2YgdGhlIGJhY2tncm91bmQtaW1hZ2UgYmFzZWQgaW5kaWNhdG9yXHJcbiRjdXN0b20tc2VsZWN0LWZvbnQtd2VpZ2h0OiAkaW5wdXQtZm9udC13ZWlnaHQgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtbGluZS1oZWlnaHQgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWNvbG9yOiAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWRpc2FibGVkLWNvbG9yOiAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJnOiAkaW5wdXQtYmcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWRpc2FibGVkLWJnOiAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJnLXNpemU6IDhweCAxMHB4ICFkZWZhdWx0OyAvLyBJbiBwaXhlbHMgYmVjYXVzZSBpbWFnZSBkaW1lbnNpb25zXHJcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1jb2xvcjogJGdyYXktODAwICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3I6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzQnIGhlaWdodD0nNScgdmlld0JveD0nMCAwIDQgNSc+PHBhdGggZmlsbD0nI3skY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBkPSdNMiAwTDAgMmg0em0wIDVMMCAzaDR6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1iYWNrZ3JvdW5kOiBlc2NhcGUtc3ZnKCRjdXN0b20tc2VsZWN0LWluZGljYXRvcikgbm8tcmVwZWF0IHJpZ2h0XHJcbiAgJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14IGNlbnRlciAvICRjdXN0b20tc2VsZWN0LWJnLXNpemUgIWRlZmF1bHQ7IC8vIFVzZWQgc28gd2UgY2FuIGhhdmUgbXVsdGlwbGUgYmFja2dyb3VuZCBlbGVtZW50cyAoZS5nLiwgYXJyb3cgYW5kIGZlZWRiYWNrIGljb24pXHJcblxyXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmctcmlnaHQ6IGFkZChcclxuICAxZW0gKiAwLjc1LFxyXG4gICgyICogJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15ICogMC43NSkgKyAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggK1xyXG4gICAgJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmdcclxuKSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1wb3NpdGlvbjogY2VudGVyIHJpZ2h0XHJcbiAgKCRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCArICRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nKSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1zaXplOiAkaW5wdXQtaGVpZ2h0LWlubmVyLWhhbGZcclxuICAkaW5wdXQtaGVpZ2h0LWlubmVyLWhhbGYgIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItd2lkdGg6ICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRjdXN0b20tc2VsZWN0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKCRibGFjaywgMC4wNzUpICFkZWZhdWx0O1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtYm9yZGVyLWNvbG9yOiAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yO1xyXG4kY3VzdG9tLXNlbGVjdC1mb2N1cy13aWR0aDogJGlucHV0LWZvY3VzLXdpZHRoICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb2N1cy1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15LXNtOiAkaW5wdXQtcGFkZGluZy15LXNtICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXgtc206ICRpbnB1dC1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZvbnQtc2l6ZS1zbTogJGlucHV0LWZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0LXNtOiAkaW5wdXQtaGVpZ2h0LXNtICFkZWZhdWx0O1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy15LWxnOiAkaW5wdXQtcGFkZGluZy15LWxnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZvbnQtc2l6ZS1sZzogJGlucHV0LWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtaGVpZ2h0LWxnOiAkaW5wdXQtaGVpZ2h0LWxnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay13aWR0aDogICAgICAgICAgMTAwJSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1oZWlnaHQ6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stY3Vyc29yOiAgICAgICAgIHBvaW50ZXIgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stYmc6ICAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1ib3JkZXItcmFkaXVzOiAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1ib3gtc2hhZG93OiAgICAgaW5zZXQgMCAuMjVyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLXdpZHRoOiAgICAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWhlaWdodDogICAgICAgICAgICAgICAgICAkY3VzdG9tLXJhbmdlLXRodW1iLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJnOiAgICAgICAgICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1ib3JkZXI6ICAgICAgICAgICAgICAgICAgMCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1ib3gtc2hhZG93OiAgICAgICAgICAgICAgMCAuMXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93OiAgICAgICAgMCAwIDAgMXB4ICRib2R5LWJnLCAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93LXdpZHRoOiAgJGlucHV0LWZvY3VzLXdpZHRoICFkZWZhdWx0OyAvLyBGb3IgZm9jdXMgYm94IHNoYWRvdyBpc3N1ZSBpbiBJRS9FZGdlXHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYWN0aXZlLWJnOiAgICAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDM1JSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItZGlzYWJsZWQtYmc6ICAgICAgICAgICAgICRncmF5LTUwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tZmlsZS1oZWlnaHQ6ICAgICAgICAgICAgICAgICRpbnB1dC1oZWlnaHQgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1oZWlnaHQtaW5uZXI6ICAgICAgICAgICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1mb2N1cy1ib3JkZXItY29sb3I6ICAgICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1mb2N1cy1ib3gtc2hhZG93OiAgICAgICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZGlzYWJsZWQtYmc6ICAgICAgICAgICAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWZpbGUtcGFkZGluZy15OiAgICAgICAgICAgICAkaW5wdXQtcGFkZGluZy15ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtcGFkZGluZy14OiAgICAgICAgICAgICAkaW5wdXQtcGFkZGluZy14ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtbGluZS1oZWlnaHQ6ICAgICAgICAgICAkaW5wdXQtbGluZS1oZWlnaHQgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1mb250LWZhbWlseTogICAgICAgICAgICRpbnB1dC1mb250LWZhbWlseSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgJGlucHV0LWZvbnQtd2VpZ2h0ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtY29sb3I6ICAgICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1iZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJvcmRlci13aWR0aDogICAgICAgICAgJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJvcmRlci1jb2xvcjogICAgICAgICAgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGlucHV0LWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3gtc2hhZG93OiAgICAgICAgICAgICRpbnB1dC1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYnV0dG9uLWNvbG9yOiAgICAgICAgICAkY3VzdG9tLWZpbGUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1idXR0b24tYmc6ICAgICAgICAgICAgICRpbnB1dC1ncm91cC1hZGRvbi1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLXRleHQ6IChcclxuLy8gICBlbjogXCJCcm93c2VcIlxyXG4vLyApICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gRm9ybSB2YWxpZGF0aW9uXHJcblxyXG4vLyAkZm9ybS1mZWVkYmFjay1tYXJnaW4tdG9wOiAgICAgICAgICAkZm9ybS10ZXh0LW1hcmdpbi10b3AgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWZvbnQtc2l6ZTogICAgICAgICAgICRzbWFsbC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAgICAgICAgIHRoZW1lLWNvbG9yKFwic3VjY2Vzc1wiKSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogICAgICAgdGhlbWUtY29sb3IoXCJkYW5nZXJcIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkLWNvbG9yOiAgICAkZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZDogICAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBmaWxsPScjeyRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQtY29sb3J9JyBkPSdNMi4zIDYuNzNMLjYgNC41M2MtLjQtMS4wNC40Ni0xLjQgMS4xLS44bDEuMSAxLjQgMy40LTMuOGMuNi0uNjMgMS42LS4yNyAxLjIuN2wtNCA0LjZjLS40My41LS44LjQtMS4xLjF6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3I6ICAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQ6ICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZC1jb2xvcn0nIHZpZXdCb3g9JzAgMCAxMiAxMic+PGNpcmNsZSBjeD0nNicgY3k9JzYnIHI9JzQuNScvPjxwYXRoIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIGQ9J001LjggMy42aC40TDYgNi41eicvPjxjaXJjbGUgY3g9JzYnIGN5PSc4LjInIHI9Jy42JyBmaWxsPScjeyRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZC1jb2xvcn0nIHN0cm9rZT0nbm9uZScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLXZhbGlkYXRpb24tc3RhdGVzOiAoKSAhZGVmYXVsdDtcclxuLy8gLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcclxuLy8gJGZvcm0tdmFsaWRhdGlvbi1zdGF0ZXM6IG1hcC1tZXJnZShcclxuLy8gICAoXHJcbi8vICAgICBcInZhbGlkXCI6IChcclxuLy8gICAgICAgXCJjb2xvclwiOiAkZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvcixcclxuLy8gICAgICAgXCJpY29uXCI6ICRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWRcclxuLy8gICAgICksXHJcbi8vICAgICBcImludmFsaWRcIjogKFxyXG4vLyAgICAgICBcImNvbG9yXCI6ICRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3IsXHJcbi8vICAgICAgIFwiaWNvblwiOiAkZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWRcclxuLy8gICAgICksXHJcbi8vICAgKSxcclxuLy8gICAkZm9ybS12YWxpZGF0aW9uLXN0YXRlc1xyXG4vLyApO1xyXG5cclxuLy8gLy8gWi1pbmRleCBtYXN0ZXIgbGlzdFxyXG4vLyAvL1xyXG4vLyAvLyBXYXJuaW5nOiBBdm9pZCBjdXN0b21pemluZyB0aGVzZSB2YWx1ZXMuIFRoZXkncmUgdXNlZCBmb3IgYSBiaXJkJ3MgZXllIHZpZXdcclxuLy8gLy8gb2YgY29tcG9uZW50cyBkZXBlbmRlbnQgb24gdGhlIHotYXhpcyBhbmQgYXJlIGRlc2lnbmVkIHRvIGFsbCB3b3JrIHRvZ2V0aGVyLlxyXG5cclxuLy8gJHppbmRleC1kcm9wZG93bjogICAgICAgICAgICAgICAgICAgMTAwMCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1zdGlja3k6ICAgICAgICAgICAgICAgICAgICAgMTAyMCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1maXhlZDogICAgICAgICAgICAgICAgICAgICAgMTAzMCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1tb2RhbC1iYWNrZHJvcDogICAgICAgICAgICAgMTA0MCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1tb2RhbDogICAgICAgICAgICAgICAgICAgICAgMTA1MCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1wb3BvdmVyOiAgICAgICAgICAgICAgICAgICAgMTA2MCAhZGVmYXVsdDtcclxuLy8gJHppbmRleC10b29sdGlwOiAgICAgICAgICAgICAgICAgICAgMTA3MCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIE5hdnNcclxuXHJcbi8vICRuYXYtbGluay1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkbmF2LWxpbmstcGFkZGluZy14OiAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1ob3Zlci1ib3JkZXItY29sb3I6ICAkZ3JheS0yMDAgJGdyYXktMjAwICRuYXYtdGFicy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWFjdGl2ZS1jb2xvcjogICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAgICAgICAgICAgJGJvZHktYmcgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRncmF5LTMwMCAkZ3JheS0zMDAgJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdi1waWxscy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRuYXYtcGlsbHMtbGluay1hY3RpdmUtY29sb3I6ICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2LXBpbGxzLWxpbmstYWN0aXZlLWJnOiAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXYtZGl2aWRlci1jb2xvcjogICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJG5hdi1kaXZpZGVyLW1hcmdpbi15OiAgICAgICAgICAgICAgJHNwYWNlciAvIDIgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBOYXZiYXJcclxuXHJcbi8vICRuYXZiYXItcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICRzcGFjZXIgLyAyICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1uYXYtbGluay1wYWRkaW5nLXg6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWJyYW5kLWZvbnQtc2l6ZTogICAgICAgICAgICAkZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4vLyAvLyBDb21wdXRlIHRoZSBuYXZiYXItYnJhbmQgcGFkZGluZy15IHNvIHRoZSBuYXZiYXItYnJhbmQgd2lsbCBoYXZlIHRoZSBzYW1lIGhlaWdodCBhcyBuYXZiYXItdGV4dCBhbmQgbmF2LWxpbmtcclxuLy8gJG5hdi1saW5rLWhlaWdodDogICAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogJGxpbmUtaGVpZ2h0LWJhc2UgKyAkbmF2LWxpbmstcGFkZGluZy15ICogMiAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1icmFuZC1oZWlnaHQ6ICAgICAgICAgICAgICAgJG5hdmJhci1icmFuZC1mb250LXNpemUgKiAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1icmFuZC1wYWRkaW5nLXk6ICAgICAgICAgICAgKCRuYXYtbGluay1oZWlnaHQgLSAkbmF2YmFyLWJyYW5kLWhlaWdodCkgLyAyICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci10b2dnbGVyLXBhZGRpbmcteTogICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXRvZ2dsZXItcGFkZGluZy14OiAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItdG9nZ2xlci1mb250LXNpemU6ICAgICAgICAgICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItdG9nZ2xlci1ib3JkZXItcmFkaXVzOiAgICAgICRidG4tYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItZGFyay1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoJHdoaXRlLCAuNSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1ob3Zlci1jb2xvcjogICAgICAgICAgIHJnYmEoJHdoaXRlLCAuNzUpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstYWN0aXZlLWNvbG9yOiAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1kaXNhYmxlZC1jb2xvcjogICAgICAgIHJnYmEoJHdoaXRlLCAuMjUpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstdG9nZ2xlci1pY29uLWJnOiAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMCcgaGVpZ2h0PSczMCcgdmlld0JveD0nMCAwIDMwIDMwJz48cGF0aCBzdHJva2U9JyN7JG5hdmJhci1kYXJrLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIHN0cm9rZS13aWR0aD0nMicgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay10b2dnbGVyLWJvcmRlci1jb2xvcjogIHJnYmEoJHdoaXRlLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWxpZ2h0LWNvbG9yOiAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjUpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAgICAgICAgICByZ2JhKCRibGFjaywgLjcpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogICAgICAgICByZ2JhKCRibGFjaywgLjkpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiAgICAgICByZ2JhKCRibGFjaywgLjMpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LXRvZ2dsZXItaWNvbi1iZzogICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMCcgaGVpZ2h0PSczMCcgdmlld0JveD0nMCAwIDMwIDMwJz48cGF0aCBzdHJva2U9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBzdHJva2Utd2lkdGg9JzInIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LXRvZ2dsZXItYm9yZGVyLWNvbG9yOiByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1saWdodC10aGVtZS1jb2xvcjogICAgICAgICAgICAgICAgJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtYnJhbmQtaG92ZXItY29sb3I6ICAgICAgICAgICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstdGhlbWUtY29sb3I6ICAgICAgICAgICAgICAgICAkbmF2YmFyLWRhcmstYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstYnJhbmQtaG92ZXItY29sb3I6ICAgICAgICAgICAkbmF2YmFyLWRhcmstYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gRHJvcGRvd25zXHJcbi8vXHJcbi8vIERyb3Bkb3duIG1lbnUgY29udGFpbmVyIGFuZCBjb250ZW50cy5cclxuXHJcbiRkcm9wZG93bi1taW4td2lkdGg6IDEwcmVtO1xyXG4kZHJvcGRvd24tcGFkZGluZy15OiAwLjVyZW07XHJcbiRkcm9wZG93bi1zcGFjZXI6IDAuMTI1cmVtO1xyXG4kZHJvcGRvd24tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7XHJcbiRkcm9wZG93bi1jb2xvcjogJGJvZHktY29sb3I7XHJcbiRkcm9wZG93bi1iZzogJHdoaXRlO1xyXG4kZHJvcGRvd24tYm9yZGVyLWNvbG9yOiByZ2JhKCRibGFjaywgMC4xNSk7XHJcbiRkcm9wZG93bi1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJGRyb3Bkb3duLWJvcmRlci13aWR0aDogJGJvcmRlci13aWR0aDtcclxuJGRyb3Bkb3duLWlubmVyLWJvcmRlci1yYWRpdXM6IHN1YnRyYWN0KFxyXG4gICRkcm9wZG93bi1ib3JkZXItcmFkaXVzLFxyXG4gICRkcm9wZG93bi1ib3JkZXItd2lkdGhcclxuKTtcclxuJGRyb3Bkb3duLWRpdmlkZXItYmc6ICRncmF5LTIwMDtcclxuJGRyb3Bkb3duLWRpdmlkZXItbWFyZ2luLXk6ICRuYXYtZGl2aWRlci1tYXJnaW4teTtcclxuJGRyb3Bkb3duLWJveC1zaGFkb3c6IDAgMC41cmVtIDFyZW0gcmdiYSgkYmxhY2ssIDAuMTc1KTtcclxuXHJcbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkZ3JheS0yMDA7XHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWNvbG9yOiBkYXJrZW4oJGdyYXktMjAwLCA1JSk7XHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiAkZ3JheS0xMDA7XHJcblxyXG4kZHJvcGRvd24tbGluay1hY3RpdmUtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yO1xyXG4kZHJvcGRvd24tbGluay1hY3RpdmUtYmc6ICRjb21wb25lbnQtYWN0aXZlLWJnO1xyXG5cclxuJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I6ICRncmF5LTYwMDtcclxuXHJcbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteTogMC4yNXJlbTtcclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14OiAxLjVyZW07XHJcblxyXG4kZHJvcGRvd24taGVhZGVyLWNvbG9yOiAkZ3JheS02MDA7XHJcblxyXG4vLyAvLyBQYWdpbmF0aW9uXHJcblxyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXk6IDAuNnJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAwLjc1cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktc206IDAuMjVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1zbTogMC41cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktbGc6IDAuNzVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1sZzogMS41cmVtO1xyXG4kcGFnaW5hdGlvbi1saW5lLWhlaWdodDogMS4yNTtcclxuXHJcbiRwYWdpbmF0aW9uLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRwYWdpbmF0aW9uLWJnOiAkd2hpdGU7XHJcbiRwYWdpbmF0aW9uLWJvcmRlci13aWR0aDogJGJvcmRlci13aWR0aDtcclxuJHBhZ2luYXRpb24tYm9yZGVyLWNvbG9yOiAkZ3JheS04MDA7XHJcblxyXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lO1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1vdXRsaW5lOiAwO1xyXG5cclxuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRsaW5rLWhvdmVyLWNvbG9yO1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogJGdyYXktMjAwO1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1ib3JkZXItY29sb3I6ICRncmF5LTgwMDtcclxuXHJcbiRwYWdpbmF0aW9uLWFjdGl2ZS1jb2xvcjogJGdyYXktNjAwO1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYmc6ICRncmF5LTgwMDtcclxuJHBhZ2luYXRpb24tYWN0aXZlLWJvcmRlci1jb2xvcjogJGdyYXktODAwO1xyXG5cclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3I6ICRncmF5LTYwMDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYmc6ICR3aGl0ZTtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDA7XHJcblxyXG4vLyAvLyBKdW1ib3Ryb25cclxuXHJcbi8vICRqdW1ib3Ryb24tcGFkZGluZzogICAgICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XHJcbi8vICRqdW1ib3Ryb24tY29sb3I6ICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRqdW1ib3Ryb24tYmc6ICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENhcmRzXHJcblxyXG4vLyAkY2FyZC1zcGFjZXIteTogICAgICAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjYXJkLXNwYWNlci14OiAgICAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJvcmRlci13aWR0aDogICAgICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjEyNSkgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWlubmVyLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIHN1YnRyYWN0KCRjYXJkLWJvcmRlci1yYWRpdXMsICRjYXJkLWJvcmRlci13aWR0aCkgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNhcC1iZzogICAgICAgICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMDMpICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jYXAtY29sb3I6ICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcmQtZ3JvdXAtbWFyZ2luOiAgICAgICAgICAgICAgICAgJGdyaWQtZ3V0dGVyLXdpZHRoIC8gMiAhZGVmYXVsdDtcclxuLy8gJGNhcmQtZGVjay1tYXJnaW46ICAgICAgICAgICAgICAgICAgJGNhcmQtZ3JvdXAtbWFyZ2luICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcmQtY29sdW1ucy1jb3VudDogICAgICAgICAgICAgICAgMyAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY29sdW1ucy1nYXA6ICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY29sdW1ucy1tYXJnaW46ICAgICAgICAgICAgICAgJGNhcmQtc3BhY2VyLXkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBUb29sdGlwc1xyXG5cclxuLy8gJHRvb2x0aXAtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgMjAwcHggIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtb3BhY2l0eTogICAgICAgICAgICAgICAgICAgLjkgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLXBhZGRpbmcteTogICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLW1hcmdpbjogICAgICAgICAgICAgICAgICAgIDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdG9vbHRpcC1hcnJvdy13aWR0aDogICAgICAgICAgICAgICAuOHJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYXJyb3ctaGVpZ2h0OiAgICAgICAgICAgICAgLjRyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICR0b29sdGlwLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gRm9ybSB0b29sdGlwcyBtdXN0IGNvbWUgYWZ0ZXIgcmVndWxhciB0b29sdGlwc1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLXBhZGRpbmcteTogICAgICR0b29sdGlwLXBhZGRpbmcteSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1wYWRkaW5nLXg6ICAgICAkdG9vbHRpcC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtZm9udC1zaXplOiAgICAgJHRvb2x0aXAtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLWxpbmUtaGVpZ2h0OiAgICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLW9wYWNpdHk6ICAgICAgICR0b29sdGlwLW9wYWNpdHkgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtYm9yZGVyLXJhZGl1czogJHRvb2x0aXAtYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFBvcG92ZXJzXHJcblxyXG4kcG9wb3Zlci1mb250LXNpemU6ICRmb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLW1heC13aWR0aDogMjQ2cHggIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJvcmRlci13aWR0aDogMDtcclxuJHBvcG92ZXItYm9yZGVyLWNvbG9yOiByZ2JhKCRibGFjaywgMC4yKSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWlubmVyLWJvcmRlci1yYWRpdXM6IHN1YnRyYWN0KFxyXG4gICRwb3BvdmVyLWJvcmRlci1yYWRpdXMsXHJcbiAgJHBvcG92ZXItYm9yZGVyLXdpZHRoXHJcbikgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJveC1zaGFkb3c6ICRib3gtc2hhZG93LXhsICFkZWZhdWx0O1xyXG5cclxuLy8gJHBvcG92ZXItaGVhZGVyLWJnOiAgICAgICAgICAgICAgICAgZGFya2VuKCRwb3BvdmVyLWJnLCAzJSkgIWRlZmF1bHQ7XHJcbi8vICRwb3BvdmVyLWhlYWRlci1jb2xvcjogICAgICAgICAgICAgICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogMC43NXJlbTtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMXJlbTtcclxuXHJcbi8vICRwb3BvdmVyLWJvZHktY29sb3I6ICAgICAgICAgICAgICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteTogJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTtcclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXg6ICRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXg7XHJcblxyXG4vLyAkcG9wb3Zlci1hcnJvdy13aWR0aDogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkcG9wb3Zlci1hcnJvdy1oZWlnaHQ6ICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJHBvcG92ZXItYXJyb3ctY29sb3I6ICAgICAgICAgICAgICAgJHBvcG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkcG9wb3Zlci1hcnJvdy1vdXRlci1jb2xvcjogICAgICAgICBmYWRlLWluKCRwb3BvdmVyLWJvcmRlci1jb2xvciwgLjA1KSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFRvYXN0c1xyXG5cclxuLy8gJHRvYXN0LW1heC13aWR0aDogICAgICAgICAgICAgICAgICAgMzUwcHggIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAuODc1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYmFja2dyb3VuZC1jb2xvcjogICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjg1KSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJvcmRlci13aWR0aDogICAgICAgICAgICAgICAgMXB4ICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgICByZ2JhKDAsIDAsIDAsIC4xKSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm94LXNoYWRvdzogICAgICAgICAgICAgICAgICAwIC4yNXJlbSAuNzVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICR0b2FzdC1oZWFkZXItY29sb3I6ICAgICAgICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yOiAgICAgcmdiYSgkd2hpdGUsIC44NSkgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1oZWFkZXItYm9yZGVyLWNvbG9yOiAgICAgICAgIHJnYmEoMCwgMCwgMCwgLjA1KSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEJhZGdlc1xyXG5cclxuJGJhZGdlLWZvbnQtc2l6ZTogcmVteSgxMik7XHJcbiRiYWRnZS1mb250LXdlaWdodDogNTAwO1xyXG4vLyAkYmFkZ2UtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAwLjI1ZW0gIWRlZmF1bHQ7XHJcbiRiYWRnZS1wYWRkaW5nLXg6IDAuNXJlbTtcclxuJGJhZGdlLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLW1kO1xyXG5cclxuLy8gJGJhZGdlLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICAgJGJ0bi10cmFuc2l0aW9uICFkZWZhdWx0O1xyXG4vLyAkYmFkZ2UtZm9jdXMtd2lkdGg6ICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJGJhZGdlLXBpbGwtcGFkZGluZy14OiAgICAgICAgICAgICAgLjZlbSAhZGVmYXVsdDtcclxuLy8gLy8gVXNlIGEgaGlnaGVyIHRoYW4gbm9ybWFsIHZhbHVlIHRvIGVuc3VyZSBjb21wbGV0ZWx5IHJvdW5kZWQgZWRnZXMgd2hlblxyXG4vLyAvLyBjdXN0b21pemluZyBwYWRkaW5nIG9yIGZvbnQtc2l6ZSBvbiBsYWJlbHMuXHJcbi8vICRiYWRnZS1waWxsLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIDEwcmVtICFkZWZhdWx0O1xyXG5cclxuLy8gTW9kYWxzXHJcblxyXG4vLyBQYWRkaW5nIGFwcGxpZWQgdG8gdGhlIG1vZGFsIGJvZHlcclxuJG1vZGFsLWlubmVyLXBhZGRpbmc6IDAuNzVyZW07XHJcblxyXG4vLyBNYXJnaW4gYmV0d2VlbiBlbGVtZW50cyBpbiBmb290ZXIsIG11c3QgYmUgbG93ZXIgdGhhbiBvciBlcXVhbCB0byAyICogJG1vZGFsLWlubmVyLXBhZGRpbmdcclxuLy8gJG1vZGFsLWZvb3Rlci1tYXJnaW4tYmV0d2VlbjogICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkbW9kYWwtZGlhbG9nLW1hcmdpbjogICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLWRpYWxvZy1tYXJnaW4teS1zbS11cDogICAgICAgMS43NXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC10aXRsZS1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2U7XHJcblxyXG4kbW9kYWwtY29udGVudC1jb2xvcjogbnVsbDtcclxuJG1vZGFsLWNvbnRlbnQtYmc6ICR3aGl0ZTtcclxuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLXdpZHRoOiAwO1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJG1vZGFsLWNvbnRlbnQtaW5uZXItYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHM6IG5vbmU7XHJcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3ctc20tdXA6ICRib3JkZXItcmFkaXVzO1xyXG5cclxuJG1vZGFsLWJhY2tkcm9wLWJnOiAkYmxhY2s7XHJcbiRtb2RhbC1iYWNrZHJvcC1vcGFjaXR5OiAwLjc7XHJcbiRtb2RhbC1oZWFkZXItYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuJG1vZGFsLWZvb3Rlci1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMDtcclxuJG1vZGFsLWZvb3Rlci1ib3JkZXItd2lkdGg6IDA7XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZy15OiAwLjc1cmVtO1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteDogMS41cmVtO1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmc6ICRtb2RhbC1oZWFkZXItcGFkZGluZy15ICRtb2RhbC1oZWFkZXItcGFkZGluZy14O1xyXG5cclxuLy8gJG1vZGFsLXhsOiAgICAgICAgICAgICAgICAgICAgICAgICAgMTE0MHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtbGc6IDEwNDRweDtcclxuLy8gJG1vZGFsLW1kOiAgICAgICAgICAgICAgICAgICAgICAgICAgNTAwcHggIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1zbTogICAgICAgICAgICAgICAgICAgICAgICAgIDMwMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gJG1vZGFsLWZhZGUtdHJhbnNmb3JtOiAgICAgICAgICAgICAgdHJhbnNsYXRlKDAsIC01MHB4KSAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLXNob3ctdHJhbnNmb3JtOiAgICAgICAgICAgICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtIC4zcyBlYXNlLW91dCAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLXNjYWxlLXRyYW5zZm9ybTogICAgICAgICAgICAgc2NhbGUoMS4wMikgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBBbGVydHNcclxuLy8gLy9cclxuLy8gLy8gRGVmaW5lIGFsZXJ0IGNvbG9ycywgYm9yZGVyIHJhZGl1cywgYW5kIHBhZGRpbmcuXHJcblxyXG4vLyAkYWxlcnQtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtbGluay1mb250LXdlaWdodDogICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWJvcmRlci13aWR0aDogICAgICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRhbGVydC1iZy1sZXZlbDogICAgICAgICAgICAgICAgICAgIC0xMCAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWJvcmRlci1sZXZlbDogICAgICAgICAgICAgICAgLTkgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1jb2xvci1sZXZlbDogICAgICAgICAgICAgICAgIDYgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBQcm9ncmVzcyBiYXJzXHJcblxyXG4vLyAkcHJvZ3Jlc3MtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtZm9udC1zaXplOiAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAuNzUgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iZzogICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1ib3gtc2hhZG93OiAgICAgICAgICAgICAgIGluc2V0IDAgLjFyZW0gLjFyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci1jb2xvcjogICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLWJnOiAgICAgICAgICAgICAgICAgICB0aGVtZS1jb2xvcihcInByaW1hcnlcIikgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItYW5pbWF0aW9uLXRpbWluZzogICAgIDFzIGxpbmVhciBpbmZpbml0ZSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci10cmFuc2l0aW9uOiAgICAgICAgICAgd2lkdGggLjZzIGVhc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBMaXN0IGdyb3VwXHJcblxyXG4vLyAkbGlzdC1ncm91cC1jb2xvcjogICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1iZzogICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyLXdpZHRoOiAwcHg7XHJcbiRsaXN0LWdyb3VwLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXk6ICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteDogICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtaG92ZXItYmc6ICAgICAgICAgICAgICAgJGdyYXktMTAwICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3RpdmUtY29sb3I6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aXZlLWJnOiAgICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGl2ZS1ib3JkZXItY29sb3I6ICAgICRsaXN0LWdyb3VwLWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtZGlzYWJsZWQtYmc6ICAgICAgICAgICAgJGxpc3QtZ3JvdXAtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24tY29sb3I6ICAgICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1ob3Zlci1jb2xvcjogICAgICRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtY29sb3I6ICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWJnOiAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBJbWFnZSB0aHVtYm5haWxzXHJcblxyXG4vLyAkdGh1bWJuYWlsLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYmc6ICAgICAgICAgICAgICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJvcmRlci13aWR0aDogICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJvcmRlci1jb2xvcjogICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm9yZGVyLXJhZGl1czogICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAwIDFweCAycHggcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gRmlndXJlc1xyXG5cclxuLy8gJGZpZ3VyZS1jYXB0aW9uLWZvbnQtc2l6ZTogICAgICAgICAgOTAlICFkZWZhdWx0O1xyXG4vLyAkZmlndXJlLWNhcHRpb24tY29sb3I6ICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBCcmVhZGNydW1ic1xyXG5cclxuLy8gJGJyZWFkY3J1bWItZm9udC1zaXplOiAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLXBhZGRpbmcteTogICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItcGFkZGluZy14OiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItaXRlbS1wYWRkaW5nOiAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItYmc6ICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItZGl2aWRlcjogICAgICAgICAgICAgICAgcXVvdGUoXCIvXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItYm9yZGVyLXJhZGl1czogICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDYXJvdXNlbFxyXG5cclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtY29sb3I6ICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtd2lkdGg6ICAgICAgICAgICAgIDE1JSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtb3BhY2l0eTogICAgICAgICAgIC41ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1ob3Zlci1vcGFjaXR5OiAgICAgLjkgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLXRyYW5zaXRpb246ICAgICAgICBvcGFjaXR5IC4xNXMgZWFzZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3Itd2lkdGg6ICAgICAgICAgICAzMHB4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLWhlaWdodDogICAgICAgICAgM3B4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLWhpdC1hcmVhLWhlaWdodDogMTBweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1zcGFjZXI6ICAgICAgICAgIDNweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1hY3RpdmUtYmc6ICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci10cmFuc2l0aW9uOiAgICAgIG9wYWNpdHkgLjZzIGVhc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtY2FwdGlvbi13aWR0aDogICAgICAgICAgICAgNzAlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY2FwdGlvbi1jb2xvcjogICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtaWNvbi13aWR0aDogICAgICAgIDIwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb24tYmc6ICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPScjeyRjYXJvdXNlbC1jb250cm9sLWNvbG9yfScgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZD0nTTUuMjUgMGwtNCA0IDQgNCAxLjUtMS41TDQuMjUgNGwyLjUtMi41TDUuMjUgMHonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbi1iZzogICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBkPSdNMi43NSAwbC0xLjUgMS41TDMuNzUgNGwtMi41IDIuNUwyLjc1IDhsNC00LTQtNHonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtdHJhbnNpdGlvbi1kdXJhdGlvbjogICAgICAgLjZzICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgdHJhbnNmb3JtICRjYXJvdXNlbC10cmFuc2l0aW9uLWR1cmF0aW9uIGVhc2UtaW4tb3V0ICFkZWZhdWx0OyAvLyBEZWZpbmUgdHJhbnNmb3JtIHRyYW5zaXRpb24gZmlyc3QgaWYgdXNpbmcgbXVsdGlwbGUgdHJhbnNpdGlvbnMgKGUuZy4sIGB0cmFuc2Zvcm0gMnMgZWFzZSwgb3BhY2l0eSAuNXMgZWFzZS1vdXRgKVxyXG5cclxuLy8gLy8gU3Bpbm5lcnNcclxuXHJcbi8vICRzcGlubmVyLXdpZHRoOiAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWhlaWdodDogICAgICAgICRzcGlubmVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1ib3JkZXItd2lkdGg6ICAuMjVlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRzcGlubmVyLXdpZHRoLXNtOiAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItaGVpZ2h0LXNtOiAgICAgICAkc3Bpbm5lci13aWR0aC1zbSAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItYm9yZGVyLXdpZHRoLXNtOiAuMmVtICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ2xvc2VcclxuXHJcbi8vICRjbG9zZS1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuNSAhZGVmYXVsdDtcclxuLy8gJGNsb3NlLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcbi8vICRjbG9zZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcclxuLy8gJGNsb3NlLXRleHQtc2hhZG93OiAgICAgICAgICAgICAgICAgMCAxcHggMCAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDb2RlXHJcblxyXG4vLyAkY29kZS1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICA4Ny41JSAhZGVmYXVsdDtcclxuLy8gJGNvZGUtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgJHBpbmsgIWRlZmF1bHQ7XHJcblxyXG4vLyAka2JkLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgICAuMnJlbSAhZGVmYXVsdDtcclxuLy8gJGtiZC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgICAgLjRyZW0gIWRlZmF1bHQ7XHJcbi8vICRrYmQtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgICRjb2RlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGtiZC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAka2JkLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkcHJlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRwcmUtc2Nyb2xsYWJsZS1tYXgtaGVpZ2h0OiAgICAgICAgIDM0MHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVXRpbGl0aWVzXHJcblxyXG4vLyAkZGlzcGxheXM6IG5vbmUsIGlubGluZSwgaW5saW5lLWJsb2NrLCBibG9jaywgdGFibGUsIHRhYmxlLXJvdywgdGFibGUtY2VsbCwgZmxleCwgaW5saW5lLWZsZXggIWRlZmF1bHQ7XHJcbi8vICRvdmVyZmxvd3M6IGF1dG8sIGhpZGRlbiAhZGVmYXVsdDtcclxuLy8gJHBvc2l0aW9uczogc3RhdGljLCByZWxhdGl2ZSwgYWJzb2x1dGUsIGZpeGVkLCBzdGlja3kgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBQcmludGluZ1xyXG5cclxuLy8gJHByaW50LXBhZ2Utc2l6ZTogICAgICAgICAgICAgICAgICAgYTMgIWRlZmF1bHQ7XHJcbi8vICRwcmludC1ib2R5LW1pbi13aWR0aDogICAgICAgICAgICAgIG1hcC1nZXQoJGdyaWQtYnJlYWtwb2ludHMsIFwibGdcIikgIWRlZmF1bHQ7XHJcblxyXG4vLyBKeXNhbiBWYXJpYWJsZXNcclxuXHJcbkBmdW5jdGlvbiBzcGFjZSgkc2l6ZSkge1xyXG4gIEByZXR1cm4gbWFwLWdldCgkbWFwOiAkc3BhY2VycywgJGtleTogJHNpemUpO1xyXG59XHJcblxyXG4kaGVhZGVyLWhlaWdodDogNjJweDtcclxuJGhlYWRlci1oZWlnaHQtbWQ6IDEwMHB4O1xyXG4kaGVhZGVyLXdpZHRoOiAyODBweDtcclxuXHJcbiRidG4tbWluLXdpZHRoOiAxNjRweDtcclxuXHJcbi8vIEotaW5wdXRcclxuJGotaW5wdXQtZm9udC1zaXplOiAxcmVtO1xyXG4kai1pbnB1dC1mb250LWZhbWlseTogJGZvbnQtZmFtaWx5LWJhc2U7XHJcbiRqLWlucHV0LWZvbnQtc3R5bGU6IG5vcm1hbDtcclxuJGotaW5wdXQtZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1iYXNlO1xyXG5cclxuJGotaW5wdXQtbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiRqLWlucHV0LXBhZGRpbmcteTogMTcuNXB4O1xyXG4kai1pbnB1dC1wYWRkaW5nLXg6IDIwcHg7XHJcblxyXG4kai1pbnB1dC1ib3JkZXItd2lkdGg6IDFweDtcclxuJGotaW5wdXQtYm9yZGVyLXJhZGl1czogOHB4O1xyXG4kai1pbnB1dC1ib3JkZXItc3R5bGU6IHNvbGlkO1xyXG5cclxuJGotaW5wdXQtYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4kai1pbnB1dC1sYWJlbC1jb2xvcjogJGdyYXktZGFyaztcclxuJGotaW5wdXQtYm9yZGVyLWNvbG9yOiAkZ3JheS1saWdodDtcclxuJGotaW5wdXQtdGV4dC1jb2xvcjogJGJsYWNrO1xyXG4kai1pbnB1dC1tYXNrLWNvbG9yOiAkZ3JheTtcclxuJGotaW5wdXQtaWNvbi1jb2xvcjogJG9yYW5nZTtcclxuJGotaW5wdXQtaGVscGVyLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG5cclxuJGotaW5wdXQtYm9yZGVyLWNvbG9yLS1hY3RpdmU6ICRwcmltYXJ5O1xyXG4kai1pbnB1dC1sYWJlbC1jb2xvci0tYWN0aXZlOiAkcHJpbWFyeTtcclxuJGotaW5wdXQtdGV4dC1jb2xvci0tYWN0aXZlOiAkcHJpbWFyeTtcclxuXHJcbiRqLWlucHV0LWJhY2tncm91bmQtY29sb3ItLWVycm9yOiAkcmVkLWxpZ2h0O1xyXG4kai1pbnB1dC1oZWxwZXItY29sb3ItLWVycm9yOiAkcmVkO1xyXG4kai1pbnB1dC1ib3JkZXItY29sb3ItLWVycm9yOiAkcmVkO1xyXG5cclxuJGotaW5wdXQtYmFja2dyb3VuZC1jb2xvci0tZGlzYWJsZWQ6ICRpbnB1dC1kaXNhYmxlZC1iZzsgLy8gZnJvbSBmaWdtYSBwcmltaXRpdmVzIHNob3VsZCBiZSBncmF5LTIwMFxyXG5cclxuJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tdG9wOiAkai1pbnB1dC1wYWRkaW5nLXkgKyAkai1pbnB1dC1ib3JkZXItd2lkdGg7XHJcbiRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLXRvcC1hY3RpdmU6IDEwcHg7XHJcbiRqLWlucHV0LWxpbmstcG9zaXRpb24tdG9wOiAxNnB4O1xyXG4kai1pbnB1dC1sYWJlbC1wb3NpdGlvbi1sZWZ0OiAkai1pbnB1dC1wYWRkaW5nLXggKyAkai1pbnB1dC1ib3JkZXItd2lkdGg7XHJcbiRqLWlucHV0LWxhYmVsLWxpbmUtaGVpZ2h0OiAkai1pbnB1dC1saW5lLWhlaWdodDtcclxuJGotaW5wdXQtbGFiZWwtY29sb3I6ICRncmF5LWRhcms7XHJcblxyXG4kai1pbnB1dC1wYWRkaW5nLXRvcDogMjdweDtcclxuJGotaW5wdXQtcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiRqLWlucHV0LW1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiRqLWlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiAkZ3JheTtcclxuJGotaW5wdXQtcGxhY2Vob2xkZXItcG9zaXRpb246ICRqLWlucHV0LXBhZGRpbmctdG9wICsgJGotaW5wdXQtYm9yZGVyLXdpZHRoO1xyXG4kai1pbnB1dC1jaGFyLWxlbmd0aDogOC45OXB4O1xyXG5cclxuJGotaW5wdXQtYnV0dG9uLXBvc2l0aW9uOiAyMHB4O1xyXG4kai1pbnB1dC1zaGFkb3ctcG9zaXRpb246ICRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLWxlZnQ7XHJcblxyXG4kai1pbnB1dC1sYWJlbC16LWluZGV4OiAwO1xyXG4kai1pbnB1dC1zaGFkb3ctei1pbmRleDogMTtcclxuJGotaW5wdXQtei1pbmRleDogMjtcclxuJGotaW5wdXQtbGluay16LWluZGV4OiAzO1xyXG4kai1pbnB1dC1idXR0b24tei1pbmRleDogNDtcclxuXHJcbiRib3gtc2hhZG93LXRvLXRvcC1sZzogMCAtMXJlbSAzcmVtIHJnYmEoJGJsYWNrLCAwLjE3NSk7XHJcblxyXG4kZW5hYmxlLXBvaW50ZXItY3Vyc29yLWZvci1idXR0b25zOiB0cnVlO1xyXG4iXX0= */";

/***/ }),

/***/ 42163:
/*!********************************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/exchange-rates-list/exchange-rates-list.component.scss?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".exchange-rates-block {\n  background: #fff;\n  border-radius: 0.75rem;\n  max-width: 295px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n}\n\n.exchange-rates-block__row {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-content: space-around;\n  justify-content: space-between;\n  padding: 1rem;\n}\n\n.exchange-rates-block__row_ref_blue {\n  color: #1586bb;\n}\n\n.exchange-rates-block__cell {\n  text-align: center;\n}\n\n.exchange-rates-block__cell--right {\n  text-align: right;\n}\n\n.exchange-rates-block__cell--left {\n  text-align: left;\n}\n\n.exchange-rates-block__cell-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 6px;\n}\n\n.exchange-rates__text--size {\n  font-size: 18px;\n}\n\n.exchange-rates__logo {\n  margin: auto;\n}\n\n.exchange-rates__arrow--up {\n  width: 0;\n  height: 0;\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-bottom: 10px solid #239a54;\n  margin: auto 0;\n}\n\n.exchange-rates__arrow--down {\n  width: 0;\n  height: 0;\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-top: 10px solid #ff0000;\n  margin: auto 0;\n}\n\n.exchange-rates-block__footer {\n  padding: 1rem;\n}\n\n.exchange-rates-block__empty {\n  padding: 1.5rem 1rem;\n}\n\n.exchange-rates-block__error {\n  color: #666c72;\n  padding: 0.75rem 0;\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 46093:
/*!********************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/exchange-rates.component.scss?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".exchange-rates {\n  margin: 2rem 0;\n}\n\n.currency-selector {\n  overflow-y: hidden;\n  top: 62px;\n}\n\n@media (min-width: 960px) {\n  .currency-selector {\n    top: 98px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .currency-selector {\n    top: 0;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 57772:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-body/f-page-body.component.scss?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmLXBhZ2UtYm9keS5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 37932:
/*!***********************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-extra/f-page-extra.component.scss?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmLXBhZ2UtZXh0cmEuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 46065:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-header/f-page-header.component.scss?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmLXBhZ2UtaGVhZGVyLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 13902:
/*!****************************************************************!*\
  !*** ./src/app/shared/f-page/f-page.component.scss?ngResource ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 70634:
/*!************************************************************************!*\
  !*** ./src/app/shared/form-field/form-field.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-form-field {\n  position: relative;\n  display: block;\n}\n.j-form-field .j-form-field--infix {\n  display: flex;\n  position: relative;\n  flex: auto;\n  min-width: 0;\n  padding: 0.4em 0;\n  min-height: 3em;\n  align-items: center;\n  width: 100%;\n}\n.j-form-field .j-form-field--infix > .form-control {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-radius: 0;\n  display: block;\n  width: 100%;\n  position: relative;\n  z-index: 2;\n  transition-delay: 0.1s;\n  border: 0px;\n  padding: 0 0.5em;\n  height: 1.2em;\n}\n.j-form-field .j-form-field--infix > .form-control::placeholder {\n  color: #b7bec5;\n}\n.j-form-field .j-form-field--infix > .form-control::-moz-placeholder {\n  color: #b7bec5;\n}\n.j-form-field .j-form-field--infix > .form-control::-webkit-input-placeholder {\n  color: #b7bec5;\n}\n.j-form-field .j-form-field--infix > .form-control:-ms-input-placeholder {\n  color: #b7bec5;\n}\n.j-form-field .j-form-field--infix > .form-control:-webkit-autofill, .j-form-field .j-form-field--infix > .form-control:-webkit-autofill:hover, .j-form-field .j-form-field--infix > .form-control:-webkit-autofill:focus {\n  border: none;\n  -webkit-text-fill-color: #1a1c1f;\n  -webkit-box-shadow: 0 0 0px 1000px transparent inset;\n  -webkit-transition: background-color 5000s ease-in-out 0s;\n  transition: background-color 5000s ease-in-out 0s;\n}\n.j-form-field .j-form-field--infix > .form-control:-moz-ui-invalid {\n  box-shadow: none;\n}\n.j-form-field .j-form-field--infix > .form-control::-ms-clear, .j-form-field .j-form-field--infix > .form-control::-ms-reveal {\n  display: none;\n}\n.j-form-field .j-form-field--infix > .form-control, .j-form-field .j-form-field--infix > .form-control::-webkit-search-cancel-button, .j-form-field .j-form-field--infix > .form-control::-webkit-search-decoration, .j-form-field .j-form-field--infix > .form-control::-webkit-search-results-button, .j-form-field .j-form-field--infix > .form-control::-webkit-search-results-decoration {\n  -webkit-appearance: none;\n}\n.j-form-field .j-form-field--infix > .form-control, .j-form-field .j-form-field--infix > .form-control:focus, .j-form-field .j-form-field--infix > .form-control:hover, .j-form-field .j-form-field--infix > .form-control:active {\n  outline: 0;\n  background: transparent;\n}\n.j-form-field .j-form-field--infix > textarea.form-control {\n  height: auto;\n  margin-right: 0.1em;\n}\n.j-form-field.j-form-field-has-label .j-form-field--infix {\n  border-top: 1.5em solid transparent;\n}\n.j-form-field.j-form-field-disabled .j-form-field-wrapper {\n  background-color: #f6f7f8;\n}\n.j-form-field_narrow.j-form-field-has-label .j-form-field--infix {\n  border-top-width: 1.1em;\n}\n.j-form-field_narrow.j-form-field-has-label .j-form-field--infix {\n  padding: 0.3em 0;\n  min-height: 2.6em;\n}\n.j-form-field_narrow.j-form-field-has-label .j-form-field--infix > .form-control {\n  padding: 0;\n}\n.j-form-field_narrow .j-form-field--label-wrapper {\n  top: -1.3em;\n  padding-top: 1.3em;\n}\n.j-form-field_narrow .j-form-field--label-wrapper .j-form-field--label {\n  left: 0;\n}\n@media (max-width: 1279.98px) {\n  .j-form-field_narrow .j-form-field--label-wrapper .j-form-field--label {\n    top: 1.1em;\n  }\n}\n@media (max-width: 1279.98px) {\n  .j-form-field_narrow .j-input-element {\n    font-size: 14px;\n  }\n}\n.j-form-field_narrow .input-shadow {\n  left: 0.1em;\n  top: 0.3em;\n}\n@media (max-width: 1279.98px) {\n  .j-form-field_narrow .input-shadow {\n    font-size: 14px;\n  }\n}\n.j-form-field-wrapper {\n  padding: 0;\n  width: 100%;\n  height: auto;\n}\n.j-form-field-invalid .j-form-field-wrapper {\n  background: #ffefef;\n  border-color: #ff0000;\n}\n.j-focused .j-form-field-wrapper {\n  border-color: #ef5630;\n}\n.j-form-field-flex {\n  padding: 0px 0.75em;\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: auto;\n}\n.j-form-field--suffix {\n  display: flex;\n  white-space: nowrap;\n}\n.j-form-field--suffix .j-input-button {\n  position: relative;\n  padding: 0.3em;\n  bottom: auto;\n  min-width: 0;\n  width: auto;\n}\n.j-form-field--suffix .j-input-button j-icon {\n  position: static;\n}\n.j-form-field--label-wrapper {\n  position: absolute;\n  left: 0;\n  top: -1.5em;\n  padding-top: 1.5em;\n  box-sizing: content-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n}\n.j-form-field--label {\n  position: absolute;\n  top: 18.5px;\n  left: 0.5em;\n  border-radius: 8px;\n  line-height: 20px;\n  color: #666c72;\n  -webkit-user-select: none;\n          user-select: none;\n  z-index: 0;\n  transform-origin: 0 0;\n  transition: all 0.2s ease-in-out;\n  transition-delay: 0.1s;\n  flex: 1;\n  min-width: 0;\n  max-width: calc(100% - 16.8px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: none;\n}\n.j-focused .j-form-field--label {\n  color: #ef5630;\n}\n.j-form-field--prefix {\n  line-height: 0;\n}\n.j-form-field-appearance-fill.j-form-field-can-float.j-form-field-should-float .j-form-field--label {\n  top: 10px;\n  transform: scale(0.75);\n}\n.j-form-field-empty.j-form-field--label,\n.j-form-field-can-float.j-form-field-should-float .j-form-field--label {\n  display: block;\n}\n.j-error--item {\n  color: #ff0000;\n}\n.j-error--item:not([hidden]) ~ .j-error--item:not([hidden]) {\n  display: none;\n}\n.j-form-field-hint-wrapper {\n  color: #666c72;\n  display: flex;\n  font-size: 12px;\n}\n@media (min-width: 670px) {\n  .j-form-field-hint-wrapper {\n    font-size: 12px;\n  }\n}\n@media (min-width: 960px) {\n  .j-form-field-hint-wrapper {\n    font-size: 14px;\n  }\n}\n@media (min-width: 1280px) {\n  .j-form-field-hint-wrapper {\n    font-size: 14px;\n  }\n}\n@media (min-width: 1920px) {\n  .j-form-field-hint-wrapper {\n    font-size: 14px;\n  }\n}\n.j-form-field-hint-spacer {\n  flex: 1 0 1em;\n}\n.j-form-field-bottom {\n  background: #eceef1;\n  border-top: 1px solid #d6dadf;\n  padding: 1rem;\n  color: #666c72;\n  border-radius: 0 0 8px 8px;\n}\n.j-hint.w-100 + .j-form-field-hint-spacer {\n  display: none;\n}\nj-hint {\n  display: block;\n  margin-top: 0.4em;\n}\nngb-typeahead-window.dropdown-menu {\n  padding: 24px;\n  background: #ffffff;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 24px 32px rgba(0, 0, 0, 0.04);\n  border-radius: 0px 0px 8px 8px;\n  margin: 0px;\n  border: 0px;\n  left: -12px;\n  right: -12px;\n  position: absolute;\n  left: 0px;\n  transform: translate(0px, 0px) !important;\n  left: -12px !important;\n  top: 100% !important;\n}\nngb-typeahead-window.dropdown-menu .dropdown-item {\n  background-color: #f6f7f8;\n  padding: 1rem;\n  border-radius: 8px;\n  display: block;\n  color: #1a1c1f;\n}\nngb-typeahead-window.dropdown-menu .dropdown-item + .dropdown-item {\n  margin-top: 0.5rem;\n}\nngb-typeahead-window.dropdown-menu .dropdown-item:hover, ngb-typeahead-window.dropdown-menu .dropdown-item.active {\n  background-color: #eceef1;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 84430:
/*!************************************************************!*\
  !*** ./src/app/shared/icon/icon.component.scss?ngResource ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition-delay: 0.1s;\n  width: 1rem;\n  height: 1rem;\n  visibility: visible;\n  opacity: 1;\n}\n:host.is-hidden {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s, opacity 0.3s linear;\n}\n:host.size-md {\n  width: 1.5rem;\n  height: 1.5rem;\n}\nsvg {\n  transition: all 0.2s ease-in-out;\n  fill: currentColor;\n}\nsvg.color-default {\n  fill: #666c72;\n  color: #666c72;\n}\nsvg.color-primary {\n  fill: #ef5630;\n  color: #ef5630;\n}\nsvg.color-disabled {\n  fill: #b7bec5;\n  color: #b7bec5;\n}\nsvg.color-success {\n  fill: #239a54;\n  color: #239a54;\n}\nsvg.color-danger {\n  fill: #ff0000;\n  color: #ff0000;\n}\nsvg.stroke {\n  fill: transparent;\n}\nsvg.stroke.color-default {\n  stroke: #666c72;\n}\nsvg.stroke.color-primary {\n  stroke: #ef5630;\n}\nsvg.stroke.color-disabled {\n  stroke: #b7bec5;\n}\nsvg.stroke.color-success {\n  stroke: #239a54;\n}\nsvg.stroke.color-danger {\n  stroke: #ff0000;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 83886:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input-shadow/input-shadow.component.scss?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".input-shadow {\n  position: absolute;\n  line-height: 20px;\n  color: #b7bec5;\n  left: 0.5em;\n  top: 0.4em;\n  height: 1.2em;\n}\n.input-shadow .input-shadow_placeholder {\n  letter-spacing: 0.12em;\n}\n.input-shadow .input-shadow_invisible {\n  opacity: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 22519:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/amount-input/amount-input.component.scss?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  position: relative;\n  display: block;\n}\n\n.j-input.min-amount-shown input {\n  border-radius: 8px 8px 0px 0px;\n}\n\n.min-amount {\n  background: #fff;\n  left: 0;\n  right: 0;\n  top: 3.5rem;\n  padding: 1.5rem 1rem;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 24px 32px rgba(0, 0, 0, 0.04);\n  border-radius: 0px 0px 8px 8px;\n  display: block;\n  position: absolute;\n  color: #1a1c1f;\n  font-size: 0.875rem;\n  transition: all 0.2s ease-in-out;\n  z-index: 5;\n  visibility: visible;\n  opacity: 1;\n}\n\n.min-amount.is-hidden {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s, opacity 0.3s linear;\n}\n\n.min-amount.is-hidden {\n  z-index: 1;\n}\n\n.min-amount:hover {\n  color: #ef5630;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 15201:
/*!************************************************************************************!*\
  !*** ./src/app/shared/input/country-codes/country-codes.component.scss?ngResource ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.country-codes__header {\n  margin: 16px 0;\n}\n\n.country-codes__search {\n  margin: 16px 0;\n}\n\n.country-codes__block {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\n.country-code__row {\n  display: grid;\n  grid-template-columns: 48px 1fr;\n  grid-gap: 16px;\n  cursor: pointer;\n  padding: 12px 20px;\n}\n\n.country-code__row:hover {\n  background-color: #e9ecf1;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 79910:
/*!******************************************************************************!*\
  !*** ./src/app/shared/input/date-input/date-input.component.scss?ngResource ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  position: relative;\n  display: block;\n}\n\n.j-input-shadow {\n  left: 1.25rem;\n}\n\n.datepicker {\n  background: #fff;\n  position: absolute;\n  overflow: hidden;\n  max-height: 0;\n  right: 0;\n  top: 56px;\n  transition: all 0.2s ease-in-out;\n  z-index: 5;\n}\n\n.datepicker.shown {\n  max-height: 350px;\n}\n\n.filter-dropdown-menu {\n  padding: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 31410:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/input/dropdown-input/dropdown-input.component.scss?ngResource ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-dropdown-input {\n  position: relative;\n}\n.j-dropdown-input.has-value > .j-input > label.j-input--float-label {\n  top: 10px;\n  left: 21px;\n  transform: scale(0.75);\n}\n.j-dropdown-input.collapsed .j-input > .j-dropdown-input__form-control {\n  border-color: #ef5630;\n  border-radius: 8px 8px 0 0;\n}\n.j-dropdown-input.collapsed .j-dropdown-input__arrow {\n  transform: rotate(180deg);\n}\n.j-dropdown-input.collapsed .j-dropdown-input__body {\n  padding: 1rem;\n  z-index: 10;\n  border-color: #d6dadf;\n}\n.j-dropdown-input__form-control {\n  padding-top: 14px;\n  padding-bottom: 14px;\n}\n.j-dropdown-input__selected {\n  display: flex;\n  align-items: flex-end;\n}\n.j-dropdown-input__selected--has-label {\n  margin-top: 12px;\n}\n.j-dropdown-input__body {\n  transition: padding 0.3s ease-in-out, border 0.3s ease-in-out;\n  top: 3.5rem;\n  left: 0;\n  right: 0;\n  background: #fff;\n  position: absolute;\n  margin: 0;\n  padding: 0 1rem;\n  border-radius: 0 0 8px 8px;\n  border: 1px solid transparent;\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n}\n.j-dropdown-input__body::-webkit-scrollbar {\n  width: 8px;\n}\n.j-dropdown-input__body::-webkit-scrollbar-track {\n  background: #fff;\n}\n.j-dropdown-input__body::-webkit-scrollbar-thumb {\n  background: #d6dadf;\n  border-radius: 10px;\n}\n.j-dropdown-input__arrow {\n  z-index: 0;\n  width: calc(1rem + 40px);\n}\n.j-dropdown-input__from-arrow {\n  transition: all 0.2s ease-in-out;\n  opacity: 1;\n  position: absolute;\n  width: 28px;\n  height: 28px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  background: #fff;\n  justify-content: center;\n  left: -14px;\n  bottom: -22px;\n  z-index: 2;\n}\n.j-dropdown-input__item {\n  display: flex;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  background: #f6f7f8;\n  margin: 0.5rem 0;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n}\n.j-dropdown-input__item.j-dropdown-input__item--hovered, .j-dropdown-input__item:hover {\n  background: #e9ecf1;\n}\n.j-dropdown-input__item.j-dropdown-input__item--blocked, .j-dropdown-input__item.j-dropdown-input__item--blocked:hover {\n  opacity: 0.4;\n  cursor: not-allowed;\n  background: #f6f7f8;\n}\n.disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 39291:
/*!******************************************************************************!*\
  !*** ./src/app/shared/input/iban-input/iban-input.component.scss?ngResource ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-input-prefix {\n  top: 8px;\n  left: 12px;\n}\n\n.j-input-shadow {\n  left: 40px;\n}\n\n.j-input.has-bank-logo .j-input-shadow {\n  left: 80px;\n}\n\n.j-input.has-bank-logo .form-control {\n  padding-left: 60px;\n}\n\n.j-input.has-bank-logo .j-input-label {\n  left: 60px;\n}\n\n.j-input.is-prefix-hidden .form-control {\n  color: transparent;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImliYW4taW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxRQUFBO0VBQ0EsVUFBQTtBQURGOztBQUlBO0VBQ0UsVUFBQTtBQURGOztBQUtFO0VBQ0UsVUFBQTtBQUZKOztBQUlFO0VBQ0Usa0JBQUE7QUFGSjs7QUFJRTtFQUNFLFVBQUE7QUFGSjs7QUFPRTtFQUNFLGtCQUFBO0FBSkoiLCJmaWxlIjoiaWJhbi1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG5cbi5qLWlucHV0LXByZWZpeCB7XG4gIHRvcDogOHB4O1xuICBsZWZ0OiAxMnB4O1xufVxuXG4uai1pbnB1dC1zaGFkb3cge1xuICBsZWZ0OiA0MHB4O1xufVxuXG4uai1pbnB1dC5oYXMtYmFuay1sb2dvIHtcbiAgLmotaW5wdXQtc2hhZG93IHtcbiAgICBsZWZ0OiA4MHB4O1xuICB9XG4gIC5mb3JtLWNvbnRyb2wge1xuICAgIHBhZGRpbmctbGVmdDogNjBweDtcbiAgfVxuICAuai1pbnB1dC1sYWJlbCB7XG4gICAgbGVmdDogNjBweDtcbiAgfVxufVxuXG4uai1pbnB1dC5pcy1wcmVmaXgtaGlkZGVuIHtcbiAgLmZvcm0tY29udHJvbCB7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG4iXX0= */";

/***/ }),

/***/ 68735:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input/iin-input/iin-input.component.scss?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-input-shadow {\n  left: 20px;\n}\n\n.j-input-suffix-loading {\n  width: 24px;\n  height: 24px;\n}\n\n.j-input-suffix {\n  right: 36px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlpbi1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0FBQ0YiLCJmaWxlIjoiaWluLWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmotaW5wdXQtc2hhZG93IHtcbiAgbGVmdDogMjBweDtcbn1cblxuLmotaW5wdXQtc3VmZml4LWxvYWRpbmcge1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xufVxuXG4uai1pbnB1dC1zdWZmaXh7XG4gIHJpZ2h0OiAzNnB4O1xufSJdfQ== */";

/***/ }),

/***/ 42461:
/*!**************************************************************!*\
  !*** ./src/app/shared/input/input.component.scss?ngResource ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnB1dC5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 84377:
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/input/multi-select-dropdown-input/multi-select-dropdown-input.component.scss?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".msdi__container {\n  position: relative;\n  margin-top: 14px;\n  margin-bottom: 14px;\n}\n.msdi__container .form-control {\n  color: #666c72;\n}\n.msdi__container.collapsed .form-control {\n  border-color: #ef5630;\n  border-radius: 8px 8px 0 0;\n}\n.msdi__container.collapsed .msdi__list {\n  display: block;\n  padding: 1rem;\n  z-index: 10;\n  border-color: #d6dadf;\n}\n.msdi__container.collapsed .msdi__value--arrow {\n  transform: rotate(180deg);\n}\n.msdi__value {\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n}\n.msdi__value--arrow {\n  transform: rotate(0deg);\n  transition: all 0.2s ease-in-out;\n}\n.msdi__list {\n  position: absolute;\n  width: 100%;\n  transition: padding 0.3s ease-in-out, border 0.3s ease-in-out;\n  top: 3.5rem;\n  left: 0;\n  right: 0;\n  background: #fff;\n  margin: 0;\n  padding: 0 1rem;\n  border-radius: 0 0 8px 8px;\n  border: 1px solid transparent;\n  /* width */\n  /* Track */\n  /* Handle */\n  /* Handle on hover */\n}\n.msdi__list::-webkit-scrollbar {\n  width: 8px;\n}\n.msdi__list::-webkit-scrollbar-track {\n  background: #fff;\n}\n.msdi__list::-webkit-scrollbar-thumb {\n  background: #d6dadf;\n  border-radius: 10px;\n}\n.msdi__list.bottom {\n  bottom: 70px;\n}\n.msdi__list.top {\n  top: 70px;\n}\n.msdi__list--item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  background: #f6f7f8;\n  margin: 0.5rem 0;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n}\n.msdi__list--item:hover, .msdi__list--item.selected {\n  background: #e9ecf1;\n}\n.msdi__list--item-checked {\n  stroke: #ef5630;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 5795:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/input/password-input/password-input.component.scss?ngResource ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-input-button {\n  z-index: 4 !important;\n}\n\n.j-input-link {\n  z-index: 5;\n}\n\ninput.extra-padding {\n  padding-right: 150px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N3b3JkLWlucHV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQUE7QUFDRjs7QUFDQTtFQUNFLFVBQUE7QUFFRjs7QUFFQTtFQUNFLG9CQUFBO0FBQ0YiLCJmaWxlIjoicGFzc3dvcmQtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuai1pbnB1dC1idXR0b24ge1xuICB6LWluZGV4OiA0ICFpbXBvcnRhbnQ7XG59XG4uai1pbnB1dC1saW5rIHtcbiAgei1pbmRleDogNTtcbn1cblxuLy8gUGFkZGluZyBmb3IgbGlua1xuaW5wdXQuZXh0cmEtcGFkZGluZyB7XG4gIHBhZGRpbmctcmlnaHQ6IDE1MHB4O1xufVxuIl19 */";

/***/ }),

/***/ 6573:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/period-input/period-input.component.scss?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXJpb2QtaW5wdXQuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 23899:
/*!********************************************************************************!*\
  !*** ./src/app/shared/input/phone-input/phone-input.component.scss?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwaG9uZS1pbnB1dC5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 28636:
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/input/phone-prefix-input/phone-prefix-input.component.scss?ngResource ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".flag_select_button {\n  width: 56px;\n  height: 56px;\n  margin-right: 8px;\n  background: #FFFFFF;\n  border: 1px solid #D6DADF;\n  box-sizing: border-box;\n  border-radius: 8px;\n}\n.flag_select_button img {\n  width: 24px;\n  border-radius: 8px;\n  height: 24px;\n  object-fit: cover;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob25lLXByZWZpeC1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFDSiIsImZpbGUiOiJwaG9uZS1wcmVmaXgtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxhZ19zZWxlY3RfYnV0dG9uIHtcbiAgd2lkdGg6IDU2cHg7XG4gIGhlaWdodDogNTZweDtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNENkRBREY7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcblxuICBpbWcge1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG4gIH1cbn1cbiJdfQ== */";

/***/ }),

/***/ 69800:
/*!********************************************************************************!*\
  !*** ./src/app/shared/input/range-input/range-input.component.scss?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".range-header {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #d6dadf;\n}\n.range-header j-input {\n  flex-grow: 1;\n}\n.range-header .j-input {\n  margin-bottom: 0;\n}\n.range-header--no-borders {\n  border-bottom: 0;\n}\n.range-delimiter {\n  width: 1rem;\n  line-height: 56px;\n  text-align: center;\n}\n.range-picker {\n  text-align: center;\n}\n.range-footer {\n  border-top: 1px solid #d6dadf;\n  padding: 1rem;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n.range-footer--no-borders {\n  border-top: 0;\n}\n.custom-day {\n  text-align: center;\n  height: 2rem;\n  width: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.custom-day.focused {\n  background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n  background-color: #ef5630;\n  color: white;\n  border-radius: 50%;\n}\n.custom-day.faded {\n  border-radius: 0;\n  color: #1a1c1f;\n  background-color: rgba(239, 86, 48, 0.1);\n}\n.custom-day.range-start {\n  position: relative;\n}\n.custom-day.range-start::before {\n  content: \"\";\n  position: absolute;\n  z-index: -1;\n  width: 50%;\n  right: 0;\n  top: 0;\n  left: 50%;\n  bottom: 0;\n  display: block;\n  background-color: rgba(239, 86, 48, 0.1);\n}\n.custom-day.range-end {\n  position: relative;\n}\n.custom-day.range-end::before {\n  content: \"\";\n  position: absolute;\n  z-index: -1;\n  width: 50%;\n  right: 50%;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  display: block;\n  background-color: rgba(239, 86, 48, 0.1);\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 61876:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/search-input/search-input.component.scss?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".j-input input {\n  padding-top: 10px;\n  padding-right: 56px;\n}\n@media (min-width: 960px) {\n  .j-input input {\n    padding-right: 120px;\n  }\n}\n.j-input input::placeholder {\n  color: #b7bec5;\n}\n.j-input-prefix {\n  top: 16px;\n  left: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 6519:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input/sms-input/sms-input.component.scss?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtcy1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsImZpbGUiOiJzbXMtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */";

/***/ }),

/***/ 10227:
/*!**************************************************************************!*\
  !*** ./src/app/shared/layout-home/layout-home.component.scss?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsYXlvdXQtaG9tZS5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 72745:
/*!************************************************************************!*\
  !*** ./src/app/shared/layout-home/main/main.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  width: 100%;\n  display: flex;\n}\n\n:host(.is-centered) {\n  display: flex;\n  padding-top: 20vh;\n}\n\n@media (min-width: 1280px) {\n  :host(.is-centered) {\n    padding-top: 30vh;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY29tcG9uZW50LnNjc3MiLCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7QUFERjs7QUFJQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtBQURGOztBQ29ESTtFRHJESjtJQUtJLGlCQUFBO0VBQUY7QUFDRiIsImZpbGUiOiJtYWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuOmhvc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuOmhvc3QoLmlzLWNlbnRlcmVkKSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmctdG9wOiAyMHZoO1xuXG4gIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHtcbiAgICBwYWRkaW5nLXRvcDogMzB2aDtcbiAgfVxuICAvLyBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbiAhPSBudWxsIGFuZCAkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBsYXJnZXN0IChsYXN0KSBicmVha3BvaW50LlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgY2FsY3VsYXRlZCBhcyB0aGUgbWluaW11bSBvZiB0aGUgbmV4dCBvbmUgbGVzcyAwLjAycHhcbi8vIHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIC4wMiwgbnVsbCk7XG59XG5cbi8vIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuXG4vLyBVc2VmdWwgZm9yIG1ha2luZyByZXNwb25zaXZlIHV0aWxpdGllcy5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCJcIiAgKFJldHVybnMgYSBibGFuayBzdHJpbmcpXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCItc21cIlxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1heCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBiZXR3ZWVuIHRoZSBtaW4gYW5kIG1heCBicmVha3BvaW50c1xuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtYmV0d2VlbigkbG93ZXIsICR1cHBlciwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbG93ZXIsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCR1cHBlciwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCR1cHBlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gTWVkaWEgYmV0d2VlbiB0aGUgYnJlYWtwb2ludCdzIG1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhzLlxuLy8gTm8gbWluaW11bSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQsIGFuZCBubyBtYXhpbXVtIGZvciB0aGUgbGFyZ2VzdCBvbmUuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgb25seSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCwgbm90IHZpZXdwb3J0cyBhbnkgd2lkZXIgb3IgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */";

/***/ }),

/***/ 630:
/*!******************************************************************!*\
  !*** ./src/app/shared/loading/loading.component.scss?ngResource ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2FkaW5nLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 26057:
/*!***********************************************************************************!*\
  !*** ./src/app/shared/modals/import-error/import-error.component.scss?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXBvcnQtZXJyb3IuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 67090:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-error/import-partial-error.component.scss?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXBvcnQtcGFydGlhbC1lcnJvci5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 45713:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-success/import-partial-success.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXBvcnQtcGFydGlhbC1zdWNjZXNzLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 17075:
/*!***************************************************************************************!*\
  !*** ./src/app/shared/modals/import-success/import-success.component.scss?ngResource ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbXBvcnQtc3VjY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 56792:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/modals/list-modal/list-modal.component.scss?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */";

/***/ }),

/***/ 16093:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/modals/maintenance-modal/maintenance-modal.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYWludGVuYW5jZS1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 23705:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-auth/nav-auth.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  width: 100%;\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1hdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGNBQUE7QUFDRiIsImZpbGUiOiJuYXYtYXV0aC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbiJdfQ== */";

/***/ }),

/***/ 94241:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-item/nav-item.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".nav_item__trigger {\n  margin-bottom: 1rem;\n}\n\n.nav-item__arrow {\n  transition: all 0.2s ease-in-out;\n  transform: rotate(0deg);\n}\n\n.nav-item__collapse {\n  width: 100%;\n  margin-right: 18px;\n  cursor: pointer;\n}\n\n.nav-item__body {\n  padding-top: 1rem;\n  display: block;\n  transition: all 0.2s ease-in-out;\n}\n\n.j-collapsed .nav-item__collapse .nav-item__arrow {\n  transform: rotate(540deg);\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 88515:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-main/nav-main.component.scss?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ":host {\n  width: 100%;\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1tYWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGNBQUE7QUFDRiIsImZpbGUiOiJuYXYtbWFpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */";

/***/ }),

/***/ 70608:
/*!*****************************************************************************************!*\
  !*** ./src/app/shared/responsive-toolkit/responsive-detector.component.scss?ngResource ***!
  \*****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = ".responsive-detector:before {\n  position: absolute;\n  font-size: 0;\n  content: \"xs\";\n}\n@media (min-width: 670px) {\n  .responsive-detector:before {\n    content: \"sm\";\n  }\n}\n@media (min-width: 960px) {\n  .responsive-detector:before {\n    content: \"md\";\n  }\n}\n@media (min-width: 1280px) {\n  .responsive-detector:before {\n    content: \"lg\";\n  }\n}\n@media (min-width: 1920px) {\n  .responsive-detector:before {\n    content: \"xl\";\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3BvbnNpdmUtZGV0ZWN0b3IuY29tcG9uZW50LnNjc3MiLCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUFGO0FDd0RJO0VEM0RKO0lBS0ksYUFBQTtFQUVGO0FBQ0Y7QUNtREk7RUQzREo7SUFRSSxhQUFBO0VBSUY7QUFDRjtBQzhDSTtFRDNESjtJQVdJLGFBQUE7RUFNRjtBQUNGO0FDeUNJO0VEM0RKO0lBY0ksYUFBQTtFQVFGO0FBQ0YiLCJmaWxlIjoicmVzcG9uc2l2ZS1kZXRlY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG4ucmVzcG9uc2l2ZS1kZXRlY3RvcjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtc2l6ZTogMDtcbiAgY29udGVudDogJ3hzJztcbiAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgIGNvbnRlbnQ6ICdzbSc7XG4gIH1cbiAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuICAgIGNvbnRlbnQ6ICdtZCc7XG4gIH1cbiAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAgIGNvbnRlbnQ6ICdsZyc7XG4gIH1cbiAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkge1xuICAgIGNvbnRlbnQ6ICd4bCc7XG4gIH1cbn1cbiIsIi8vIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vL1xuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLCBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxuLy9cbi8vICAgICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweClcbi8vXG4vLyBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2AgZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG5cbi8vIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20pXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgJGJyZWFrcG9pbnQtbmFtZXM6ICh4cyBzbSBtZCBsZyB4bCkpXG4vLyAgICBtZFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcbiAgJG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG4gIT0gbnVsbCBhbmQgJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1taW4oc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICA1NzZweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgbGFyZ2VzdCAobGFzdCkgYnJlYWtwb2ludC5cbi8vIFRoZSBtYXhpbXVtIHZhbHVlIGlzIGNhbGN1bGF0ZWQgYXMgdGhlIG1pbmltdW0gb2YgdGhlIG5leHQgb25lIGxlc3MgMC4wMnB4XG4vLyB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2YgYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0cyB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLlxuLy8gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heFxuLy8gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmsgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLlxuLy8gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1heChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDc2Ny45OHB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG5leHQ6IGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQHJldHVybiBpZigkbmV4dCwgYnJlYWtwb2ludC1taW4oJG5leHQsICRicmVha3BvaW50cykgLSAuMDIsIG51bGwpO1xufVxuXG4vLyBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LlxuLy8gVXNlZnVsIGZvciBtYWtpbmcgcmVzcG9uc2l2ZSB1dGlsaXRpZXMuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeCh4cywgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiXCIgIChSZXR1cm5zIGEgYmxhbmsgc3RyaW5nKVxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIFwiLXNtXCJcbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEByZXR1cm4gaWYoYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cykgPT0gbnVsbCwgXCJcIiwgXCItI3skbmFtZX1cIik7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtaW4ge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtYXgge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuIl19 */";

/***/ }),

/***/ 33383:
/*!***********************************************!*\
  !*** ./src/app/app.component.html?ngResource ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = "<j-mobile></j-mobile>\n\n<ng-container *ngIf=\"isReady\">\n  <div class=\"router-wrapper\"\n       [@routeAnimations]=\"prepareRoute(outlet)\">\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n  </div>\n\n  <responsive-detector></responsive-detector>\n  <notifier-container></notifier-container>\n\n  <j-heartbeat [event]=\"eventHandler\"></j-heartbeat>\n</ng-container>\n\n<div class=\"app-loader\"\n     *ngIf=\"!isReady\">\n  <ng-lottie [options]=\"lottieOptions\"></ng-lottie>\n</div>";

/***/ }),

/***/ 39715:
/*!***************************************************************************************************!*\
  !*** ./src/app/core/components/ngb-datepicker-i18n/ngb-datepicker-i18n.component.html?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ngb-datepicker [(ngModel)]=\"model\"\n                [showWeekNumbers]=\"true\"></ngb-datepicker>";

/***/ }),

/***/ 59031:
/*!***************************************************************!*\
  !*** ./src/app/heartbeat/heartbeat.component.html?ngResource ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 87206:
/*!*************************************************************************************************************!*\
  !*** ./src/app/payments/components/limit-not-passed-modal/limit-not-passed-modal.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-header j-modal-header\">\n  <button type=\"button\"\n          class=\"close\"\n          (click)=\"closeModal()\">\n    <img src=\"/assets/icons/close.svg\"\n         alt=\"{{'SHARED.CLOSE' | translate}}\">\n  </button>\n</div>\n<div class=\"modal-body px-4 pt-0 pb-4 text-center \">\n  <img src=\"/assets/img/history/modals/error.svg\"\n       [alt]=\"'SHARED.ERROR' | translate\">\n  <h3 class=\"light mb-3 mt-2\">{{'SHARED.ERROR' | translate}}</h3>\n  <p class=\"m-0 text-muted\"\n     translate\n     [translateParams]=\"translateParams\">\n    PAYMENTS.LIMIT_MODAL\n  </p>\n</div>\n<div class=\"modal-footer py-4 px-3 justify-content-center\">\n  <button type=\"button\"\n          class=\"btn btn-primary btn-block mb-3\"\n          (click)=\"closeModal()\">\n    {{ 'SHARED.OK' | translate | uppercase }}\n  </button>\n</div>";

/***/ }),

/***/ 44593:
/*!*****************************************************************************************************!*\
  !*** ./src/app/payments/components/working-time-modal/working-time-modal.component.html?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"working-time-modal\">\n  <div class=\"modal-header\">\n    <button type=\"button\"\n            class=\"close\"\n            (click)=\"onClose()\">\n      <img src=\"/assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\" />\n    </button>\n  </div>\n\n  <article class=\"modal-body text-center\">\n    <strong class=\"p1 d-block mb-3\">\n      {{title}}\n    </strong>\n\n    <p class=\"text-muted\"\n       [innerHTML]=\"description\">\n    </p>\n  </article>\n\n  <div class=\"modal-body result-body\">\n    <button *ngIf=\"canBeSubmitted\"\n            (click)=\"onSubmit()\"\n            class=\"btn btn-primary btn-block\"\n            translate>SHARED.SEND</button>\n    <button (click)=\"onClose()\"\n            class=\"btn btn-block btn-link\">{{ closeText }}</button>\n  </div>\n</div>";

/***/ }),

/***/ 47139:
/*!***********************************************************************************************!*\
  !*** ./src/app/shared/components/animated-loading/animated-loading.component.html?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"animated-loading\">\n  <ng-lottie [options]=\"lottieOptions\"></ng-lottie>\n</div>";

/***/ }),

/***/ 60217:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/aside/aside.component.html?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"aside-mobile d-lg-none\">\n  <div (click)=\"toggleMenu()\"\n       class=\"hamburger mr-3\"\n       *ngIf=\"isUserShown && user\">\n    <div class=\"hamburger-box\">\n      <div class=\"hamburger-inner\"></div>\n    </div>\n  </div>\n  <a href=\"/\"\n     class=\"logo mr-auto\">\n    <picture>\n      <source media=\"(max-width: 959px)\"\n              srcset=\"/assets/img/logo-small.svg\">\n      <source media=\"(min-width: 960px)\"\n              srcset=\"/assets/img/logo.svg\">\n      <img src=\"/assets/img/logo.svg\"\n           alt=\"Jusan bank\">\n    </picture>\n  </a>\n  <ng-container *ngIf=\"isUserShown && user\">\n    <button class=\"btn btn-primary aside-create d-md-none\"\n            (click)=\"setStep(steps.SELECT)\"\n            [inlineSVG]=\"'assets/icons/header/create.svg'\">\n    </button>\n    <div class=\"d-none d-md-flex pt-2 d-lg-none\">\n      <j-import></j-import>\n      <button class=\"btn btn-header btn-shadow btn-primary\"\n              (click)=\"setStep(steps.SELECT)\">\n        <span class=\"header-icon\"\n              [inlineSVG]=\"'/assets/icons/create.svg'\"></span>\n        <span translate>SHARED.CREATE</span>\n      </button>\n    </div>\n  </ng-container>\n</section>\n\n<section class=\"aside-wrap\"\n         [class.is-shown]=\"isMenuShown\">\n  <div class=\"aside-backdrop\"\n       (click)=\"toggleMenu()\"></div>\n  <section class=\"aside\">\n    <section class=\"aside-header\">\n      <div class=\"logo-wrap\">\n        <a href=\"/\"\n           class=\"logo\">\n          <img src=\"./assets/img/logo.svg\"\n               alt=\"Jusan bank\">\n        </a>\n      </div>\n      <section *ngIf=\"isUserShown && user\"\n               class=\"user\"\n               [class.shown]=\"isUserDropdownCollapsed\">\n        <a href=\"#\"\n           class=\"user-toggle no-caret\"\n           (click)=\"toggleUserDropdown($event)\">\n          <span class=\"user-text p3\">\n            <strong class=\"user-text text-dark text-truncate\">{{ name }}</strong>\n            <strong class=\"user-text text-muted text-truncate\">{{ company }}</strong>\n          </span>\n          <span class=\"dropdown-arrow ml-auto text-primary\"\n                [inlineSVG]=\"'/assets/icons/shared/dropdown.svg'\"></span>\n        </a>\n        <div class=\"aside-dropdown-menu p3\">\n          <button class=\"aside-dropdown-item dropdown-item user-text text-dark\"\n                  (click)=\"onAuthoritySelect(authority)\"\n                  *ngFor=\"let authority of user?.userAuthorities\">\n            {{ authority.company.shortName || authority.company.name }}\n          </button>\n        </div>\n      </section>\n    </section>\n\n    <ng-content></ng-content>\n\n    <j-footer langClassName=\"\"\n              copyrightClassName=\"\"></j-footer>\n  </section>\n</section>\n";

/***/ }),

/***/ 83314:
/*!***********************************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-body/collapsible-body.component.html?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>";

/***/ }),

/***/ 36056:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible-trigger/collapsible-trigger.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>";

/***/ }),

/***/ 35513:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/components/collapsible/collapsible.component.html?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section [class.j-collapsed]=\"isCollapsed\">\n  <ng-content select=\"j-collapsible-header\"></ng-content>\n\n  <section (click)=\"collapse()\">\n    <ng-content select=\"j-collapsible-trigger\"></ng-content>\n  </section>\n\n  <section [@smoothCollapse]=\"isCollapsed ? 'final' : 'initial'\">\n    <ng-content select=\"j-collapsible-body\"></ng-content>\n  </section>\n</section>";

/***/ }),

/***/ 21027:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/confirm-sms-modal/confirm-sms-modal.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-modal-header modal-header confirm-modal-header\">\r\n  <div class=\"confirm-tabs p1\"\r\n       *ngIf=\"hasOtp && !isConfirmRequired && !(isLoading$ | async)\">\r\n    <a (click)=\"showOtp($event)\"\r\n       href=\"#\"\r\n       [class.active]=\"currentTab == confirmTabs.OTP\"\r\n       translate>SHARED.OTP.TAB</a>\r\n    <a (click)=\"showSms($event)\"\r\n       href=\"#\"\r\n       [class.active]=\"currentTab == confirmTabs.SMS\"\r\n       translate>SHARED.SMS.TAB</a>\r\n  </div>\r\n\r\n  <button type=\"button\"\r\n          class=\"close\"\r\n          aria-label=\"Close\"\r\n          (click)=\"dismissModal()\">\r\n    <img src=\"/assets/icons/close.svg\"\r\n         alt=\"{{'SHARED.CLOSE' | translate}}\" />\r\n  </button>\r\n</div>\r\n<div class=\"j-modal-body modal-body confirm-body\">\r\n  <j-animated-loading *ngIf=\"isLoading$ | async\"></j-animated-loading>\r\n\r\n  <div *ngIf=\"isConfirmRequired\"\r\n       class=\"pb-5\">\r\n    <j-conversion-confirm [confirmData]=\"confirmData\"\r\n                          (agreed)=\"onConfirmAgreed()\"\r\n                          (sentForRevision)=\"onConfirmSentForRevision()\"></j-conversion-confirm>\r\n  </div>\r\n\r\n  <div class=\"pb-7\"\r\n       *ngIf=\"isSignAllowed\">\r\n    <div [hidden]=\"currentTab != confirmTabs.OTP\">\r\n      <j-otp #otpInput\r\n             *ngIf=\"otp\"\r\n             [otp]=\"otp\"\r\n             [phone]=\"phone\"\r\n             [params]=\"additionalParams\"\r\n             (submitted)=\"onOtpSubmit($event)\">\r\n      </j-otp>\r\n    </div>\r\n    <div *ngIf=\"isSignBySmsRequested\"\r\n         [hidden]=\"currentTab != confirmTabs.SMS\">\r\n      <j-sms #smsInput\r\n             [phone]=\"phone\"\r\n             [params]=\"additionalParams\"\r\n             [headers]=\"headerParams\"\r\n             (submitted)=\"onSmsSubmit($event)\"\r\n             (failed)=\"onSmsFail()\"\r\n             (loaded)=\"onSmsLoaded()\"></j-sms>\r\n    </div>\r\n  </div>\r\n</div>";

/***/ }),

/***/ 71026:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/components/conversion-confirm/conversion-confirm.component.html?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h3 translate\n    class=\"light mb-3 mt-2 auth-heading\">HISTORY.CONVERSION_CONFIRM.TITLE</h3>\n\n<div class=\"text-muted\">\n  <p translate\n     class=\"m-0\">\n    HISTORY.CONVERSION_CONFIRM.DESCRIPTION\n  </p>\n\n  <div class=\"conversion-confirm__rates text-dark\">\n    <j-money [money]=\"confirmData.rateFrom\"\n             [showAllDecimals]=\"true\"></j-money>\n    =\n    <j-money [money]=\"confirmData.rateTo\"\n             [showAllDecimals]=\"true\"></j-money>\n  </div>\n\n  <p translate\n     class=\"m-0\">\n    HISTORY.CONVERSION_CONFIRM.SUBTITLE\n  </p>\n\n  <div class=\"conversion-confirm__amounts text-dark\">\n    <j-money [money]=\"confirmData.amountFrom\"\n             [showAllDecimals]=\"true\"></j-money>\n    <img src=\"/assets/icons/conversion/modal-success-arrow.svg\">\n    <j-money [money]=\"confirmData.amountTo\"\n             [showAllDecimals]=\"true\"></j-money>\n  </div>\n</div>\n\n<div class=\"modal-footer pt-4 pb-0 px-3 justify-content-center\">\n  <button translate\n          type=\"button\"\n          class=\"btn btn-primary btn-block mb-3\"\n          (click)=\"onAgreed()\">\n    HISTORY.CONVERSION_CONFIRM.AGREED\n  </button>\n  <button translate\n          type=\"button\"\n          class=\"btn btn-static btn-link m-0\"\n          (click)=\"onSendForRevision()\">\n    HISTORY.CONVERSION_CONFIRM.FOR_REVISION\n  </button>\n</div>";

/***/ }),

/***/ 66314:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/copyright/copyright.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<small class=\"copyright text-center px-4 py-3\">\r\n  {{ 'FOOTER.YEARS' | translate }} <br>\r\n  {{ 'FOOTER.COPYRIGHT' | translate }}\r\n</small>";

/***/ }),

/***/ 78425:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/empty-placeholder/empty-placeholder.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"empty\"\n         [style.minHeight]=\"minHeight+'px'\">\n     <img class=\"empty-img\"\n          src=\"/assets/img/shared/empty.svg\"\n          [alt]=\"label | translate\">\n     <div class=\"text-muted empty-text text-center my-2\"\n          [innerHTML]=\"label | translate\">\n     </div>\n     <button *ngIf=\"hasRetry\"\n             (click)=\"onRetry()\"\n             class=\"btn btn-link p-0\">\n          {{ 'SHARED.ERROR_PLACEHOLDER.RETRY' | translate }}\n     </button>\n</section>";

/***/ }),

/***/ 19433:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/components/entity-logo/entity-logo.component.html?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<span>\n  <img class=\"bank-logo--img\"\n       [src]=\"src\">\n</span>\n";

/***/ }),

/***/ 19651:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/components/environment-change/environment-change.component.html?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"text-center mb-3\">\n  <div ngbDropdown\n       placement=\"top\"\n       class=\"d-inline-block\">\n    <a href=\"#\"\n       ngbDropdownToggle\n       class=\"btn btn-sm btn-outline-info\"\n       (click)=\"$event.preventDefault()\">\n\n      {{ label || 'Выберите среду' }}\n    </a>\n    <div ngbDropdownMenu>\n      <button ngbDropdownItem\n              (click)=\"onEnvChange(env)\"\n              *ngFor=\"let env of envs\">{{env.label}}</button>\n    </div>\n  </div>\n  <div class=\"my-3\" *ngIf=\"showNavigateToJmartCabinet\">\n    <button\n      class=\"btn btn-primary btn-sm\"\n      (click)=\"navigateToJmartCabinet()\"\n    >\n      Перейти к кабинету мерчанта Jmart\n    </button>\n  </div>\n</div>";

/***/ }),

/***/ 11745:
/*!*************************************************************************************************!*\
  !*** ./src/app/shared/components/error-placeholder/error-placeholder.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"error-placeholder\">\n  <img class=\"error-placeholder__img\"\n       [src]=\"imgLink\"\n       [alt]=\"'SHARED.ERROR_PLACEHOLDER.TITLE' | translate\">\n\n  <div class=\"text-muted error-placeholder__text\"\n       *ngIf='!errorBadge'>\n    {{ 'SHARED.ERROR_PLACEHOLDER.TITLE' | translate }}\n  </div>\n\n  <div *ngIf=\"errorText\"\n       class=\"text-muted error-placeholder__text\">\n    {{ errorText ? errorText : 'SHARED.ERROR_PLACEHOLDER.SUBTITLE' | translate }}\n  </div>\n\n  <div class=\"text-muted error-placeholder__text\"\n       *ngIf='errorBadge'>\n    <span class=\"badge badge-gray\">\n      {{ 'SHARED.SOON' | translate }}\n    </span>\n  </div>\n\n  <button *ngIf=\"isRetryable\"\n          (click)=\"onRetry()\"\n          class=\"btn btn-link p-0\">\n    {{ 'SHARED.ERROR_PLACEHOLDER.RETRY' | translate }}\n  </button>\n</section>";

/***/ }),

/***/ 1933:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/footer/footer.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"text-center my-2\"\n     *ngIf=\"isAuthorized\">\n        <button class=\"btn btn-link link-blue p-0\"\n                (click)=\"logout()\">{{ 'AUTH.LOGOUT' | translate }}</button>\n</div>\n<j-lang-list [isAuthorized]=\"isAuthorized\"\n             [ngClass]=\"langClassName\"></j-lang-list>\n<j-copyright [ngClass]=\"copyrightClassName\"></j-copyright>\n\n<j-environment-change *ngIf=\"isDev\"></j-environment-change>";

/***/ }),

/***/ 58926:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/header/header.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 translate\n    class=\"header-title\">{{ title$ | async}}</h2>\n\n<div class=\"header-buttons\">\n  <!-- <a href=\"#\"\n     (click)=\"$event.preventDefault()\"\n     class=\"btn btn-icon btn-shadow btn-white\">\n    <img src=\"/assets/icons/notifications.svg\" />\n  </a> -->\n  <j-import></j-import>\n  <button class=\"btn btn-header btn-shadow btn-primary\"\n          (click)=\"setStep(steps.SELECT)\">\n    <span class=\"header-icon\"\n          [inlineSVG]=\"'/assets/icons/header/create.svg'\"></span>\n    <span translate>SHARED.CREATE</span>\n  </button>\n</div>";

/***/ }),

/***/ 20472:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/import/import.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<label for=\"importPayments\"\n       [jLoading]=\"isImporting\"\n       [jLoadingInverted]=\"true\"\n       [class.disabled]=\"isImporting\"\n       class=\"header-import btn btn-header btn-shadow btn-white\">\n      <span class=\"header-icon text-muted\"\n            [inlineSVG]=\"'/assets/icons/import.svg'\"></span>\n      <span translate>IMPORT.TITLE</span>\n      <input id=\"importPayments\"\n             type=\"file\"\n             multiple\n             [(ngModel)]=\"importModel\"\n             (change)=\"onImportClick($event)\"\n             [disabled]=\"isImporting\" />\n</label>";

/***/ }),

/***/ 61029:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/components/kbe-info/kbe-info.component.html?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div [innerHTML]=\"'PAYMENTS.KBE' | translate\"></div>";

/***/ }),

/***/ 29028:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/lang-list/lang-list.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<nav class=\"lang-list\">\r\n   <a href=\"#\"\r\n      (click)=\"changeLang($event, 'ru')\"\r\n      [class.active]=\"currentLang == 'ru'\">Рус</a>\r\n   <a href=\"#\"\r\n      (click)=\"changeLang($event, 'kk')\"\r\n      [class.active]=\"currentLang == 'kk'\">Қаз</a>\r\n   <a href=\"#\"\r\n     (click)=\"changeLang($event, 'en')\"\r\n     [class.active]=\"currentLang == 'en'\">Eng</a>\r\n</nav>\r\n";

/***/ }),

/***/ 32789:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/list-item/list-item.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div (click)=\"onClick()\"\n     [jLoading]=\"isLoading\"\n     [jLoadingInverted]=\"true\"\n     class=\"j-list-item-wrap\"\n     [class.j-list-item-wrap--hoverable]=\"isHoverable\">\n  <ng-container [ngTemplateOutlet]=\"isSelectable ? selectableWrapperTemplate : defaultWrapperTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-container>\n</div>\n\n<ng-template #templatePlaceholder>\n  <div></div>\n</ng-template>\n\n<ng-template #selectableWrapperTemplate\n             let-item>\n  <div class=\"p3 j-list-item\"\n       [ngStyle]=\"listItemStyle\"\n       [class]=\"itemClassNames\"\n       [class.j-list-item--highlighted]=\"isHighlighted || isHighlightedTemporarily || isSelected\">\n    <ng-container [ngTemplateOutlet]=\"checkboxTemplate\"></ng-container>\n    <ng-container [ngTemplateOutlet]=\"selectableTemplate || defaultTemplate || templatePlaceholder\"\n                  [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-container>\n    <ng-container [ngTemplateOutlet]=\"actionsTemplate\"></ng-container>\n  </div>\n</ng-template>\n\n<ng-template #defaultWrapperTemplate\n             let-item>\n  <div class=\"p3 j-list-item\"\n       [ngStyle]=\"listItemStyle\"\n       [class]=\"itemClassNames\"\n       [class.j-list-item--highlighted]=\"isHighlighted || isHighlightedTemporarily || isSelected\">\n    <ng-container [ngTemplateOutlet]=\"defaultTemplate || templatePlaceholder\"\n                  [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-container>\n    <ng-container [ngTemplateOutlet]=\"actionsTemplate\"></ng-container>\n  </div>\n</ng-template>\n\n<ng-template #checkboxTemplate>\n  <div class=\"custom-control custom-checkbox mr-1 j-list-item__checkbox\"\n       tooltipClass=\"tooltip-light\"\n       [ngbTooltip]=\"mapTranslate('CHECKBOX') | translate\"\n       (click)=\"$event.stopPropagation()\">\n    <input type=\"checkbox\"\n           class=\"custom-control-input\"\n           [(ngModel)]=\"isSelected\"\n           (change)=\"onSelect()\"\n           (click)=\"$event.stopPropagation()\"\n           [id]=\"id\">\n    <label class=\"custom-control-label\"\n           [for]=\"id\"></label>\n  </div>\n</ng-template>\n\n\n<ng-template #actionsTemplate>\n  <div class=\"j-list__actions\">\n    <button *ngIf=\"isDeletable\"\n            class=\"j-list__action\"\n            tooltipClass=\"tooltip-light\"\n            [ngbTooltip]=\"mapTranslate('DELETE') | translate\"\n            [inlineSVG]=\"'/assets/icons/transaction/delete.svg'\"\n            (click)=\"onDelete($event)\">\n    </button>\n    <button *ngIf=\"isSignable\"\n            class=\"j-list__action j-list__action--sign\"\n            tooltipClass=\"tooltip-light\"\n            [ngbTooltip]=\"mapTranslate('SIGN') | translate\"\n            [inlineSVG]=\"'/assets/icons/transaction/sign.svg'\"\n            (click)=\"onSign($event)\">\n    </button>\n  </div>\n</ng-template>";

/***/ }),

/***/ 75775:
/*!***********************************************************************!*\
  !*** ./src/app/shared/components/list/list.component.html?ngResource ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div infiniteScroll\n     [scrollWindow]=\"true\"\n     [alwaysCallback]=\"true\"\n     [infiniteScrollDistance]=\"2\"\n     [infiniteScrollThrottle]=\"500\"\n     (scrolled)=\"onScroll()\"\n     class=\"j-list__content\"\n     *ngIf=\"list?.length > 0\">\n  <div *ngIf=\"isSelectable\"\n       class=\"j-list__selectable\">\n    <ng-container [ngTemplateOutlet]=\"checkboxTemplate\"></ng-container>\n    <ng-container [ngTemplateOutlet]=\"selected.length > 0 ? selectedTemplate : totalTemplate\"></ng-container>\n  </div>\n\n  <h5 *ngIf=\"title\">{{ title | translate}}</h5>\n\n  <j-list-item *ngFor=\"let item of list; let i = index\"\n               [isLoading]=\"loadingIds.includes(item.id)\"\n               [highlightedFn]=\"highlightedFn\"\n               [highlightedTemporarilyFn]=\"highlightedTemporarilyFn\"\n               (clicked)=\"onClick($event)\"\n               (selected)=\"onSelect($event)\"\n               (deleted)=\"onDelete($event)\"\n               (signed)=\"onSign($event)\"\n               [onSelectAll]=\"allSelected\"\n               [item]=\"item\"\n               [itemClassNames]=\"itemClassNames\"\n               [selectableTemplate]=\"selectableTemplate\"\n               [defaultTemplate]=\"defaultTemplate\"\n               [isDeletable]=\"isDeletable\"\n               [isSelectable]=\"isSelectable\"\n               [isSignable]=\"isSignable\"\n               [isHoverable]=\"isHoverable\">\n  </j-list-item>\n</div>\n\n<ng-template #checkboxTemplate>\n  <div class=\"p3 custom-control custom-checkbox mr-auto\"\n       (click)=\"$event.stopPropagation()\">\n    <input type=\"checkbox\"\n           class=\"custom-control-input\"\n           [(ngModel)]=\"isAllSelected\"\n           (change)=\"onSelectAll()\"\n           (click)=\"$event.stopPropagation()\"\n           id=\"selectAllCheckbox\">\n    <label class=\"custom-control-label text-muted\"\n           for=\"selectAllCheckbox\">\n      <span class=\"ml-1\">\n        {{ mapTranslate('SELECT_ALL') | translate }}\n      </span>\n    </label>\n  </div>\n</ng-template>\n\n<ng-template #selectedTemplate>\n  <div class=\"p3 text-muted mr-3\">\n    <span class=\"mr-1\">{{ mapTranslate('SELECTED') | translate }}</span>\n    <strong>{{ selected.length }}</strong>\n  </div>\n\n  <button *ngIf=\"isDeletable\"\n          tooltipClass=\"tooltip-light\"\n          [ngbTooltip]=\"(mapTranslate('DELETE_SELECTED') | translate)\"\n          [disabled]=\"isDeletingSelected || isSigningSelected\"\n          (click)=\"onDeleteSelected()\"\n          class=\"p2 j-list__action\">\n    <span [inlineSVG]=\"'/assets/icons/transaction/delete.svg'\"></span>\n  </button>\n\n  <button *ngIf=\"isSignable\"\n          tooltipClass=\"tooltip-light\"\n          [ngbTooltip]=\"(mapTranslate('SIGN_SELECTED') | translate)\"\n          [disabled]=\"isDeletingSelected || isSigningSelected\"\n          (click)=\"onSignSelected()\"\n          class=\"p2 j-list__action j-list__action--sign\">\n    <span [inlineSVG]=\"'/assets/icons/transaction/sign.svg'\"></span>\n  </button>\n</ng-template>\n\n<ng-template #totalTemplate>\n  <div class=\"p3 text-muted mr-3\">\n    <span class=\"mr-1\">{{ mapTranslate('TOTAL') | translate }}</span>\n    <strong>{{ list.length }}</strong>\n  </div>\n  <button *ngIf=\"isSignable\"\n          (click)=\"onSignAll()\"\n          class=\"p2 j-list__action j-list__action--sign\">\n    <span class=\"mr-2\">{{ mapTranslate('SIGN_ALL') | translate }}</span>\n    <span [inlineSVG]=\"'/assets/icons/transaction/sign.svg'\"></span>\n  </button>\n</ng-template>";

/***/ }),

/***/ 65724:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/mobile/mobile.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"mobile-panel\">\n  <button class=\"mobile__close\"\n          (click)=\"onClose()\"\n          inlineSVG='/assets/icons/v2/close-round-16.svg'></button>\n  <article class=\"mobile__center\">\n    <img class=\"mobile__logo\"\n         src=\"/assets/img/v2/mobile-logo.svg\"\n         alt=\"Jusan Business\">\n    <div class=\"mobile__content\">\n      <div class=\"p1 text-dark\">Jusan Business</div>\n      <div class=\"p3 text-muted\">{{ 'MOBILE.CONTENT' | translate }}</div>\n    </div>\n  </article>\n  <a [href]=\"mobileAppLink\"\n     target=\"_blank\"\n     class=\"p2\">{{ 'MOBILE.DOWNLOAD' | translate }}</a>\n</div>";

/***/ }),

/***/ 22486:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/modal/modal.component.html?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-template #modal>\n    <!-- <div class=\"modal-header\">\n        <ng-content select=\"[header]\"></ng-content>\n    </div> -->\n    <button \n        type=\"button\"\n        class=\"btn p-0 close-modal\"\n        (click)=\"close()\"\n    >\n        <img src=\"/assets/icons/close.svg\"\n            alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n    <div class=\"modal-body\">\n        <ng-content></ng-content>\n    </div>\n    <!-- <div class=\"modal-footer\">\n        <ng-content select=\"[footer]\"></ng-content>\n    </div> -->\n</ng-template>";

/***/ }),

/***/ 67272:
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/money/money.component.html?ngResource ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-container *ngIf=\"!money\">\r\n    -\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"money\">\r\n    <span>{{sign}}</span><span>{{splittedAmount.integers}}</span><span *ngIf=\"splittedAmount.decimals\">,<span\r\n              class=\"money-decimals\">{{splittedAmount.decimals}}</span>\r\n    </span>\r\n    <span class=\"money-decimals\">\r\n        {{ currency | curSymbol }}\r\n    </span>\r\n</ng-container>";

/***/ }),

/***/ 204:
/*!***************************************************************************************!*\
  !*** ./src/app/shared/components/new-password/new-password.component.html?ngResource ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<form (ngSubmit)=\"onSubmit()\"\n      [formGroup]=\"passwordForm\">\n    <j-password-input *ngIf=\"isOldShown\"\n                      #passwordOldInput\n                      label=\"AUTH.PASSWORD.CURRENT\"\n                      [formControl]=\"f.passwordOld\"\n                      [hasError]=\"(!isOldValid && isSubmitted) || (isOldEmpty && isSubmitted)\"\n                      (keydown.Enter)=\"onOldKeyPress($event)\"\n                      (keydown.Tab)=\"onOldKeyPress($event)\"\n                      (blurred)=\"onOldBlur()\"></j-password-input>\n\n    <j-password-input #passwordInput\n                      label=\"AUTH.PASSWORD.NEW\"\n                      [formControl]=\"f.password\"\n                      [hasError]=\"(!isPasswordValid && isSubmitted) || (isPasswordEmpty && isSubmitted)\"\n                      (focused)=\"onPasswordFocus()\"\n                      (keydown.Enter)=\"onPasswordKeyPress($event)\"\n                      (keydown.Tab)=\"onPasswordKeyPress($event)\"\n                      (blurred)=\"onPasswordBlur()\"></j-password-input>\n    <div [class.shown]=\"isRequirementsShown\"\n         class=\"requirements\">\n        <j-password-requirement *ngFor=\"let requirement of requirements\"\n                                [isValid]=\"validate[requirement.code]\"\n                                [label]=\"requirement.label\"\n                                [isChecked]=\"isSubmitted && !isPasswordEmpty\"></j-password-requirement>\n    </div>\n    <j-password-input #passwordConfirmInput\n                      label=\"AUTH.PASSWORD.CONFIRM\"\n                      [formControl]=\"f.passwordConfirm\"\n                      [hasError]=\"(!isConfirmValid && isSubmitted) || (isConfirmEmpty && isSubmitted)\"\n                      [errorText]=\"confirmError\"\n                      (keydown.Enter)=\"onConfirmKeyPress($event)\"\n                      (keydown.Tab)=\"onConfirmKeyPress($event)\"\n                      (blurred)=\"onConfirmBlur()\"></j-password-input>\n\n    <div translate\n         *ngIf=\"errorText\"\n         class=\"alert alert-danger\">\n        {{errorText}}\n    </div>\n    <div class=\"auth-submit\">\n        <button translate\n                type=\"submit\"\n                class=\"btn btn-static btn-primary btn-lg\"\n                [jLoading]=\"isLoading\"\n                [disabled]=\"isLoading\">SHARED.DONE</button>\n    </div>\n</form>";

/***/ }),

/***/ 46400:
/*!*********************************************************************!*\
  !*** ./src/app/shared/components/otp/otp.component.html?ngResource ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div [hidden]='!isReady'>\r\n  <h3 class=\"light mb-3 mt-0 auth-heading\">\r\n    {{ 'SHARED.OTP.TITLE' | translate }} \r\n  </h3>\r\n  <div [hidden]=\"currentTab != authTabs.FORM\">\r\n    <p>\r\n      {{ 'SHARED.OTP.DESCRIPTION' | translate}} \r\n      <ng-container *ngIf=\"otp\">№{{ otp.serial }}</ng-container>\r\n    </p>\r\n    <p [innerHTML]=\"'SHARED.SMS.NEW_CODE' | translate:translateParam\"\r\n       class=\"mt-2 text-muted\">\r\n    </p>\r\n    <form class=\"mt-4\"\r\n          (ngSubmit)=\"onSubmit()\"\r\n          [formGroup]=\"otpForm\">\r\n      <j-sms-input #smsInput\r\n                   class=\"my-4\"\r\n                   [errorText]=\"errorText\"\r\n                   [errorTranslateParams]=\"errorTranslateParams\"\r\n                   [hasError]=\"hasError\"\r\n                   [autofocus]=\"true\"\r\n                   [formControl]=\"f.otpCode\"></j-sms-input>\r\n      <div class=\"auth-submit\">\r\n        <button translate\r\n                type=\"submit\"\r\n                class=\"btn btn-static btn-primary btn-lg\"\r\n                [jLoading]=\"isLoading\"\r\n                [disabled]=\"isLoading\">SHARED.CONTINUE</button>\r\n        <button translate\r\n                *ngIf=\"isAuthAction\"\r\n                class=\"btn btn-link\"\r\n                (click)=\"onSmsClicked()\">SHARED.SMS.SEND_SMS</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <j-sms-error *ngIf=\"currentTab == authTabs.EXPIRED\"\r\n               backLabel=\"SHARED.SMS.SEND_SMS\"\r\n               [errorType]=\"errorTypes.EXPIRED\"\r\n               [isLoading]=\"isLoading\"\r\n               [timerValue]=\"timerValue\"\r\n               [isTimerRunning]=\"isTimerRunning\"\r\n               (codeRequested)=\"requestOtp()\"\r\n               (smsErrorSendSms)=\"onSmsClicked()\">\r\n  </j-sms-error>\r\n\r\n  <j-sms-error *ngIf=\"currentTab == authTabs.FORBIDDEN\"\r\n               backLabel=\"SHARED.SMS.SEND_SMS\"\r\n               [errorType]=\"errorTypes.FORBIDDEN\"\r\n               [isLoading]=\"isLoading\"\r\n               [timerValue]=\"timerValue\"\r\n               [isTimerRunning]=\"isTimerRunning\"\r\n               (codeRequested)=\"requestOtp()\"\r\n               (smsErrorSendSms)=\"onSmsClicked()\">\r\n  </j-sms-error>\r\n\r\n  <j-sms-error *ngIf=\"currentTab == authTabs.FORBIDDEN_BLOCKED\"\r\n               backLabel=\"SHARED.SMS.SEND_SMS\"\r\n               [errorType]=\"errorTypes.FORBIDDEN\"\r\n               [isLoading]=\"isLoading\"\r\n               [timerValue]=\"blockedTimerValue\"\r\n               [isTimerRunning]=\"isBlockedTimerRunning\"\r\n               (codeRequested)=\"requestOtp()\"\r\n               (smsErrorSendSms)=\"onSmsClicked()\">\r\n  </j-sms-error>\r\n\r\n  <j-sms-error *ngIf=\"currentTab == authTabs.ERRORED\"\r\n               backLabel=\"SHARED.SMS.SEND_SMS\"\r\n               [errorType]=\"errorTypes.UNKNOWN\"\r\n               [isLoading]=\"isLoading\"\r\n               [isTimerRunning]=\"isBlockedTimerRunning\"\r\n               [timerValue]=\"blockedTimerValue\"\r\n               (codeRequested)=\"requestOtp()\"\r\n               (smsErrorSendSms)=\"onSmsClicked()\">\r\n  </j-sms-error>\r\n</div>";

/***/ }),

/***/ 3807:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/components/password-requirement/password-requirement.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<j-icon *ngIf=\"isFailed\"\n        class=\"mr-3\"\n        name=\"fail\"\n        [color]=\"color\"></j-icon>\n<j-icon *ngIf=\"!isFailed\"\n        class=\"mr-3\"\n        name=\"done\"\n        [isStroke]=\"true\"\n        [color]=\"color\"></j-icon>\n<span translate\n      [ngClass]=\"textClass\"\n      [innerHTML]=\"label\"></span>";

/***/ }),

/***/ 95663:
/*!*******************************************************************************************!*\
  !*** ./src/app/shared/components/payment-select/payment-select.component.html?ngResource ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"p-select-header\">\r\n  <h5 class=\"m-0\">{{ 'SHARED.CREATE'| translate }}</h5>\r\n  <button type=\"button\"\r\n          class=\"close\"\r\n          (click)=\"close()\">\r\n    <img src=\"/assets/icons/close.svg\"\r\n         alt=\"{{'SHARED.CLOSE' | translate}}\" />\r\n  </button>\r\n</div>\r\n\r\n<nav class=\"p-select-nav\">\r\n  <a *ngFor=\"let type of types\"\r\n     href=\"#\"\r\n     class=\"p-select-item\"\r\n     [class.is-disabled]=\"type.isDisabled\"\r\n     (click)=\"select($event, type)\">\r\n    <img class=\"p-select-icon\"\r\n         src=\"/assets/img/payments/{{type.icon}}\"\r\n         [alt]=\"type.title\" />\r\n    <span> {{ type.title | translate }}</span>\r\n    <img class=\"p-select-arrow\"\r\n         src=\"/assets/icons/arrow-right.svg\"\r\n         [alt]=\"type.title | translate\" />\r\n  </a>\r\n</nav>";

/***/ }),

/***/ 19078:
/*!***********************************************************************************************************!*\
  !*** ./src/app/shared/components/restricted-placeholder/restricted-placeholder.component.html?ngResource ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<img class=\"d-inline-block mb-3\"\n     src=\"/assets/img/v2/placeholders/restricted.svg\"\n     [alt]=\"label | translate\">\n<div class=\"text-muted p2\">\n  {{ label | translate }}\n</div>\n<button *ngIf=\"isRetryable\"\n        (click)=\"onRetry()\"\n        [jLoading]=\"isLoading\"\n        [disabled]=\"isLoading\"\n        class=\"btn btn-link\">{{ 'SHARED.REFRESH' | translate }}</button>";

/***/ }),

/***/ 11646:
/*!*****************************************************************************!*\
  !*** ./src/app/shared/components/sidebar/sidebar.component.html?ngResource ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"sidebar\" [class.sidebar--open]=\"open\">\n    <div class=\"sidebar__header p-5 d-flex justify-content-between align-items-center\">\n        <h5 class=\"m-0\">{{ header }}</h5>\n        <button class=\"btn btn-link p-0\" (click)=\"close()\">\n            <img src=\"/assets/icons/close.svg\" />\n        </button>\n    </div>\n    <div class=\"sidebar__content\">\n        <ng-content></ng-content>\n    </div>\n</div>";

/***/ }),

/***/ 33752:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/components/sms-error/sms-error.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<p>\r\n    <span [ngSwitch]=\"errorType\">\r\n        <span *ngSwitchCase=\"errorTypes.EXPIRED\">\r\n            <span translate>AUTH.CODE.EXPIRED</span>\r\n            <span *ngIf='destinationLabel'\r\n                  translate> {{destinationLabel}} </span>\r\n        </span>\r\n        <span *ngSwitchCase=\"errorTypes.FORBIDDEN\">\r\n            <span translate>AUTH.CODE.FORBIDDEN</span>\r\n            <br>\r\n            <span translate>AUTH.CODE.REQUEST_NEW</span>\r\n            <span *ngIf='destinationLabel'\r\n                  translate> {{destinationLabel}} </span>\r\n        </span>\r\n        <span *ngSwitchCase=\"errorTypes.UNKNOWN\">\r\n            <span translate>AUTH.CODE.UNKNOWN</span>\r\n            <span *ngIf='destinationLabel'\r\n                  translate> {{destinationLabel}} </span>\r\n        </span>\r\n    </span>\r\n\r\n    <strong class=\"text-nowrap\"> {{destinationValue}} </strong>\r\n    <span *ngIf=\"errorType == errorTypes.UNKNOWN\"><br><span translate>AUTH.CODE.TRY_AGAIN</span></span>\r\n    <span *ngIf=\"isTimerRunning\"\r\n          [innerHTML]=\"'AUTH.CODE.TIMER' | translate: translateParams\"></span>.\r\n</p>\r\n\r\n<div class=\"auth-submit mt-2\">\r\n    <button translate\r\n            type=\"button\"\r\n            class=\"btn btn-outline-primary\"\r\n            [jLoading]=\"isLoading\"\r\n            [jLoadingInverted]=\"true\"\r\n            [disabled]=\"isTimerRunning || isLoading\"\r\n            (click)=\"onClick()\">\r\n        {{ errorType == errorTypes.UNKNOWN ? 'AUTH.CODE.SEND_AGAIN' : 'AUTH.CODE.SEND_NEW'}}\r\n    </button>\r\n\r\n    <button translate\r\n            (click)='onClickSms()'\r\n            class=\"btn btn-link\">{{ backLabel}}</button>\r\n</div>";

/***/ }),

/***/ 36725:
/*!*********************************************************************!*\
  !*** ./src/app/shared/components/sms/sms.component.html?ngResource ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div [hidden]='!isReady'>\n  <h3 translate\n      class='light mb-3 mt-0 auth-heading '>SHARED.SMS.TITLE</h3>\n  <div [hidden]='currentTab != authTabs.FORM'>\n    <p translate>\n      SHARED.SMS.DESCRIPTION\n      <strong class='text-nowrap'>{{maskedPhone}}</strong>\n    </p>\n    <p [innerHTML]=\"'SHARED.SMS.NEW_CODE' | translate:translateParam\"\n       class='mt-2 text-muted'>\n    </p>\n\n    <form class='mt-4'\n          (ngSubmit)='onSubmit()'\n          [formGroup]='authSmsForm'>\n      <j-sms-input #smsInput\n                   class='my-4'\n                   [errorText]='errorText'\n                   [errorTranslateParams]='errorTranslateParams'\n                   [hasError]='hasError'\n                   [autofocus]='true'\n                   [formControl]='f.smsCode'></j-sms-input>\n      <div class='auth-submit'>\n        <button translate\n                type='submit'\n                class='btn btn-static btn-primary btn-lg'\n                [jLoading]='isLoading'\n                [disabled]='isLoading'>SHARED.CONTINUE\n        </button>\n        <button translate\n                *ngIf='isAuthAction'\n                class='btn btn-link'\n                [jLoading]='isLoading'\n                [disabled]='isLoading'\n                (click)='onOtpClicked()'>SHARED.OTP.SEND_OTP\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <j-sms-error *ngIf='currentTab == authTabs.EXPIRED'\n               backLabel='SHARED.OTP.SEND_OTP'\n               [errorType]='errorTypes.EXPIRED'\n               [isLoading]='isLoading'\n               destinationLabel='SHARED.SMS.DESTINATION'\n               [destinationValue]='maskedPhone'\n               [timerValue]='timerValue'\n               [isTimerRunning]='isTimerRunning'\n               (codeRequested)='requestSms()'\n               (smsErrorSendSms)='onOtpClicked()'>\n  </j-sms-error>\n\n  <j-sms-error *ngIf='currentTab == authTabs.FORBIDDEN'\n               backLabel='SHARED.OTP.SEND_OTP'\n               [errorType]='errorTypes.FORBIDDEN'\n               [isLoading]='isLoading'\n               destinationLabel='SHARED.SMS.DESTINATION'\n               [destinationValue]='maskedPhone'\n               [timerValue]='timerValue'\n               [isTimerRunning]='isTimerRunning'\n               (codeRequested)='requestSms()'\n               (smsErrorSendSms)='onOtpClicked()'>\n  </j-sms-error>\n\n  <j-sms-error *ngIf='currentTab == authTabs.FORBIDDEN_BLOCKED'\n               backLabel='SHARED.OTP.SEND_OTP'\n               [errorType]='errorTypes.FORBIDDEN'\n               [isLoading]='isLoading'\n               destinationLabel='SHARED.SMS.DESTINATION'\n               [destinationValue]='maskedPhone'\n               [timerValue]='blockedTimerValue'\n               [isTimerRunning]='isBlockedTimerRunning'\n               (codeRequested)='requestSms()'\n               (smsErrorSendSms)='onOtpClicked()'>\n  </j-sms-error>\n\n  <j-sms-error *ngIf='currentTab == authTabs.ERRORED'\n               backLabel='SHARED.OTP.SEND_OTP'\n               [errorType]='errorTypes.UNKNOWN'\n               [isLoading]='isLoading'\n               destinationLabel='SHARED.SMS.DESTINATION'\n               [destinationValue]='maskedPhone'\n               [isTimerRunning]='isBlockedTimerRunning'\n               [timerValue]='blockedTimerValue'\n               (codeRequested)='requestSms()'\n               (smsErrorSendSms)='onOtpClicked()'>\n  </j-sms-error>\n</div>";

/***/ }),

/***/ 70327:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/components/statuses/statuses.component.html?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"statuses\">\r\n  <button (click)=\"onSelect(status)\"\r\n          class=\"btn btn-sm filter-btn\"\r\n          *ngFor=\"let status of statuses;\"\r\n          [class.active]=\"status.value == selectedStatus?.value\"\r\n          [class.mb-3]=\"statuses.length > 4\"\r\n          [disabled]=\"status.isDisabled\"\r\n          translate>\r\n    {{ status.label }}\r\n    <span class=\"badge filter-badge\"\r\n          *ngIf=\"status.count > 0 \"\r\n          [class]=\"status.classList\">{{status.count}}</span>\r\n    <span class=\"badge filter-badge badge-light\"\r\n          *ngIf=\"status.count == null\">\r\n      <span [jLoading]=\"true\"></span>\r\n    </span>\r\n  </button>\r\n</div>";

/***/ }),

/***/ 32640:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/switch/switch.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-switch {{ customClasses }}\"\n     [ngClass]=\"{\n  disabled: disabled,\n  'j-switch_double': offLabel && offLabel.length > 0,\n  'j-switch_right': sticked\n}\">\n  <label>\n    {{ offLabel | translate}}\n    <input type=\"checkbox\"\n           class=\"j-switch--input\"\n           [disabled]=\"disabled\"\n           [value]=\"value\"\n           (change)=\"onChange($event)\"\n           [checked]=\"value\" />\n    <span class=\"j-switch--toggle {{ color }} {{ size }}\"> <span class=\"j-switch--toggler\"></span> </span>\n    {{ onLabel | translate }}\n  </label>\n</div>\n";

/***/ }),

/***/ 62792:
/*!***************************************************************************!*\
  !*** ./src/app/shared/components/toggle/toggle.component.html?ngResource ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-switch\">\n  <label>\n    <input type=\"checkbox\"\n           class=\"j-switch--input\"\n           [value]=\"value\"\n           (change)=\"onChange()\"\n           [checked]=\"value\" />\n    <span class=\"j-switch--toggle\">\n      <span class=\"j-switch--toggler\"></span>\n    </span>\n  </label>\n</div>";

/***/ }),

/***/ 14744:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/components/uploading-files/uploading-files.component.html?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ul class=\"j-uploading-files\">\n  <li class=\"j-uploading-files__item\"\n      *ngFor=\"let item of uploadingFiles\">\n\n    <div class=\"j-uploading-files__icon\"\n         [class.j-uploading-files__icon--loading]=\"item.isLoading\">\n      <circle-progress class=\"j-uploading-files__progress\"\n                       [hidden]=\"!item.isLoading\"\n                       [percent]=\"item.progress\"></circle-progress>\n      <span *ngIf=\"!item.error\"\n            class=\"j-uploading-files__file text-blue\"\n            inlineSVG=\"/assets/icons/contracts/file.svg\"></span>\n      <span *ngIf=\"item.error\"\n            class=\"j-uploading-files__file\"\n            inlineSVG=\"/assets/icons/contracts/error.svg\"></span>\n    </div>\n\n    <div class=\"j-uploading-files__name text-truncate\">\n      <div class=\"p2\">\n        {{ item.isLoading ? (mapTranslate('FILE_IS_LOADING') | translate) : item.file?.name }}\n      </div>\n      <div *ngIf=\"item.error\"\n           class=\"p4 text-danger\">{{item.error | translate}}</div>\n    </div>\n\n    <button (click)=\"onFileDelete(item)\"\n            [disabled]=\"isLoading\"\n            class=\"btn btn-link j-uploading-files__delete\"\n            inlineSVG='/assets/icons/contracts/delete.svg'>\n    </button>\n  </li>\n</ul>";

/***/ }),

/***/ 80584:
/*!**************************************************************************!*\
  !*** ./src/app/shared/date-picker/date-picker.component.html?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input j-input-datepicker\"\r\n     [class.has-error]=\"hasError\">\r\n  <input #inputControl\r\n         placement=\"bottom\"\r\n         [minDate]=\"minDate\"\r\n         [maxDate]=\"maxDate\"\r\n         type=\"text\"\r\n         class=\"form-control\"\r\n         ngbDatepicker\r\n         [displayMonths]=\"('>=sm'| isBreakpoint) ? 2 : 1\"\r\n         [id]=\"id\"\r\n         [autoClose]=\"'outside'\"\r\n         [class.is-filled]=\"isFilled\"\r\n         [formControl]=\"formControl\"\r\n         navigation=\"'arrows'\"\r\n         (dateSelect)=\"onDateSelection($event)\"\r\n         (closed)=\"onClosed()\"\r\n         [markDisabled]=\"markDisabled\"\r\n         (focus)=\"onFocus()\"\r\n         jLockKeyboardInput>\r\n  <ng-container *ngIf=\"formatValue\">\r\n    <span class=\"date-picker--formated form-control\">\r\n      {{formControl.value | jDateFormat | async }}\r\n    </span>\r\n  </ng-container>\r\n  <label class=\"j-input--float-label\"\r\n         [for]=\"id\">{{label}}</label>\r\n  <button type=\"button\"\r\n          class=\"btn btn-link btn-sm rounded-circle j-input-button\"\r\n          [class.j-input-button--shifted]=\"isClearable\"\r\n          [inlineSVG]=\"'/assets/icons/calendar-gray.svg'\"\r\n          (click)=\"onToggle()\">\r\n  </button>\r\n  <button type=\"button\"\r\n          *ngIf=\"isClearable\"\r\n          class=\"btn btn-link btn-sm rounded-circle j-input-button\"\r\n          [inlineSVG]=\"'/assets/icons/v2/close-round-16.svg'\"\r\n          (click)=\"onClear()\">\r\n  </button>\r\n</div>\r\n<div class=\"j-input-helper--errors\"\r\n     *ngIf=\"errorMessages && formControl.touched\"\r\n     [ngxErrors]=\"formControl\">\r\n  <ng-template ngFor\r\n               let-item\r\n               [ngForOf]=\"errorMessages\"\r\n               [ngForTrackBy]=\"( 'error' | trackByProperty )\">\r\n    <small [ngxError]=\"item.error\"\r\n           [class]=\"helperClasses\"\r\n           class=\"j-input-helper text-danger\">{{item.message}}</small>\r\n  </ng-template>\r\n</div>\r\n<!-- <div *ngIf=\"hasError && errorText\"\r\n     [class]=\"helperClasses\"\r\n     class=\"j-input-helper\">\r\n  {{errorText}}\r\n</div> -->\r\n<div *ngIf=\"helperText\"\r\n     class=\"j-input-helper p3 text-muted\">\r\n  {{helperText}}\r\n</div>";

/***/ }),

/***/ 60784:
/*!************************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-edit-item/employee-edit-item.component.html?ngResource ***!
  \************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"employee-edit-item\"\n     [ngClass]=\"{'employee-edit-item_removing': (hideStream$ | async)}\">\n  <div class=\"employee-edit-item--cell employee-edit-item--cell_num p3\">{{index + 1}}</div>\n<div class='employee-info'>\n  <div class='info-row'>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_iin\">\n      <j-form-field class=\"j-form-field_narrow\">\n        <j-label>{{'SHARED.IIN' | translate}}</j-label>\n        <input type=\"text\"\n               jFormInput\n               name=\"iin\"\n               (keyup.enter)=\"onAutocomplete($event)\"\n               (blur)=\"onAutocomplete()\"\n               class=\"form-control\"\n               [dropSpecialCharacters]=\"true\"\n               [jShadow]=\"masks.iin.shadow\"\n               [mask]=\"masks.iin.mask\"\n               [formControl]=\"form.iin\">\n        <div jSuffix\n             [jLoading]=\"item.autocomplete$ | async\"\n             [jLoadingInverted]=\"true\"\n             class=\"counterParty p3\">\n        </div>\n        <j-error [control]=\"form.iin\"\n                 [errorMessages]=\"errors.iinOrBin\"></j-error>\n      </j-form-field>\n    </div>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_name\">\n      <j-form-field class=\"j-form-field_narrow\">\n        <j-label>{{'SHARED.PERSON.LASTNAME' | translate}}</j-label>\n        <input #fioComponent=\"jFormInput\"\n               type=\"text\"\n               jFormInput\n               name=\"fio\"\n               class=\"form-control form-control_narrow\"\n               [formControl]=\"form.lastName\">\n        <!-- <j-error [control]=\"form.controls.iinOrBin\"\n               [errorMessages]=\"errors.iinOrBin\"></j-error> -->\n      </j-form-field>\n    </div>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_name\">\n      <j-form-field class=\"j-form-field_narrow\">\n        <j-label>{{'SHARED.PERSON.FIRSTNAME' | translate}}</j-label>\n        <input #fioComponent=\"jFormInput\"\n               type=\"text\"\n               jFormInput\n               name=\"fio\"\n               class=\"form-control form-control_narrow\"\n               [formControl]=\"form.firstName\">\n        <!-- <j-error [control]=\"form.controls.iinOrBin\"\n               [errorMessages]=\"errors.iinOrBin\"></j-error> -->\n      </j-form-field>\n\n    </div>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_name\">\n      <j-form-field class=\"j-form-field_narrow\">\n        <j-label>{{'SHARED.PERSON.MIDDLENAME' | translate}}</j-label>\n        <input #fioComponent=\"jFormInput\"\n               type=\"text\"\n               jFormInput\n               name=\"fio\"\n               class=\"form-control form-control_narrow\"\n               [formControl]=\"form.middleName\">\n        <!-- <j-error [control]=\"form.controls.iinOrBin\"\n               [errorMessages]=\"errors.iinOrBin\"></j-error> -->\n      </j-form-field>\n\n    </div>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_controls\">\n      <ng-container [ngTemplateOutlet]=\"(showCancel$ | async) ? cancelRemove : remove\"></ng-container>\n    </div>\n  </div>\n\n  <div  class='info-row'>\n    <div *ngIf=\"birthDateRequired\"\n         class=\"employee-edit-item--cell employee-edit-item--cell_birth\">\n      <j-date-input class=\"narrow\"\n                    [isCalendarShown]=\"false\"\n                    [label]=\"'PAYMENTS.EMPLOYEES.BIRTH_DATE' | translate\"\n                    [hasError]=\"form.birthDate.errors && isSubmitted\"\n                    [formControl]=\"form.birthDate\"\n                    [minDate]=\"minDate\"\n                    [maxDate]=\"maxDate\"></j-date-input>\n    </div>\n    <div *ngIf=\"form.period\"\n         class=\"employee-edit-item--cell employee-edit-item--cell_period\">\n      <j-period-input class=\"narrow\"\n                      [value]=\"form.period.value\"\n                      [hasError]=\"form.period.errors && isSubmitted\"\n                      [formControl]=\"form.period\"></j-period-input>\n    </div>\n    <div *ngIf=\"form.iban\"\n         class=\"employee-edit-item--cell employee-edit-item--cell_iban\">\n      <j-form-field class=\"j-form-field_narrow\">\n        <j-label><span translate>PAYMENTS.EMPLOYEES.IBAN</span></j-label>\n        <input #accountInput=\"jFormInput\"\n               type=\"text\"\n               jFormInput\n               jReplaceOnPaste=\"KZ\"\n               jDynamicPrefix=\"KZ\"\n               jUppercase\n               class=\"form-control\"\n               [dropSpecialCharacters]=\"true\"\n               [mask]=\"masks.iban.mask\"\n               [jShadow]=\"masks.iban.shadow\"\n               [formControl]=\"form.iban\">\n        <j-error [control]=\"form.iban\"\n                 [errorMessages]=\"errors.bankAccount\"></j-error>\n      </j-form-field>\n    </div>\n    <div class=\"employee-edit-item--cell employee-edit-item--cell_amount\">\n      <j-amount-input class=\"narrow\"\n                      [currency]=\"CURRENCY.KZT\"\n                      [formControl]=\"form.amount\"\n                      [hasError]=\"(form.amount.errors || (amountError$ | async)) && isSubmitted\"\n                      [errorText]=\"amountError$ | async\"\n                      [minAmount]=\"minAmount\"></j-amount-input>\n    </div>\n    <button *ngIf=\"!(hideControls$ | async) && additionalPeriodEnabled && !(showCancel$ | async)\"\n            (click)=\"onAddPeriod()\"\n            type=\"button\"\n            class=\"btn btn-link text-info p-0 add-period\"\n            title=\"add\">\n      <small> +&nbsp;{{'PAYMENTS.EMPLOYEES.ADD_PERIOD' | translate}}</small>\n    </button>\n  </div>\n</div>\n\n\n\n</div>\n\n<ng-template #remove>\n  <ng-container *ngIf=\"!(hideControls$ | async)\">\n<!--    <button *ngIf=\"additionalPeriodEnabled\"-->\n<!--            (click)=\"onAddPeriod()\"-->\n<!--            type=\"button\"-->\n<!--            class=\"btn btn-link text-info p-0 ml-auto\"-->\n<!--            title=\"add\">-->\n<!--      <small> +&nbsp;{{'PAYMENTS.EMPLOYEES.ADD_PERIOD' | translate}}</small>-->\n<!--    </button>-->\n    <button type=\"button\"\n            tooltipClass=\"tooltip-light\"\n            [ngbTooltip]=\"removeLabel | translate\"\n            placement=\"left\"\n            class=\"btn btn-link btn-as-text btn-link-gray ml-auto\"\n            (click)=\"onRemove()\">\n      <i [inlineSVG]=\"'bucket' | svgPath\"></i>\n    </button>\n  </ng-container>\n</ng-template>\n<ng-template #cancelRemove>\n  <button type=\"button\"\n          (click)=\"onCancel()\"\n          class=\"btn btn-link text-info p-0 ml-auto\">\n    <i class=\"employee-delete-icon\"\n       [inlineSVG]=\"'arrow-loop-left' | svgPath\"></i>\n    <small [translateParams]=\"{deleteTimerValue: item.removing$.getValue()}\"\n           translate>PAYMENTS.EMPLOYEES.REMOVE_CONFIRM</small>\n  </button>\n</ng-template>\n";

/***/ }),

/***/ 88328:
/*!********************************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/employee-group-control/employee-group-control.component.html?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"list-header\">\n  <legend class=\"h2\"\n          translate>PAYMENTS.EMPLOYEES.TITLE</legend>\n</div>\n<ng-content select=\"[header]\"></ng-content>\n<div class=\"form-group\">\n  <ul class=\"list-group\">\n    <li *ngIf=\"commonPeriodEnabled\"\n        class=\"list-group-item text-left d-flex align-items-center\">\n      <j-switch [formControl]=\"commonPeriodEnabled\"></j-switch>\n      <div class=\"ml-3 w-100\">\n        <div *ngIf=\"commonPeriodEnabled.value; else commonPeriodDisabled\">\n          <j-period-input [hasError]=\"commonPeriod.errors && isSubmitted\"\n                          label=\"{{'PAYMENTS.COMMON_PERIOD' | translate}}\"\n                          [formControl]=\"commonPeriod\"></j-period-input>\n        </div>\n        <ng-template #commonPeriodDisabled>\n          <div translate>PAYMENTS.COMMON_PERIOD</div>\n        </ng-template>\n        <small class=\"text-gray\"\n               translate>\n          PAYMENTS.COMMON_PERIOD_EMPLOYEES\n        </small>\n\n      </div>\n    </li>\n    <li (click)=\"showPicker()\"\n        class=\"employee-group--trigger list-group-item text-left d-flex align-items-center\">\n      <div class=\"ml-1\">\n        <h6 class=\"mb-0\" translate>PAYMENTS.EMPLOYEES.LIST</h6>\n        <small class=\"text-gray\">{{'SHARED.SELECTED' | translate}}: {{selectedCount}}</small>\n        <div>\n          <!-- TODO check ngx error for Custom control  -->\n          <ng-content select=\"j-error\"></ng-content>\n        </div>\n        <i class=\"btn btn-icon btn-link-gray\" [inlineSVG]=\"'chevron-right' | svgPath\"></i>\n      </div>\n    </li>\n  </ul>\n</div>\n";

/***/ }),

/***/ 38940:
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/employee/components/saved-employee/saved-employee.component.html?ngResource ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div *ngIf=\"!employee.isDeleting\">\n    <div class=\"custom-control custom-checkbox\">\n        <input type=\"checkbox\"\n               class=\"custom-control-input\"\n               [id]=\"id\"\n               [ngModel]=\"employee.isSelected\"\n               (change)=\"onSelect()\">\n        <label class=\"custom-control-label\"\n               [for]=\"id\">\n            <span class=\"p2 saved-name\">{{ fio }}</span>\n            <small *ngIf=\"birthDateRequired\"\n                   class=\"d-block text-muted\">\n                <span translate>PAYMENTS.EMPLOYEES.BIRTH_DATE</span>:\n                <ng-container *ngIf=\"employee.birthDate\">{{employee.birthDate | date: 'dd.MM.yyyy'}}</ng-container>\n                <ng-container *ngIf=\"!employee.birthDate\">\n                    <span class=\"text-danger \"\n                          translate>PAYMENTS.EMPLOYEES.NO_BIRTH_DATE</span>\n                </ng-container>\n            </small>\n            <small *ngIf=\"ibanRequired\"\n                   class=\"d-block text-muted\">\n                <span translate>PAYMENTS.EMPLOYEES.ACCOUNT</span>:\n                <ng-container *ngIf=\"employee.iban\">{{employee.iban | formatIban}}</ng-container>\n                <ng-container *ngIf=\"!employee.iban\">\n                    <span class=\"text-danger \"\n                          translate>PAYMENTS.EMPLOYEES.NO_IBAN</span>\n                </ng-container>\n            </small>\n            <small class=\"d-block text-muted\">\n                <span translate>SHARED.AMOUNT</span>:\n                <ng-container *ngIf=\"employee.getBalance(paymentType)\">\n                    <j-money [money]=\"employee.getBalance(paymentType)\"></j-money>\n                </ng-container>\n                <ng-container *ngIf=\"!employee.getBalance(paymentType)\">\n                    <span class=\"text-danger\"\n                          translate>PAYMENTS.EMPLOYEES.NO_AMOUNT</span>\n                </ng-container>\n            </small>\n        </label>\n    </div>\n    <div class=\"saved-employee-actions\">\n        <a href=\"#\"\n           class=\"saved-employee-action\"\n           (click)=\"onEdit($event)\">\n            <j-icon class=\"saved-employee-icon\"\n                    name=\"edit\"></j-icon>\n            <j-icon class=\"saved-employee-icon--hover\"\n                    name=\"edit\"\n                    color=\"primary\"></j-icon>\n        </a>\n        <a href=\"#\"\n           class=\"saved-employee-action\"\n           (click)=\"onDelete($event)\">\n            <j-icon class=\"saved-employee-icon\"\n                    name=\"delete\"></j-icon>\n            <j-icon class=\"saved-employee-icon--hover\"\n                    name=\"delete\"\n                    color=\"primary\"></j-icon>\n        </a>\n    </div>\n</div>\n<div *ngIf=\"employee.isDeleting\"\n     class=\"employee-delete-confirm\">\n    <div class=\"text-muted\"\n         translate>\n        PAYMENTS.EMPLOYEES.REMOVED\n    </div>\n    <a href=\"#\"\n       (click)=\"onDeleteCancelled($event)\"\n       class=\"employee-delete-link\">\n        <img class=\"employee-delete-icon\"\n             src=\"/assets/icons/undo.svg\">\n        <span [translateParams]=\"{deleteTimerValue: timerValue}\"\n              translate>PAYMENTS.EMPLOYEES.REMOVE_CONFIRM</span>\n    </a>\n</div>\n";

/***/ }),

/***/ 37179:
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/edit-saved-employee/edit-saved-employee.component.html?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"saved-employees modal-body\">\n\n  <div class=\"list-header-wrap\">\n    <button type=\"button\"\n            (click)=\"close()\"\n            href=\"/\"\n            class=\"btn btn-outline-primary edit-employees-close\">\n      <j-icon name=\"chevronLeft\"\n              stroke=\"true\"\n              color=\"currentColor\"></j-icon>\n    </button>\n\n    <h5 class=\"list-header m-0\"\n        translate>\n      PAYMENTS.EMPLOYEES.EDIT\n    </h5>\n\n    <a href=\"#\"\n       (click)=\"deleteEmployee($event)\"\n       class=\"ml-auto edit-delete\">\n\n      <j-icon class=\"edit-delete-icon\"\n              name=\"delete\"\n              color=\"default\"></j-icon>\n\n      <j-icon class=\"edit-delete-icon edit-delete-icon--hover\"\n              name=\"delete\"\n              color=\"primary\"></j-icon>\n    </a>\n\n  </div>\n\n  <form class=\"employee-form\"\n        [formGroup]=\"employeeForm\">\n\n    <j-iin-input [formControl]=\"f.iin\"\n                 [isClearable]=\"false\"\n                 [isDisabled]=\"true\"></j-iin-input>\n\n    <j-input [hasError]=\"hasLastNameError\"\n             [label]=\"'PAYMENTS.EMPLOYEES.LASTNAME' | translate\"\n             [formControl]=\"f.lastName\"></j-input>\n\n    <j-input [hasError]=\"hasFirstNameError\"\n             [label]=\"'PAYMENTS.EMPLOYEES.FIRSTNAME' | translate\"\n             [formControl]=\"f.firstName\"></j-input>\n\n    <j-input [hasError]=\"hasMiddleNameError\"\n             [label]=\"'PAYMENTS.EMPLOYEES.MIDDLENAME' | translate\"\n             [formControl]=\"f.middleName\"></j-input>\n\n    <div *ngIf=\"f.iban\"\n         class=\"form-group\">\n      <j-iban-input [label]=\"'PAYMENTS.EMPLOYEES.IBAN' | translate\"\n                    [hasError]=\"hasIbanError\"\n                    [formControl]=\"f.iban\"></j-iban-input>\n    </div>\n\n    <div *ngIf=\"f.birthDate\"\n         class=\"form-group\">\n      <j-date-input [isCalendarShown]=\"false\"\n                    [label]=\"'PAYMENTS.EMPLOYEES.BIRTH_DATE' | translate\"\n                    [hasError]=\"hasBirthdayError\"\n                    [formControl]=\"f.birthDate\"\n                    [minDate]=\"minDate\"\n                    [maxDate]=\"maxDate\"></j-date-input>\n    </div>\n    <div class=\"form-group\">\n      <j-amount-input [formControl]=\"f.amount\"\n                      [currency]=\"currency\"\n                      [hasError]=\"hasAmountError\"\n                      [minAmount]=\"minAmount\"></j-amount-input>\n    </div>\n\n    <div *ngIf=\"errorText\"\n         class=\"alert alert-danger\"\n         translate>\n      {{errorText}}\n    </div>\n\n    <div class=\"saved-footer\">\n      <button type=\"button\"\n              (click)=\"close()\"\n              class=\"btn btn-outline-primary\"\n              translate>SHARED.CANCEL</button>\n      <button type=\"submit\"\n              (click)=\"save()\"\n              class=\"ml-3 btn btn-primary\"\n              translate>SHARED.SAVE</button>\n    </div>\n\n    <ngx-spinner type=\"ball-scale-ripple-multiple\"\n                 [fullScreen]=\"false\"\n                 size=\"large\"\n                 color=\"#d6dadf\"\n                 bdColor=\"rgba(255, 255, 255, 0.5)\"></ngx-spinner>\n  </form>\n</section>\n";

/***/ }),

/***/ 75072:
/*!**************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/employees-modal/employees-modal.component.html?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div (click)=\"modal.dismiss()\"\r\n     class=\"modal--close\">\r\n  <button type=\"button\"\r\n          class=\"close\">\r\n    <img src=\"/assets/icons/close.svg\"\r\n         alt=\"{{'SHARED.CLOSE' | translate}}\" />\r\n  </button>\r\n  <button type=\"button\"\r\n          class=\"btn btn-outline-primary btn-sm\">\r\n    <i [inlineSVG]=\"'chevron-left' | svgPath\"></i>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"modal-header\">\r\n  <h4 translate>PAYMENTS.EMPLOYEES.TITLE</h4>\r\n  <button (click)=\"openSavedEmployees($event)\"\r\n          class=\"p2 btn btn-link btn-as-text mt-2\">\r\n    <i [inlineSVG]=\"'list' | svgPath\"\r\n       class=\"d-inline mr-1\"></i>\r\n    {{'SHARED.' + (('<=sm' |\r\n          isBreakpoint)\r\n          ? 'FROM_DICTIONARY'\r\n          : 'ADD_FROM_DICTIONARY'\r\n          )\r\n          |\r\n          translate}}\r\n          </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"employees-modal--search form-group\">\r\n    <j-form-field clearable=\"true\">\r\n      <j-icon class=\"text-gray d-block mt-n1\"\r\n              jPrefix\r\n              name=\"search\"></j-icon>\r\n      <input type=\"text\"\r\n             jFormInput\r\n             placeholder=\"Поиск по ФИО, ИИН\"\r\n             class=\"form-control\"\r\n             [formControl]=\"term\">\r\n    </j-form-field>\r\n\r\n  </div>\r\n  <div #scrollContainer\r\n       class=\"scrolled\">\r\n    <form class=\"scrolled--content\"\r\n          #form=\"ngForm\"\r\n          [ngClass]=\"{'employees-list_filtered' : this.term$ | async}\"\r\n          [formGroup]=\"employeesForm\">\r\n      <div class=\"employees-list list-unstyled m-0\">\r\n        <j-employee-edit-item #employeeListItem\r\n                              *ngFor=\"let item of visibleList$ | async; index as i\"\r\n                              [index]=\"i\"\r\n                              [item]=\"item\"\r\n                              [group]=\"item.group\"\r\n                              [masks]=\"masks\"\r\n                              [errors]=\"errors\"\r\n                              [minAmount]=\"minAmount\"\r\n                              [maxAmount]=\"maxAmount\"\r\n                              [additionalPeriodEnabled]=\"additionalPeriodEnabled\"\r\n                              [birthDateRequired]=\"birthDateRequired\"\r\n                              [isSubmitted]=\"form.submitted\"\r\n                              (autocomplete)=\"onAutocomplete($event)\"\r\n                              (addPeriod)=\"onAddPeriod($event)\"\r\n                              (remove)=\"removeItem($event)\"\r\n                              (cancelRemove)=\"cancelRemove($event)\"></j-employee-edit-item>\r\n      </div>\r\n\r\n      <div *ngIf=\"showNotFound$ | async\">\r\n        <p class=\"text-center text-light light\">{{ 'PAYMENTS.EMPLOYEES.NOT_FOUND' | translate }}</p>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  <div>\r\n    <button [disabled]=\"term$ | async\"\r\n            (click)=\"onAddItem()\"\r\n            type=\"button\"\r\n            class=\"btn btn-outline-light btn-dashed btn-transparent btn-block btn-frozen\">\r\n      <i class=\"text-primary\"\r\n         [inlineSVG]=\"'add-employee' | svgPath\"></i>\r\n      {{'PAYMENTS.EMPLOYEES.ADD_NEW' | translate}}\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"(collectionSize$ | async) > pageSize\"\r\n       class=\"form-group mt-3\">\r\n    <ngb-pagination [(page)]=\"currentPage\"\r\n                    [maxSize]=\"5\"\r\n                    [rotate]=\"true\"\r\n                    [pageSize]=\"pageSize\"\r\n                    [collectionSize]=\"collectionSize$ | async\">\r\n      <ng-template ngbPaginationPrevious><i [inlineSVG]=\"'chevron-left' | svgPath\"></i>\r\n      </ng-template>\r\n      <ng-template ngbPaginationNext><i [inlineSVG]=\"'chevron-right' | svgPath\"></i></ng-template>\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal-footer\">\r\n  <div class=\"employees-modal--total\">\r\n    <span class=\"p2\"\r\n          translate>SHARED.TOTAL</span>\r\n    <strong class=\"p1\">\r\n      {{total$ | async | amountFormat}}\r\n      {{currency | curSymbol}}\r\n    </strong>\r\n  </div>\r\n  <button [disabled]=\"term$ | async\"\r\n          (click)=\"onSubmit()\"\r\n          type=\"button\"\r\n          class=\"btn btn-primary\">{{'SHARED.CONTINUE' | translate}}</button>\r\n</div>";

/***/ }),

/***/ 99527:
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/employee/modals/saved-employee-list/saved-employee-list.component.html?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section *ngIf=\"!isEditing\"\r\n         class=\"saved-employees modal-body\" class=\"dictionary-modal\">\r\n  <div class=\"modal-body\">\r\n    <h5 class=\"list-header\">\r\n      <div (click)=\"closeModal($event)\"\r\n          class=\"modal--close\">\r\n        <button type=\"button\"\r\n                class=\"close\">\r\n          <img src=\"/assets/icons/close.svg\"\r\n              alt=\"{{'SHARED.CLOSE' | translate}}\" />\r\n        </button>\r\n        <button type=\"button\"\r\n                class=\"btn btn-outline-primary btn-sm\">\r\n          <i [inlineSVG]=\"'chevron-left' | svgPath\"></i>\r\n        </button>\r\n      </div>\r\n      <span *ngIf=\"selectedItems?.length > 0\">\r\n        <span translate>PAYMENTS.EMPLOYEES.SELECTED</span>:\r\n        <span>{{selectedItems.length}}/{{filteredList.length}}</span>\r\n      </span>\r\n      <span *ngIf=\"!selectedItems.length\"\r\n            translate>PAYMENTS.EMPLOYEES.TITLE</span>\r\n    </h5>\r\n    <div class=\"form-group\">\r\n      <j-form-field>\r\n        <j-icon class=\"text-gray d-block mt-n1\"\r\n                jPrefix\r\n                viewBox=\"0 0 24 24\"\r\n                name=\"search\"\r\n                [color]=\"'disabled'\"></j-icon>\r\n        <input jFormInput\r\n              type=\"text\"\r\n              [placeholder]=\"'PAYMENTS.EMPLOYEES.SEARCH' | translate\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"search\">\r\n      </j-form-field>\r\n    </div>\r\n    <section *ngIf=\"list?.length == 0\">\r\n      <j-empty-placeholder label=\"PAYMENTS.EMPLOYEES.EMPTY\"></j-empty-placeholder>\r\n\r\n      <div class=\"saved-employee-footer\">\r\n        <a href=\"#\"\r\n          (click)=\"closeModal($event)\"\r\n          class=\"btn btn-primary ml-3\"\r\n          translate>SHARED.CLOSE</a>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"saved-employee-list\"\r\n        *ngIf=\"list?.length\">\r\n      <div class=\"select-all-wrap\">\r\n        <div class=\"saved-employee\">\r\n          <div class=\"custom-control custom-checkbox select-all\">\r\n            <input type=\"checkbox\"\r\n                  class=\"custom-control-input\"\r\n                  id=\"selectAll\"\r\n                  [ngModel]=\"isAllSelected\"\r\n                  (change)=\"selectAll()\">\r\n            <label class=\"custom-control-label\"\r\n                  for=\"selectAll\">\r\n              <span class=\"p2 saved-name\"\r\n                    translate>PAYMENTS.EMPLOYEES.SELECT_ALL</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <a href=\"#\"\r\n          *ngIf=\"selectedItems.length > 0\"\r\n          (click)=\"deleteBulk($event)\"\r\n          class=\"saved-delete-all\">\r\n          <j-icon class=\"saved-delete-all-icon\"\r\n                  name=\"delete\"\r\n                  color=\"default\"></j-icon>\r\n          <j-icon class=\"saved-delete-all-icon saved-delete-all-icon--hover\"\r\n                  name=\"delete\"\r\n                  color=\"primary\"></j-icon>\r\n        </a>\r\n      </div>\r\n        \r\n      <div class=\"dictionary-modal--list\">\r\n        <ng-container *ngFor=\"let item of filteredList; let i = index; let last = last\">\r\n          <j-saved-employee *ngIf=\"!item.isHidden\"\r\n                            [birthDateRequired]=\"birthDateRequired\"\r\n                            [ibanRequired]=\"ibanRequired\"\r\n                            [employee]=\"item\"\r\n                            [paymentType]=\"paymentType\"\r\n                            [isDeletingBulk]=\"isDeletingBulk\"\r\n                            [index]=\"i\"\r\n                            class=\"saved-employee\"\r\n                            [ngClass]=\"{'saved-employee__last_child': last}\"\r\n                            (edited)=\"onEdit($event)\"\r\n                            (deleted)=\"onDelete($event)\"\r\n                            (deleteCancelled)=\"onDeleteCancelled($event)\"\r\n                            (deleteConfirmed)=\"onDeleteConfirmed($event)\">\r\n          </j-saved-employee>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n    <div class=\"saved-employee-footer\">\r\n      <a href=\"#\"\r\n         (click)=\"closeModal($event)\"\r\n         class=\"btn btn-outline-primary\"\r\n         translate>SHARED.CANCEL</a>\r\n      <a href=\"#\"\r\n         (click)=\"closeModal($event)\"\r\n         class=\"btn btn-primary ml-3\"\r\n         translate>SHARED.NEXT</a>\r\n    </div>\r\n    <div class=\"spinner-wrap\"\r\n        *ngIf=\"isLoading\">\r\n      <ngx-spinner type=\"ball-scale-ripple-multiple\"\r\n                  [fullScreen]=\"false\"\r\n                  size=\"large\"\r\n                  color=\"#d6dadf\"\r\n                  bdColor=\"rgba(255, 255, 255, 0.5)\"></ngx-spinner>\r\n    </div>\r\n  </div>\r\n</section>\r\n<j-edit-saved-employee *ngIf=\"isEditing\"\r\n                       [birthDateRequired]=\"birthDateRequired\"\r\n                       [ibanRequired]=\"ibanRequired\"\r\n                       [paymentType]=\"paymentType\"\r\n                       [employee]=\"editEmployee\"\r\n                       [index]=\"editEmployeeIndex\"\r\n                       (deleted)=\"onDeleteConfirmed($event)\"\r\n                       (closed)=\"onEditClose()\"\r\n                       (saved)=\"onEditSave($event)\"></j-edit-saved-employee>\r\n";

/***/ }),

/***/ 62604:
/*!********************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/bank-dropdown/bank-dropdown.component.html?ngResource ***!
  \********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"bank-dropdown\"\r\n        [class.collapsed]=\"isCollapsed\"\r\n        [class.has-value]=\"selectedBank\"\r\n        (clickOutside)=\"onClickOutside()\">\r\n        <div class=\"bank-dropdown__trigger-wrapper\">\r\n        <button (click)=\"onTriggerClick($event)\"\r\n              [class.bank-dropdown__trigger--collapsed]=\"isCollapsed\"\r\n              class=\"btn bank-dropdown__trigger\"\r\n              id=\"exchange_rates\">\r\n              <span class=\"text-dark bank-dropdown__header\">{{ 'EXCHANGE_RATES.' + selectedBank | translate }}</span>\r\n              <span class=\"bank-dropdown__arrow\"\r\n                [inlineSVG]=\"'assets/icons/arrow-down.svg'\"></span>\r\n          </button>\r\n          <span class=\"text-dark\">{{'EXCHANGE_RATES.FOR' | translate}} {{today | date: 'dd.MM.yyyy'}}</span>\r\n        </div>\r\n        <div class=\"bank-dropdown__body\"\r\n            *ngIf=\"isCollapsed\">\r\n                <button href=\"#\"\r\n                   (click)=\"onClick($event, bank)\"\r\n                   class=\"btn bank-dropdown__item\"\r\n                   [class.bank-dropdown__item--selected]=\"isSelected(bank)\"\r\n                   *ngFor=\"let bank of banks\"\r\n                   [id]='bank'>\r\n                  <span class=\"d-block text-dark\">{{'EXCHANGE_RATES.' + bank | translate}}</span>\r\n                </button>\r\n        </div>\r\n    </div>";

/***/ }),

/***/ 61756:
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/currency-selector/currency-selector.component.html?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "\n<section class=\"currency-selector__header\">\n    <div class=\"p2 text-dark currency-selector__header_size_b\">\n        {{'EXCHANGE_RATES.EXCHANGE_RATES' | translate}}\n    </div>\n    <a href=\"#\"\n        (click)=\"onClose($event)\"\n        class=\"details__close ml-auto\"\n        id=\"exchange_rates_close\">\n        <j-icon size=\"md\"\n                class=\"size-md\"\n                name=\"cross\"></j-icon>\n    </a>\n</section>\n<section class=\"currency-selector__search\">\n      <div class=\"currency-selector__info\">\n        {{'EXCHANGE_RATES.SELECT_CURRENCY' | translate}}\n      </div>\n</section>\n\n<section class=\"currency-selector-block\" *ngIf=\"!error\">\n    <div *ngFor=\"let currency of currencies\">\n        <div class=\"currency-selector-block__row\" *ngIf=\"currency.bank !== 'NATIONAL_BANK' && !currency.isDefault\">\n            <div class=\"currency-selector-block__cell\">\n                <j-entity-logo\n                    size=\"sm\"\n                    [name]=\"currency.code\"></j-entity-logo>\n\n            </div>\n            <div class=\"currency-selector-block__cell-grid\">\n                <span>{{currency.code}}</span>\n                <span class=\"currency-selector-block__desc\">{{'SHARED.CURRENCY_DESCRIPTION.'+currency.code | translate}}</span>\n            </div>\n            <j-switch (change)=\"onChange($event, currency)\" [value]=\"currency.isActive\" [id]=\"currency.code\"></j-switch>\n        </div>\n    </div>\n</section>\n<ng-container *ngIf=\"error\" class=\"currency-selector-block\">\n    <div class=\"currency-selector-block__error\" translate>EXCHANGE_RATES.CURRENCIES_LOADING_ERROR</div>\n    <button class=\"btn btn-link btn-block\"\n            (click)=\"loadAllCurrencies()\"\n            translate>SHARED.REFRESH</button>\n</ng-container>\n";

/***/ }),

/***/ 22036:
/*!********************************************************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/components/exchange-rates-list/exchange-rates-list.component.html?ngResource ***!
  \********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"exchange-rates-block\" \n        *ngIf=\"!exchangeRates || exchangeRates?.length>0\">\n    <div>\n        <div class=\"exchange-rates-block__row text-muted\">\n            <div class=\"exchange-rates-block__cell--left\">\n                {{'CONTRACTS.DETAILS.CURRENCY' | translate}}\n            </div>\n            <div class=\"exchange-rates-block__cell\" *ngIf=\"selectedBank === 'DOMESTIC_BANK'\">\n                {{'EXCHANGE_RATES.PURCHASE' | translate}}\n            </div>\n            <div class=\"exchange-rates-block__cell--right\" *ngIf=\"selectedBank === 'DOMESTIC_BANK'\">\n                {{'EXCHANGE_RATES.SALE' | translate}}\n            </div>\n            <div class=\"exchange-rates-block__cell\" *ngIf=\"selectedBank === 'NATIONAL_BANK'\"></div>\n            <div class=\"exchange-rates-block__cell--right\" *ngIf=\"selectedBank === 'NATIONAL_BANK'\">\n                {{'EXCHANGE_RATES.RATE' | translate}}\n            </div>\n        </div>\n    </div>\n    <div *ngFor=\"let rate of exchangeRates\">\n        <div class=\"exchange-rates-block__row\" \n            *ngIf=\"rate.bank === selectedBank\">\n            <div class=\"exchange-rates-block__cell-grid\">\n                <j-entity-logo\n                    size=\"xs\"\n                    [name]=\"rate.code\" class=\"exchange-rates__logo\"></j-entity-logo>\n                <strong class=\"exchange-rates__text--size\">{{rate.code}}</strong>\n                <div [ngClass]=\"{'exchange-rates__arrow--up': rate.salesProgress === 'UP', 'exchange-rates__arrow--down': rate.salesProgress === 'DOWN'}\"></div>\n            </div>\n            <div class=\"exchange-rates-block__cell exchange-rates__text--size\" *ngIf=\"selectedBank === 'DOMESTIC_BANK'\">\n                {{rate.purchaseRate}}\n            </div>\n            <div class=\"exchange-rates-block__cell\" *ngIf=\"selectedBank === 'NATIONAL_BANK'\"></div>\n            <div class=\"exchange-rates-block__cell--right exchange-rates__text--size\">\n                {{rate.salesRate}}\n            </div>\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"!exchangeRates && !error\">\n        <ngx-skeleton-loader [theme]=\"{ width: '68px', height: '24px', margin: '22px 14px', 'background-color':'#ECEEF1'}\" count=\"3\">\n        </ngx-skeleton-loader>\n        <ngx-skeleton-loader [theme]=\"{ width: '68px', height: '24px', margin: '22px 14px', 'background-color':'#ECEEF1'}\" count=\"3\">\n        </ngx-skeleton-loader>\n        <ngx-skeleton-loader [theme]=\"{ width: '68px', height: '24px', margin: '22px 14px', 'background-color':'#ECEEF1'}\" count=\"3\">\n        </ngx-skeleton-loader>\n    </ng-container>\n    <ng-container *ngIf=\"error\">\n        <div class=\"exchange-rates-block__error\" translate>EXCHANGE_RATES.RATES_LOADING_ERROR</div>\n        <button class=\"btn btn-link btn-block\" \n                (click)=\"onUpdate()\"\n                translate>SHARED.REFRESH</button>\n    </ng-container>\n    <div class=\"exchange-rates-block__footer\">\n        <a href=\"#\" \n            class=\"exchange-rates-block__row_ref_blue\"\n            (click)=\"onCurrencySelectorOpen($event)\"\n            id=\"all_currencies\">{{'EXCHANGE_RATES.ALL_CURRENCIES' | translate}}</a>\n    </div>\n</section>\n<ng-container *ngIf=\"exchangeRates?.length===0\">\n    <div class=\"exchange-rates-block exchange-rates-block__empty\">\n        <button class=\"btn btn-link-gray btn-outline-dark-deep btn-dashed btn-transparent btn-block btn-frozen\"\n                (click)=\"onCurrencySelectorOpen($event)\"\n                translate>\n                EXCHANGE_RATES.NO_EXCHANGE_RATES\n        </button>\n    </div>\n</ng-container>";

/***/ }),

/***/ 63062:
/*!********************************************************************************!*\
  !*** ./src/app/shared/exchange-rates/exchange-rates.component.html?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"exchange-rates\">\n     <j-bank-dropdown (selected)=\"selectedBank = $event\"></j-bank-dropdown>\n     <j-exchange-rates-list [exchangeRates]=\"exchangeRates\"\n                            [selectedBank]=\"selectedBank\"\n                            [error]=\"error\"\n                            (currencySelectorOpened)=\"showCurrencySelector()\"\n                            (updateClicked)=\"loadUserExchangeRates()\">\n     </j-exchange-rates-list>\n     <section class=\"f-page-wrapper is-shown\"\n              [ngClass]=\"wrapperClasses\"\n              *ngIf=\"isSelectorShown\">\n          <div class=\"f-page-backdrop\"\n               (click)=\"hideSelector()\"></div>\n          <section [ngClass]=\"selectorClasses\"\n                   class=\"f-page-content f-page-content--gray f-page-content--quarter currency-selector\">\n               <j-currency-selector [exchangeRates]=\"exchangeRates\"\n                                    (closed)=\"hideSelector()\"></j-currency-selector>\n          </section>\n     </section>\n</div>";

/***/ }),

/***/ 53880:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-body/f-page-body.component.html?ngResource ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>";

/***/ }),

/***/ 99469:
/*!***********************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-extra/f-page-extra.component.html?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>";

/***/ }),

/***/ 51758:
/*!*************************************************************************************!*\
  !*** ./src/app/shared/f-page/f-page-header/f-page-header.component.html?ngResource ***!
  \*************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-content></ng-content>\n";

/***/ }),

/***/ 44113:
/*!****************************************************************!*\
  !*** ./src/app/shared/f-page/f-page.component.html?ngResource ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"f-page\">\r\n  <section [class]=\"pageClasses.header\">\r\n    <div [class]=\"pageClasses.container\">\r\n      <button type=\"button\"\r\n              (click)=\"close()\"\r\n              [class.f-page-close--outside]=\"closePosition == closePositions.OUTSIDE\"\r\n              class=\"btn btn-outline-primary f-page-close\">\r\n        <j-icon name=\"chevronLeft\"\r\n                stroke=\"true\"\r\n                color=\"currentColor\"></j-icon>\r\n      </button>\r\n      <div [class]=\"pageClasses.row\">\r\n        <div [class]=\"pageClasses.cols\">\r\n          <ng-content select=\"f-page-header\"></ng-content>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <ng-container [ngTemplateOutletContext]=\"{ $implicit: pageClasses }\" [ngTemplateOutlet]=\"contentTemplate || contentDefaultTemplate\"></ng-container>\r\n</section>\r\n\r\n<ng-template #contentDefaultTemplate>\r\n  <section [class]=\"pageClasses.body\">\r\n    <div [class]=\"pageClasses.container\">\r\n      <div [class]=\"pageClasses.row\">\r\n        <div [class]=\"pageClasses.cols\">\r\n          <ng-content select=\"f-page-body\"></ng-content>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section class=\"f-page-extra\">\r\n    <div [class]=\"pageClasses.container\">\r\n      <div [class]=\"pageClasses.row\">\r\n        <div [class]=\"pageClasses.cols\">\r\n          <ng-content select=\"f-page-extra\"></ng-content>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</ng-template>";

/***/ }),

/***/ 97675:
/*!*******************************************************************!*\
  !*** ./src/app/shared/form-field/error.component.html?ngResource ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<span [ngxErrors]=\"control\">\n  <ng-template ngFor\n               let-item\n               [ngForOf]=\"errorMessages\"\n               [ngForTrackBy]=\"( 'error' | trackByProperty )\">\n    <small [ngxError]=\"item.error\"\n           class=\"j-error--item\" [innerHtml]=\"item.message | translate: (item.params || params)\"></small>\n  </ng-template>\n</span>";

/***/ }),

/***/ 61622:
/*!************************************************************************!*\
  !*** ./src/app/shared/form-field/form-field.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-form-field\">\r\n  <div class=\"j-form-field-wrapper form-control\"\r\n       #connectionContainer\r\n       (click)=\"_control.onContainerClick && _control.onContainerClick($event)\">\r\n    <!-- Outline -->\r\n    <!-- <ng-container *ngIf=\"appearance === 'outline'\">\r\n      <div class=\"j-form-field-outline\">\r\n        <div class=\"j-form-field-outline-start\"></div>\r\n        <div class=\"j-form-field-outline-gap\"></div>\r\n        <div class=\"j-form-field-outline-end\"></div>\r\n      </div>\r\n      <div class=\"j-form-field-outline j-form-field-outline-thick\">\r\n        <div class=\"j-form-field-outline-start\"></div>\r\n        <div class=\"j-form-field-outline-gap\"></div>\r\n        <div class=\"j-form-field-outline-end\"></div>\r\n      </div>\r\n    </ng-container> -->\r\n    <div class=\"j-form-field-flex\">\r\n      <div class=\"j-form-field--prefix\"\r\n           *ngIf=\"_prefixChildren.length\">\r\n        <ng-content select=\"[jPrefix]\"></ng-content>\r\n      </div>\r\n\r\n      <div class=\"j-form-field--infix\"\r\n           #inputContainer>\r\n        <ng-content></ng-content>\r\n        <span class=\"j-form-field--label-wrapper\">\r\n          <label class=\"j-form-field--label\"\r\n                 [id]=\"labelId\"\r\n                 [attr.for]=\"_control.id\"\r\n                 [attr.aria-owns]=\"_control.id\"\r\n                 [class.j-empty]=\"_control.empty && !shouldAlwaysFloat\"\r\n                 [class.j-form-field-empty]=\"_control.empty && !shouldAlwaysFloat\"\r\n                 [class.j-accent]=\"color === 'accent'\"\r\n                 [class.j-warn]=\"color === 'warn'\"\r\n                 #label\r\n                 *ngIf=\"hasFloatingLabel()\"\r\n                 [ngSwitch]=\"_hasLabel()\">\r\n            <ng-content select=\"j-label\"></ng-content>\r\n          </label>\r\n        </span>\r\n        <!-- <span class=\"j-input-shadow\"\r\n              [hidden]=\"isShadowHidden\">\r\n          <span *ngFor=\"let char of shadow\"\r\n                [class.has-padding]=\"char.hasPadding\"\r\n                [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\r\n        </span> -->\r\n      </div>\r\n\r\n      <div class=\"j-form-field--suffix\"\r\n           *ngIf=\"_suffixChildren.length || (clearVisible$ | async)\">\r\n        <button *ngIf=\"clearVisible$ | async\"\r\n                type=\"button\"\r\n                (click)=\"clear($event)\"\r\n                class=\"j-input-button\">\r\n          <j-icon name='clear'\r\n                  color='disabled'></j-icon>\r\n        </button>\r\n        <div *ngIf=\"!(clearVisible$ | async)\">\r\n          <ng-content select=\"[jSuffix]\"></ng-content>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"_bottomLineChildren.length\">\r\n      <ng-content select=\"[jBottomLine]\"></ng-content>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"j-form-field-subscript-wrapper\"\r\n       [ngSwitch]=\"_getDisplayedMessages()\">\r\n\r\n    <div *ngSwitchCase=\"'error'\"\r\n         [@transitionMessages]=\"subscriptAnimationState\">\r\n      <ng-content select=\"j-error\"></ng-content>\r\n    </div>\r\n\r\n\r\n    <div class=\"j-form-field-hint-wrapper\"\r\n         *ngSwitchCase=\"'hint'\"\r\n         [@transitionMessages]=\"subscriptAnimationState\">\r\n      <ng-content select=\"j-hint:not([align='end'])\"></ng-content>\r\n      <div *ngIf=\"hintLabel\"\r\n           [id]=\"hintLabelId\">{{hintLabel}}</div>\r\n      <div class=\"j-form-field-hint-spacer\"></div>\r\n      <ng-content select=\"j-hint[align='end']\"></ng-content>\r\n    </div>\r\n\r\n  </div>\r\n</div>";

/***/ }),

/***/ 4153:
/*!************************************************************!*\
  !*** ./src/app/shared/icon/icon.component.html?ngResource ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<svg *ngIf=\"size == ICON_SIZE.DEFAULT\"\n     width=\"16\"\n     height=\"16\"\n     viewBox=\"0 0 16 16\"\n     fill=\"none\"\n     xmlns=\"http://www.w3.org/2000/svg\"\n     [class]=\"iconClass\"\n     [innerHTML]=\"svg\"></svg>\n<svg *ngIf=\"size == ICON_SIZE.MEDIUM\"\n     width=\"24\"\n     height=\"24\"\n     viewBox=\"0 0 24 24\"\n     fill=\"none\"\n     xmlns=\"http://www.w3.org/2000/svg\"\n     [class]=\"iconClass\"\n     [innerHTML]=\"svg\"></svg>";

/***/ }),

/***/ 62350:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input-shadow/input-shadow.component.html?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<span class=\"input-shadow\"\n      [hidden]=\"hidden\">\n  <span *ngFor=\"let char of shadowArr\"\n        [class.input-shadow_placeholder]=\"char.placeholder\"\n        [class.input-shadow_invisible]=\"char.invisible\">{{char.value}}</span>\n</span>\n";

/***/ }),

/***/ 24264:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/amount-input/amount-input.component.html?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input\"\r\n     *ngIf=\"maskConfig\"\r\n     [class.disabled]=\"formControl.disabled || isDisabled\"\r\n     [class.min-amount-shown]=\"isMinAmountShown && !isFilled\"\r\n     [class.has-error]=\"hasError\">\r\n      <input #input\r\n             class=\"form-control\"\r\n             name=\"amount\"\r\n             [mask]=\"maskConfig.mask\"\r\n             decimal\r\n             [suffix]=\"' ' + (currencySymbol || '')\"\r\n             [type]=\"type\"\r\n             [id]=\"id\"\r\n             jCursorBound\r\n             jReplaceDot\r\n             [class.is-filled]=\"isFilled\"\r\n             [formControl]=\"formControl\"\r\n             [dropSpecialCharacters]=\"false\"\r\n             (paste)=\"onPaste($event)\"\r\n             (click)=\"setCursorToEnd($event)\"\r\n             decimalMarker=\",\"\r\n             (keyup)=\"setCursorToEnd($event)\"\r\n             (keydown.backspace)=\"onBackspaceClick($event)\"\r\n             maxlength=\"18\"\r\n             (focus)=\"onFocus()\"\r\n             (blur)=\"onBlur()\">\r\n      <label class=\"j-input--float-label\"\r\n             [for]=\"id\"\r\n             translate>{{label}}</label>\r\n      <span class=\"j-input-shadow\"\r\n            [hidden]=\"isShadowHidden\">\r\n            <span *ngFor=\"let char of shadow\"\r\n                  [class.has-padding]=\"char.hasPadding\"\r\n                  [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\r\n      </span>\r\n      <button [class.is-hidden]=\"!isClearEnabled\"\r\n              type=\"button\"\r\n              class=\"j-input-button\"\r\n              (click)=\"clear()\">\r\n            <j-icon name='clear'\r\n                    color='disabled'></j-icon>\r\n      </button>\r\n</div>\r\n<a *ngIf=\"minAmount && maskConfig\"\r\n   href=\"#\"\r\n   class=\"min-amount\"\r\n   [class.is-hidden]=\"!isMinAmountShown\"\r\n   (click)=\"setMinAmount($event)\">\r\n      {{'SHARED.MIN_AMOUNT' | translate}} {{maskedMinAmount}}\r\n</a>\r\n<small *ngIf=\"hasError && errorText\"\r\n       [class]=\"helperClasses\"\r\n       class=\"d-block text-danger\"\r\n       translate>\r\n      {{errorText}}\r\n</small>\r\n<small *ngIf=\"helperText\"\r\n       class=\"d-block text-muted\"\r\n       [translate]=\"helperText\"\r\n       [translateParams]=\"helperTextParams\">\r\n</small>";

/***/ }),

/***/ 89409:
/*!************************************************************************************!*\
  !*** ./src/app/shared/input/country-codes/country-codes.component.html?ngResource ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"dictionary-modal\">\n    <button type=\"button\" class=\"close\" (click)=\"modal.dismiss()\">\n        <img src=\"/assets/icons/close.svg\" alt=\"{{'SHARED.CLOSE' | translate}}\" />\n    </button>\n    <div class=\"modal-body\">\n        <h5 class=\"country-codes__header\" translate=\"DIRECTORY.TITLE\"></h5>\n\n        <div class=\"country-codes__search\">\n            <j-search-input [placeholder]=\"'COUNTRIES.SEARCH'\" (valueChanged)=\"onQueryChange($event)\">\n            </j-search-input>\n        </div>\n\n        <div class=\"country-codes__block\">\n            <div *ngFor=\"let el of filteredCountryCodes\" class=\"country-code__row\" (click)=\"onCodeSelected(el)\">\n                <div class=\"country-code__key\">{{el.code}}</div>\n                <div class=\"country-code__value\">{{el.country}}</div>\n            </div>\n        </div>\n    </div>\n</div>";

/***/ }),

/***/ 48169:
/*!******************************************************************************!*\
  !*** ./src/app/shared/input/date-input/date-input.component.html?ngResource ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div ngbDropdown\r\n     container=\"body\"\r\n     #dropdown=\"ngbDropdown\"\r\n     autoClose='outside'>\r\n       <div class=\"j-input\"\r\n            [class.disabled]=\"isDisabled\"\r\n            [class.has-error]=\"(hasError || errorText) && !isErrorsHidden\">\r\n              <input #input\r\n                     class=\"form-control\"\r\n                     [name]=\"name\"\r\n                     [mask]=\"maskConfig.mask\"\r\n                     [type]=\"type\"\r\n                     [id]=\"id\"\r\n                     [class.is-filled]=\"isFilled\"\r\n                     [formControl]=\"formControl\"\r\n                     [dropSpecialCharacters]=\"false\"\r\n                     container=\"body\"\r\n                     (keyup)=\"onKeyUp()\"\r\n                     (focus)=\"onFocus()\"\r\n                     (blur)=\"onBlur()\">\r\n              <label class=\"j-input--float-label\"\r\n                     [for]=\"id\">{{label | translate}}</label>\r\n              <span class=\"j-input-shadow\"\r\n                    [hidden]=\"isShadowHidden\">\r\n                     <span *ngFor=\"let char of shadow\"\r\n                           [class.has-padding]=\"char.hasPadding\"\r\n                           [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\r\n              </span>\r\n              <button *ngIf=\"isCalendarShown\"\r\n                      class=\"j-input-button no-caret\"\r\n                      ngbDropdownToggle\r\n                      type=\"button\">\r\n                     <img src=\"/assets/icons/calendar.svg\">\r\n              </button>\r\n       </div>\r\n       <div *ngIf=\"isCalendarShown\"\r\n            class=\"filter-dropdown-menu\"\r\n            ngbDropdownMenu>\r\n              <ngb-datepicker #datepicker\r\n                              placement=\"bottom\"\r\n                              class=\"theme-jysan\"\r\n                              [minDate]=\"ngbMinDate\"\r\n                              [maxDate]=\"ngbMaxDate\"\r\n                              [ngModel]=\"datepickerModel\"\r\n                              (dateSelect)=\"onDateSelect($event)\">\r\n              </ngb-datepicker>\r\n       </div>\r\n       <div *ngIf=\"errorText && !isErrorsHidden\"\r\n            [class]=\"helperClasses\"\r\n            class=\"j-input-helper p3 text-danger\"\r\n            translate>\r\n              {{errorText}}\r\n       </div>\r\n</div>";

/***/ }),

/***/ 39778:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/input/dropdown-input/dropdown-input.component.html?ngResource ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-template #defaultSelectedTemplate\n             let-selected>\n     <span class=\"text-truncate\">\n          {{selected}}\n     </span>\n</ng-template>\n\n<ng-template #defaultOptionTemplate\n             let-option>\n     {{ option }}\n</ng-template>\n\n<div class=\"j-dropdown-input\"\n     [class.collapsed]=\"isCollapsed\"\n     [class.has-value]=\"selectedItem\"\n     (clickOutside)=\"onClickOutside()\">\n     <div class=\"j-input with-icon\"\n          [ngClass]=\"inputClass\"\n          [class.has-error]=\"hasError\"\n          (click)=\"toggleCollapse()\">\n          <div class=\"form-control j-dropdown-input__form-control\">\n               <div class=\"j-dropdown-input__selected\"\n                    *ngIf=\"selectedItem\">\n                    <ng-container [ngTemplateOutlet]=\"selectedTemplate || defaultSelectedTemplate\"\n                                  [ngTemplateOutletContext]=\"{ $implicit: selectedItem }\"></ng-container>\n               </div>\n          </div>\n          <label *ngIf=\"!selectedItem || labelShowAnyWay\"\n                 class=\"j-input--float-label\">{{ label | translate }}</label>\n\n          <div *ngIf=\"!isLoading && !isDisabled\"\n               class=\"j-input-button j-dropdown-input__arrow\"\n               [inlineSVG]=\"'/assets/icons/shared/dropdown.svg'\">\n          </div>\n\n          <div *ngIf=\"isLoading\"\n               class=\"j-input-button\">\n               <svg class=\"j-input-spinner\"\n                    viewBox=\"0 0 50 50\">\n                    <circle class=\"path\"\n                            cx=\"25\"\n                            cy=\"25\"\n                            r=\"20\"\n                            fill=\"none\"\n                            stroke-width=\"5\"></circle>\n               </svg>\n          </div>\n     </div>\n     <div [@smoothCollapse]=\"isCollapsed?'final':'initial'\"\n          class=\"j-dropdown-input__body\">\n\n           <div (click)=\"onSelect(option)\"\n                class=\"j-dropdown-input__item\"\n                [class.j-dropdown-input__item--blocked]=\"isBlocked(option)\"\n                [class.j-dropdown-input__item--hovered]=\"hoveredItem === option\"\n                [class.disabled]=\"option?.blockType === 'LOCK'\"\n                *ngFor=\"let option of options\">\n                <ng-container [ngTemplateOutlet]=\"optionTemplate || defaultOptionTemplate\"\n                              [ngTemplateOutletContext]=\"{ $implicit: option }\"></ng-container>\n           </div>\n\n          <j-empty-placeholder *ngIf=\"!isLoading && options?.length == 0\"\n                               [label]=\"emptyLabel\"></j-empty-placeholder>\n\n          <div *ngIf=\"isLoading\"\n               class=\"text-muted p2\">{{ 'ACCOUNTS.LOADING' | translate }}</div>\n     </div>\n</div>\n";

/***/ }),

/***/ 45834:
/*!******************************************************************************!*\
  !*** ./src/app/shared/input/iban-input/iban-input.component.html?ngResource ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input\"\n     [class.is-prefix-hidden]=\"isPrefixHidden\"\n     [class.has-bank-logo]=\"hasBankLogo\"\n     [class.disabled]=\"isDisabled\"\n     [class.has-error]=\"hasError || hasInternalError || errorText\">\n     <j-entity-logo class=\"j-input-prefix j-input-prefix--full\"\n                    hideEmpty=\"true\"\n                    [name]=\"bic\">\n     </j-entity-logo>\n     <input #input\n            class=\"form-control\"\n            name=\"iban\"\n            [prefix]=\"maskConfig.prefix\"\n            [mask]=\"maskConfig.mask\"\n            [type]=\"type\"\n            [id]=\"id\"\n            [class.is-filled]=\"isFilled\"\n            [formControl]=\"formControl\"\n            (keyup)=\"onKeyUp()\"\n            (keydown.backspace)=\"onBackspaceClick($event)\"\n            (paste)=\"onPaste($event)\"\n            (focus)=\"onFocus()\"\n            (blur)=\"onBlur()\">\n     <label translate\n            class=\"j-input-label j-input--float-label\"\n            [for]=\"id\">{{label}}</label>\n     <span class=\"j-input-shadow\"\n           [hidden]=\"isShadowHidden\">\n          <span *ngFor=\"let char of shadow\"\n                [class.has-padding]=\"char.hasPadding\"\n                [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\n     </span>\n     <div *ngIf=\"isLoading\"\n          class=\"j-input-suffix j-input-suffix-loading\"\n          [jLoading]=\"isLoading\"\n          [jLoadingInverted]=\"true\">\n     </div>\n     <button *ngIf=\"isClearable && !isDisabled\"\n             type=\"button\"\n             class=\"j-input-button\"\n             (click)=\"clear()\">\n          <j-icon name='clear'\n                  color='disabled'></j-icon>\n     </button>\n</div>\n<div *ngIf=\"hasError || hasInternalError || errorText\"\n     [class]=\"helperClasses\"\n     class=\"j-input-helper p3 text-danger\">\n     {{(errorText || internalError) | translate}}\n</div>\n<div translate\n     *ngIf=\"helperText\"\n     class=\"j-input-helper p3 text-muted\">\n     {{helperText}}\n</div>";

/***/ }),

/***/ 84671:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input/iin-input/iin-input.component.html?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input\"\r\n     [class.disabled]=\"isDisabled\"\r\n     [class.has-error]=\"hasError\">\r\n      <input #input\r\n             class=\"form-control\"\r\n             name=\"iin\"\r\n             [mask]=\"maskConfig.mask\"\r\n             [type]=\"type\"\r\n             [id]=\"id\"\r\n             [class.is-filled]=\"isFilled\"\r\n             [formControl]=\"formControl\"\r\n             (paste)=\"onPaste($event)\"\r\n             (focus)=\"onFocus()\"\r\n             (blur)=\"onBlur()\">\r\n      <label translate\r\n             class=\"j-input--float-label\"\r\n             [for]=\"id\">{{label}}</label>\r\n      <span class=\"j-input-shadow\"\r\n            [hidden]=\"isShadowHidden\">\r\n            <span *ngFor=\"let char of shadow\"\r\n                  [class.has-padding]=\"char.hasPadding\"\r\n                  [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\r\n      </span>\r\n      <div [hidden]=\"!iinName\"\r\n           #nameSuffix\r\n           class=\"j-input-suffix animate__animated animate__fadeIn\">\r\n            {{iinName}}\r\n      </div>\r\n      <div *ngIf=\"isLoading\"\r\n           class=\"j-input-suffix j-input-suffix-loading\"\r\n           [jLoading]=\"isLoading\"\r\n           [jLoadingInverted]=\"true\">\r\n      </div>\r\n      <button *ngIf=\"isClearable && !isDisabled\"\r\n              type=\"button\"\r\n              class=\"j-input-button\"\r\n              (click)=\"clear()\">\r\n            <j-icon name='clear'\r\n                    color='disabled'></j-icon>\r\n      </button>\r\n</div>\r\n<div translate\r\n     *ngIf=\"hasError && errorText\"\r\n     [class]=\"helperClasses\"\r\n     class=\"j-input-helper p3 text-danger\">\r\n      {{errorText}}\r\n</div>\r\n<div translate\r\n     *ngIf=\"helperText\"\r\n     class=\"j-input-helper p3 text-muted\">\r\n      {{helperText}}\r\n</div>";

/***/ }),

/***/ 77525:
/*!**************************************************************!*\
  !*** ./src/app/shared/input/input.component.html?ngResource ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input\"\n     [ngClass]=\"inputClass\"\n     [class.disabled]=\"formControl.disabled\"\n     [class.has-error]=\"hasError\">\n  <div *ngIf=\"type === types.textarea\"\n       class=\"form-control j-input-textarea\"\n       [class.is-focused]=\"isFocused\"\n       [class.is-active]=\"isActive\"\n       [class.is-filled]=\"isFilled\">\n    <textarea #input\n              [id]=\"id\"\n              [formControl]=\"formControl\"\n              [autofocus]=\"autofocus\"\n              [attr.maxLength]=\"maxLength > 0 ? maxLength : null\"\n              (focus)=\"onFocus()\"\n              (blur)=\"onBlur()\"></textarea>\n  </div>\n  <ng-container *ngIf=\"type !== types.textarea\">\n    <input #input\n           class=\"form-control\"\n           *ngIf=\"hasMask\"\n           [prefix]=\"maskConfig.prefix || ''\"\n           [mask]=\"maskConfig.mask\"\n           [suffix]=\"suffix\"\n           [id]=\"id\"\n           [name]=\"name\"\n           [class.is-active]=\"isActive\"\n           [class.is-filled]=\"isFilled\"\n           [formControl]=\"formControl\"\n           [autofocus]=\"autofocus\"\n           [attr.maxLength]=\"maxLength > 0 ? maxLength : null\"\n           [dropSpecialCharacters]=\"dropSpecialCharacters\"\n           (focus)=\"onFocus()\"\n           (blur)=\"onBlur()\">\n    <input #input\n           class=\"form-control\"\n           *ngIf=\"!hasMask\"\n           [id]=\"id\"\n           [name]=\"name\"\n           [class.is-active]=\"isActive\"\n           [class.is-filled]=\"isFilled\"\n           [formControl]=\"formControl\"\n           [autofocus]=\"autofocus\"\n           [attr.maxLength]=\"maxLength > 0 ? maxLength : null\"\n           (keyup)=\"onKeyUp($event)\"\n           (focus)=\"onFocus()\"\n           (blur)=\"onBlur()\">\n  </ng-container>\n  <label class=\"j-input--float-label\"\n         [for]=\"id\"\n         translate>{{label}}</label>\n  <span class=\"j-input-extra\"\n        *ngIf=\"inputExtra\">\n    {{inputExtra}}\n  </span>\n  <span class=\"j-input-shadow\"\n        [class]=\"shadowClass\"\n        [hidden]=\"isShadowHidden\">\n    <span *ngFor=\"let char of shadow\"\n          [class.has-padding]=\"char.hasPadding\"\n          [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\n  </span>\n  <div class=\"j-input-link\"\n       *ngIf=\"link?.nativeElement?.children?.length != 0\">\n    <ng-content #link></ng-content>\n  </div>\n  <div *ngIf=\"!isClearable && button?.nativeElement?.children?.length > 0\"\n       class=\"j-input-button\">\n    <ng-content #button></ng-content>\n  </div>\n  <button *ngIf=\"isClearable\"\n          type=\"button\"\n          class=\"j-input-button\"\n          (click)=\"clear()\">\n    <j-icon name='clear'\n            color='disabled'></j-icon>\n  </button>\n</div>\n<div class=\"j-input-helper--errors\"\n     *ngIf=\"errorMessages && formControl.touched\"\n     [ngxErrors]=\"formControl\">\n  <ng-template *ngFor\n               let-item\n               [ngForOf]=\"errorMessages\"\n               [ngForTrackBy]=\"( 'error' | trackByProperty )\">\n    <small [ngxError]=\"item.error\"\n           [class]=\"helperClasses\"\n           class=\"j-input-helper text-danger\">{{item.message}}</small>\n  </ng-template>\n</div>\n<div *ngIf=\"hasError && errorText\"\n     [class]=\"helperClasses\"\n     class=\"j-input-helper p3 text-danger\">\n  {{errorText | translate}}\n</div>\n<div *ngIf=\"helperText\"\n     class=\"j-input-helper p3 text-muted\">\n  {{helperText | translate}}\n</div>";

/***/ }),

/***/ 95025:
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/input/multi-select-dropdown-input/multi-select-dropdown-input.component.html?ngResource ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"msdi__container\" [class.collapsed]=\"isCollapsed\">\n  <div class=\"form-control\" (click)=\"toggleCollapse()\">\n    <div class=\"msdi__value\">\n      {{ displaySelectedFn(selectedItems) }}\n\n      <div\n        *ngIf=\"!loading && !disabled\"\n        class=\"msdi__value--arrow\"\n        [inlineSVG]=\"'/assets/icons/shared/dropdown.svg'\"\n      ></div>\n    </div>\n  </div>\n\n  <div\n    class=\"msdi__list\"\n    [@smoothCollapse]=\"isCollapsed ? 'final' : 'initial'\"\n    [class.collapsed]=\"isCollapsed\"\n    [class.top]=\"openUnder\"\n    [class.bottom]=\"!openUnder\"\n  >\n    <div\n      *ngFor=\"let option of options; trackBy: trackByLabel; let index = index\"\n      class=\"msdi__list--item\"\n      [class.selected]=\"focusIndex === index\"\n      (click)=\"toggleSelect(option)\"\n    >\n      {{ displayItemFn(option) }}\n\n      <div \n      *ngIf=\"isItemActive(option)\" \n      classs=\"msdi__list--item-checked\"\n      [inlineSVG]=\"'/assets/icons/done.svg'\"></div>\n    </div>\n  </div>\n</div>\n";

/***/ }),

/***/ 15463:
/*!**************************************************************************************!*\
  !*** ./src/app/shared/input/password-input/password-input.component.html?ngResource ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input with-icon\"\n     [class.has-error]=\"hasError\">\n        <input #input\n               autocomplete=\"off\"\n               class=\"form-control\"\n               [class.extra-padding]=\"!isFocused\"\n               [type]=\"passwordInputType\"\n               [id]=\"id\"\n               [class.is-filled]=\"isFilled\"\n               [formControl]=\"formControl\"\n               [name]=\"name\"\n               [autofocus]=\"autofocus\"\n               (focus)=\"onFocus()\"\n               (blur)=\"onBlur()\">\n        <label translate\n               class=\"j-input--float-label\"\n               [for]=\"id\">{{label}}</label>\n        <button type=\"button\"\n                class=\"j-input-button\"\n                [class.is-hidden]=\"!isFocused || formControl.value == ''\"\n                (click)=\"togglePasswordVisibility($event)\"\n                (mouseup)=\"focus($event)\"\n                (mousedown)=\"focus($event)\">\n                <j-icon name='eyeOpened'\n                        [color]=\"'primary'\"\n                        [class.is-hidden]=\"!isPasswordVisible\"></j-icon>\n                <j-icon name='eyeClosed'\n                        [class.is-hidden]=\"isPasswordVisible\"></j-icon>\n        </button>\n        <a translate\n           *ngIf=\"isAuth\"\n           href=\"#\"\n           class=\"j-input-link\"\n           [class.is-hidden]=\"formControl.value != ''\"\n           routerLink=\"/auth/restore\"\n           queryParamsHandling=\"merge\">SHARED.FORGOT_PASSWORD</a>\n</div>\n<div translate\n     *ngIf=\"isCyrillicEntered || isCapsLockEnabled\"\n     [class]=\"helperClasses\"\n     class=\"j-input-helper p3 text-warning\">\n        ERRORS.PASSWORD_CAPS_OR_CYRILLIC\n</div>\n<div translate\n     *ngIf=\"hasError && errorText\"\n     [class]=\"helperClasses\"\n     class=\"j-input-helper p3 text-danger\">\n        {{errorText}}\n</div>\n<div translate\n     *ngIf=\"helperText\"\n     class=\"j-input-helper p3 text-muted\">\n        {{helperText}}\n</div>";

/***/ }),

/***/ 44894:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/period-input/period-input.component.html?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input with-icon\"\r\n     [class.has-error]=\"hasError\">\r\n  <input #input\r\n         [isDisabled]=\"formControl.disabled\"\r\n         #dp=\"bsDatepicker\"\r\n         bsDatepicker\r\n         name=\"periodBs\"\r\n         [(bsValue)]=\"value\"\r\n         [bsConfig]=\"bsConfig\"\r\n         (bsValueChange)=\"onBsChange($event)\"\r\n         class=\"form-control\"\r\n         [class.is-filled]=\"isFilled\"\r\n         [id]=\"id\"\r\n         [type]=\"type\"\r\n         [autofocus]=\"autofocus\"\r\n         (focus)=\"onFocus()\"\r\n         (blur)=\"onBlur()\">\r\n  <label class=\"j-input--float-label\"\r\n         [for]=\"id\">{{label | translate}}</label>\r\n  <button type=\"button\"\r\n          class=\"j-input-button\"\r\n          (click)=\"dp.toggle()\"\r\n          (mouseup)=\"focus($event)\"\r\n          (mousedown)=\"focus($event)\">\r\n    <img src=\"/assets/icons/calendar.svg\">\r\n  </button>\r\n</div>\r\n<div *ngIf=\"hasError && errorText\"\r\n     [class]=\"helperClasses\"\r\n     class=\"j-input-helper p3 text-danger\">\r\n  {{errorText | translate}}\r\n</div>\r\n<div *ngIf=\"helperText\"\r\n     class=\"j-input-helper p3 text-muted\">\r\n  {{helperText | translate}}\r\n</div>\r\n";

/***/ }),

/***/ 8535:
/*!********************************************************************************!*\
  !*** ./src/app/shared/input/phone-input/phone-input.component.html?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input with-icon\"\n     [class.has-error]=\"hasError\">\n       <input #input\n              pattern=\"[0-9() +]*\"\n              inputmode=\"numeric\"\n              autocomplete=\"off\"\n              class=\"form-control\"\n              [prefix]=\"phoneMaskConfig.prefix || ''\"\n              [mask]=\"phoneMaskConfig.mask\"\n              [specialCharacters]=\"phoneInputSpecialCharacters\"\n              [type]=\"type\"\n              [id]=\"id\"\n              [class.is-filled]=\"isFilled\"\n              [formControl]=\"formControl\"\n              [autofocus]=\"autofocus\"\n              (keydown.backspace)=\"onBackspace($event)\"\n              (focus)=\"onFocus()\"\n              (paste)=\"onPaste($event)\"\n              (input)=\"inputChange()\"\n              (blur)=\"onBlur()\">\n       <label translate\n              class=\"j-input--float-label\"\n              [for]=\"id\">{{ label }}</label>\n       <span class=\"j-input-shadow\"\n             [hidden]=\"isShadowHidden\">\n              <span *ngFor=\"let char of shadow\"\n                    [class.has-padding]=\"char.hasPadding\"\n                    [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\n       </span>\n       <button [class.is-hidden]=\"!isClearEnabled\"\n               type=\"button\"\n               class=\"j-input-button\"\n               (click)=\"clear()\">\n              <j-icon name='clear'\n                      color='disabled'></j-icon>\n       </button>\n</div>\n<div translate\n     *ngIf=\"hasError && errorText\"\n     [class]=\"helperClasses\"\n     class=\"j-input-helper p3 text-danger\">\n       {{ errorText }}\n</div>\n<div translate\n     *ngIf=\"helperText\"\n     class=\"j-input-helper p3 text-muted\">\n       {{ helperText }}\n</div>";

/***/ }),

/***/ 51174:
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/input/phone-prefix-input/phone-prefix-input.component.html?ngResource ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<button type=\"button\"\r\n        class=\"flag_select_button\"\r\n        (click)=\"onFocusCountryCode()\">\r\n  <img class=\"flag_icon\" [src]=\"imageUrl\"/>\r\n</button>\r\n";

/***/ }),

/***/ 58745:
/*!********************************************************************************!*\
  !*** ./src/app/shared/input/range-input/range-input.component.html?ngResource ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<form [formGroup]=\"formGroup\"\r\n      class=\"range-header\"\r\n      [class.range-header--no-borders]=\"hideBorders\">\r\n  <j-input #fromInput\r\n           maskType=\"date\"\r\n           label=\"SHARED.PERIOD.FROM\"\r\n           shadowClass=\"j-input-shadow--date\"\r\n           inputClass=\"m-0\"\r\n           (blurred)=\"onFromBlur()\"\r\n           (focused)=\"onFromFocus()\"\r\n           (keyup)=\"onKeyUpFrom()\"\r\n           [hasError]=\"formGroup.controls.from.touched && formGroup.controls.from.invalid\"\r\n           [formControl]=\"formGroup.controls.from\"\r\n           [isActive]=\"isFromActive\"\r\n           [isClearable]=\"true\"\r\n           [dropSpecialCharacters]=\"false\"></j-input>\r\n  <div class=\"range-delimiter\">-</div>\r\n  <j-input #toInput\r\n           maskType=\"date\"\r\n           label=\"SHARED.PERIOD.TO\"\r\n           shadowClass=\"j-input-shadow--date\"\r\n           inputClass=\"m-0\"\r\n           (blurred)=\"onToBlur()\"\r\n           (focused)=\"onToFocus()\"\r\n           (keyup)=\"onKeyUpTo()\"\r\n           [hasError]=\"formGroup.controls.to.touched && formGroup.controls.to.invalid\"\r\n           [formControl]=\"formGroup.controls.to\"\r\n           [isActive]=\"isToActive\"\r\n           [isClearable]=\"true\"\r\n           [dropSpecialCharacters]=\"false\"></j-input>\r\n</form>\r\n<div class=\"range-picker\">\r\n  <ngb-datepicker class=\"theme-jysan\"\r\n                  #datepicker\r\n                  (dateSelect)=\"onDateSelection($event)\"\r\n                  [displayMonths]=\"2\"\r\n                  [dayTemplate]=\"t\"\r\n                  [minDate]=\"minDate\"\r\n                  [maxDate]=\"maxDate\"\r\n                  navigation=\"arrows\"\r\n                  [(ngModel)]=\"datepickerModel\"\r\n                  outsideDays=\"hidden\">\r\n  </ngb-datepicker>\r\n</div>\r\n<div class=\"range-footer\"\r\n     [class.range-footer--no-borders]=\"hideBorders\">\r\n  <button type=\"button\"\r\n          (click)=\"close()\"\r\n          class=\"btn btn-outline-primary\">{{ 'SHARED.CANCEL' | translate }}</button>\r\n  <button type=\"button\"\r\n          [disabled]=\"formGroup.invalid\"\r\n          (click)=\"submit()\"\r\n          class=\"ml-3 btn btn-primary\">{{ submitLabel | translate }}</button>\r\n</div>\r\n\r\n<ng-template #t\r\n             let-date\r\n             let-focused=\"focused\">\r\n  <span class=\"custom-day\"\r\n        [class.range-start]=\"isRangeStart(date)\"\r\n        [class.range-end]=\"isRangeEnd(date)\"\r\n        [class.focused]=\"focused\"\r\n        [class.range]=\"isRange(date)\"\r\n        [class.faded]=\"isHovered(date) || isInside(date)\"\r\n        (mouseenter)=\"hoveredDate = date\"\r\n        (mouseleave)=\"hoveredDate = null\">\r\n    {{ date.day }}\r\n  </span>\r\n</ng-template>";

/***/ }),

/***/ 20377:
/*!**********************************************************************************!*\
  !*** ./src/app/shared/input/search-input/search-input.component.html?ngResource ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input j-input--no-label mb-0 \"\n     [class.has-error]=\"hasError\">\n        <span class=\"text-primary j-input-prefix\"\n              inlineSVG=\"/assets/icons/search.svg\"></span>\n        <input #input\n               class=\"form-control\"\n               *ngIf=\"!hasMask\"\n               [id]=\"id\"\n               [placeholder]=\"placeholder | translate\"\n               [class.is-filled]=\"isFilled\"\n               [formControl]=\"formControl\"\n               [name]=\"name\"\n               [autofocus]=\"autofocus\"\n               (focus)=\"onFocus()\"\n               (blur)=\"onBlur()\">\n    <button  *ngIf=\"isClearable\"\n             [hidden]='!isClearEnabled'\n             type=\"button\"\n             class=\"j-input-button\"\n             (click)=\"clear()\">\n      <j-icon name='clear'\n              color='disabled'></j-icon>\n    </button>\n</div>\n";

/***/ }),

/***/ 65637:
/*!****************************************************************************!*\
  !*** ./src/app/shared/input/sms-input/sms-input.component.html?ngResource ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"j-input j-sms-input\">\r\n  <input #input\r\n         class=\"form-control\"\r\n         [id]=\"id\"\r\n         [formControl]=\"formControl\"\r\n         [mask]=\"maskConfig.mask\"\r\n         [name]=\"name\"\r\n         [autofocus]=\"autofocus\"\r\n         (focus)=\"onFocus()\"\r\n         (blur)=\"onBlur()\"\r\n         inputmode=\"numeric\"\r\n         pattern=\"[0-9]*\"\r\n         autocomplete=\"one-time-code\">\r\n  <span class=\"j-input-shadow\">\r\n    <span *ngFor=\"let char of shadow\"\r\n          [class.has-padding]=\"char.hasPadding\"\r\n          [class.is-invisible]=\"char.isInvisible\">{{char.value}}</span>\r\n  </span>\r\n</div>\r\n<div translate\r\n     [translateParams]=\"errorTranslateParams\"\r\n     *ngIf=\"hasError && errorText\"\r\n     [class]=\"helperClasses\"\r\n     class=\"j-input-helper text-danger\">\r\n  {{errorText}}\r\n</div>";

/***/ }),

/***/ 36440:
/*!**************************************************************************!*\
  !*** ./src/app/shared/layout-home/layout-home.component.html?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<section class=\"layout-home\">\n  <section class=\"layout-home--header\">\n    <ng-content select=\"j-aside\">\n    </ng-content>\n  </section>\n  <section class=\"layout-home--content\">\n    <ng-content select=\"j-main\"></ng-content>\n  </section>\n</section>\n\n<section class=\"f-page-wrapper\"\n         [class.is-shown]=\"currentStep != steps.NONE\">\n  <div class=\"f-page-backdrop\"\n       (click)=\"setStep(steps.NONE)\"></div>\n  <section class=\"f-page-content f-page-content--quarter\"\n           [class.is-shown]=\"currentStep == steps.SELECT\">\n    <j-payment-select \n      *ngIf=\"currentStep == steps.SELECT\" \n      (selected)=\"setStep($event)\"></j-payment-select>\n  </section>\n</section>";

/***/ }),

/***/ 46056:
/*!************************************************************************!*\
  !*** ./src/app/shared/layout-home/main/main.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"container-fluid\">\n  <ng-content></ng-content>\n</div>\n";

/***/ }),

/***/ 45451:
/*!******************************************************************!*\
  !*** ./src/app/shared/loading/loading.component.html?ngResource ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "";

/***/ }),

/***/ 57466:
/*!***********************************************************************************!*\
  !*** ./src/app/shared/modals/import-error/import-error.component.html?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-header j-modal-header\">\n    <button type=\"button\"\n            class=\"close\"\n            (click)=\"dismissModal()\">\n        <img src=\"/assets/icons/close.svg\"\n             alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n</div>\n<div class=\"modal-body px-4 pt-0 pb-4 text-center \">\n    <img src=\"/assets/img/history/modals/error.svg\"\n         [alt]=\"title | translate\">\n    <h3 translate\n        class=\"light mb-3 mt-2\">{{title}}</h3>\n    <p class=\"m-0 text-muted\"\n       translate>\n        {{errorDescription}}\n    </p>\n    <p *ngIf=\"errorText\"\n       class=\"mt-3 mb-0 text-danger\">\n        {{errorText | translate}}\n    </p>\n</div>\n<div class=\"modal-footer py-4 px-3 justify-content-center\">\n    <button translate\n            type=\"button\"\n            class=\"btn btn-primary btn-block mb-3\"\n            (click)=\"closeModal()\">\n        SHARED.TRY_AGAIN\n    </button>\n    <a translate\n       class=\"btn btn-static btn-link m-0\"\n       [routerLink]=\"['/']\"\n       (click)=\"dismissModal()\">\n        SHARED.BACK_TO_HOME\n    </a>\n</div>\n";

/***/ }),

/***/ 10254:
/*!***************************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-error/import-partial-error.component.html?ngResource ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-header j-modal-header\">\r\n    <button type=\"button\"\r\n            class=\"close\"\r\n            (click)=\"dismissModal()\">\r\n        <img src=\"/assets/icons/close.svg\"\r\n             alt=\"{{'SHARED.CLOSE' | translate}}\">\r\n    </button>\r\n</div>\r\n<div class=\"modal-body j-modal-body text-center pb-3\">\r\n    <img src=\"/assets/img/history/modals/error.svg\"\r\n         alt=\"{{'IMPORT.FAILED.TITLE' | translate}}\">\r\n    <h3 translate\r\n        class=\"light mb-3 mt-2\">IMPORT.FAILED.TITLE</h3>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"draftedOperationsCount > 0\"\r\n       [innerHTML]=\"draftedText | translate: draftedTranslateParams\"></p>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"invalidFilesCount > 0\"\r\n       [innerHTML]=\"invalidText | translate: invalidTranslateParams\"></p>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"erroredOperationsCount > 0\"\r\n       [innerHTML]=\"erroredText | translate: erroredTranslateParams\"></p>\r\n</div>\r\n\r\n<div *ngIf=\"hasInvalidDateWarning\"\r\n     class=\"p3 modal-warning\"\r\n     [innerHTML]=\"'IMPORT.INVALID_DATE_WARNING' | translate\"></div>\r\n<div *ngIf=\"hasAlreadyImportedWarning\"\r\n     class=\"p3 modal-warning\"\r\n     [innerHTML]=\"alreadyImported | translate: alreadyImportedParams\"></div>\r\n\r\n<div class=\"modal-footer bg-main p-4 d-block justify-content-start\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <h5 class=\"m-0\"\r\n            translate=\"IMPORT.DRAFTED.SUBTITLE\"></h5>\r\n        <a translate\r\n           *ngIf=\"draftedOperationsCount > 0\"\r\n           class=\"m-0 p-0\"\r\n           [routerLink]=\"['/history/tenge']\"\r\n           [queryParams]=\"{'paymentStatus':'draft'}\"\r\n           (click)=\"dismissModal()\">\r\n            IMPORT.TO_DRAFTS\r\n            <span [inlineSVG]=\"'/assets/icons/shared/arrow-right.svg'\"></span>\r\n        </a>\r\n    </div>\r\n    <div *ngFor=\"let error of getCollectedErrors(importResultList)\">\r\n        <ng-container *ngIf=\"error\">\r\n            <strong>№{{error?.documentNumber}}: </strong>\r\n            <span class=\"text-muted\"\r\n                  [innerHTML]=\"'IMPORT.FILE'| translate: fileTranslateParams(error)\"></span>\r\n            <div *ngFor=\"let invalidFieldName of error?.invalidFieldsNames\"\r\n                 translate>{{ mapError(invalidFieldName) }}</div>\r\n        </ng-container>\r\n    </div>\r\n</div>";

/***/ }),

/***/ 13843:
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/modals/import-partial-success/import-partial-success.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-header j-modal-header\">\r\n    <button type=\"button\"\r\n            class=\"close\"\r\n            (click)=\"dismissModal()\">\r\n        <img src=\"/assets/icons/close.svg\"\r\n             alt=\"{{'SHARED.CLOSE' | translate}}\">\r\n    </button>\r\n</div>\r\n<div class=\"modal-body j-modal-body text-center pb-3\">\r\n    <img src=\"/assets/img/history/modals/partial.svg\"\r\n         alt=\"{{'IMPORT.DRAFTED.TITLE' | translate}}\">\r\n    <h3 translate\r\n        class=\"light mb-3 mt-2\">IMPORT.DRAFTED.TITLE</h3>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"successOperationsCount > 0\"\r\n       [innerHTML]=\"successText | translate: successTranslateParams\"></p>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"draftedOperationsCount > 0\"\r\n       [innerHTML]=\"draftedText | translate: draftedTranslateParams\"></p>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"invalidFilesCount > 0\"\r\n       [innerHTML]=\"invalidText | translate: invalidTranslateParams\"></p>\r\n    <p class=\"m-0 text-muted\"\r\n       *ngIf=\"erroredOperationsCount > 0\"\r\n       [innerHTML]=\"erroredText | translate: erroredTranslateParams\"></p>\r\n    <a translate\r\n       class=\"btn btn-static btn-link m-0\"\r\n       [routerLink]=\"['/history/tenge']\"\r\n       [queryParams]=\"{'paymentStatus':'forSign'}\"\r\n       (click)=\"closeModal()\">\r\n        IMPORT.TO_SIGNED\r\n        <span [inlineSVG]=\"'/assets/icons/shared/arrow-right.svg'\"></span>\r\n    </a>\r\n</div>\r\n\r\n<div *ngIf=\"hasInvalidDateWarning\" class=\"p3 modal-warning\" [innerHTML]=\"'IMPORT.INVALID_DATE_WARNING' | translate\"></div>\r\n\r\n<div class=\"modal-footer bg-main p-4 d-block justify-content-start\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <h5 class=\"m-0\"\r\n            translate=\"IMPORT.DRAFTED.SUBTITLE\"></h5>\r\n        <a translate\r\n           class=\"m-0 p-0\"\r\n           [routerLink]=\"['/history/tenge']\"\r\n           [queryParams]=\"{'paymentStatus':'draft'}\"\r\n           (click)=\"dismissModal()\">\r\n            IMPORT.TO_DRAFTS\r\n            <span [inlineSVG]=\"'/assets/icons/shared/arrow-right.svg'\"></span>\r\n        </a>\r\n    </div>\r\n    <div *ngFor=\"let error of getCollectedErrors(importResultList)\">\r\n        <strong>№{{error.documentNumber}}: </strong>\r\n        <span class=\"text-muted\"\r\n              [innerHTML]=\"'IMPORT.FILE'| translate: fileTranslateParams(error)\"></span>\r\n        <div *ngFor=\"let invalidFieldName of error.invalidFieldsNames\"\r\n             translate>{{ mapError(invalidFieldName) }}</div>\r\n    </div>\r\n</div>";

/***/ }),

/***/ 18014:
/*!***************************************************************************************!*\
  !*** ./src/app/shared/modals/import-success/import-success.component.html?ngResource ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-header j-modal-header\">\n    <button type=\"button\"\n            class=\"close\"\n            (click)=\"dismissModal()\">\n        <img src=\"/assets/icons/close.svg\"\n             alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n</div>\n<div class=\"modal-body j-modal-body text-center pb-4\">\n    <img src=\"/assets/img/history/modals/success.svg\"\n         alt=\"{{'IMPORT.SUCCESS.TITLE' | translate}}\">\n    <h3 translate\n        class=\"light mb-3 mt-2\">IMPORT.SUCCESS.TITLE</h3>\n    <p class=\"m-0 text-muted\"\n       [innerHTML]=\"successDescription | translate: translateParams\">\n    </p>\n</div>\n<div class=\"modal-footer py-4 px-3 justify-content-center\">\n    <a translate\n       [routerLink]=\"['/history/tenge']\"\n       [queryParams]=\"{'paymentStatus':'forSign'}\"\n       class=\"btn btn-primary btn-block mb-3\"\n       (click)=\"closeModal()\">\n        IMPORT.TO_SIGNED\n    </a>\n    <a translate\n       class=\"btn btn-static btn-link m-0\"\n       [routerLink]=\"['/']\"\n       (click)=\"dismissModal()\">\n        SHARED.BACK_TO_HOME\n    </a>\n</div>";

/***/ }),

/***/ 17311:
/*!*******************************************************************************!*\
  !*** ./src/app/shared/modals/list-modal/list-modal.component.html?ngResource ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-body px-4 pt-7 pb-4 text-center\">\n  <img [src]=\"imgSrc\"\n       alt=\"{{ title | translate }}\">\n  <h3 class=\"light mb-3 mt-2\">{{ title | translate }}</h3>\n\n  <p class=\"m-0 text-muted\"\n     *ngIf=\"result?.numberOfSuccess > 0\"\n     [innerHTML]=\"successText | translate: successParams\"></p>\n  <p class=\"mt-0 text-muted\"\n     *ngIf=\"result?.numberOfFailed > 0\"\n     [innerHTML]=\"failedText | translate: failedParams\"></p>\n\n</div>\n\n<div class=\"modal-footer py-4 px-3 justify-content-center\">\n  <button *ngIf=\"result.status === BULK_OPERATION_STATUS.FAILED\"\n          type=\"button\"\n          class=\"btn btn-primary btn-block mb-3\"\n          (click)=\"closeModal()\">\n    {{ 'SHARED.TRY_AGAIN' | translate }}\n  </button>\n  <button type=\"button\"\n          class=\"btn btn-static btn-link m-0\"\n          (click)=\"dismissModal()\">\n    {{ 'SHARED.CLOSE' | translate }}\n  </button>\n</div>\n\n<div class=\"modal-footer bg-main p-4 d-block justify-content-start\"\n     *ngIf=\"failedItems?.length > 0\">\n  <h4>{{mapTranslate('ERRORS') | translate }}</h4>\n  <div *ngFor=\"let item of failedItems\">\n    <strong>{{ getItemTitle(item) }} </strong>\n    <span *ngFor=\"let error of retrieveErrors(item); let i = index\">\n      {{error}}<span *ngIf=\"i < retrieveErrors(item)?.length -1\">, </span>\n    </span>\n  </div>\n</div>";

/***/ }),

/***/ 56602:
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/modals/maintenance-modal/maintenance-modal.component.html?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div class=\"modal-body px-4 pt-7 pb-4 text-center\">\n  <h3 class=\"light mb-3 mt-2\">{{ title | translate }}</h3>\n\n  <p class=\"m-0 text-muted\"\n     [innerHTML]=\"description | translate\"></p>\n</div>\n\n<div class=\"modal-footer py-4 px-3 justify-content-center\">\n  <button type=\"button\"\n          class=\"btn btn-static btn-link m-0\"\n          (click)=\"dismissModal()\">\n    {{ 'SHARED.CLOSE' | translate }}\n  </button>\n</div>\n";

/***/ }),

/***/ 96297:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-auth/nav-auth.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<nav class=\"j-nav\">\r\n  <div class=\"nav-item nav-item--icon-padding\"\r\n       *ngFor=\"let link of navList\"\r\n       [hidden]=\"!link.isShown\"\r\n       [class.active]=\"link.isActive\"\r\n       [class.passed]=\"link.isPassed\"\r\n       (click)=\"navItemClick($event)\">\r\n    <j-icon name=\"done\"\r\n            color=\"success\"\r\n            [class.is-hidden]=\"link.isPassed == false || link.hasError\"\r\n            [isStroke]=\"true\"></j-icon>\r\n    <j-icon *ngIf=\"link.hasError\"\r\n            name=\"fail\"\r\n            color=\"primary\"></j-icon>\r\n    <span translate>\r\n      {{link.label}}\r\n    </span>\r\n  </div>\r\n  <div *ngIf=\"showNoAccount\"\r\n       class=\"nav-item nav-item--icon-padding active\">\r\n    <span translate>\r\n      SHARED.USER_NOT_FOUND\r\n    </span>\r\n  </div>\r\n  <div *ngIf=\"showNoEmail\"\r\n       class=\"nav-item nav-item--icon-padding active\">\r\n    <span translate>\r\n      SHARED.USER_NOT_FOUND\r\n    </span>\r\n  </div>\r\n  <div *ngIf=\"showUserBlocked\"\r\n       class=\"nav-item nav-item--icon-padding active\">\r\n    <span translate>\r\n      SHARED.USER_BLOCKED\r\n    </span>\r\n  </div>\r\n  <div *ngIf=\"showPhoneNotMatch\"\r\n       class=\"nav-item nav-item--icon-padding active\">\r\n    <span translate>\r\n      SHARED.ERROR\r\n    </span>\r\n  </div>\r\n</nav>";

/***/ }),

/***/ 70090:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-item/nav-item.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<ng-container *ngTemplateOutlet=\"navItem.disabled ? disabledTemplate : linkTemplate\"></ng-container>\r\n\r\n<ng-template #linkTemplate>\r\n  <a [ngClass]=\"depth===0 ? 'nav-item' : 'nav-item__child'\"\r\n     [ngStyle]=\"{'margin-left': +depth*52+'px'} \"\r\n     [routerLink]=\"navItem.url\"\r\n     [state]=\"state\"\r\n     (click)=\"onItemClick()\"\r\n     routerLinkActive=\"current active\"\r\n     *ngIf=\"!navItem.children\">\r\n    <span>{{ navItem.title | translate}}</span>\r\n    <ng-container *ngTemplateOutlet=\"badgeTemplate\"></ng-container>\r\n  </a>\r\n  <j-collapsible [isCollapsed]=\"navItem.isCollapsed\"\r\n                 *ngIf=\"navItem.children?.length > 0\"\r\n                 (collapseClicked)=\"navItem.isCollapsed = $event\">\r\n    <j-collapsible-trigger class=\"nav-item nav_item__trigger\"\r\n                           [routerLink]=\"navItem.url\"\r\n                           routerLinkActive=\"current active\">\r\n      <div class=\"nav-item__collapse d-flex justify-content-between\">\r\n        <span>{{ navItem.title | translate}}</span>\r\n        <span class=\"nav-item__arrow\"\r\n              [inlineSVG]=\"'assets/icons/arrow-down.svg'\"></span>\r\n      </div>\r\n    </j-collapsible-trigger>\r\n    <j-collapsible-body class=\"nav-item__body\">\r\n      <j-nav-item *ngFor=\"let el of navItem.children\"\r\n                  [navItem]=\"el\"\r\n                  [depth]=\"depth+1\"></j-nav-item>\r\n    </j-collapsible-body>\r\n  </j-collapsible>\r\n</ng-template>\r\n\r\n<ng-template #disabledTemplate>\r\n  <span class=\"nav-item disabled\">\r\n    <span>{{ navItem.title | translate }}</span>\r\n    <ng-container *ngTemplateOutlet=\"badgeTemplate\"></ng-container>\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #badgeTemplate>\r\n  <span *ngIf=\"navItem.badge != 0 && navItem.badge != null\"\r\n        class=\"badge badge-primary ml-3\">{{ navItem.badge }}</span>\r\n  <span *ngIf=\"navItem.badge == null\"\r\n        class=\"badge badge-light ml-3\">\r\n    <span [jLoading]=\"true\"></span>\r\n  </span>\r\n</ng-template>";

/***/ }),

/***/ 42017:
/*!************************************************************************!*\
  !*** ./src/app/shared/nav/nav-main/nav-main.component.html?ngResource ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<nav class=\"j-nav\">\n  <j-nav-item *ngFor=\"let navItem of navList\"\n              [navItem]=\"navItem\"></j-nav-item>\n</nav>";

/***/ }),

/***/ 42480:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(14431)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map