{"version":3,"file":"src_app_payments_payments_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAO,MAAM,0BAA0B,GAAG,IAAI,CAAC;AACxC,MAAM,0BAA0B,GAAG,IAAI,CAAC;AAExC,MAAM,0BAA0B,GAAG,IAAI,CAAC;AACxC,MAAM,0BAA0B,GAAG,IAAI,CAAC;AAExC,MAAM,2BAA2B,GAAG,IAAI,CAAC;AACzC,MAAM,2BAA2B,GAAG,IAAI,CAAC;AAEzC,MAAM,2BAA2B,GAAG,IAAI,CAAC;AACzC,MAAM,2BAA2B,GAAG,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACVE;AACmE;AACtD;AACG;IAQrD,uBAAuB,SAAvB,uBAAwB,SAAQ,4EAAoB;IAI/D;QACE,KAAK,EAAE,CAAC;QAHV,WAAM,GAAmB,qEAAc,CAAC;IAIxC,CAAC;CACF;;AAPY,uBAAuB;IANnC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;QAE/C,UAAU,EAAE,CAAC,yEAAyB,CAAC;;KACxC,CAAC;GACW,uBAAuB,CAOnC;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb;AAMC;AACiC;AAU3C;AAaU;AAEY;AACgC;AACb;AAe/B;AAC2C;AAKjC;AACY;AACgB;AACK;AACS;AACxB;AAEyB;AAOpD;AAMD;AAE2C;AAO7C;AAEuC;AAEY;AAQ3C;AAaF;AACwC;AAEH;AAC0G;AAC1E;AACS;AAE1G,IAAK,KAEJ;AAFD,WAAK,KAAK;IACR,2BAAkB;AACpB,CAAC,EAFI,KAAK,KAAL,KAAK,QAET;AAED,MAAM,oBAAoB,GAAG,yEAAY,CAAC;AAC1C,MAAM,sBAAsB,GAAG,GAAG,CAAC;AACnC,MAAM,oBAAoB,GAAG,GAAG,CAAC;AACjC,MAAM,uBAAuB,GAAG,GAAG,CAAC;AAEpC,MAAM,6BAA6B,GAAG,EAAE,CAAC;AACzC,MAAM,6BAA6B,GAAG,EAAE,CAAC;AAEzC,MAAM,iCAAiC,GAAG,EAAE,CAAC;AAC7C,MAAM,iCAAiC,GAAG,EAAE,CAAC;AAE7C,MAAM,8BAA8B,GAAG,EAAE,CAAC;AAC1C,MAAM,8BAA8B,GAAG,EAAE,CAAC;AAE1C,MAAM,uBAAuB,GAAG,GAAG,CAAC;AACpC,MAAM,uBAAuB,GAAG,EAAE,CAAC;AAEnC,MAAM,eAAe,GAAG,EAAE,CAAC;AAE3B,MAAM,0BAA0B,GAAG,GAAG,CAAC;AAEvC,MAAM,oBAAoB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1D,6CAA6C;AAC7C,MAAM,+BAA+B,GAAG,KAAK,CAAC;AAE9C,MAAM,0BAA0B,GAAG,IAAI,MAAM,CAC3C,4DAA4D,CAC7D,CAAC;AAEF,MAAM,uCAAuC,GAAG,CAAC,IAAY,EAAE,EAAE;IAC/D,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,+BAA+B,CAAC;AAClE,CAAC,CAAC;AAEF,MAAM,kCAAkC,GAAG,CAAC,GAAW,EAAE,EAAE;IACzD,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,KAAK,CAAC;KACd;IAED,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC;AAEF,MAAM,kCAAkC,GAAG,CAAC,IAAY,EAAE,EAAE;IAC1D,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,0BAA0B,CAAC;AAChD,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,OAAO,EAAE,EAAE;;IACpC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IAED,IACE,cAAO,CAAC,KAAK,0CAAE,MAAM,MAAK,CAAC;QAC3B,cAAO,CAAC,KAAK,0CAAE,MAAM,MAAK,EAAE;QAC5B,cAAO,CAAC,KAAK,0CAAE,MAAM,MAAK,EAAE,EAC5B;QACA,OAAO;YACL,cAAc,EAAE,IAAI;SACrB,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,OAAwB,EAAE,GAAW,EAAE,EAAE;IACnE,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IAE5C,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;QACvD,OAAO;YACL,iBAAiB,EAAE,IAAI;SACxB,CAAC;QACF,IAAI;QACJ,YAAY;QACZ,qBAAqB;QACrB,gCAAgC;QAChC,uDAAuD;QACvD,qEAAqE;QACrE,4BAA4B;QAC5B,MAAM;QACN,aAAa;QACb,+BAA+B;QAC/B,OAAO;KACR;SAAM,IACL,OAAO,CAAC,KAAK;QACb,GAAG;QACH,CAAC,kCAAkC,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,kCAAkC,CAAC,GAAG,CAAC,EACvC;QACA,OAAO;YACL,gBAAgB,EAAE,IAAI;SACvB,CAAC;KACH;SAAM,IACL,OAAO,CAAC,KAAK;QACb,GAAG;QACH,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;QACxB,CAAC,kCAAkC,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,uCAAuC,CAAC,OAAO,CAAC,KAAK,CAAC,EACtD;QACA,OAAO;YACL,UAAU,EAAE,IAAI;SACjB,CAAC;KACH;SAAM,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,eAAe,EAAE;QACpE,OAAO;YACL,SAAS,EAAE,IAAI;SAChB,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAAG,CAAC,OAAwB,EAAE,OAAe,EAAE,EAAE;;IAC3E,MAAM,MAAM,GAAG,aAAO,CAAC,KAAK,0CAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;IAEnE,IACE,OAAO;QACP,MAAM;QACN,cAAO,CAAC,KAAK,0CAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE;aAC1C,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,GACxC;QACA,OAAO;YACL,gBAAgB,EAAE,IAAI;SACvB,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,6BAA6B,GAAG,CAAC,OAAwB,EAAE,EAAE;IACjE,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IAE5C,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;QACvD,OAAO;YACL,iBAAiB,EAAE,IAAI;SACxB,CAAC;QACF,IAAI;QACJ,YAAY;QACZ,qBAAqB;QACrB,gCAAgC;QAChC,uDAAuD;QACvD,qEAAqE;QACrE,4BAA4B;QAC5B,MAAM;QACN,aAAa;QACb,+BAA+B;QAC/B,OAAO;QACP,oFAAoF;QACpF,WAAW;QACX,0BAA0B;QAC1B,KAAK;KACN;SAAM,IACL,OAAO,CAAC,KAAK;QACb,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;QACxB,CAAC,kCAAkC,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,uCAAuC,CAAC,OAAO,CAAC,KAAK,CAAC,EACtD;QACA,OAAO;YACL,UAAU,EAAE,IAAI;SACjB,CAAC;KACH;SAAM,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,eAAe,EAAE;QACpE,OAAO;YACL,SAAS,EAAE,IAAI;SAChB,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;IAcW,wBAAwB,SAAxB,wBACX,SAAQ,0EAA8C;IAgLtD,YACS,cAA8B,EAC9B,eAAgC,EAChC,WAA0B,EAEvB,KAAqB,EACrB,MAAc,EACd,GAAsB,EACtB,YAAiC,EACjC,gBAAkC,EAClC,2BAAwD,EACxD,YAAsB,EACtB,SAAkC,EAClC,oBAAgD,EAChD,QAAkB,EAClB,iBAAoC,EACpC,mBAAwC,EACxC,eAAoC,EAEtC,eAAgC,EAChC,sBAA8C,EAC9C,aAA4B,EAE5B,iBAAoC,EACpC,sBAA8C;QAEtD,KAAK,CACH,oBAAoB,CAAC,kBAAkB,EAAE,EACzC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,SAAS,EACT,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAxCK,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAe;QAEvB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,iBAAY,GAAZ,YAAY,CAAU;QACtB,cAAS,GAAT,SAAS,CAAyB;QAClC,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAqB;QAEtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,kBAAa,GAAb,aAAa,CAAe;QAE5B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,2BAAsB,GAAtB,sBAAsB,CAAwB;QArMxD,kBAAa,GAAG,uBAAuB,CAAC;QACxC,kBAAa,GAAG,uBAAuB,CAAC;QAExC,oBAAe,GAAG,oEAAwB,CAAC;QAU3C,2BAAsB,GAAG,IAAI,kDAAe,CAAgB,IAAI,CAAC,CAAC;QAClE,UAAK,GAED;YACF,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,gBAAgB;YAC7B,OAAO,EAAE,KAAK;YACd,GAAG,EAAE,KAAK;YACV,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,cAAc;YACxB,OAAO,EAAE,cAAc;YAEvB,UAAU;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,iBAAiB;YACjB,GAAG,EAAE,KAAK;YACV,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,OAAO;YACrB,eAAe,EAAE,iBAAiB;YAClC,YAAY,EAAE,cAAc;YAC5B,6BAA6B,EAAE,gBAAgB;SAChD,CAAC;QAEF,gBAAW,GAAG,IAAI,0CAAO,EAAU,CAAC;QACpC,gBAAW,GAAG,IAAI,kDAAe,CAAC,EAAE,CAAC,CAAC;QACtC,uBAAkB,GAAG,IAAI,kDAAe,CAAC,IAAI,CAAC,CAAC;QAM/C,aAAQ,GAAqB,EAAE,CAAC;QAChC,sBAAiB,GAAG,IAAI,CAAC;QAQzB,cAAS,GAAkB,EAAE,CAAC;QAC9B,sBAAiB,GAAkB,EAAE,CAAC;QAEtC,uBAAkB,GAAG,KAAK,CAAC;QAC3B,uBAAkB,GAAG,KAAK,CAAC;QAC3B,mBAAc,GAAG,KAAK,CAAC;QACvB,gCAA2B,GAAG,KAAK,CAAC;QACpC,8BAAyB,GAAG,IAAI,CAAC;QACjC,kCAA6B,GAAG,KAAK,CAAC;QAItC,sBAAiB,GAAW;YAC1B,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,yEAAY;SACvB,CAAC;QAQF,UAAU;QACV,cAAS,GAAe,EAAE,CAAC;QAC3B,eAAU,GAAG,IAAI,kDAAe,CAAa,EAAE,CAAC,CAAC;QAEjD,OAAO;QACP,mBAAc,GAAG,KAAK,CAAC;QACvB,gBAAW,GAAG,KAAK,CAAC;QACpB,qBAAgB,GAAG,IAAI,kDAAe,CAAC,iCAAiC,CAAC,CAAC;QAK1E,kBAAa,GAAG,IAAI,CAAC;QAKrB,iCAA4B,GAAG,KAAK,CAAC;QACrC,wBAAmB,GAAG,KAAK,CAAC;QAE5B,OAAO;QACP,kBAAa,GAAG,EAAE,CAAC;QAEnB,SAAS;QACT,eAAU,GAAG,aAAa,CAAC;QAC3B,sBAAiB,GAAG,MAAM,CAAC;QAC3B,iBAAY,GAAG,GAAG,CAAC;QAMnB,kCAA6B,GAAG,IAAI,CAAC;QACrC,mBAAc,GAAG,KAAK,CAAC;QAEvB,qBAAgB,GAAG,IAAI,CAAC;QACxB,sBAAiB,GAAW,IAAI,CAAC;QAEjC,YAAY;QACZ,kBAAa,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QACpD,kBAAa,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QACpD,kBAAa,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QAEpD,WAAW;QACX,mBAAc,GAAG,IAAI,kDAAe,CAClC,qCAAqC,CACtC,CAAC;QACF,uBAAkB,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QAOzD,MAAM;QACN,oBAAe,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QACtD,mBAAc,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QAerD,gBAAgB;QAChB,4BAAuB,GAAG,KAAK,CAAC;QAChC,qBAAgB,GAAG,IAAI,kDAAe,CAAC,KAAK,CAAC,CAAC;QAC9C,sBAAiB,GAAG,KAAK,CAAC;QAE1B,YAAO,GAAqB,EAAE,CAAC;QAC/B,iBAAY,GAAG,KAAK,CAAC;QAErB,aAAQ,GAAqB,EAAE,CAAC;QAChC,sBAAiB,GAAG,KAAK,CAAC;QAE1B,2BAAsB,GAAG,KAAK,CAAC;QAE/B,wBAAwB;QACxB,8BAAyB,GAAG,KAAK,CAAC;QAElC,oBAAoB;QACpB,oBAAe,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QACtD,uBAAkB,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QAEzD,iBAAiB;QACjB,qBAAgB,GAAG,IAAI,kDAAe,CAAU,KAAK,CAAC,CAAC;QA4CrD,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,uBAAuB,CAAC;QAEnD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAClE,gFAA6B,CAC9B,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAClE,gFAA6B,CAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB;aACrB,iBAAiB,CAAC,+EAA4B,CAAC;aAC/C,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAChE,kFAA+B,CAChC,CAAC;YACF,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAClE,gFAA6B,CAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QAEtD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,gCAAgC,EAAE,CAAC;QAExC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAEpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,gCAAgC;QAEhC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAE3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,mBAAmB;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,wBAAwB;IAC1B,CAAC;IAED,mBAAmB;IACnB,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YAC9D,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC5B,CAAC,gEAAmB,EAAE,kEAAkB,CAAC,CAC1C,CAAC;aACH;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,YAAY;IACZ,aAAa;QACX,IAAI,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;YAC3C,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gHAAwB,EAAE;YAC/C,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,sBAAsB;YACnC,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,aAAa;IACb,cAAc;QACZ,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAE9D,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;aAC3C,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACpB,MAAM,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,GAAG,MAAM,CAAC;YAEzD,MAAM,QAAQ,GAAG,wBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,OAAO,0CAAE,QAAQ,CAAC;YACvD,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;oBAChB,IAAI,EAAE,IAAI;iBACX,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;gBAElD,IAAI,QAAQ,KAAK,yEAAY,EAAE;oBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,wEAAqB,CAAC;iBACzC;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,qEAAkB,CAAC;iBACtC;aACF;YAED,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,YAAY,EAAE;oBAChB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAO;;QAChB,IAAI,CAAC,cAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,cAAc,GAAE;YACpC,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;SAChE,CAAC;IACJ,CAAC;IAED,cAAc;IACd,WAAW,CAAC,KAAqB;QAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,IAAK,MAAc,CAAC,aAAa,CAAC;QAC3E,MAAM,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED,gBAAgB;IAChB,iBAAiB;QACf,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC3C,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAExE,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,cAAc,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;aACrD,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACpB,MAAM,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,GAAG,MAAM,CAAC;YACzD,MAAM,QAAQ,GAAG,wBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,OAAO,0CAAE,QAAQ,CAAC;YACvD,MAAM,YAAY,GAAG,WAAW,CAAC,QAAQ,CAAC;YAE1C,IAAI,mBAAmB,EAAE;gBACvB,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,WAAW,CAAC,MAAM,EAAE,CAAC;gBACrB,MAAM,UAAU,GAAG,CAAC,gEAAmB,CAAC,CAAC;gBAEzC,IAAI,QAAQ,KAAK,yEAAY,EAAE;oBAC7B,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC1B,IAAI,OAAO,CAAC,KAAK,KAAK,2DAAU,EAAE;4BAChC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;yBACjC;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC,CAAC;iBACJ;gBAED,IAAI,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC;aAC/C;YAED,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,YAAY,EAAE;oBAChB,WAAW,CAAC,cAAc,EAAE,CAAC;iBAC9B;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,iBAAiB;IACjB,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;QAC7B,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,OAAO;SACR;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;YAC1D,OAAO,CACL,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvD,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACzD,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACzD,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAC1D,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACtD,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE;YAC3C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC5C;IACH,CAAC;IAED,eAAe,CAAC,OAAiB;QAC/B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,2BAA2B;IAC3B,aAAa,CAAC,CAAW,EAAE,CAAW,EAAE,IAAY;QAClD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,EAAE;YAC/C,OAAO,CAAC,CAAC,CAAC;SACX;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,EAAE;YACtD,OAAO,CAAC,CAAC;SACV;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;YAC5D,OAAO,CAAC,CAAC,CAAC;SACX;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;YAC5D,OAAO,CAAC,CAAC;SACV;aAAM;YACL,QAAQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;gBACzC,KAAK,IAAI;oBACP,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,IAAI;oBACP,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,IAAI;oBACP,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC;oBACE,OAAO,CAAC,CAAC;aACZ;SACF;IACH,CAAC;IAED,iBAAiB,CAAC,KAAa,EAAE,OAAiB;QAChD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,OAAiB;QAC/B,IAAI,WAAW,CAAC;QAEhB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;YACzC,KAAK,IAAI,CAAC;YACV;gBACE,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC7B,MAAM;YACR,KAAK,IAAI;gBACP,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC7B,MAAM;YACR,KAAK,IAAI;gBACP,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC7B,MAAM;SACT;QAED,OAAO,GAAG,OAAO,CAAC,IAAI,MAAM,WAAW,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;IAC5D,CAAC;IAED,kBAAkB;IAClB,IAAY,kBAAkB;;QAC5B,MAAM,mBAAmB,GACvB,uBAAI,CAAC,SAAS,CAAC,QAAQ,0CAAE,UAAU,0CAAE,OAAO,0CAAE,IAAI,KAAI,IAAI,CAAC;QAE7D,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,mBAAmB,EAAE;YACxD,OAAO,mBAAmB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAY,CAAC;SACvD;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAChE,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAY,CAAC;SAC9D;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEa,iBAAiB;;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;KAAA;IAED,qBAAqB;IACrB,cAAc;QACZ,MAAM,EACJ,aAAa,EACb,OAAO,EACP,WAAW,EACX,QAAQ,EACR,UAAU,EACV,IAAI,EACJ,gBAAgB,EAChB,cAAc,GACf,GAAG,IAAI,CAAC,cAAc,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,aAAa;YACb,IAAI;YACJ,gBAAgB;YAChB,OAAO;YACP,WAAW;YACX,QAAQ;YACR,UAAU;YACV,cAAc;YACd,IAAI,CAAC,UAAU;SAChB,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACtB,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,gBAAgB,CAAC,GAAG,MAAM,CAAC;YAEvD,MAAM,UAAU,GAAG,CAAC,gEAAmB,CAAC,CAAC;YAEzC,MAAM,eAAe,GAAG;gBACtB,+GAA6C,CAAC,IAAI,CAAC,YAAY,CAAC;aACjE,CAAC;YAEF,MAAM,cAAc,GAAG,YAAC,aAAgC,0CAAE,OAAO,0CAC7D,QAAQ,CAAC;YACb,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACnD,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC;YAE7D,IACE,cAAc,KAAK,yEAAY;gBAC/B,kBAAkB,KAAK,2DAAU,EACjC;gBACA,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,uEAAoB,CAAC;gBAE9C,UAAU,CAAC,IAAI,CAAC,CAAC,OAAwB,EAAE,EAAE;;oBAC3C,OAAO,kBAAkB,CAAC,OAAO,EAAE,MAAC,IAAc,0CAAE,GAAG,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,aAAa,GACjB,cAAc,KAAK,yEAAY,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;gBAE5D,MAAM,eAAe,GAAG,UAAI,CAAC,SAAS,CAAC,IAAI,CACzC,CAAC,OAAO,EAAE,EAAE,WAAC,cAAO,CAAC,EAAE,MAAK,MAAC,aAAuB,0CAAE,SAAS,KAChE,0CAAE,IAAI,CAAC;gBAER,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,uEAAoB,CAAC;gBAE9C,UAAU,CAAC,IAAI,CAAC,CAAC,OAAwB,EAAE,EAAE;oBAC3C,OAAO,sBAAsB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;gBAEH,UAAU,CAAC,IAAI,CAAC,iEAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;aAC3D;YAED,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAChC,UAAU,EACV,eAAe,CAChB,CAAC;YAEF,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,YAAY,EAAE;oBAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;iBACjD;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEK,wCAAwC;;YAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC/B,iLAA6C,EAC7C;gBACE,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CACF,CAAC;YACF,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAE3C,QAAQ,CAAC,iBACV,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YAEnC,IAAI;gBACF,MAAM,iBAAiB,GAAG,CAAC,MAAM,QAAQ,CAAC,MAAM,CAAyB,CAAC;gBAC1E,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;aACjD;YAAC,OAAO,KAAK,EAAE,GAAE;QACpB,CAAC;KAAA;IAED,uBAAuB,CAAC,SAA+B;;QACrD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;SACR;QAED,MAAM,EACJ,IAAI,EACJ,OAAO,EACP,WAAW,EACX,WAAW,EACX,IAAI,EACJ,QAAQ,EACR,mBAAmB,EACnB,qBAAqB,GACtB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEvB,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACxC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAE7C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEpC,IACE,gBAAS,CAAC,OAAO,0CAAE,IAAI;YACvB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,WAAC,WAAI,CAAC,IAAI,MAAK,eAAS,CAAC,OAAO,0CAAE,IAAI,KAAC,EACrE;YACA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,OAAmB,CAAC,CAAC,CAAC;SAC1E;QAED,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACpC,WAAW,CAAC,QAAQ,CAAC,gBAAS,CAAC,OAAO,0CAAE,IAAI,KAAI,SAAS,CAAC,WAAW,CAAC,CAAC;QAEvE,IAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,eAAe,EAAE;YACnD,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC;SAC1E;QAED,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC;gBACZ,IAAI,EAAE,SAAS,CAAC,OAAO;gBACvB,IAAI,EAAE,SAAS,CAAC,QAAQ;aACzB,CAAC,CAAC;YAEH,UAAI,CAAC,YAAY,0CAAE,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAClD,UAAI,CAAC,wBAAwB,0CAAE,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SAC/D;IACH,CAAC;IAED,mBAAmB,CAAC,KAAY;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAEK,gBAAgB,CAAC,QAAqB,EAAE,aAAa,GAAG,KAAK;;;YACjE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEzD,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAC9D,QAAQ,CAAC,EAAE,CACZ,CAAC;gBACF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACjC;YAAC,OAAO,KAAK,EAAE,GAAE;YAElB,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5B,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAEjC,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,aAAa,EAAE;gBAClD,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC7C;YAED,IAAI,iBAAiB,GAAG,cAAQ,CAAC,UAAU,0CAAE,IAAI,CAC/C,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,OAAO,CACjC,CAAC;YAEF,MAAM,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,GAClD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAE1B,IAAI,CAAC,mBAAmB,IAAI,CAAC,qBAAqB,IAAI,iBAAiB,EAAE;gBACvE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;gBAChD,OAAO;aACR;YAED,MAAM,cAAc,GAAG,cAAQ,CAAC,UAAU,0CAAE,IAAI,CAC9C,CAAC,SAAS,EAAE,EAAE,CACZ,oBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,EAAE,MAAK,SAAS,CAAC,EAAE;gBACxC,qBAAqB,KAAK,SAAS,CAAC,EAAE,CACzC,CAAC;YAEF,IAAI,cAAc,EAAE;gBAClB,iBAAiB,GAAG,cAAc,CAAC;aACpC;YAED,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;;KACjD;IAED,gBAAgB;IAChB,qBAAqB,CAAC,KAAiB;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,qBAAqB,CAAC,YAA4B;QAChD,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC9C,CAAC;IAED,yBAAyB,CAAC,iBAAiC;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IACnE,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,WAAW;QACX,yDAAyD;QACzD,KAAK;IACP,CAAC;IAED,IAAI,sBAAsB;QACxB,MAAM,SAAS,GAA6B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpE,MAAM,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QAE9C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CACzB,CAAC,OAAO,EAAE,EAAE;;YACV,cAAO,CAAC,OAAO,CAAC,QAAQ,KAAK,yEAAY;gBACzC,OAAO,CAAC,OAAO,CAAC,QAAQ,MAAK,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ;SAAA,CAChE,CAAC;IACJ,CAAC;IAEM,kBAAkB,CAAC,KAAa,EAAE,QAA0B;QACjE,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YACzD,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAC1D,CAAC;IACJ,CAAC;IAEM,aAAa,CAAC,KAAa,EAAE,GAAmB;QACrD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YACpD,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAC5D,CAAC;IACJ,CAAC;IAEM,gBAAgB,CAAC,KAAa,EAAE,MAAsB;QAC3D,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YACvD,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAC/D,CAAC;IACJ,CAAC;IAEK,iBAAiB,CAAC,KAAY;;YAClC,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEvD,UAAU,CAAC,GAAG,EAAE;gBACd,MAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBACpD,EAAE,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAE1C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;KAAA;IAED,aAAa,CAAC,KAAqB;;QACjC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEzC,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,IAAK,MAAc,CAAC,aAAa,CAAC;QAC3E,MAAM,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEhE,IAAI,qBAAQ,CAAC,aAAa,0CAAE,OAAO,0CAAE,QAAQ,MAAK,oBAAoB,EAAE;YACtE,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,gBAAgB,CAAC,QAA0B;QACzC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,OAAO,GAAG,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,kBAAkB;YACvB,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,cAAc,CAAC,IAAI;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO;YAC3B,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc,CAAC,WAAW;SAChC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACtB,IAAI,CACF,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,IAAI,EACJ,OAAO,EACP,cAAc,EACd,WAAW,EACZ,GAAG,MAAM,CAAC;YAEX,IAAI,GAAI,IAAe,IAAI,EAAE,CAAC;YAC9B,OAAO,GAAI,OAAkB,IAAI,EAAE,CAAC;YACpC,cAAc,GAAI,cAAyB,IAAI,EAAE,CAAC;YAElD,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,aAAa,GAAG,6BAA6B,CAAC;gBACnD,IAAI,CAAC,aAAa,GAAG,6BAA6B,CAAC;aACpD;iBAAM,IAAI,iBAAiB,EAAE;gBAC5B,IAAI,CAAC,aAAa,GAAG,iCAAiC,CAAC;gBACvD,IAAI,CAAC,aAAa,GAAG,iCAAiC,CAAC;aACxD;iBAAM,IAAI,cAAc,EAAE;gBACzB,IAAI,CAAC,aAAa,GAAG,8BAA8B,CAAC;gBACpD,IAAI,CAAC,aAAa,GAAG,8BAA8B,CAAC;aACrD;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC;aAC9C;YAED,IAAI,aAAa,IAAI,cAAc,EAAE;gBACnC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,sBAAsB,CAAC;gBAElD,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAChE,IAAI,iBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,IAAG,CAAC,EAAE;oBAChC,IAAI,CAAC,aAAa,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;iBACnD;gBAED,MAAM,mBAAmB,GAAG,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBACtE,IAAI,oBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,MAAM,IAAG,CAAC,EAAE;oBACnC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC5D;aACF;iBAAM,IAAI,WAAW,KAAK,2DAAU,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,oBAAoB,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,uBAAuB,CAAC;aACpD;YAED,MAAM,aAAa,GACjB,WAAW,KAAK,2DAAU;gBACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;gBAC1B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC;YAEvD,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC5B,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,aAAa,CAAC,CAAC,EAC1D,IAAI,EACJ,KAAK,CACN,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YAChD,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,iBAAiB,EAAE,GACxD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAErB,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,aAAa,CAChB,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,iBAAiB,CAAC,EAClD,CAAC,gEAAmB,CAAC,CACtB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC;oBACnB,QAAQ;oBACR,QAAQ;oBACR,SAAS;oBACT,iBAAiB;iBAClB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE,EAAE;YACtD,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE1C,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YAClD,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE1C,IAAI,eAAe,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YACjD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;YAC5D,IAAI,WAAW,KAAK,mEAAsB,EAAE;gBAC1C,IAAI,CAAC,aAAa,GAAG,sCAAsC,CAAC;gBAC5D,IAAI,IAAI,CAAC,yBAAyB,EAAE;oBAClC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;iBACxC;gBACD,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,yCAAyC,CAAC;gBAC/D,IAAI,IAAI,CAAC,yBAAyB,EAAE;oBAClC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;iBACvC;gBACD,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;aAC1C;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1B,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBAC1C,IAAI,EAAE,gEAAoB;gBAC1B,aAAa,EAAE,KAAK;aACrB,CAAC;SACL,CAAC,CAAC;IACL,CAAC;IAEa,gBAAgB;;YAC5B,+EAA+E;YAC/E,oBAAoB;YACpB,mCAAmC;YACnC,gCAAgC;YAChC,kBAAkB;YAClB,oBAAoB;YACpB,0CAA0C;YAE1C,6CAA6C;YAC7C,0BAA0B;YAC1B,UAAU;YACV,SAAS;YACT,mBAAmB;YACnB,uBAAuB;YACvB,QAAQ;YACR,OAAO;YACP,MAAM;YAEN,yBAAyB;YAEzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI;gBACF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CACzD,IAAI,CAAC,cAAc,CAAC,SAAS,CAC9B,CAAC;gBAEF,IAAI,CAAC,QAAQ,GAAG,YAAY;qBACzB,MAAM,CACL,CAAC,OAAO,EAAE,EAAE,CACV,OAAO,CAAC,OAAO,CAAC,QAAQ;oBACxB,OAAO,CAAC,WAAW,KAAK,kEAAoB,CAC/C;qBACA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE3B,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAElC,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;QACH,CAAC;KAAA;IAEO,0BAA0B;QAChC,IAAI;YACF,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,qBAAqB,CAAC,UAAU,GAAG,IAAI,CAAC;aAC9C;SACF;QAAC,OAAO,KAAK,EAAE,GAAE;IACpB,CAAC;IAEa,iBAAiB;;;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAE/B,IAAI;gBACF,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;gBACnE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAC/B,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,KAAK,oEAAwB,CAC3D,CAAC;gBAEF,MAAM,cAAc,GAAG,gBAAI,CAAC,SAAS,CAAC,aAAa,0CAAE,OAAO,0CAAE,QAAQ,CAAC;gBACvE,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAC1D,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,CACtD,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC9C;aACF;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;;KACF;IAEa,YAAY;;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI;gBACF,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,CAAC;aAC/D;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;QACH,CAAC;KAAA;IAEa,gBAAgB;;YAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI;gBACF,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;aACjE;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;QACH,CAAC;KAAA;IAEa,iBAAiB,CAC7B,cAAuB,IAAI,CAAC,kBAAkB;;YAE9C,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC3B,OAAO;aACR;YAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI;gBACF,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC7D,WAAW,CACZ,CAAC;oBACF,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC1D,IACE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAClB,CAAC,QAAQ,EAAE,EAAE,CACX,eAAe,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;wBACtC,eAAe,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW,CACvD,EACD;wBACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;qBAC1C;iBACF;aACF;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;QACH,CAAC;KAAA;IAEO,mBAAmB;QACzB,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QACpE,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;aACjD,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACpB,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC,GAAG,MAAM,CAAC;YAE5C,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO;aACR;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEvC,IACE,oBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,MAAK,yEAAY;gBACjD,CAAC,IAAI,CAAC,cAAc,EACpB;gBACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAC7B,CAAC,gEAAmB,CAAC,CACtB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrD;YAED,IACE,IAAI,CAAC,kBAAkB,KAAK,2DAAU;gBACtC,aAAC,aAAgC,0CAAE,OAAO,0CAAE,QAAQ;oBAClD,yEAAY,EACd;gBACA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,gCAAgC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;;YAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE;;gBAC1D,qBAAQ,CAAC,mBAAmB,0CAAE,QAAQ,CACpC,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,CACjC;aAAA,CACF,CAAC;YACF,IACE,iBAAI,CAAC,SAAS,CAAC,QAAQ,0CAAE,MAAM,0CAAE,QAAQ;iBACzC,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,GAChC;gBACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,sCAAsC,CACzC,oBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,KAAI,IAAI,CACzC,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,aAAa;YACjC,IAAI,CAAC,cAAc,CAAC,WAAW;YAC/B,IAAI,CAAC,cAAc,CAAC,IAAI;YACxB,IAAI,CAAC,cAAc,CAAC,cAAc;YAClC,IAAI,CAAC,cAAc,CAAC,QAAQ;YAC5B,IAAI,CAAC,cAAc,CAAC,OAAO;SAC5B,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACtB,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC;YAClD,MAAM,kBAAkB,GACtB,kCAAkC,CAAC,WAAW,CAAC;gBAC/C,kCAAkC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAC,CAAC;YAEhD,IACE,IAAI,CAAC,kBAAkB,KAAK,2DAAU;gBACtC,oBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,MAAK,yEAAY;gBACjD,kBAAkB;gBAClB,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,kFAA+B,CAAC,EACrE;gBACA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACnD;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACpD;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,0BAA0B;QAChC,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,GACxD,IAAI,CAAC,cAAc,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,cAAc,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC9D,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACpB,MAAM,CACJ,mBAAmB,EACnB,kBAAkB,EAClB,aAAa,EACb,YAAY,EACb,GAAG,MAAM,CAAC;YAEX,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC;YAE1C,MAAM,mBAAmB,GAAG,wBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,OAAO,0CAAE,QAAQ,CAAC;YAElE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE/C,MAAM,uBAAuB,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAElD,IAAI,IAAI,CAAC,kBAAkB,KAAK,2DAAU,EAAE;gBAC1C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;gBACpE,IAAI,CAAC,eAAe,CAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS;oBAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;iBACxB,CAAC,CAAC;gBACH,8BAA8B;aAC/B;iBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;gBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;gBACnE,6BAA6B;aAC9B;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;aAC/D;YAED,IAAI,mBAAmB,EAAE;gBACvB,MAAM,iBAAiB,GAAG,CAAC,CAAC,cAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,CAAC,QAAQ,EAAC;gBAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC;gBACxD,MAAM,KAAK,GAAG,mBAAmB,KAAK,yEAAY,CAAC;gBAEnD,kDAAkD;gBAClD,qCAAqC;gBACrC,WAAW;gBACX,oCAAoC;gBACpC,IAAI;gBAEJ,8BAA8B;gBAC9B,oCAAoC;gBACpC,WAAW;gBACX,qCAAqC;gBACrC,IAAI;gBAEJ,IAAI,CAAC,cAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,CAAC,QAAQ,KAAI,KAAK,EAAE;oBAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/B;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAChC;gBAED,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;gBAC9C,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAC/B;oBACE,CAAC,OAAO,EAAE,EAAE;wBACV,OAAO;wBACP,0DAA0D;wBAC1D,sDAAsD;wBACtD,MAAM;wBACN,uCAAuC;wBACvC,SAAS;wBACT,IACE,IAAI,CAAC,kBAAkB,KAAK,2DAAU;4BACtC,mBAAmB,KAAK,yEAAY,EACpC;4BACA,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;yBACjC;wBAED,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,gEAAmB;iBACpB,EACD,IAAI,EACJ,KAAK,CACN,CAAC;gBAEF,MAAM,KAAK,GAAG,mBAAmB,KAAK,yEAAY,CAAC;gBACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC;gBACxD,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC;gBAE3D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;gBAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAErC,IACE,IAAI,CAAC,kBAAkB;oBACvB,mBAAmB,KAAK,yEAAY,EACpC;oBACA,IAAI,CAAC,iCAAiC,GAAG,aAAa,CAAC,UAAU;yBAC9D,OAAO,CAAC,IAAe,CAAC;oBAE3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;iBACnE;aACF;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAE7C,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEtD,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;gBAEnE,MAAM,KAAK,GAAG,mBAAmB,KAAK,yEAAY,CAAC;gBACnD,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC;gBAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC;gBAExD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;gBAChD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAErC,IAAI,mBAAmB,KAAK,yEAAY,EAAE;oBACxC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBACpD;qBAAM,IAAI,mBAAmB,KAAK,yEAAY,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACzC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBACtD;qBAAM;oBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,sBAAsB;QAC5B,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,cAAc,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACtE,IAAI,IAAI,CAAC,kBAAkB,KAAK,2DAAU,EAAE;gBAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;aACpE;iBAAM,IAAI,IAAI,CAAC,kBAAkB,KAAK,2DAAU,EAAE;gBACjD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;aACjE;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;aACjE;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,UAAU;aAC3B,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEa,sCAAsC,CAClD,iBAA2B,yEAAY;;YAEvC,IAAI,CAAC,cAAc,IAAI,cAAc,KAAK,yEAAY,EAAE;gBACtD,IAAI,CAAC,iBAAiB,GAAG;oBACvB,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,yEAAY;iBACvB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;gBAE1C,MAAM,YAAY,GAAkB;oBAClC,YAAY,EAAE,cAAc;oBAC5B,UAAU,EAAE,yEAAY;oBACxB,GAAG,EAAE;wBACH,MAAM,EAAE,KAAK;wBACb,QAAQ,EAAE,yEAAY;qBACvB;iBACF,CAAC;gBACF,IAAI;oBACF,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CACzD,YAAY,CACb,CAAC;oBAEF,IAAI,CAAC,iBAAiB,GAAG;wBACvB,MAAM,EAAE,cAAc,CAAC,aAAa;wBACpC,QAAQ,EAAE,cAAc;qBACzB,CAAC;iBACH;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,iBAAiB,GAAG;wBACvB,MAAM,EAAE,KAAK;wBACb,QAAQ,EAAE,yEAAY;qBACvB,CAAC;iBACH;wBAAS;oBACR,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;iBAC5C;aACF;YAED,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAC3C,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAC9B,CAAC;YAEF,MAAM,GAAG,MAAM;iBACZ,KAAK,CAAC,GAAG,CAAC;iBACV,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;iBAC5C,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACrB,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpC,OAAO,GAAG,MAAM,GAAG,CAAC;iBACrB;gBACD,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;iBACD,IAAI,CAAC,GAAG,CAAC,CAAC;YAEb,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAC3C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAChC,CAAC;YAEF,IAAI,CAAC,gCAAgC,GAAG;gBACtC,MAAM,EAAE,GAAG,MAAM,IAAI,QAAQ,EAAE;aAChC,CAAC;QACJ,CAAC;KAAA;IAEK,+BAA+B;;;YACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAoC,EAAE;gBACtE,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,IAAI;gBACF,MAAM,iBAAiB,GAAG,CAAC,MAAM,QAAQ,CAAC,MAAM,CAAuB,CAAC;gBAExE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GACpE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAErB,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAAC;gBAEjD,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAC5C,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;gBACpC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAErC,IAAI,CAAC,QAAQ,CAAC;oBACZ,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,IAAI,EAAE,OAAO,CAAC,QAAQ;iBACvB,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC3C,UAAI,CAAC,wBAAwB,0CAAE,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAExD,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE,GAAE;;KACnB;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,IAAI,kBAAkB;;QACpB,IACE,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,yBAAyB,EAC9B;YACA,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CACL,iBAAI,CAAC,SAAS,CAAC,aAAa,0CAAE,OAAO,0CAAE,QAAQ;YAC7C,IAAI,CAAC,iBAAiB,CAAC,QAAQ;YACjC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU;YAC1B,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACvD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAChC,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,aAAa;YACjC,IAAI,CAAC,cAAc,CAAC,UAAU;SAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACtB,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC;YAE3C,IAAI,UAAU,GAAG;gBACf,gEAAmB;gBACnB,2DAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;gBACpD,2DAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;gBACpD,CAAC,OAAwB,EAAE,EAAE;oBAC3B,IAAI,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,MAAK,CAAC,EAAE;wBACxB,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;qBAC7B;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC;aACF,CAAC;YAEF,IACE,oBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ;gBAC9B,IAAI,CAAC,iBAAiB,CAAC,QAAQ;gBACjC,CAAC,UAAU,EACX;gBACA,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CACvD,OAAO,CAAC,KAAK,CACd,CAAC;oBACF,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,cAAc,EAAE;wBACzD,OAAO;qBACR;yBAAM;wBACL,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;4BAClD,IAAI,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gCAC3D,OAAO,IAAI,CAAC;6BACb;iCAAM;gCACL,OAAO;oCACL,mBAAmB,EAAE,IAAI;iCAC1B,CAAC;6BACH;yBACF;qBACF;oBACD,mFAAmF;oBACnF,YAAY;oBACZ,8DAA8D;oBAC9D,MAAM;oBACN,aAAa;oBACb,8BAA8B;oBAC9B,OAAO;oBACP,IAAI;oBACJ,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC3B,UAAU,EACV,IAAI,EACJ,KAAK,CACN,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,aAAa,CACnB,QAA2B,EAC3B,UAAuC,EACvC,kBAAyD,EAAE,EAC3D,SAAS,GAAG,IAAI;QAEhB,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC;YAEtC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAClC,OAAO,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;YAC5C,OAAO,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;YAE9C,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,YAAY,EAAE;oBAChB,OAAO,CAAC,cAAc,EAAE,CAAC;iBAC1B;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CAAC,QAA2B,EAAE,SAAS,GAAG,IAAI;QACnE,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC;YAEtC,OAAO,CAAC,eAAe,EAAE,CAAC;YAC1B,OAAO,CAAC,oBAAoB,EAAE,CAAC;YAC/B,OAAO,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;YAE9C,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,YAAY,EAAE;oBAChB,OAAO,CAAC,cAAc,EAAE,CAAC;iBAC1B;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,YAAY;aAC7B,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,gCAAgC;QACtC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACjE,MAAM,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC;YAE9C,MAAM,QAAQ,GAAG,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,CAAC;YAClD,MAAM,GAAG,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAC;YAEtB,IACE,CAAC,QAAQ,KAAK,yEAAY;gBACxB,CAAC,QAAQ,KAAK,yEAAY;oBACxB,IAAI,CAAC,kBAAkB,KAAK,2DAAU,CAAC,CAAC;gBAC5C,GAAG,KAAK,KAAK,CAAC,KAAK,EACnB;gBACA,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAC1C;oBACE,CAAC,OAAO,EAAE,EAAE;wBACV,MAAM,SAAS,GACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;wBAE1B,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC,SAAS,EAAE;4BAC1D,OAAO;gCACL,UAAU,EAAE,IAAI;6BACjB,CAAC;yBACH;wBAED,OAAO,IAAI,CAAC;oBACd,CAAC;iBACF,EACD,uGAAqC,CAAC,IAAI,CAAC,YAAY,CAAC,CACzD,CAAC;aACH;iBAAM;gBACL,0DAA0D;gBAC1D,yDAAyD;gBACzD,sDAAsD;gBACtD,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;aAC3C;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,4BAA4B;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,mBAAmB;aACpC,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAEjC,IAAI,CAAC,KAAK,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACpD;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,MAAM;aACvB,IAAI,CAAC,6DAAY,CAAC,GAAG,CAAC,CAAC;aACvB,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CACf,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,EAAE,CACvD,CACJ,CAAC;QACF,iBAAiB;QACjB,iCAAiC;QACjC,aAAa;QACb,2BAA2B;QAC3B,iEAAiE;QACjE,kCAAkC;QAClC,kDAAkD;QAClD,qCAAqC;QACrC,wCAAwC;QACxC,4CAA4C;QAC5C,+BAA+B;QAC/B,WAAW;QACX,QAAQ;QACR,+BAA+B;QAC/B,uCAAuC;QACvC,4CAA4C;QAC5C,SAAS;QACT,KAAK;QACL,IAAI,CAAC,MAAM,GAAG,CAAC,KAAyB,EAAE,EAAE;YAC1C,OAAO,oDAAa,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAChE;gBACD,KAAK,CAAC,IAAI,CAAC,6DAAY,CAAC,GAAG,CAAC,EAAE,qEAAoB,EAAE,EAAE,0DAAS,CAAC,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,WAAW;aACjB,CAAC,CAAC,IAAI,CACL,oDAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC5B,IAAI,IAAI,EAAE;oBACR,OAAO,MAAM;yBACV,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAC9D;yBACA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAChB;qBAAM;oBACL,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC3B;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;IACX,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,eAAe,CAAC,qBAAqB;aACvC,IAAI,CAAC,+DAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aAChD,SAAS,CAAC,CAAC,CAAC,eAAe,EAAE,WAAW,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,WAAW,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,WAAW;IACD,gBAAgB;QACxB,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,YAAY,EAAE,GACpE,IAAI,CAAC,cAAc,CAAC;QAEtB,oDAAa,CAAC;YACZ,aAAa;YACb,IAAI;YACJ,iBAAiB;YACjB,MAAM;YACN,YAAY;YACZ,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;SAClC,CAAC;aACC,IAAI,CAAC,6DAAY,CAAC,GAAG,CAAC,CAAC;aACvB,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEa,eAAe;;;YAC3B,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,YAAY,EAAE,GACpE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAErB,IAAI,gBAAgB,GAAG,IAAI,CAAC;YAE5B,CAAC,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,OAAO,CACpE,CAAC,OAAO,EAAE,EAAE;gBACV,IAAI,OAAO,CAAC,OAAO,EAAE;oBACnB,gBAAgB,GAAG,KAAK,CAAC;oBACzB,OAAO;iBACR;YACH,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,gBAAgB,EAAE;gBACrB,OAAO;aACR;YAED,MAAM,SAAS,GAA6B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAEpE,IAAI;gBACF,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,6DAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACpE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAEzE,MAAM,IAAI,GAAG;oBACX,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS;oBACxC,QAAQ,EAAE,oEAAwB;oBAClC,IAAI,EAAE,gEAAoB;oBAC1B,OAAO,EAAE;wBACP,SAAS,EAAE,IAAI;wBACf,aAAa,EAAE;4BACb,MAAM,EAAE,WAAW;4BACnB,QAAQ,EAAE,qBAAS,CAAC,aAAa,0CAAE,OAAO,0CAAE,QAAQ;yBACrD;wBACD,qBAAqB,EAAE;4BACrB,IAAI,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;yBAC7C;wBACD,MAAM,EAAE,KAAK;wBACb,SAAS,EAAE,SAAS,CAAC,aAAa,CAAC,IAAI;qBACxC;iBACF,CAAC;gBAEF,IAAI,CAAC,iBAAiB,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;gBAExE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CACnC,WAAI,CAAC,iBAAiB,0CAAE,MAAM,KAAI,CAAC,CACpC,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAC3C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAChC,CAAC;gBAEF,IACE,sBAAS,CAAC,iBAAiB,0CAAE,OAAO,0CAAE,MAAM;qBAC1C,UAAI,CAAC,iBAAiB,0CAAE,MAAM;oBAChC,sBAAS,CAAC,iBAAiB,0CAAE,OAAO,0CAAE,QAAQ;yBAC5C,UAAI,CAAC,iBAAiB,0CAAE,QAAQ,GAClC;oBACA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC;wBAChD,MAAM,EACJ,WAAI,CAAC,iBAAiB,0CAAE,MAAM;6BAC9B,qBAAS,CAAC,iBAAiB,0CAAE,OAAO,0CAAE,MAAM;wBAC9C,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ;qBAC1C,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,gBAAgB,GAAG,yCAAE,CAAC,IAAI,CAAC,CAAC;iBAClC;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC9B;;KACF;IAEO,oBAAoB,CAC1B,OAAe,EACf,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK;QAEvC,MAAM,SAAS,GAA6B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpE,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAE5B,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACnE,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEtE,MAAM,IAAI,GAAG,aAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,KAAI,wDAAa,CAAC;QACpD,MAAM,OAAO,GAAG,IAAI;YAClB,CAAC,CAAC,gDAAgD;YAClD,CAAC,CAAC,8CAA8C,CAAC;QAEnD,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,EAAE;YACxC,MAAM,EAAE,GAAG,YAAY,IAAI,cAAc,EAAE;YAC3C,IAAI,EAAE,GAAG,4DAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;SAC1E,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB,CACtB,OAAe,EACf,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK;QAEvC,MAAM,SAAS,GAA6B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpE,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAE5B,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACnE,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtE,MAAM,IAAI,GAAG,aAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,KAAI,wDAAa,CAAC;QAEpD,IAAI,OAAO,GAAG,IAAI;YAChB,CAAC,CAAC,4CAA4C;YAC9C,CAAC,CAAC,0CAA0C,CAAC;QAE/C,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,EAAE;YACxC,MAAM,EAAE,GAAG,YAAY,IAAI,cAAc,EAAE;YAC3C,IAAI,EAAE,GAAG,4DAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;SAC1E,CAAC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,CAAiB,EAAE,CAAiB;QACvD,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC7C,OAAO,CAAC,CAAC;SACV;aAAM,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,yEAAY,EAAE;YAC9C,OAAO,CAAC,CAAC,CAAC;SACX;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAEO,YAAY;QAClB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,aAAa;aAC9B,IAAI,CACH,qEAAoB,EAAE,EACtB,oDAAG,CAAC,CAAC,KAAK,EAAE,EAAE;;YACZ,MAAM,QAAQ,GAAG,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,QAAQ,CAAC;YAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,IAClB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACtC,QAAQ;gBACR,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,yEAAY,CAC3C,EAAE,CAAC;YAEH,IAAI,QAAQ,KAAK,oBAAoB,EAAE;gBACrC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;aACjC;YACD,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC;QACF,2BAA2B;QAC3B,sDAAK,CAAC,CAAC,CAAC,CACT;aACA,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC1B,qFAAqF;YACrF,IAAI,YAAY,IAAI,YAAY,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACpD,MAAM,CAAC,cAAc,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAExE,oDAAa,CAAC;YACZ,aAAa;YACb,IAAI;YACJ,MAAM;YACN,UAAU;YACV,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;SAClC,CAAC;aACC,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACpB,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,CAAC,GAAG,MAAM,CAAC;YACvE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAE/D,MAAM,iBAAiB,GACrB,oBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,MAAM,IAAG,WAAW;gBAC5C,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAE3B,IAAI,CAAC,aAAa,GAAG,iBAAiB;gBACpC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;oBACpB,MAAM,EAAE,WAAW,IAAG,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,MAAM;oBACpD,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,QAAQ;iBACzC,CAAC;gBACJ,CAAC,CAAC,yCAAE,CAAC,IAAI,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,aAAa;aAC9B,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;;YAC3B,MAAM,SAAS,GAA6B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACpE,MAAM,iBAAiB,GAAG,SAAS,CAAC,iBAAiB,CAAC;YAEtD,IACE,iBAAiB;gBACjB,wBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,0CAAE,QAAQ;qBAClC,mBAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,GAClC;gBACA,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,CAAC;gBAC/C,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;aACtC;YAED,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;gBACnD,UAAI,CAAC,yBAAyB,0CAAE,aAAa,CAAC,WAAW,CAAC,CAAC;gBAC3D,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;gBAC5C,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;aAC5C;iBAAM;gBACL,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;aAC3C;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CACpD,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,KAAK,yEAAY,CACvD,CAAC;YAEF,IAAI,YAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,MAAK,CAAC,EAAE;gBAC7B,UAAI,CAAC,yBAAyB,0CAAE,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD;iBAAM,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,aAAa,EAAE;gBACpD,UAAI,CAAC,yBAAyB,0CAAE,aAAa,CAAC,aAAa,CAAC,CAAC;gBAC7D,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;aAC/C;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,IAAU;;QACnB,IAAI,CAAC,aAAqB,CAAC,SAAS,GAAG,IAAI,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzC,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC;QACrE,MAAM,OAAO,GAAG,IAAI,sBACf,IAAI,CAAC,IAAI,CAAC,KAAK,CACnB,CAAC;QACF,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,IAAI,iBAAG,EAAE,EAAE,IAAI,CAAC,SAAS,IAAK,OAAO,EAAG,CAAC;QAEjE,IAAI,CAAC,QAAQ;aACV,YAAY,CAAC,OAAO,EAAE;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,IAAI,EAAE,gEAAoB;YAC1B,UAAU,EAAE,UAAI,CAAC,iBAAiB,0CAAE,MAAM;YAC1C,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;YACpC,QAAQ,EAAE,oEAAwB;SACnC,CAAC;aACD,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAChB,IAAI,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE;gBACjC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,YAAY,GAAG;wBAClB,MAAM,EAAE,OAAO,CAAC,MAAM;wBACtB,UAAU,EAAE,OAAO,CAAC,UAAU;wBAC9B,SAAS,EAAE,OAAO,CAAC,SAAS;qBAC7B,CAAC;iBACH;gBAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,EAChE;oBACE,UAAU,EAAE,IAAI,CAAC,KAAK;oBACtB,UAAU,EAAE,IAAI;oBAEhB,KAAK,EAAE;wBACL,MAAM,EAAE,IAAI;wBACZ,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAClD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CACxB;qBACF;iBACF,CACF,CAAC;aACH;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;gBAC9D,kBAAkB,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAC5C;QACH,CAAC,CAAC;aACD,OAAO,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAES,kBAAkB;QAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,KAAK,CAAC,MAAM;aACd,IAAI,CACH,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACf,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK;YAC3B,MAAM;YACN,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC,EACH,6DAAY,CAAC,CAAC,CAAC,EACf,0DAAS,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;YAC9B,wHAAwH;YACxH,IAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,EAAE;gBACjB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,gEAAoB,EAAE;oBACrD,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,4EAA2B,CAAC;iBAC9D;qBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,kEAAsB,EAAE;oBAC9D,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,8EAA6B,CAAC;iBAChE;gBACD,uDAAuD;gBACvD,OAAO,wCAAK,CAAC;aACd;iBAAM,IAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,EAAE;gBACjC,OAAO,yCAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;aAClC;iBAAM,IAAI,MAAM,CAAC,SAAS,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,GAAE;gBACrD,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,eAAe,CAAC;gBAC5D,OAAO,2CAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;gBAClD,WAAW;gBACX,2DAAU,CAAC,CAAC,CAAC,EAAE,EAAE;oBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE,CAAC;qBAC7C,CAAC,CAAC;oBACH,OAAO,wCAAK,CAAC;gBACf,CAAC,CAAC,CACH,CAAC;aACH;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,qEAAoB,CAAC;YACtD,OAAO,wCAAK,CAAC;QACf,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED;;OAEG;IACO,cAAc,CAAC,IAAI;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ;YACtB,0BAA0B;YAC1B,0BAA0B;YAC1B,6CAA6C;YAC7C,8BAA8B;SAC/B,CAAC;aACC,IAAI,CACH,uDAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAC1C,oDAAG,CAAC,GAAG,EAAE;;YACP,IAAI,KAAK,CAAC;YAEV,IAAI;gBACF,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;aACnD;YAAC,OAAO,CAAC,EAAE;gBACV,KAAK,GAAG,EAAE,CAAC;aACZ;YAED,IAAI,CAAC,YAAY,GAAG;gBAClB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,MAAM,EAAE,UAAI,CAAC,MAAM,0CAAE,IAAI;gBACzB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,CAAC;YAEF,4FAA4F;YAC5F,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBACrD,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;gBAClB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,qEAAoB,CAAC;aACvD;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,SAAS;oBAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,gEAAoB;wBAC/C,CAAC,CAAC,4EAA2B;wBAC7B,CAAC,CAAC,8EAA6B,CAAC;aACrC;YAED,IAAI,KAAK,CAAC,cAAc,EAAE;gBACxB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;aACrB;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,mBACf,KAAK,EAIR,CAAC;YACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC5B,oDAAoD;YACpD,sBAAsB;YACtB,qCAAqC;YACrC,6CAA6C;YAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,EACF,6DAAY,CAAC,EAAE,CAAC;QAChB,cAAc;QACd,uEAAuE;QACvE,2CAA2C;QAC3C,gDAAgD;QAChD,yCAAyC;QACzC,WAAW;QACX,QAAQ;QACR,OAAO;QACP,MAAM;QACN,qDAAI,CAAC,CAAC,CAAC,CACR;aACA,SAAS,EAAE,CACf,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,IAAU;;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;QAC9D,MAAM,OAAO,GAAG,IAAI,sBACf,IAAI,CAAC,IAAI,CAAC,KAAK,CACnB,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QAEjD,OAAO,IAAI,CAAC,QAAQ;aACjB,cAAc,CAAC;YACd,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,kCAAkC;YAClC,KAAK,EAAE,OAAO,CAAC,MAAM;YACrB,UAAU,EAAE,UAAI,CAAC,iBAAiB,0CAAE,MAAM;YAC1C,MAAM,EAAE,UAAI,CAAC,YAAY,0CAAE,MAAM;YACjC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;YACpC,OAAO;SACR,CAAC;aACD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACV,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,YAAY,GAAG;oBAClB,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI;oBACrB,UAAU,EAAE,CAAC,CAAC,UAAU;oBACxB,SAAS,EAAE,CAAC,CAAC,SAAS;iBACvB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;oBAC9D,kBAAkB,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;iBAC5C;aACF;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;aAClB,OAAO,CAAC,GAAG,EAAE;YACZ,kCAAkC;YAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;IACT,QAAQ,CAAC,CAAQ;QACtB,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9B;IACH,CAAC;IAEY,cAAc;;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAE1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAExC,IAAI;gBACF,MAAM,wBAAwB,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAC9D,SAAS,CAAC,IAAI,CACf,CAAC;gBAEF,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACzD,SAAS,CAAC,MAAM,EAChB,IAAI,CAAC,WAAW,CACjB,CAAC;gBAEF,iCAAiC;gBAEjC,IAAI,wBAAwB,IAAI,mBAAmB,EAAE;oBACnD,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;qBAAM;oBACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpC;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;QACH,CAAC;KAAA;IAEK,gBAAgB;;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uGAAqB,EAAE;gBAC7D,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,sBAAsB;gBACnC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,OAAO;aACR;QACH,CAAC;KAAA;IAED,wBAAwB,CAAC,QAAe,IAAI;QAC1C,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEM,iBAAiB,CAAC,MAAwB,EAAE,KAAY;QAC7D,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM;iBACR,IAAI,CAAC,yEAAsB,EAAE;gBAC5B,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC;iBACD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;gBACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC9C,sDAAsD;gBACtD,yCAAyC;gBACzC,qCAAqC;gBACrC,KAAK;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,8BAA8B;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAEa,gBAAgB,CAAC,IAAqB;;;YAClD,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAE9B,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,UAAI,CAAC,OAAO,0CAAE,SAAS,CAAC,CAAC;YAEjE,MAAM,WAAW,GAAG,gBAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,gBAAgB,0CAAE,gBAAgB,0CAAE,GAAG,CAAC;YAClE,MAAM,gBAAgB,GACpB,gBAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,qBAAqB,0CAAE,mBAAmB,CAAC;YAC5D,MAAM,oBAAoB,GACxB,gBAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,qBAAqB,0CAAE,oBAAoB,CAAC;YAE7D,IACE,WAAI,CAAC,SAAS,CAAC,aAAa,0CAAE,OAAO,CAAC,QAAQ,MAAK,yEAAY;gBAC/D,IAAI,CAAC,kBAAkB,KAAK,2DAAU,EACtC;gBACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;YAED,IAAI,WAAW,EAAE;gBACf,UAAU,CAAC,GAAG,EAAE;;oBACd,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;wBACjC,UAAI,CAAC,wBAAwB,0CAAE,WAAW,CAAC,WAAW,CAAC,CAAC;qBACzD;yBAAM;wBACL,UAAI,CAAC,YAAY,0CAAE,WAAW,CAAC,WAAW,CAAC,CAAC;qBAC7C;gBACH,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YAED,IAAI,gBAAgB,EAAE;gBACpB,UAAU,CAAC,GAAG,EAAE;;oBACd,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;wBACjC,IAAI,CAAC,qCAAqC,CAAC,WAAW,CACpD,gBAAgB,CACjB,CAAC;qBACH;yBAAM;wBACL,UAAI,CAAC,wBAAwB,0CAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC;qBAC9D;gBACH,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;YAED,IAAI,oBAAoB,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;gBACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,6BAA6B,CAAC,QAAQ,CACvD,oBAAoB,CACrB,CAAC;aACH;YAED,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aACtD;YAED,IAAI,UAAI,CAAC,OAAO,0CAAE,qBAAqB,CAAC,QAAQ,EAAE;gBAChD,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAClC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,QAAQ,CAC5C,CAAC;aACH;YAED,IAAI,CAAC,yBAAyB,CAAC,YAAY,CACzC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,wBAAwB,CAC5D,CAAC;YAEF,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,iBAAI,CAAC,gBAAgB,0CAAE,OAAO,0CAAE,eAAe,EAAC;YAExE,IACE,iBAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,aAAa,0CAAE,QAAQ,MAAK,yEAAY;gBACvD,CAAC,IAAI,CAAC,cAAc,EACpB;gBACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrD;;KACF;IAED,WAAW;IACD,0BAA0B;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc,CAAC,OAAO;YAC3B,IAAI,CAAC,cAAc,CAAC,WAAW;SAChC,CAAC;aACC,IAAI,CACH,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACb,MAAM,CAAC,cAAc,EAAE,WAAW,EAAE,WAAW,CAAC,GAAG,MAAM,CAAC;YAE1D,IAAI,WAAW,KAAK,2DAAU,EAAE;gBAC9B,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;aACnC;iBAAM;gBACL,OAAO,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;aACnE;QACH,CAAC,CAAC,CACH;aACA,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAClC,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACxD,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAC7B,CAAC,gEAAmB,EAAE,iBAAiB,CAAC,CACzC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,4BAA4B;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7D,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;aACrC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,aAAa;aACf,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC1B,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,gEAAmB,CAAC,CAAC,CAAC;aACrE;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qEAAoB,EAAE,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,qEAAoB,EAAE,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,qEAAoB,EAAE,CAAC;YAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAoB,EAAE,CAAC;YACrD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,qEAAoB,EAAE,CAAC;YAC/D,IAAI,CAAC,cAAc,CAAC,WAAW;YAC/B,IAAI,CAAC,cAAc,CAAC,OAAO;YAC3B,IAAI,CAAC,cAAc,CAAC,WAAW;YAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ;SAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACtB,MAAM,CACJ,YAAY,EACZ,QAAQ,EACR,cAAc,EACd,IAAI,EACJ,cAAc,EACd,WAAW,EACX,OAAO,EACP,WAAW,EACX,QAAQ,EACT,GAAG,MAAM,CAAC;YAEX,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,IAAI,YAAY,EAAE;gBAChB,OAAO,IAAI,OAAO,QAAQ,IAAI,EAAE,IAAI,CAAC;aACtC;YAED,IAAI,cAAc,IAAI,CAAC,cAAc,EAAE;gBACrC,OAAO,IAAI,QAAQ,IAAI,IAAI,EAAE,UAAU,WAAW,IAAI,EAAE,GAAG,CAAC;aAC7D;YAED,IAAI,WAAW,KAAK,2DAAU,EAAE;gBAC9B,OAAO,IAAI,KAAK,OAAC,QAA6B,0CAAE,IAAI,KAAI,EAAE,EAAE,CAAC;aAC9D;YAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACvD,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,MAAM,CAAC;YAE/C,IAAI,YAAY,EAAE;gBAChB,IAAI,UAAU,CAAC;gBAEf,IAAI,eAAe,EAAE;oBACnB,UAAU,GAAG,CAAC,iBAAiB,EAAE,gEAAmB,CAAC,CAAC;iBACvD;qBAAM;oBACL,UAAU,GAAG,CAAC,iBAAiB,CAAC,CAAC;iBAClC;gBAED,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;aAC1D;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,GACtD,IAAI,CAAC,cAAc,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,SAAS,CACvE,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,kBAAkB;aACpB,IAAI,CAAC,qEAAoB,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YACvB,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAC7B,CAAC,gEAAmB,CAAC,CACtB,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc,CAAC,aAAa;YACjC,IAAI,CAAC,cAAc,CAAC,QAAQ;YAC5B,IAAI,CAAC,cAAc,CAAC,cAAc;YAClC,IAAI,CAAC,cAAc,CAAC,WAAW;YAC/B,IAAI,CAAC,cAAc,CAAC,IAAI;SACzB,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACtB,MAAM,CACJ,eAAe,EACf,aAAa,EACb,cAAc,EACd,aAAa,EACb,QAAQ,EACR,cAAc,EACd,WAAW,EACX,IAAI,EACL,GAAG,MAAM,CAAC;YAEX,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAE3D,MAAM,eAAe,GAAG,MAAC,QAAwB,0CAAE,UAAU,CAC1D,eAAe,CAAC;YAEnB,IAAI,cAAc,EAAE;gBAClB,uDAAuD;gBACvD,uBAAuB;gBACvB,2CAA2C;gBAC3C,0EAA0E;gBAC1E,eAAe;gBACf,4DAA4D;gBAC5D,QAAQ;gBACR,WAAW;gBACX,IAAI;gBAEJ,IAAI,eAAe,IAAI,eAAe,KAAK,2DAAU,EAAE;oBACrD,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,qCAAqC,CAAC,WAAW,CACnD,QAAwB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAC/C,CAAC;oBACJ,CAAC,EAAE,GAAG,CAAC,CAAC;iBACT;qBAAM,IAAI,eAAe,IAAI,eAAe,KAAK,2DAAU,EAAE;oBAC5D,UAAU,CAAC,GAAG,EAAE;;wBACd,IAAI,CAAC,wBAAwB,CAAC,WAAW,CACvC,UAAI,CAAC,SAAS,CAAC,QAAQ,0CAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAC9C,CAAC;oBACJ,CAAC,EAAE,GAAG,CAAC,CAAC;iBACT;gBAED,IAAI,CAAC,eAAe,CAClB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EACvD,KAAK,CACN,CAAC;gBAEF,IAAI,CAAC,aAAa,CAChB;oBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB;oBACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB;iBACzC,EACD,CAAC,gEAAmB,CAAC,CACtB,CAAC;gBAEF,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kCAAkC,CAAC,EACvD;oBACE,gEAAmB;oBACnB,CAAC,OAAO,EAAE,EAAE;wBACV,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;4BAClB,OAAO;gCACL,QAAQ,EAAE,IAAI;6BACf,CAAC;yBACH;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,GAAG,EAAE;;wBACH,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,CACxD,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,0CAAE,EAAE,EAC7C,IAAI,CACL,CAAC;wBAEF,IAAI,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,MAAK,KAAK,EAAE;4BACnC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;yBACjC;wBAED,OAAO,IAAI,CAAC;oBACd,CAAC;iBACF;gBACD,8CAA8C;gBAC9C,uBAAuB;gBACvB,4BAA4B;gBAC5B,IAAI;iBACL,CAAC;gBACF,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAClD,CAAC,gEAAmB,EAAE,6BAA6B,CAAC,EACpD,+GAA6C,CAAC,IAAI,CAAC,YAAY,CAAC,CACjE,CAAC;aACH;iBAAM;gBACL,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,eAAe,CAClB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EACvD,KAAK,CACN,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EACzB,CAAC,gEAAmB,CAAC,EACrB,IAAI,EACJ,KAAK,CACN,CAAC;oBAEF,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAC9B;wBACE,gEAAmB;wBACnB,GAAG,EAAE;;4BACH,IACE,IAAI,CAAC,kBAAkB,KAAK,2DAAU;gCACtC,aAAC,aAAgC,0CAAE,OAAO,0CAAE,QAAQ;oCAClD,yEAAY;gCACd,kCAAkC,CAAC,WAAqB,CAAC;gCACzD,kCAAkC,CAAC,MAAC,IAAc,0CAAE,GAAG,CAAC;gCACxD,IAAI,CAAC,uBAAuB,EAC5B;gCACA,OAAO;oCACL,iBAAiB,EAAE,IAAI;iCACxB,CAAC;6BACH;iCAAM,IACL,IAAI,CAAC,kBAAkB,KAAK,2DAAU;gCACtC,aAAC,aAAgC,0CAAE,OAAO,0CAAE,QAAQ;oCAClD,yEAAY;gCACd,kCAAkC,CAAC,WAAqB,CAAC;gCACzD,CAAC,kCAAkC,CAAC,MAAC,IAAc,0CAAE,GAAG,CAAC,EACzD;gCACA,OAAO;oCACL,iBAAiB,EAAE,IAAI;iCACxB,CAAC;6BACH;4BACD,OAAO,IAAI,CAAC;wBACd,CAAC;wBACD,GAAG,EAAE;;4BACH,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,CACxD,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,0CAAE,EAAE,EACjC,IAAI,CACL,CAAC;4BAEF,IAAI,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,MAAK,KAAK,EAAE;gCACnC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;6BACjC;4BAED,OAAO,IAAI,CAAC;wBACd,CAAC;qBACF;oBACD,8CAA8C;oBAC9C,uBAAuB;oBACvB,4BAA4B;oBAC5B,IAAI;qBACL,CAAC;iBACH;gBACD,IAAI,CAAC,eAAe,CAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kCAAkC;oBACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,6BAA6B;iBACjD,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,mCAAmC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACtD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oCAAoC;IACpC,mBAAmB;IACnB,6DAA6D;IAC7D,+BAA+B;IAC/B,8BAA8B;IAC9B,2CAA2C;IAC3C,kCAAkC;IAClC,aAAa;IACb,iBAAiB;IACjB,+DAA+D;IAC/D,UAAU;IACV,SAAS;IACT,OAAO;IACP,IAAI;IAEJ,oBAAoB;IACZ,oBAAoB,CAAC,OAAgB;QAC3C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,OAAO,KAAK,2DAAU,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACtC,IAAI,CAAC,kCAAkC,EAAE,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEhC,IAAI,CAAC,qCAAqC,EAAE,CAAC;YAC7C,IAAI,CAAC,iCAAiC,EAAE,CAAC;SAC1C;IACH,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,wEAAqB,CAAC;IAC7C,CAAC;IAEO,8BAA8B;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEO,kCAAkC;QACxC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAEO,qCAAqC;QAC3C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;QACnE,oCAAoC;QACpC,oCAAoC;IACtC,CAAC;IAEO,iCAAiC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,wBAAwB;IAChB,wBAAwB;QAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEjC,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,iCAAiC,EAAE,CAAC;QACzC,IAAI,CAAC,qCAAqC,EAAE,CAAC;QAC7C,IAAI,CAAC,gCAAgC,EAAE,CAAC;IAC1C,CAAC;IAEO,qCAAqC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEO,+BAA+B;QACrC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,qEAAkB,CAAC;IAC1C,CAAC;IAEO,iCAAiC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEO,gCAAgC;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAEO,sBAAsB,CAAC,WAAoB;QACjD,IAAI,CAAC,WAAW,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,2DAAU,CAAC,CAAC;YACpD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,iBAAiB,CAAC,2DAAU,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;IAClE,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,aAAa;YACjC,IAAI,CAAC,cAAc,CAAC,UAAU;SAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACtB,MAAM,UAAU,GAAG;gBACjB,gEAAmB;gBACnB,2DAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;gBACpD,2DAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;gBACpD,CAAC,OAAwB,EAAE,EAAE;oBAC3B,IAAI,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,MAAK,CAAC,EAAE;wBACxB,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;qBAC7B;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC;aACF,CAAC;YAEF,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CACvD,OAAO,CAAC,KAAK,CACd,CAAC;gBACF,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,cAAc,EAAE;oBACzD,OAAO;iBACR;qBAAM;oBACL,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;wBAClD,IAAI,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;4BAC3D,OAAO,IAAI,CAAC;yBACb;6BAAM;4BACL,OAAO;gCACL,mBAAmB,EAAE,IAAI;6BAC1B,CAAC;yBACH;qBACF;iBACF;gBACD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAChB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC3B,UAAU,EACV,IAAI,EACJ,KAAK,CACN,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;;YAhiGC,2DAAc;YAkCd,gEAAe;YAlDR,wEAAa;YAlDb,4DAAc;YAAE,oDAAM;YAgG7B,kEAAiB;YA5CV,sFAAmB;YAzBnB,kEAAgB;YA4EhB,+EAA2B;YA7E3B,iEAAQ;YAwEf,wEAAuB;YADvB,2EAA0B;YAxEnB,+CAAQ;YA0Cf,8DAAiB;YAcV,sEAAmB;YA9BnB,8DAAmB;YAQ1B,6DAAe;YAkCf,uEAAsB;YA1CM,wDAAa;YAmBlC,8EAAiB;YASjB,wEAAsB;;;6BAwQ5B,qDAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;oCAM5C,qDAAS,SAAC,uBAAuB;8BAIjC,qDAAS,SAAC,iBAAiB;8BAqB3B,qDAAS,SAAC,iBAAiB;2BAa3B,qDAAS,SAAC,cAAc;uCAKxB,qDAAS,SAAC,0BAA0B;wCAepC,qDAAS,SAAC,2BAA2B;uCA8BrC,qDAAS,SAAC,0BAA0B;oDAIpC,qDAAS,SAAC,uCAAuC;iDAIjD,qDAAS,SAAC,oCAAoC;;AAvJpC,wBAAwB;IAZpC,yDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,kFAAgD;QAEhD,aAAa,EAAE,kEAAsB;QACrC,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,uEAAiB;gBAC1B,QAAQ,EAAE,kFAA4B;aACvC;SACF;;KACF,CAAC;GACW,wBAAwB,CA4zFpC;AA5zFoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnTM;AACiC;AAGN;AAIpC;AACmB;AAEhB;IAcxB,yBAAyB,SAAzB,yBAAyB;IAOpC,YACU,QAAkB,EAClB,UAAsB,EACtB,eAAgC;QAFhC,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,oBAAe,GAAf,eAAe,CAAiB;IACvC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAChD,mDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,CACpC,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC;QAEvC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;IACzC,CAAC;CAEF;;YAxDQ,qDAAQ;YASR,+DAAU;YALV,gFAAe;;;+BAuBrB,oDAAS,SAAC,kBAAkB;;AAFlB,yBAAyB;IAXrC,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mFAAiD;QAEjD,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,uEAAiB;gBAC1B,QAAQ,EAAE,kFAA4B;aACvC;SACF;;KACF,CAAC;GACW,yBAAyB,CA+BrC;AA/BqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBsD;AACT;AACT;AACY;AACN;AACM;AACH;AACG;AACH;AACM;AAElF,MAAM,mBAAmB,GAAG;IACjC,qGAAyB;IACzB,kGAAwB;IAExB,4FAAsB;IAEtB,mFAAmB;IACnB,+FAAuB;IACvB,yFAAqB;IAErB,+FAAuB;IACvB,4FAAsB;IACtB,+FAAuB;IACvB,4FAAsB;CACvB,CAAC;AAE8D;AACN;AACN;AACQ;AACJ;AACI;AACF;AACE;AACF;AAGjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCS;AACiC;AAKb;AAKlC;AAC0B;AACI;AACxB;AAKkC;AAClB;AACZ;AACyC;AAC9B;AACkB;AACmB;AACvC;AACa;AACT;AACyC;AAChD;IAOvC,uBAAuB,SAAvB,uBACX,SAAQ,6FAA6C;IAqBrD,YACY,KAAqB,EACrB,MAAc,EACjB,eAAgC,EAChC,cAA8B,EAC9B,WAAmC,EAChC,WAA0B,EAC1B,eAAgC,EAChC,YAAsB,EACtB,YAAiC,EACjC,GAAsB,EACtB,QAAiC,EACjC,gBAAkC,EAClC,oBAAgD,EAChD,2BAAwD,EACxD,mBAAwC,EACxC,eAAoC;QAE9C,KAAK,CACH,oBAAoB,CAAC,iBAAiB,EAAE,EACxC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAhCQ,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAwB;QAChC,gBAAW,GAAX,WAAW,CAAe;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,QAAG,GAAH,GAAG,CAAmB;QACtB,aAAQ,GAAR,QAAQ,CAAyB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAqB;QAhChD,UAAK,GAED;YACF,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,KAAK;SACX,CAAC;QAMF,sBAAiB,GAAG,kFAA2B,CAAC;QAChD,sBAAiB,GAAG,kFAA2B,CAAC;QAqC9C,IAAI,CAAC,WAAW,GAAG,gEAAoB,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;CACF;;YA5FQ,4DAAc;YAAE,oDAAM;YAjBtB,gFAAe;YAcf,oEAAc;YAZrB,+EAAsB;YAIf,wEAAa;YACb,4DAAe;YAJtB,iEAAQ;YAUD,sFAAmB;YAKnB,sFAAiB;YAFjB,iGAAuB;YAIvB,kEAAgB;YADhB,yGAA0B;YAE1B,+EAA2B;YAC3B,sEAAmB;YAEnB,+DAAmB;;AAOf,uBAAuB;IALnC,yDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA8EnC;AA9EmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrC8B;AACM;AACf;AACC;AAStB;AACuF;AACxC;AAEI;AACjB;AACR;AACc;AAU9D;AAcU;AAOA;AACmD;AACI;AACe;AAMhE;AACiB;AACQ;AAEa;AACT;AACE;AACD;AAChB;AACJ;AACY;AAEpD,IAAK,oBAGJ;AAHD,WAAK,oBAAoB;IACvB,2CAAmB;IACnB,uCAAe;AACjB,CAAC,EAHI,oBAAoB,KAApB,oBAAoB,QAGxB;IAOY,qBAAqB,SAArB,qBACX,SAAQ,6FAA2C;IA+CnD,YACS,cAA8B,EAC9B,eAAgC,EAChC,WAA0B,EAEvB,KAAqB,EACrB,MAAc,EACd,GAAsB,EACtB,YAAiC,EACjC,gBAAkC,EAClC,2BAAwD,EACxD,mBAAwC,EACxC,eAAoC,EAEtC,eAAgC,EAChC,YAAsB,EACtB,SAAkC,EAClC,oBAAgD,EAEhD,iBAAoC,EACpC,WAAwB,EACxB,sBAA8C,EAC9C,sBAA8C;QAEtD,KAAK,CACH,oBAAoB,CAAC,wBAAwB,EAAE,EAC/C,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,SAAS,EACT,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAtCK,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAe;QAEvB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAqB;QAEtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,cAAS,GAAT,SAAS,CAAyB;QAClC,yBAAoB,GAApB,oBAAoB,CAA4B;QAEhD,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACxB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,2BAAsB,GAAtB,sBAAsB,CAAwB;QA1DxD,2BAAsB,GAAG,IAAI,kDAAe,CAAgB,IAAI,CAAC,CAAC;QAGlE,UAAK,GAED;YACF,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,cAAc;YAC3B,OAAO,EAAE,KAAK;YACd,GAAG,EAAE,KAAK;YACV,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;SACjB,CAAC;QAEF,eAAU,GAAmC,EAAE,CAAC;QAEhD,uBAAkB,GAAG,oBAAoB,CAAC;QAC1C,kBAAa,GAAG,IAAI,kDAAe,CAAuB,IAAI,CAAC,CAAC;QAEhE,gBAAW,GAAG,IAAI,0CAAO,EAAU,CAAC;QACpC,gBAAW,GAAG,IAAI,kDAAe,CAAC,EAAE,CAAC,CAAC;QACtC,uBAAkB,GAAG,IAAI,kDAAe,CAAC,IAAI,CAAC,CAAC;QAM/C,oBAAe,GAAG,IAAI,kDAAe,CAAU,IAAI,CAAC,CAAC;QACrD,gBAAW,GAAG,IAAI,kDAAe,CAAU,IAAI,CAAC,CAAC;QAEjD,yBAAoB,GAAG,IAAI,CAAC;QAC5B,gBAAW,GAAkB,EAAE,CAAC;QA6C9B,IAAI,CAAC,WAAW,GAAG,+EAAkC,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1B,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBAC1C,IAAI,EAAE,+EAAkC;gBACxC,aAAa,EAAE,IAAI;aACpB,CAAC;SACL,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,WAAW,CAAC,IAAI,CACd,uDAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,EACnD,0DAAS,CAAC,EAAE,CAAC,CACd;YACD,aAAa,CAAC,IAAI,CAChB,uDAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,EACrD,oDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAClB,0DAAS,CAAC,EAAE,CAAC,CACd;SACF,CAAC;aACC,IAAI,CACH,oDAAG,CAAC,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,EAAE,CACjC,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAC3C,aAAa,EACb,IAAI,GAAG,SAAS,CACjB,CACF,CACF;aACA,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAC5C,CAAC;QAEF,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,YAAY;aACd,IAAI,CAAC,qIAA6B,EAAE;YACnC,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE,IAAI;SACf,CAAC;aACD,MAAM,CAAC,IAAI,CACV,CAAC,EACC,SAAS,EACT,OAAO,GAIR,EAAE,EAAE;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,WAAW,EAAE,OAAO,CAAC,IAAI;gBACzB,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI;aAC5B,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,CAAC,CACF;aACA,KAAK,CAAC,GAAG,EAAE;YACV,8BAA8B;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB,CAAC,KAAiB;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,wBAAwB,CAAC,QAAe,IAAI;QAC1C,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,mBAAmB,CAAC,KAAY;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,GAAG;aACL,cAAc,EAAE;aAChB,IAAI,CACH,yDAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACpC,CAAC,CAAC,EACF,oDAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAChB,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAC5B,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC,uDAAY,CAAC,CACpD,CACF,CACF;aACA,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEK,gBAAgB,CAAC,QAAqB;;;YAC1C,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAC9D,QAAQ,CAAC,EAAE,CACZ,CAAC;YAEF,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEhC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5B,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAEjC,IAAI,iBAAiB,GAAG,cAAQ,CAAC,UAAU,0CAAE,IAAI,CAC/C,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,OAAO,CACjC,CAAC;YAEF,MAAM,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,GAClD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAE1B,IAAI,CAAC,mBAAmB,IAAI,CAAC,qBAAqB,IAAI,iBAAiB,EAAE;gBACvE,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;gBAChD,OAAO;aACR;YAED,MAAM,cAAc,GAAG,cAAQ,CAAC,UAAU,0CAAE,IAAI,CAC9C,CAAC,SAAS,EAAE,EAAE,CACZ,oBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,EAAE,MAAK,SAAS,CAAC,EAAE;gBACxC,qBAAqB,KAAK,SAAS,CAAC,EAAE,CACzC,CAAC;YAEF,IAAI,cAAc,EAAE;gBAClB,iBAAiB,GAAG,cAAc,CAAC;aACpC;YAED,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;;KACjD;IAED,uBAAuB,CAAC,SAA+B;QACrD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO;SACR;QAED,MAAM;QACJ,QAAQ;QACR,eAAe;QACf,mBAAmB,EACnB,qBAAqB,GACtB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEvB,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACxC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAE7C,uCAAuC;QAEvC,wBAAwB;QACxB,wCAAwC;QACxC,IAAI;IACN,CAAC;IAEM,iBAAiB,CAAC,MAAwB,EAAE,KAAY;QAC7D,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yEAAsB,EAAE;gBACxD,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,QAAQ,CAAC,iBAAiB,CAAC,WAAW;gBACpC,+EAAkC,CAAC;YACrC,QAAQ,CAAC,MAAM;iBACZ,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7C,sDAAsD;gBACtD,yCAAyC;gBACzC,qCAAqC;gBACrC,KAAK;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,8BAA8B;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,0BAA0B;QAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAC1D,oDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACV,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,2BAA2B;QACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YAC9D,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,gEAAmB,CAAC,CAAC;aAChE;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;aAC/C;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;QACvD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,6BAA6B;QACnC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,QAAQ;aACzB,IAAI,CACH,qEAAoB,EAAE,EACtB,6DAAY,CAAC,GAAG,CAAC,EACjB,0DAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,QAAQ,CAAC,KAAK,EAAE;gBAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC;gBACzC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACvC;YACD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO,yCAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,kBAAkB,EAAE,EAAE;YAChC,kBAAkB,IAAI,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YACjE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,kBAAiC;;QACzD,IAAI,wBAAkB,CAAC,WAAW,0CAAE,IAAI,EAAE;YACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,wBAAkB,CAAC,WAAW,0CAAE,IAAI,CAAC,CAAC;SACxE;QACD,IAAI,kBAAkB,CAAC,UAAU,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,UAAU,CAAC;SACjD;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,yBAAkB,CAAC,UAAU,0CAAE,MAAM,MAAK,CAAC;YACzC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO;YACjC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAClC,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,MAAM;aACvB,IAAI,CAAC,6DAAY,CAAC,GAAG,CAAC,CAAC;aACvB,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CACf,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,EAAE,CACvD,CACJ,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,QAAQ;aACzB,IAAI,CACH,6DAAY,CAAC,GAAG,CAAC,EACjB,uDAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EACvD,0DAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC,iBAAiB;iBAC1B,oBAAoB,CAAC,QAAQ,CAAC;iBAC9B,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CACL,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,CAAC,KAAyB,EAAE,EAAE;YAC1C,OAAO,oDAAa,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAChE;gBACD,KAAK,CAAC,IAAI,CAAC,6DAAY,CAAC,GAAG,CAAC,EAAE,qEAAoB,EAAE,EAAE,0DAAS,CAAC,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,WAAW;aACjB,CAAC,CAAC,IAAI,CACL,oDAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC5B,IAAI,IAAI,EAAE;oBACR,OAAO,MAAM;yBACV,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAC9D;yBACA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAChB;qBAAM;oBACL,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC3B;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,iBAAiB;iBACnB,iBAAiB,CAAC,QAAQ,CAAC;iBAC3B,IAAI,CAAC,CAAO,kBAAkB,EAAE,EAAE,CAAC;gBAClC,kBAAkB,IAAI,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;gBACjE,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;YAC5C,CAAC,EAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IACa,aAAa;;YACzB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,yEAAsB,EAAE;gBACpD,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC,MAAM,CAAC;QACZ,CAAC;KAAA;IACK,4BAA4B;;YAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;KAAA;CACF;;YAxgBQ,oEAAc;YAcd,gFAAe;YACf,wEAAa;YAhBb,4DAAc;YAAE,oDAAM;YAiDtB,sFAAiB;YAhCjB,sFAAmB;YA0CnB,kEAAgB;YAEhB,+EAA2B;YAC3B,sEAAmB;YAKnB,+DAAmB;YArEnB,4DAAe;YAUtB,iEAAQ;YAMD,iGAAuB;YAqCvB,yGAA0B;YAD1B,2EAAiB;YAQjB,0DAAW;YAKX,wEAAsB;YACtB,uEAAsB;;;6BAoD5B,qDAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;8BAQ5C,qDAAS,SAAC,iBAAiB;;AA7CjB,qBAAqB;IALjC,yDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA0bjC;AA1biC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjF8C;AACvB;AAEQ;AAC5B;AAEyC;AAEZ;AAER;AAEI;AAEP;AACT;AAIqC;AAOvD;AAC2B;AACa;AACT;AAIzB;AACkB;IAQvC,uBAAuB,SAAvB,uBACX,SAAQ,6FAA6C;IAsBrD,YACY,KAAqB,EACrB,MAAc,EACjB,eAAgC,EAChC,cAA8B,EAC9B,WAAmC,EACnC,WAA0B,EACzB,eAAgC,EAChC,YAAsB,EACpB,YAAiC,EACjC,GAAsB,EACtB,QAAiC,EACjC,gBAAkC,EAClC,2BAAwD,EACxD,oBAAgD,EAChD,mBAAwC,EACxC,eAAoC;QAE9C,KAAK,CACH,oBAAoB,CAAC,iBAAiB,EAAE,EACxC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAhCQ,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAwB;QACnC,gBAAW,GAAX,WAAW,CAAe;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACpB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,QAAG,GAAH,GAAG,CAAmB;QACtB,aAAQ,GAAR,QAAQ,CAAyB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAqB;QA/BhD,UAAK,GAED;YACF,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,KAAK;SACX,CAAC;QAEF,sBAAiB,GAAG,kFAA2B,CAAC;QAChD,sBAAiB,GAAG,kFAA2B,CAAC;QAEvC,eAAU,GAAG,IAAI,kDAAe,CAAa,EAAE,CAAC,CAAC;QACjD,YAAO,GAAG,IAAI,kDAAe,CAAS,CAAC,CAAC,CAAC;QACzC,SAAI,GAAG,IAAI,+CAAY,EAAE,CAAC;QAoCjC,IAAI,CAAC,WAAW,GAAG,gEAAoB,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;CAuBF;;YA9IQ,4DAAc;YAAE,oDAAM;YAqB7B,+DAAe;YAZR,oEAAc;YAJd,+EAAsB;YAMtB,wEAAa;YAJG,4DAAe;YAFP,iEAAQ;YAQhC,iEAAmB;YAU1B,iEAAiB;YADjB,uEAAuB;YAIhB,kEAAgB;YAChB,8EAA2B;YAHlC,0EAA0B;YAInB,sEAAmB;YAKnB,+DAAmB;;AAQf,uBAAuB;IANnC,yDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;QAE/C,aAAa,EAAE,kEAAsB;;KACtC,CAAC;GACW,uBAAuB,CAqGnC;AArGmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Cc;AACO;AAEuB;AAO5C;AAE0B;AACc;AACxB;AAIc;AAER;AAEY;AACK;AACY;AACO;AAIW;AACtB;AAC5B;AACa;AACT;AAKzB;AACkB;IAOvC,sBAAsB,SAAtB,sBACX,SAAQ,8FAA4C;IAsBpD,YACS,eAAgC,EAChC,cAA8B,EAC9B,WAAmC,EAChC,KAAqB,EACrB,MAAc,EACd,WAA0B,EAC1B,eAAgC,EAChC,YAAsB,EACtB,GAAsB,EACtB,YAAiC,EACjC,QAAiC,EACjC,gBAAkC,EAClC,oBAAgD,EAChD,2BAAwD,EACxD,mBAAwC,EACxC,eAAoC;QAE9C,KAAK,CACH,oBAAoB,CAAC,gBAAgB,EAAE,EACvC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAhCK,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAwB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAe;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAyB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAqB;QAhChD,UAAK,GAED;YACF,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,KAAK;YACV,WAAW,EAAE,cAAc;SAC5B,CAAC;QAMF,sBAAiB,GAAG,iFAA0B,CAAC;QAC/C,sBAAiB,GAAG,iFAA0B,CAAC;QAoC7C,IAAI,CAAC,WAAW,GAAG,+DAAmB,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC;QAEnD,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,YAAY;aAC7B,IAAI,CACH,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EACpC,oDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC3C,qEAAoB,EAAE,CACvB;aACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE;gBAC5D,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aAC5B;iBAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,WAAW,CAAC,QAAQ,EAAE;gBAClE,8BAA8B;gBAC9B,WAAW,CAAC,MAAM,EAAE,CAAC;aACtB;iBAAM,IAAI,IAAI,EAAE;gBACf,WAAW,CAAC,sBAAsB,EAAE,CAAC;aACtC;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,yCAAyC;IAEzC,uCAAuC;IACvC,4DAA4D;IAC5D,IAAI;IAEG,mBAAmB;QACxB,IAAI,CAAC,MAAM;aACR,IAAI,CAAC,oHAAuB,EAAE;YAC7B,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE,IAAI;SACf,CAAC;aACD,MAAM,CAAC,IAAI,CACV,CAAC,IAAU,EAAE,EAAE,CACb,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAC9D;aACA,KAAK,CAAC,GAAG,EAAE;YACV,8BAA8B;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAnJQ,gFAAe;YAFf,oEAAc;YAbrB,+EAAsB;YANf,4DAAc;YAAE,oDAAM;YAWtB,wEAAa;YAMb,4DAAe;YAVtB,iEAAQ;YAeD,qFAAiB;YAVjB,sFAAmB;YAWnB,iGAAuB;YAOvB,kEAAgB;YANhB,yGAA0B;YAO1B,+EAA2B;YAC3B,sEAAmB;YAMnB,+DAAmB;;AAOf,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CA2HlC;AA3HkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Ce;AACiC;AAEb;AAKlC;AAC0B;AACI;AACxB;AAKkC;AAClB;AACZ;AACW;AACkB;AACY;AACO;AACvC;AACa;AACT;AAKzB;AACkB;IAOvC,sBAAsB,SAAtB,sBACX,SAAQ,6FAA4C;IAoBpD,YACS,eAAgC,EAChC,cAA8B,EAC9B,WAAmC,EAChC,KAAqB,EACrB,MAAc,EAEd,WAA0B,EAC1B,eAAgC,EAChC,YAAsB,EACtB,GAAsB,EACtB,YAAiC,EACjC,QAAiC,EACjC,gBAAkC,EAClC,oBAAgD,EAChD,mBAAwC,EACxC,2BAAwD,EACxD,eAAoC;QAE9C,KAAK,CACH,oBAAoB,CAAC,gBAAgB,EAAE,EACvC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAjCK,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAwB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAEd,gBAAW,GAAX,WAAW,CAAe;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAyB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,oBAAe,GAAf,eAAe,CAAqB;QAhChD,UAAK,GAED;YACF,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,KAAK;SACX,CAAC;QAMF,sBAAiB,GAAG,iFAA0B,CAAC;QAC/C,sBAAiB,GAAG,iFAA0B,CAAC;QAqC7C,IAAI,CAAC,WAAW,GAAG,+DAAmB,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC;CAOF;;YAvHQ,gFAAe;YAcf,oEAAc;YAZrB,+EAAsB;YAcf,4DAAc;YAAE,oDAAM;YAVtB,wEAAa;YACb,4DAAe;YAJtB,iEAAQ;YAcD,qFAAiB;YAJjB,sFAAmB;YAKnB,kGAAuB;YAEvB,kEAAgB;YADhB,yGAA0B;YAG1B,sEAAmB;YADnB,+EAA2B;YAO3B,+DAAmB;;AAOf,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAoFlC;AApFkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtC+B;AAO3C;AACiB;AAKJ;AAC+C;AAC+B;AACZ;AAEhC;AACR;AAQhD;AAOU;AACoD;AAClB;AACM;AACC;AACV;AACZ;AAC4C;AAC9B;AACkB;AACmB;AAEhC;AACM;AACT;AACP;IAOvC,mBAAmB,SAAnB,mBACX,SAAQ,6FAAyC;IA6CjD,YACY,KAAqB,EACrB,MAAc,EACjB,eAAgC,EAChC,cAA8B,EAC9B,WAAmC,EACnC,WAA0B,EAC1B,SAA2B,EAC3B,QAAkB,EACjB,eAAgC,EAChC,YAAsB,EACtB,SAAkC,EAChC,GAAsB,EACtB,YAAiC,EACjC,mBAAwC,EACxC,oBAAgD,EAChD,2BAAwD,EACxD,eAAoC;QAE9C,KAAK,CACH,oBAAoB,CAAC,aAAa,EAAE,EACpC,GAAG,EACH,KAAK,EACL,MAAM,EACN,cAAc,EACd,eAAe,EACf,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,SAAS,EACT,SAAS,EACT,2BAA2B,EAC3B,mBAAmB,EACnB,eAAe,CAChB,CAAC;QAjCQ,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAwB;QACnC,gBAAW,GAAX,WAAW,CAAe;QAC1B,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,cAAS,GAAT,SAAS,CAAyB;QAChC,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAA4B;QAChD,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,oBAAe,GAAf,eAAe,CAAqB;QAjDhD,uBAAkB,GAAqB,SAAS,CAAC;QAIjD,UAAK,GAED;YACF,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,cAAc,EAAE,UAAU;YAC1B,WAAW,EAAE,cAAc;SAC5B,CAAC;QAMF,yCAAyC;QACzC,gBAAW,GAAG,IAAI,kDAAe,CAAC,CAAC,CAAC,CAAC;QAMrC,qBAAgB,GAAG,IAAI,kDAAe,CAAC,EAAE,CAAC,CAAC;QAE3C,cAAS,GAAG,EAAE,CAAC;QAEN,SAAI,GAAG,IAAI,+CAAY,EAAE,CAAC;QAoCjC,IAAI,CAAC,WAAW,GAAG,6DAAgB,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QAEtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe;aAC5C,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC5C,IAAI,CAAC,oDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1B,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBAC1C,IAAI,EAAE,6DAAgB;gBACtB,aAAa,EAAE,KAAK;aACrB,CAAC;SACL,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,oDAAa,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CACrC,oDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACnC;SACF,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH,CAAC;QAEF,MAAM,YAAY,GAAG;YACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;YACnE,oDAAa,CAAC;gBACZ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC;gBACxC,IAAI,CAAC,cAAc;aACpB,CAAC,CAAC,IAAI,CACL,oDAAG,CAAC,CAAC,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE;gBACtC,IAAI,OAAO,IAAI,OAAO,KAAK,YAAY,EAAE;oBACvC,OAAO,GAAG,MAAM,KAAK,OAAO,GAAG,CAAC;iBACjC;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,EACF,oDAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CACtC;SACF,CAAC;QACF,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAE;YAC5C,UAAU;YACV,KAAK;YACL,KAAK;YACL,QAAQ;SACT,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChD,MAAM,EAAE,cAAc,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnD,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;gBAC1D,GAAG,CAAC,MAAM,EAAE,CAAC;gBACb,cAAc,CAAC,OAAO,EAAE,CAAC;gBACzB,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC;aACvC;iBAAM,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAChC,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBAChC,cAAc,CAAC,MAAM,EAAE,CAAC;gBACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,cAAc,CAAC,OAAO,EAAE,CAAC;gBACzB,cAAc,CAAC,KAAK,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBACtD,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,IAAI,CAAC,cAAc,CAAC,eAAe;aAChC,IAAI,CACH,6DAAY,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAC/D,qEAAoB,EAAE,CACvB;aACA,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC9D,IAAI,CAAC,EAAE;gBACL,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;gBACpD,MAAM,CAAC,OAAO,EAAE,CAAC;aAClB;iBAAM;gBACL,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;gBACrD,MAAM,CAAC,MAAM,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CACL,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,yEAA4B,CAAC,CAAC;SACrE;IACH,CAAC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK;YAC7C,CAAC,CAAC,2BAA2B;YAC7B,CAAC,CAAC,4BAA4B,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,GAAQ;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,iBAAiB,EAAE;YAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,wBAAwB,CAAC,MAAM,EAAE,KAAa;QAC5C,KAAK,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;QAChC,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,EAAE,CAAC;SAChB;QACD,IAAI,CAAC,YAAY;aACd,IAAI,CAAC,gHAAsB,EAAE;YAC5B,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE,IAAI;SACf,CAAC;aACD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACV,8BAA8B;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,MAAM,EAAE,KAAa;QACrC,KAAK,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;QAChC,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,EAAE,CAAC;SAChB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4HAA0B,EAAE;YAC/D,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,8BAA8B;YAC3C,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE;YACrC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC,CAAC;QACH,KAAK,CAAC,MAAM;aACT,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACV,8BAA8B;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,GAAQ;QAClB,kDAAkD;IACpD,CAAC;IAED,iBAAiB;IACjB,mEAAmE;IACnE,uCAAuC;IACvC,2CAA2C;IAC3C,sBAAsB;IACtB,0BAA0B;IAC1B,QAAQ;IACR,6CAA6C;IAC7C,oBAAoB;IACpB,uBAAuB;IACvB,8EAA8E;IAC9E,+BAA+B;IAC/B,uBAAuB;IACvB,QAAQ;IACR,IAAI;IAEJ,oBAAoB;QAClB,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,GACvD,IAAI,CAAC,cAAc,CAAC;QACtB,OAAO,oDAAa,CAAC;YACnB,eAAe;YACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;YACzC,MAAM;YACN,WAAW;YACX,SAAS;SACV,CAAC,CAAC,IAAI,CACL,6DAAY,CAAC,CAAC,CAAC,EACf,oDAAG,CAAC,CAAC,CAAC,gBAAgB,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE;YAC/C,MAAM,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CACzD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAC/C,CAAC;YACF,IACE,CAAC,CAAC,gBAAgB,IAAI,CAAC,OAAO,CAAC;gBAC/B,CAAC,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,UAAU,CAAC,EAClD;gBACA,OAAO,WAAW,CAAC;aACpB;YACD,IAAI,gBAAgB,EAAE;gBACpB,OAAO,GAAG,YAAY,IAAI,WAAW,MACnC,UAAU,IAAI,WAChB,EAAE,CAAC;aACJ;YACD,OAAO,GAAG,OAAO,IAAI,WAAW,EAAE,CAAC;QACrC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW;QACT,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,iBAAiB,CAAC,MAAwB,EAAE,KAAY;QAC7D,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yEAAsB,EAAE;gBACxD,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAC1D,QAAQ,CAAC,MAAM;iBACZ,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/C,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,8BAA8B;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,uBAAuB;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QAElD,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,EAAE;YACZ,OAAO,GAAG,IAAI,CAAC,eAAe;iBAC3B,QAAQ,EAAE;iBACV,OAAO,CACN,QAAQ,EACR,CAAC,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAC3D,CAAC;SACL;aAAM;YACL,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;iBAC3D,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClB,IAAI,CAAC,IAAI,CAAC,CAAC;SACf;QACD,uCACK,SAAS,KACZ,OAAO,IACP;IACJ,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,UAAU;;QACZ,IACE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK;YAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EACzC;YACA,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;SAChE;QACD,IAAI,WAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,0CAAE,MAAM,IAAG,IAAI,CAAC,SAAS,EAAE;YACzD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,EAAE;gBACzD,MAAM,EAAE,IAAI,CAAC,SAAS;aACvB,CAAC,CAAC;SACJ;QACD,IAAI,WAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,0CAAE,MAAM,IAAG,IAAI,CAAC,SAAS,EAAE;YACzD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,EAAE;gBACzD,MAAM,EAAE,IAAI,CAAC,SAAS;aACvB,CAAC,CAAC;SACJ;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;;YArYQ,4DAAc;YAAE,oDAAM;YAxBtB,gFAAe;YAkBf,oEAAc;YA1BrB,+EAAsB;YASf,wEAAa;YAoBb,kEAAgB;YAChB,sDAAQ;YAxCQ,4DAAe;YAYtC,iEAAQ;YA6BD,kGAAuB;YAEvB,sFAAiB;YARjB,sFAAmB;YAanB,sEAAmB;YAJnB,yGAA0B;YAG1B,+EAA2B;YAE3B,+DAAmB;;;qBAWzB,qDAAS,SAAC,mDAAM;iCAEhB,qDAAS,SAAC,4EAA2B;qBAGrC,qDAAS,SAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,uDAAW,EAAE;gCAEzC,qDAAS,SAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,uDAAW,EAAE;;AAX1C,mBAAmB;IAL/B,yDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6EAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAuX/B;AAvX+B;AAyXhC;;;;;;qIAMqI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvbhE;AACZ;AAIM;AACG;AAIhC;AACiB;AAEwB;AACL;AAEjB;AACV;IAe9B,sBAAsB,SAAtB,sBACX,SAAQ,4EAAoB;IAK5B,YACU,UAAsB,EACtB,MAAc,EACd,eAAgC,EAChC,QAAkB;QAE1B,KAAK,EAAE,CAAC;QALA,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;QAN5B,WAAM,GAAmB,qEAAc,CAAC;IASxC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAChD,mDAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAC5B,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC;QAEvC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;CACF;;YA7CQ,+DAAU;YAfV,mDAAM;YAaN,gFAAe;YAGf,sDAAQ;;AAeJ,sBAAsB;IAblC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;QAE9C,aAAa,EAAE,kEAAsB;QACrC,UAAU,EAAE,CAAC,yEAAyB,CAAC;QACvC,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,uEAAiB;gBAC1B,QAAQ,EAAE,kFAA4B;aACvC;SACF;;KACF,CAAC;GACW,sBAAsB,CA6BlC;AA7BkC;;;;;;;;;;;;;;;;;;;;;;;;AChCM;AACc;AAM5B;AAE2B;AAE8B;AACN;AAYxD;AAEtB,MAAM,SAAS,GAAG,aAAa,CAAC;AAEhC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,sEAAwB;QAC9B,SAAS,EAAE,+DAAsB;QACjC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,CAAC,uFAAsB,CAAC;aACtC;YACD;gBACE,IAAI,EAAE,sEAAwB;gBAC9B,SAAS,EAAE,gEAAuB;gBAClC,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC5C,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,qEAAuB;wBAC7B,OAAO,EAAE,oEAAsB,CAC7B,qEAAuB,EACvB,WAAW,CACZ;wBACD,SAAS,EAAE,4DAAmB;wBAC9B,aAAa,EAAE,CAAC,6FAAyB,CAAC;wBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;qBAC9C;oBACD;wBACE,IAAI,EAAE,yEAA2B;wBACjC,OAAO,EAAE,oEAAsB,CAC7B,yEAA2B,EAC3B,WAAW,CACZ;wBACD,SAAS,EAAE,gEAAuB;wBAClC,aAAa,EAAE,CAAC,6FAAyB,CAAC;wBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;qBAC9C;oBAED;wBACE,IAAI,EAAE,wEAA0B;wBAChC,OAAO,EAAE,oEAAsB,CAC7B,wEAA0B,EAC1B,WAAW,CACZ;wBACD,SAAS,EAAE,+DAAsB;wBACjC,aAAa,EAAE,CAAC,6FAAyB,CAAC;wBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;qBAC9C;oBAED;wBACE,IAAI,EAAE,sEAAwB;wBAC9B,OAAO,EAAE,oEAAsB,CAC7B,sEAAwB,EACxB,WAAW,CACZ;wBACD,SAAS,EAAE,gEAAuB;wBAClC,aAAa,EAAE,CAAC,6FAAyB,CAAC;wBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;qBAC9C;oBACD;wBACE,IAAI,EAAE,IAAI;wBACV,UAAU,EAAE,qEAAuB;qBACpC;iBACF;aACF;YACD;gBACE,IAAI,EAAE,uEAAyB;gBAC/B,OAAO,EAAE,oEAAsB,CAAC,uEAAyB,EAAE,WAAW,CAAC;gBACvE,SAAS,EAAE,8DAAqB;gBAChC,aAAa,EAAE,CAAC,6FAAyB,CAAC;gBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE;aAC7C;YACD;gBACE,IAAI,EAAE,wEAA0B;gBAChC,OAAO,EAAE,oEAAsB,CAC7B,wEAA0B,EAC1B,WAAW,CACZ;gBACD,SAAS,EAAE,+DAAsB;gBACjC,aAAa,EAAE,CAAC,6FAAyB,CAAC;gBAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE;aAC7C;YACD,gFAAgF;YAChF,+DAA+D;YAC/D;gBACE,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,CAAC,uFAAsB,CAAC;aACtC;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,uEAAyB;aACtC;SACF;KACF;IACD;QACE,IAAI,EAAE,4EAA8B;QACpC,aAAa,EAAE,CAAC,6FAAyB,CAAC;QAC1C,OAAO,EAAE,oEAAsB,CAC7B,4EAA8B,EAC9B,WAAW,CACZ;QACD,SAAS,EAAE,kEAAyB;KACrC;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,sEAAwB;KACrC;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Ia;AACN;AACyB;AAEzB;AAOL;AACkB;AACQ;AAEb;AACa;AAET;AACc;AAEK;AAEN;AACf;AACA;IA6BtC,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IA1B1B,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,4DAAmB,EAAE,4DAAmB,CAAC;QACxD,SAAS,EAAE;YACT,kFAAmB;SACpB;QACD,OAAO,EAAE;YACP,0DAAY;YACZ,wDAAW;YACX,gEAAmB;YAEnB,oDAAa;YACb,4EAAmB;YACnB,yEAAgB;YAChB,2EAAkB;YAClB,4EAAmB;YACnB,yEAAuB;YACvB,iEAAe;YAEf,2DAAc;YACd,+DAAY;YACZ,6EAAY;YACZ,2EAAqB;YACrB,wEAAe;SAChB;QACD,OAAO,EAAE,CAAC,uEAAc,EAAE,yEAAgB,CAAC;KAC5C,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtDkC;AACR;AAC0B;IAIzD,oBAAoB,SAApB,oBAAoB;IAsBxC;QArBS,SAAI,GAAG,IAAI,8CAAY,EAAE,CAAC;QACnC,iBAAY,GAAG,IAAI,iDAAe,CAAC,CAAC,CAAC,CAAC;QACtC,mBAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CACrC,yDAAS,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EACvC,wDAAQ,EAAE,EACV,mDAAG,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;YACnB,MAAM,MAAM,GAAG;gBACb,YAAY,EAAE,CAAC;gBACf,YAAY,EAAE,CAAC;aAChB,CAAC;YACF,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/C,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;aAChD;YACD,OAAO;gBACL,KAAK,EAAE,IAAI;gBACX,MAAM;aACP,CAAC;QACJ,CAAC,CAAC,EACF,qDAAK,EAAE,CACR,CAAC;IACa,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,UAAU,CAAC,CAAC,EAAE,MAAoB;QAChC,IACE,MAAM,CAAC,kBAAkB;YACzB,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC;YACtC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EACnE;YACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;SAC5D;IACH,CAAC;CACF;;AAzCqB,oBAAoB;IADzC,wDAAS,EAAE;GACU,oBAAoB,CAyCzC;AAzCyC;;;;;;;;;;;;;;;;ACNC;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["./src/app/payments/config/amounts.ts","./src/app/payments/containers/budget-payments/budget-payments.component.ts","./src/app/payments/containers/currency-payment/currency-payment.component.ts","./src/app/payments/containers/currency-payments/currency-payments.component.ts","./src/app/payments/containers/index.ts","./src/app/payments/containers/medical-payment/medical-payment.component.ts","./src/app/payments/containers/payment-order/payment-order.component.ts","./src/app/payments/containers/pension-payment/pension-payment.component.ts","./src/app/payments/containers/salary-payment/salary-payment.component.ts","./src/app/payments/containers/social-payment/social-payment.component.ts","./src/app/payments/containers/tax-payment/tax-payment.component.ts","./src/app/payments/containers/tenge-payments/tenge-payments.component.ts","./src/app/payments/payments-routing.module.ts","./src/app/payments/payments.module.ts","./src/app/shared/animations/helpers.ts","./node_modules/rxjs/_esm2015/internal/operators/pairwise.js"],"sourcesContent":["export const SALARY_EMPLOYEE_MIN_AMOUNT = 0.01;\r\nexport const SALARY_EMPLOYEE_MAX_AMOUNT = null;\r\n\r\nexport const SOCIAL_EMPLOYEE_MIN_AMOUNT = 2100;\r\nexport const SOCIAL_EMPLOYEE_MAX_AMOUNT = null;\r\n\r\nexport const PENSION_EMPLOYEE_MIN_AMOUNT = 6000;\r\nexport const PENSION_EMPLOYEE_MAX_AMOUNT = null;\r\n\r\nexport const MEDICAL_EMPLOYEE_MIN_AMOUNT = 4200;\r\nexport const MEDICAL_EMPLOYEE_MAX_AMOUNT = null;\r\n","import { Component, OnInit } from '@angular/core';\nimport { statePaymentsRoutes, StatePaymentsRoutes, PaymentsRoutes, paymentsRoutes } from '@payments/payments-routes';\nimport { routeTransitionAnimations } from '@shared/animations';\nimport { RouterSlideAnimation } from '@shared/animations/helpers';\n\n@Component({\n  selector: 'j-budget-payments',\n  templateUrl: './budget-payments.component.html',\n  styleUrls: ['./budget-payments.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class BudgetPaymentsComponent extends RouterSlideAnimation\n  implements OnInit {\n  routes: PaymentsRoutes = paymentsRoutes;\n\n  constructor() {\n    super();\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  from,\n  Observable,\n  of,\n  Subject,\n} from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n  delay,\n} from 'rxjs/operators';\n\nimport { MaskPipe } from 'ngx-mask';\nimport { NgbModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  FX_CONTRACT_STATUS,\n  ICodeWord,\n  ICountry,\n  IDictionaryValue,\n  IExchangeRate,\n  IFxContract,\n  IFxContractRecipient,\n  IHistoryPayment,\n  KNP,\n  PAYMENT_CATEGORY,\n  PAYMENT_STATUS,\n  PAYMENT_TYPE,\n} from '@shared/models';\nimport { CURRENCY, IMoney } from '@shared/currency/currency.model';\nimport { JFormInput } from '@shared/form-field/form-input';\nimport {\n  ErrorStateMatcher,\n  ShowOnDirtyErrorStateMatcher,\n} from '@shared/form-field/utils';\nimport { Masks } from '@shared/masked/masked';\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { BankFromAccountPipe, CurSymbolPipe } from '@shared/pipes';\nimport { DictionariesService } from '@shared/services/dictionaries.service';\nimport { MiscValidators } from '@shared/validators';\nimport { JSelectComponent } from '@shared/select-module/select.component';\nimport { PaymentAsyncValidators } from '@shared/services/payment-validators';\n\nimport {\n  AccountDropdownComponent,\n  AccountsService,\n  ACCOUNT_TYPE,\n  RegularAccount,\n} from '@accounts/index';\n\nimport {\n  COMPANY_TYPE,\n  CompanyService,\n  RecipientsService,\n} from '@company/index';\n\nimport { ConversionService } from '@conversion/conversion.service';\n\nimport {\n  edgeTimeLabel,\n  formatNgbDate,\n  ngbStructToISO,\n  SimpleStore,\n} from '@utils/index';\n\nimport { ContractsModalsService } from '@contracts/services';\n\nimport { FeatureFlagsService, FEATURE_FLAG } from '@feature-flags/index';\n\nimport {\n  FxContractDetailsComponent,\n  KnpDictionaryComponent,\n  ForeignBankSelectComponent,\n  ForeignRecipientsDictionaryComponent,\n  ISelectedRecipient,\n} from '@payments/components';\n\nimport {\n  COUNTRY,\n  CurrencyPaymentService,\n  IRusDictionary,\n  CurrencyPaymentFormModel,\n  PaymentApiService,\n  PaymentsFormFactoryService,\n  PaymentsPipelineService,\n  PaymentRootTitle,\n  PaymentsService,\n  IBank,\n} from '@payments/services';\nimport { AuthorityPermissionsService } from '@authorities/services';\n\nimport { BasePaymentContainer } from '../base-payment.container';\nimport { ForeignContractsRecipientsDictionaryComponent } from '../../components/foreign-contracts-recipients-dictionary/foreign-contracts-recipients-dictionary.component';\nimport { AmlMainModalComponent } from '../../components/aml-main-modal/aml-main-modal.component';\nimport { AmlWarningModalComponent } from '../../components/aml-warning-modal/aml-warning-modal.component';\n\nenum BANKS {\n  JYSAN = 'TSESKZKA',\n}\n\nconst NO_DECIMALS_CURRENCY = CURRENCY.JPY;\nconst RUSSIAN_PURPOSE_LENGTH = 203;\nconst CHINA_PURPOSE_LENGTH = 300;\nconst CURRENCY_PURPOSE_LENGTH = 335;\n\nconst AUSTRALIA_AUD_NAME_MAX_LENGTH = 35;\nconst AUSTRALIA_AUD_CITY_MAX_LENGTH = 26;\n\nconst AUSTRALIA_NON_AUD_NAME_MAX_LENGTH = 35;\nconst AUSTRALIA_NON_AUD_CITY_MAX_LENGTH = 31;\n\nconst RUB_NON_RUSSIA_NAME_MAX_LENGTH = 35;\nconst RUB_NON_RUSSIA_CITY_MAX_LENGTH = 32;\n\nconst NAME_MAX_LENGTH_DEFAULT = 103;\nconst CITY_MAX_LENGTH_DEFAULT = 32;\n\nconst RUB_IBAN_LENGTH = 20;\n\nconst RUSSIAN_BUDGET_START_INDEX = '0';\n\nconst KNP_WITHOUT_CONTRACT = ['342', '343', '314', '312'];\n// const RUSSIAN_BUDGET_MIDDLE_INDEX = '643';\nconst RUSSIAN_NON_BUDGET_MIDDLE_INDEX = '810';\n\nconst CONTAINS_LATIN_WORDS_REGEX = new RegExp(\n  /(([a-zA-Z]{1}[a-zA-Z0-9\\/\\-?:().,\\'+\\ ]+)|([a-zA-Z]{1}))+/g\n);\n\nconst IS_RUSSIAN_NON_BUDGET_IBAN_MIDDLE_INDEX = (iban: string) => {\n  if (!iban) {\n    return false;\n  }\n  return iban.substring(5, 8) !== RUSSIAN_NON_BUDGET_MIDDLE_INDEX;\n};\n\nconst IS_RUSSIAN_BUDGET_BIC_MIDDLE_INDEX = (bic: string) => {\n  if (!bic) {\n    return false;\n  }\n\n  return ['000', '001', '002'].includes(bic.substring(6, 9));\n};\n\nconst IS_RUSSIAN_BUDGET_IBAN_START_INDEX = (iban: string) => {\n  if (!iban) {\n    return false;\n  }\n  return iban[0] === RUSSIAN_BUDGET_START_INDEX;\n};\n\nconst RUB_KIO_VALIDATOR = (control) => {\n  if (!control.value) {\n    return null;\n  }\n\n  if (\n    control.value?.length !== 5 &&\n    control.value?.length !== 10 &&\n    control.value?.length !== 12\n  ) {\n    return {\n      lengthMismatch: true,\n    };\n  }\n  return null;\n};\n\nconst RUB_IBAN_VALIDATOR = (control: AbstractControl, bic: string) => {\n  const numericRegex = new RegExp('^[0-9]+$');\n\n  if (control.value && !control.value.match(numericRegex)) {\n    return {\n      rubInvalidNumbers: true,\n    };\n    // }\n    // else if (\n    //   control.value &&\n    //   control.value.length > 8 &&\n    //   control.value[0] === RUSSIAN_BUDGET_START_INDEX &&\n    //   control.value.substring(5, 8) === RUSSIAN_BUDGET_MIDDLE_INDEX &&\n    //   isRussianBudgetDisabled\n    // ) {\n    //   return {\n    //     rubBudgetDisabled: true,\n    //   };\n  } else if (\n    control.value &&\n    bic &&\n    !IS_RUSSIAN_BUDGET_IBAN_START_INDEX(control.value) &&\n    IS_RUSSIAN_BUDGET_BIC_MIDDLE_INDEX(bic)\n  ) {\n    return {\n      rubInvalidBudget: true,\n    };\n  } else if (\n    control.value &&\n    bic &&\n    control.value.length > 8 &&\n    !IS_RUSSIAN_BUDGET_IBAN_START_INDEX(control.value) &&\n    IS_RUSSIAN_NON_BUDGET_IBAN_MIDDLE_INDEX(control.value)\n  ) {\n    return {\n      rubInvalid: true,\n    };\n  } else if (control.value && control.value.length !== RUB_IBAN_LENGTH) {\n    return {\n      rubLength: true,\n    };\n  }\n  return null;\n};\n\nconst DEFAULT_IBAN_VALIDATOR = (control: AbstractControl, country: string) => {\n  const isIban = control.value?.substring(0, 2).match(/[A-Za-z]{2}/);\n\n  if (\n    country &&\n    isIban &&\n    control.value?.substring(0, 2).toUpperCase() !==\n      country?.substring(0, 2).toUpperCase()\n  ) {\n    return {\n      currencyMismatch: true,\n    };\n  }\n  return null;\n};\n\nconst RUB_NON_RUSSIA_IBAN_VALIDATOR = (control: AbstractControl) => {\n  const numericRegex = new RegExp('^[0-9]+$');\n\n  if (control.value && !control.value.match(numericRegex)) {\n    return {\n      rubInvalidNumbers: true,\n    };\n    // }\n    // else if (\n    //   control.value &&\n    //   control.value.length > 8 &&\n    //   control.value[0] === RUSSIAN_BUDGET_START_INDEX &&\n    //   control.value.substring(5, 8) === RUSSIAN_BUDGET_MIDDLE_INDEX &&\n    //   isRussianBudgetDisabled\n    // ) {\n    //   return {\n    //     rubBudgetDisabled: true,\n    //   };\n    // } else if (control.value && !IS_RUSSIAN_BUDGET_IBAN_START_INDEX(control.value)) {\n    // return {\n    // rubInvalidBudget: true,\n    // };\n  } else if (\n    control.value &&\n    control.value.length > 8 &&\n    !IS_RUSSIAN_BUDGET_IBAN_START_INDEX(control.value) &&\n    IS_RUSSIAN_NON_BUDGET_IBAN_MIDDLE_INDEX(control.value)\n  ) {\n    return {\n      rubInvalid: true,\n    };\n  } else if (control.value && control.value.length !== RUB_IBAN_LENGTH) {\n    return {\n      rubLength: true,\n    };\n  }\n  return null;\n};\n\n@Component({\n  selector: 'j-currency-payment',\n  templateUrl: './currency-payment.component.html',\n  styleUrls: ['./currency-payment.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: ErrorStateMatcher,\n      useClass: ShowOnDirtyErrorStateMatcher,\n    },\n  ],\n})\nexport class CurrencyPaymentComponent\n  extends BasePaymentContainer<CurrencyPaymentFormModel>\n  implements OnInit, OnDestroy\n{\n  nameMaxLength = NAME_MAX_LENGTH_DEFAULT;\n  cityMaxLength = CITY_MAX_LENGTH_DEFAULT;\n\n  paymentCategory = PAYMENT_CATEGORY.FOREIGN;\n\n  acceptableAccounts$: Observable<RegularAccount[]>;\n  accountStore: SimpleStore<RegularAccount>;\n\n  rules: PaymentsService['rules'];\n\n  loadingByiin$: Observable<boolean>;\n  selectedAccount$: Observable<RegularAccount>;\n\n  isCounterPartyLoading$ = new BehaviorSubject<string | null>(null);\n  masks: {\n    [k in keyof CurrencyPaymentFormModel]?: any;\n  } = {\n    iinOrBin: 'iin',\n    bankAccount: 'foreignAccount',\n    kbeCode: 'kbe',\n    knp: 'knp',\n    number: 'paymentNum',\n    amount: 'amount',\n    name: 'foreignLatin',\n    cityName: 'foreignLatin',\n    purpose: 'foreignLatin',\n\n    // Russian\n    kvo: 'kvo',\n    kio: 'kio',\n    // Russian budget\n    kpp: 'kpp',\n    oktmo: 'oktmo',\n    paymentBasis: 'basis',\n    budgetDocNumber: 'budgetDocNumber',\n    budgetPeriod: 'budgetPeriod',\n    rubNonRussiaCorrespondentIban: 'russianAccount',\n  };\n\n  focusEmail$ = new Subject<string>();\n  prevEmails$ = new BehaviorSubject([]);\n  fetchingEmailsFor$ = new BehaviorSubject(null);\n\n  search: (text$: Observable<string>) => Observable<any>;\n\n  @ViewChild('emailOnSuccess', { static: true }) emailOnSuccess: NgbTypeahead;\n\n  accounts: RegularAccount[] = [];\n  isAccountsLoading = true;\n\n  // SenderAccount\n  @ViewChild('senderAccountDropdown')\n  senderAccountDropdown: AccountDropdownComponent;\n\n  // Contract\n  @ViewChild('contractsSelect') contractsSelect;\n  contracts: IFxContract[] = [];\n  filteredContracts: IFxContract[] = [];\n  currentContract: IFxContract;\n  isContractsLoading = false;\n  isContractSelected = false;\n  withinContract = false;\n  isContractsDescriptionShown = false;\n  isContractsAgreementShown = true;\n  isContractsDescriptionLoading = false;\n  contractsSwitchDescriptionParams: {\n    amount: string;\n  };\n  contractMaxAmount: IMoney = {\n    amount: 10000,\n    currency: CURRENCY.USD,\n  };\n\n  // shouldEnterCity$ = new BehaviorSubject(false);\n  // shouldEnterIban$ = new BehaviorSubject(false);\n\n  @ViewChild('contractDetails')\n  contractDetails: FxContractDetailsComponent;\n\n  // Country\n  countries: ICountry[] = [];\n  countries$ = new BehaviorSubject<ICountry[]>([]);\n\n  // City\n  hasDefaultCity = false;\n  isCityShown = false;\n  cityPlaceholder$ = new BehaviorSubject('CURRENCY_PAYMENT.RECIPIENT.CITY');\n\n  // Bank(Bic)\n  @ViewChild('bankDropdown')\n  bankDropdown: ForeignBankSelectComponent;\n  isBicRequired = true;\n\n  // IntermediaryBank\n  @ViewChild('intermediaryBankDropdown')\n  intermediaryBankDropdown: ForeignBankSelectComponent;\n  isIntermediaryBankSwitchable = false;\n  hasIntermediaryBank = false;\n\n  // IBAN\n  ibanMaxLength = 34;\n\n  // Amount\n  amountMask = 'separator.2';\n  amountPlaceholder = '0,00';\n  amountSuffix = ' ';\n  amountMessage: Observable<string>;\n\n  // Comission\n  @ViewChild('commissionAccountDropdown')\n  commissionAccountDropdown: AccountDropdownComponent;\n  isCommissionAccountSelectable = true;\n  isOurComission = false;\n  comissionMessage: Observable<string>;\n  canPayCommission = true;\n  commissionBalance: IMoney = null;\n\n  // KVO & KIO\n  isKppEnabled$ = new BehaviorSubject<boolean>(false);\n  isKioEnabled$ = new BehaviorSubject<boolean>(false);\n  isKvoEnabled$ = new BehaviorSubject<boolean>(false);\n\n  // codeWord\n  codeWordLabel$ = new BehaviorSubject<string>(\n    'CURRENCY_PAYMENT.RECIPIENT.CODEWORD'\n  );\n  isCodeWordEnabled$ = new BehaviorSubject<boolean>(false);\n  isCodeWordsLoading: boolean;\n  codeWords: ICodeWord[];\n\n  // Agreement\n  agreementText: string;\n\n  // RUB\n  isRubNonRussia$ = new BehaviorSubject<boolean>(false);\n  isRubToRussia$ = new BehaviorSubject<boolean>(false);\n\n  // RubNonRussia\n  rubNonRussiaWithinContractCountry: COUNTRY;\n  @ViewChild('rubNonRussiaBankDropdown')\n  rubNonRussiaBankDropdown: ForeignBankSelectComponent;\n  // @ViewChild('rubNonRussiaBankDropdownWithinContract')\n  // rubNonRussiaBankDropdownWithinContract: ForeignBankSelectComponent;\n  @ViewChild('rubNonRussiaCorrespondentBankDropdown')\n  rubNonRussiaCorrespondentBankDropdown: ForeignBankSelectComponent;\n  // @ViewChild('rubNonRussiaCorrespondentBankDropdownWithinContract')\n  // rubNonRussiaCorrespondentBankDropdownWithinContract: ForeignBankSelectComponent;\n  @ViewChild('rubNonRussiaCorrespondentIbanInput')\n  rubNonRussiaCorrespondentIbanInput: JFormInput;\n\n  // RussianBudget\n  isRussianBudgetDisabled = false;\n  isRussianBudget$ = new BehaviorSubject(false);\n  isRussianTaxpayer = false;\n\n  kbkList: IRusDictionary[] = [];\n  isKbkLoading = false;\n\n  statuses: IRusDictionary[] = [];\n  isStatusesLoading = false;\n\n  hasRussianBudgetExtras = false;\n\n  // 10000$ needs contract\n  isForeignContractDisabled = false;\n\n  // Australian Dollar\n  isAustraliaAud$ = new BehaviorSubject<boolean>(false);\n  isAustraliaNonAud$ = new BehaviorSubject<boolean>(false);\n\n  // Country Canada\n  isCountryCanada$ = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    public companyService: CompanyService,\n    public paymentsService: PaymentsService,\n    public maskService: MaskedService,\n\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected api: PaymentApiService,\n    protected dictionaries: DictionariesService,\n    protected translateService: TranslateService,\n    protected authorityPermissionsService: AuthorityPermissionsService,\n    protected modalService: NgbModal,\n    protected pipelines: PaymentsPipelineService,\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\n    protected maskPipe: MaskPipe,\n    protected recipientsService: RecipientsService,\n    protected featureFlagsService: FeatureFlagsService,\n    protected bankFromAccount: BankFromAccountPipe,\n\n    private accountsService: AccountsService,\n    private currencyPaymentService: CurrencyPaymentService,\n    private curSymbolPipe: CurSymbolPipe,\n\n    private conversionService: ConversionService,\n    private contractsModalsService: ContractsModalsService\n  ) {\n    super(\n      paymentsFormsFactory.createCurrencyForm(),\n      api,\n      route,\n      router,\n      companyService,\n      paymentsService,\n      maskService,\n      modalService,\n      dictionaries,\n      pipelines,\n      translateService,\n      authorityPermissionsService,\n      featureFlagsService,\n      bankFromAccount\n    );\n    this.rules.purposeLength = CURRENCY_PURPOSE_LENGTH;\n\n    this.isForeignContractDisabled = this.featureFlagsService.isDisabled(\n      FEATURE_FLAG.FOREIGN_CONTRACT\n    );\n    this.featureFlagsService.featureFlags$.subscribe((flags) => {\n      this.isForeignContractDisabled = this.featureFlagsService.isDisabled(\n        FEATURE_FLAG.FOREIGN_CONTRACT\n      );\n    });\n    this.featureFlagsService\n      .checkFeatureRoute(FEATURE_FLAG.FOREIGN_PAYMENT)\n      .then(() => {\n        this.isRussianBudgetDisabled = this.featureFlagsService.isDisabled(\n          FEATURE_FLAG.RUB_BUDGET_PAYMENT\n        );\n        this.isForeignContractDisabled = this.featureFlagsService.isDisabled(\n          FEATURE_FLAG.FOREIGN_CONTRACT\n        );\n      });\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this.accountStore = this.accountsService.store;\n    this.dateLimit = this.paymentsService.stdDateRangeNgb;\n\n    this.retrieveKnps();\n    this.retrieveAccounts();\n    this.retrieveCountries();\n    this.retrieveContracts();\n    this.retrieveCodeWords();\n\n    this.retrieveKbks();\n    this.retrieveStatuses();\n\n    this.createControlsStream(this.form);\n\n    this.getMaskConfig();\n\n    this.listenCommission();\n\n    this.listenCountrySelect();\n\n    this.listenWithinContractSwitch();\n    this.listenContractsSwitchDescription();\n    this.listenContractSelect();\n\n    this.listenEmailSearch();\n    this.listenWorkingDays();\n    this.listenDateMessageStream();\n    this.listenPurposeMessageStream();\n    this.listenPurpose();\n\n    this.listenPayComission();\n\n    this.listenIntermediaryBankSwitch();\n    this.listenIntermediaryBankSwitchable();\n\n    this.listenAmount();\n\n    this.applyAmountValidation();\n    this.listenAmountMessage();\n\n    this.setAutoNumeration();\n\n    this.listenCompanyType();\n\n    this.listenIsRussianBudget();\n    this.listenIsRussianTaxpayer();\n    this.listenHasRussianBudgetExtras();\n\n    this.listenRouterParams();\n\n    this.listenKvo();\n    this.listenKio();\n    this.listenCodeWordEnabling();\n    this.listenCodeWord();\n    this.listenCodeWordsList();\n\n    // this.listenShouldEnterCity();\n\n    this.listenRubToNonRussia();\n    this.listenRubNonRussiaCorrespondentBank();\n\n    this.listenAudToAustralia();\n    this.listenAudNonAustralia();\n\n    this.listenCountryIsCanada();\n\n    this.listenMaxLengths();\n\n    // HOW IT SHOULD BE\n    this.applyKbeRules();\n    this.applyNameRules();\n    this.applyCountryRules();\n    this.applyIbanRules();\n    // this.applyAmlRules();\n  }\n\n  // HOW IT SHOULD BE\n  applyKbeRules() {\n    this.subs.add(\n      this.controlsStream.withinContract.subscribe((withinContract) => {\n        if (withinContract) {\n          this.clearValidation([this.form.controls.kbeCode]);\n        } else {\n          this.setValidation(\n            [this.form.controls.kbeCode],\n            [Validators.required, MiscValidators.kbe]\n          );\n        }\n      })\n    );\n  }\n\n  // AML Check\n  applyAmlRules() {\n    if (localStorage.getItem('aml-modal-shown')) {\n      return;\n    }\n\n    localStorage.setItem('aml-modal-shown', 'true');\n\n    this.modalService.open(AmlWarningModalComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_sm',\n      backdrop: 'static',\n      centered: true,\n    });\n  }\n\n  // Name Rules\n  applyNameRules() {\n    const { name } = this.form.controls;\n    const { withinContract, senderAccount } = this.controlsStream;\n\n    this.subs.add(\n      combineLatest([withinContract, senderAccount])\n        .pipe(distinctUntilChanged())\n        .subscribe((values) => {\n          const [withinContractValue, senderAccountValue] = values;\n\n          const currency = senderAccountValue?.balance?.currency;\n          const prevPristine = name.pristine;\n\n          if (withinContractValue) {\n            name.disable();\n            this.clearValidation([name]);\n            this.masks.name = {\n              mask: null,\n            };\n          } else {\n            name.enable();\n            this.setValidation([name], [Validators.required]);\n\n            if (currency === CURRENCY.RUB) {\n              this.masks.name = Masks.foreignCyrillic;\n            } else {\n              this.masks.name = Masks.foreignLatin;\n            }\n          }\n\n          setTimeout(() => {\n            if (prevPristine) {\n              name.markAsPristine();\n            }\n          }, 0);\n        })\n    );\n  }\n\n  ibanParams(control) {\n    if (!control?.errors?.bankRestricted) {\n      return null;\n    }\n\n    return {\n      bankName: this.bankFromAccount.transform(control.value, 'name'),\n    };\n  }\n\n  // Name Events\n  onNamePaste(event: ClipboardEvent) {\n    event.preventDefault();\n\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\n    const pastedText = clipboardData.getData('text');\n    const toPasteRaw = pastedText.substring(0, this.nameMaxLength);\n\n    this.form.controls.name.setValue(toPasteRaw);\n  }\n\n  // Country Rules\n  applyCountryRules() {\n    const { countryCode } = this.form.controls;\n    const { withinContract, senderAccount, contract } = this.controlsStream;\n\n    this.subs.add(\n      combineLatest([withinContract, senderAccount, contract])\n        .pipe(distinctUntilChanged())\n        .subscribe((values) => {\n          const [withinContractValue, senderAccountValue] = values;\n          const currency = senderAccountValue?.balance?.currency;\n          const prevPristine = countryCode.pristine;\n\n          if (withinContractValue) {\n            countryCode.disable();\n            this.clearValidation([countryCode]);\n          } else {\n            countryCode.enable();\n            const validators = [Validators.required];\n\n            if (currency === CURRENCY.CNY) {\n              validators.push((control) => {\n                if (control.value !== COUNTRY.CN) {\n                  return { cnyOnlyToChina: true };\n                }\n                return null;\n              });\n            }\n\n            this.setValidation([countryCode], validators);\n          }\n\n          setTimeout(() => {\n            if (prevPristine) {\n              countryCode.markAsPristine();\n            }\n          }, 0);\n        })\n    );\n  }\n\n  // Country Events\n  onCountrySearch({ term, items }) {\n    if (!term) {\n      this.countries$.next(this.countries);\n      return;\n    }\n\n    const filteredCountries = this.countries.filter((country) => {\n      return (\n        country.code.toLowerCase().includes(term.toLowerCase()) ||\n        country.nameEn.toLowerCase().includes(term.toLowerCase()) ||\n        country.nameKk.toLowerCase().includes(term.toLowerCase()) ||\n        country.nameRu.toLowerCase().includes(term.toLowerCase())\n      );\n    });\n\n    const sortedCountries = filteredCountries.sort((a, b) => {\n      return this.countrySorter(a, b, term);\n    });\n\n    this.countries$.next(sortedCountries);\n  }\n\n  onCountryFocus() {\n    if (!this.form.controls.senderAccount.value) {\n      this.senderAccountDropdown.hasError = true;\n    }\n  }\n\n  onCountrySelect(country: ICountry) {\n    this.hasDefaultCity = !!country.defaultCityName;\n    this.form.controls.country.setValue(country);\n  }\n\n  // Country Dropdown Helpers\n  countrySorter(a: ICountry, b: ICountry, term: string) {\n    if (a.code.toLowerCase() === term.toLowerCase()) {\n      return -1;\n    } else if (b.code.toLowerCase() === term.toLowerCase()) {\n      return 1;\n    } else if (a.code.toLowerCase().includes(term.toLowerCase())) {\n      return -1;\n    } else if (b.code.toLowerCase().includes(term.toLowerCase())) {\n      return 1;\n    } else {\n      switch (this.translateService.currentLang) {\n        case 'ru':\n          return a.nameRu < b.nameRu ? -1 : 1;\n        case 'en':\n          return a.nameEn < b.nameEn ? -1 : 1;\n        case 'kk':\n          return a.nameKk < b.nameKk ? -1 : 1;\n        default:\n          return 0;\n      }\n    }\n  }\n\n  countryComparator(query: string, country: ICountry) {\n    return true;\n  }\n\n  mapCountryLabel(country: ICountry) {\n    let countryName;\n\n    switch (this.translateService.currentLang) {\n      case 'ru':\n      default:\n        countryName = country.nameRu;\n        break;\n      case 'kk':\n        countryName = country.nameKk;\n        break;\n      case 'en':\n        countryName = country.nameEn;\n        break;\n    }\n\n    return `${country.code} - ${countryName || country.name}`;\n  }\n\n  // Country Helpers\n  private get currentCountryCode(): COUNTRY {\n    const contractCountryCode =\n      this.formValue.contract?.contractor?.country?.code || null;\n\n    if (this.formValue.withinContract && contractCountryCode) {\n      return contractCountryCode.substring(0, 2) as COUNTRY;\n    }\n\n    if (!this.formValue.withinContract && this.formValue.countryCode) {\n      return this.formValue.countryCode.substring(0, 2) as COUNTRY;\n    }\n\n    return null;\n  }\n\n  private async retrieveCountries() {\n    this.countries = await this.currencyPaymentService.getCountries();\n    this.countries$.next(this.countries);\n  }\n\n  // BankAccount (IBAN)\n  applyIbanRules() {\n    const {\n      senderAccount,\n      country,\n      countryCode,\n      contract,\n      contractId,\n      bank,\n      rubNonRussiaBank,\n      withinContract,\n    } = this.controlsStream;\n    this.subs.add(\n      combineLatest([\n        senderAccount,\n        bank,\n        rubNonRussiaBank,\n        country,\n        countryCode,\n        contract,\n        contractId,\n        withinContract,\n        this.countries$,\n      ]).subscribe((values) => {\n        const [senderAccount, bank, rubNonRussiaBank] = values;\n\n        const validators = [Validators.required];\n\n        const asyncValidators = [\n          PaymentAsyncValidators.externalIbanRestricted(this.dictionaries),\n        ];\n\n        const senderCurrency = (senderAccount as RegularAccount)?.balance\n          ?.currency;\n        const currentCountryCode = this.currentCountryCode;\n        const prevPristine = this.form.controls.bankAccount.pristine;\n\n        if (\n          senderCurrency === CURRENCY.RUB &&\n          currentCountryCode === COUNTRY.RU\n        ) {\n          this.masks.bankAccount = Masks.russianAccount;\n\n          validators.push((control: AbstractControl) => {\n            return RUB_IBAN_VALIDATOR(control, (bank as IBank)?.bic);\n          });\n        } else {\n          const bankToCompare =\n            senderCurrency === CURRENCY.RUB ? rubNonRussiaBank : bank;\n\n          const bankCountryCode = this.countries.find(\n            (country) => country.id === (bankToCompare as IBank)?.countryId\n          )?.code;\n\n          this.masks.bankAccount = Masks.foreignAccount;\n\n          validators.push((control: AbstractControl) => {\n            return DEFAULT_IBAN_VALIDATOR(control, bankCountryCode);\n          });\n\n          validators.push(Validators.maxLength(this.ibanMaxLength));\n        }\n\n        this.setValidation(\n          [this.form.controls.bankAccount],\n          validators,\n          asyncValidators\n        );\n\n        setTimeout(() => {\n          if (prevPristine) {\n            this.form.controls.bankAccount.markAsPristine();\n          }\n        }, 0);\n      })\n    );\n  }\n\n  async openForeignContractsRecipientsDictionary() {\n    const modalRef = this.modals.open(\n      ForeignContractsRecipientsDictionaryComponent,\n      {\n        backdropClass: 'backdrop_light',\n        windowClass: 'modal_light modal_dictionary',\n        centered: true,\n      }\n    );\n    const { contract } = this.form.getRawValue();\n    (\n      modalRef.componentInstance as ForeignContractsRecipientsDictionaryComponent\n    ).recipients = contract.recipients;\n\n    try {\n      const selectedRecipient = (await modalRef.result) as IFxContractRecipient;\n      this.selectContractRecipient(selectedRecipient);\n    } catch (error) {}\n  }\n\n  selectContractRecipient(recipient: IFxContractRecipient) {\n    if (!recipient) {\n      return;\n    }\n\n    const {\n      name,\n      country,\n      countryCode,\n      bankAccount,\n      bank,\n      cityName,\n      fxContractRecipient,\n      fxContractRecipientId,\n    } = this.form.controls;\n\n    fxContractRecipient.setValue(recipient);\n    fxContractRecipientId.setValue(recipient.id);\n\n    name.setValue(recipient.name || '');\n\n    if (\n      recipient.country?.code &&\n      !this.countries.find((item) => item.code === recipient.country?.code)\n    ) {\n      this.countries$.next([...this.countries, recipient.country as ICountry]);\n    }\n\n    country.setValue(recipient.country);\n    countryCode.setValue(recipient.country?.code || recipient.countryCode);\n\n    if (recipient.cityName || recipient.defaultCityName) {\n      cityName.setValue(recipient.cityName || recipient.defaultCityName || '');\n    }\n\n    if (recipient.iban) {\n      bankAccount.setValue(recipient.iban);\n    }\n\n    if (recipient.bankBic) {\n      bank.setValue({\n        code: recipient.bankBic,\n        name: recipient.bankName,\n      });\n\n      this.bankDropdown?.selectByBic(recipient.bankBic);\n      this.rubNonRussiaBankDropdown?.selectByBic(recipient.bankBic);\n    }\n  }\n\n  showContractDetails(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.contractDetails.show();\n  }\n\n  async onContractSelect(selected: IFxContract, shouldSkipKio = false) {\n    const { contract, kio, contractId } = this.form.controls;\n\n    try {\n      const loaded = await this.currencyPaymentService.getContractById(\n        selected.id\n      );\n      Object.assign(selected, loaded);\n    } catch (error) {}\n\n    contract.setValue(selected);\n    contractId.setValue(selected.id);\n\n    if (selected.contractor.iinOrBin && !shouldSkipKio) {\n      kio?.setValue(selected.contractor.iinOrBin);\n    }\n\n    let recipientToSelect = selected.recipients?.find(\n      (recipient) => recipient.primary\n    );\n\n    const { fxContractRecipient, fxContractRecipientId } =\n      this.form.getRawValue();\n\n    if (!fxContractRecipient && !fxContractRecipientId && recipientToSelect) {\n      this.selectContractRecipient(recipientToSelect);\n      return;\n    }\n\n    const foundRecipient = selected.recipients?.find(\n      (recipient) =>\n        fxContractRecipient?.id === recipient.id ||\n        fxContractRecipientId === recipient.id\n    );\n\n    if (foundRecipient) {\n      recipientToSelect = foundRecipient;\n    }\n\n    this.selectContractRecipient(recipientToSelect);\n  }\n\n  // HOW IT IS NOW\n  onEmailOnSuccessFocus(event: FocusEvent) {\n    this.focusEmail$.next((event.target as HTMLInputElement).value);\n  }\n\n  onSenderAccountSelect(debitAccount: RegularAccount) {\n    if (!debitAccount) {\n      return;\n    }\n\n    this.form.controls.senderAccount.setValue(debitAccount);\n    this.form.controls.senderAccount.markAsDirty();\n    this.senderAccountDropdown.hasError = false;\n  }\n\n  onCommissionAccountSelect(commissionAccount: RegularAccount) {\n    this.form.controls.commissionAccount.setValue(commissionAccount);\n  }\n\n  get senderAccountsList() {\n    return this.accounts;\n    // .filter(\n    // (account) => account.balance.currency !== CURRENCY.KZT\n    // );\n  }\n\n  get commissionAccountsList() {\n    const formValue: CurrencyPaymentFormModel = this.form.getRawValue();\n    const senderAccount = formValue.senderAccount;\n\n    return this.accounts.filter(\n      (account) =>\n        account.balance.currency === CURRENCY.KZT ||\n        account.balance.currency === senderAccount?.balance?.currency\n    );\n  }\n\n  public codeWordComparator(query: string, codeWord: IDictionaryValue) {\n    if (!query) {\n      return true;\n    }\n\n    return (\n      codeWord.name.toLowerCase().includes(query.toLowerCase()) ||\n      codeWord.code.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  public kbkComparator(query: string, kbk: IRusDictionary) {\n    if (!query) {\n      return true;\n    }\n\n    return (\n      kbk.code.toLowerCase().includes(query.toLowerCase()) ||\n      kbk.description.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  public statusComparator(query: string, status: IRusDictionary) {\n    if (!query) {\n      return true;\n    }\n\n    return (\n      status.code.toLowerCase().includes(query.toLowerCase()) ||\n      status.description.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n\n  async scrollToContracts(event: Event) {\n    event.preventDefault();\n\n    await this.form.controls.withinContract.setValue(true);\n\n    setTimeout(() => {\n      const el = document.getElementById('contractGroup');\n      el.scrollIntoView({ behavior: 'smooth' });\n\n      this.contractsSelect.focus();\n      this.contractsSelect.open();\n    }, 100);\n  }\n\n  onAmountPaste(event: ClipboardEvent) {\n    event.preventDefault();\n\n    const rawValue = this.form.getRawValue();\n\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\n    const pastedText = clipboardData.getData('text');\n    let toPasteRaw = this.maskService.getNumberedAmount(pastedText);\n\n    if (rawValue.senderAccount?.balance?.currency === NO_DECIMALS_CURRENCY) {\n      toPasteRaw = Math.trunc(toPasteRaw);\n    }\n\n    this.form.controls.amount.setValue(toPasteRaw);\n  }\n\n  mapCodeWordLabel(codeWord: IDictionaryValue) {\n    if (!codeWord) {\n      return;\n    }\n    return `${codeWord.code} - ${codeWord.name}`;\n  }\n\n  private listenMaxLengths() {\n    this.subs.add(\n      combineLatest([\n        this.isAustraliaAud$,\n        this.isAustraliaNonAud$,\n        this.isCountryCanada$,\n        this.isRubNonRussia$,\n        this.isRubToRussia$,\n        this.controlsStream.name,\n        this.controlsStream.purpose,\n        this.purposeMessage$,\n        this.controlsStream.countryCode,\n      ]).subscribe((values) => {\n        let [\n          isAustraliaAud,\n          isAustraliaNonAud,\n          isRubNonRussia,\n          isRubToRussia,\n          name,\n          purpose,\n          purposeMessage,\n          countryCode,\n        ] = values;\n\n        name = (name as string) || '';\n        purpose = (purpose as string) || '';\n        purposeMessage = (purposeMessage as string) || '';\n\n        if (isAustraliaAud) {\n          this.nameMaxLength = AUSTRALIA_AUD_NAME_MAX_LENGTH;\n          this.cityMaxLength = AUSTRALIA_AUD_CITY_MAX_LENGTH;\n        } else if (isAustraliaNonAud) {\n          this.nameMaxLength = AUSTRALIA_NON_AUD_NAME_MAX_LENGTH;\n          this.cityMaxLength = AUSTRALIA_NON_AUD_CITY_MAX_LENGTH;\n        } else if (isRubNonRussia) {\n          this.nameMaxLength = RUB_NON_RUSSIA_NAME_MAX_LENGTH;\n          this.cityMaxLength = RUB_NON_RUSSIA_CITY_MAX_LENGTH;\n        } else {\n          this.nameMaxLength = NAME_MAX_LENGTH_DEFAULT;\n          this.cityMaxLength = CITY_MAX_LENGTH_DEFAULT;\n        }\n\n        if (isRubToRussia || isRubNonRussia) {\n          this.rules.purposeLength = RUSSIAN_PURPOSE_LENGTH;\n\n          const nameLatinMatches = name.match(CONTAINS_LATIN_WORDS_REGEX);\n          if (nameLatinMatches?.length > 0) {\n            this.nameMaxLength -= nameLatinMatches.length * 2;\n          }\n\n          const purposeLatinMatches = purpose.match(CONTAINS_LATIN_WORDS_REGEX);\n          if (purposeLatinMatches?.length > 0) {\n            this.rules.purposeLength -= purposeLatinMatches.length * 2;\n          }\n        } else if (countryCode === COUNTRY.CN) {\n          this.rules.purposeLength = CHINA_PURPOSE_LENGTH;\n        } else {\n          this.rules.purposeLength = CURRENCY_PURPOSE_LENGTH;\n        }\n\n        const purposeLength =\n          countryCode === COUNTRY.CN\n            ? this.rules.purposeLength\n            : this.rules.purposeLength - purposeMessage.length;\n\n        this.setValidation(\n          [this.form.controls.purpose],\n          [Validators.required, Validators.maxLength(purposeLength)],\n          null,\n          false\n        );\n      })\n    );\n  }\n\n  private listenAudToAustralia() {\n    this.subs.add(\n      this.isAustraliaAud$.subscribe((isAustraliaAud) => {\n        const { audIndex, audState, audStreet, audBuildingNumber } =\n          this.form.controls;\n\n        if (isAustraliaAud) {\n          this.setValidation(\n            [audIndex, audState, audStreet, audBuildingNumber],\n            [Validators.required]\n          );\n        } else {\n          this.clearValidation([\n            audIndex,\n            audState,\n            audStreet,\n            audBuildingNumber,\n          ]);\n        }\n      })\n    );\n  }\n\n  private listenAudNonAustralia() {\n    this.subs.add(\n      this.isAustraliaNonAud$.subscribe((isAustraliaNonAud) => {\n        const { audAddress } = this.form.controls;\n\n        if (isAustraliaNonAud) {\n          this.setValidation([audAddress], [Validators.required]);\n        } else {\n          this.clearValidation([audAddress]);\n        }\n      })\n    );\n  }\n\n  private listenCountryIsCanada() {\n    this.subs.add(\n      this.isCountryCanada$.subscribe((isCountryCanada) => {\n        const { canAddress } = this.form.controls;\n\n        if (isCountryCanada) {\n          this.setValidation([canAddress], [Validators.required]);\n        } else {\n          this.clearValidation([canAddress]);\n        }\n      })\n    );\n  }\n\n  private listenCompanyType() {\n    this.subs.add(\n      this.companyService.refresh$.subscribe((company) => {\n        const companyType = this.companyService.currentCompany.type;\n        if (companyType === COMPANY_TYPE.CORPORATE) {\n          this.agreementText = 'CURRENCY_PAYMENT.AGREEMENT.CORPORATE';\n          if (this.isForeignContractDisabled) {\n            this.isContractsAgreementShown = false;\n          }\n          this.isContractsDescriptionShown = true;\n        } else {\n          this.agreementText = 'CURRENCY_PAYMENT.AGREEMENT.ENTREPRENEUR';\n          if (this.isForeignContractDisabled) {\n            this.isContractsAgreementShown = true;\n          }\n          this.isContractsDescriptionShown = false;\n        }\n      })\n    );\n  }\n\n  private retrieveKnps() {\n    this.knp$ = this.combineKNP([\n      (knps) =>\n        this.dictionaries.selectByPaymentType(knps, {\n          type: PAYMENT_TYPE.FOREIGN,\n          sortFavourite: false,\n        }),\n    ]);\n  }\n\n  private async retrieveAccounts() {\n    // const accountsPromise = new Promise<RegularAccount[]>((resolve, reject) => {\n    //   combineLatest([\n    //     this.accountStore.fetching$,\n    //     this.accountStore.items$,\n    //   ]).subscribe(\n    //     (values) => {\n    //       const [fetching, items] = values;\n\n    //       if (!fetching && items.length > 0) {\n    //         resolve(items);\n    //       }\n    //     },\n    //     (error) => {\n    //       reject(error);\n    //     }\n    //   );\n    // });\n\n    // await accountsPromise;\n\n    this.isAccountsLoading = true;\n    try {\n      const accountsList = await this.accountsService.getAccounts(\n        this.companyService.currentId\n      );\n\n      this.accounts = accountsList\n        .filter(\n          (account) =>\n            account.balance.currency &&\n            account.accountType === ACCOUNT_TYPE.ACCOUNT\n        )\n        .sort(this.sortAccounts);\n\n      this.selectDefaultSenderAccount();\n\n      this.listenCommissionAccount();\n    } catch (error) {\n    } finally {\n      this.isAccountsLoading = false;\n    }\n  }\n\n  private selectDefaultSenderAccount() {\n    try {\n      if (this.senderAccountsList.length === 1) {\n        this.senderAccountDropdown.selectAccount(this.senderAccountsList[0]);\n        this.onSenderAccountSelect(this.senderAccountsList[0]);\n        this.senderAccountDropdown.isDisabled = true;\n      }\n    } catch (error) {}\n  }\n\n  private async retrieveContracts() {\n    this.isContractsLoading = true;\n\n    try {\n      const retrieved = await this.currencyPaymentService.getContracts();\n      this.contracts = retrieved.filter(\n        (contract) => contract.status === FX_CONTRACT_STATUS.REGED\n      );\n\n      const senderCurrency = this.formValue.senderAccount?.balance?.currency;\n      if (senderCurrency) {\n        this.filteredContracts = this.contracts.filter((contract) =>\n          contract.permittedCurrencies.includes(senderCurrency)\n        );\n      } else {\n        this.filteredContracts = [...this.contracts];\n      }\n    } catch (error) {\n    } finally {\n      this.isContractsLoading = false;\n    }\n  }\n\n  private async retrieveKbks() {\n    this.isKbkLoading = true;\n    try {\n      this.kbkList = await this.currencyPaymentService.getKbkList();\n    } catch (error) {\n    } finally {\n      this.isKbkLoading = false;\n    }\n  }\n\n  private async retrieveStatuses() {\n    this.isStatusesLoading = true;\n    try {\n      this.statuses = await this.currencyPaymentService.getStatuses();\n    } catch (error) {\n    } finally {\n      this.isStatusesLoading = false;\n    }\n  }\n\n  private async retrieveCodeWords(\n    countryCode: COUNTRY = this.currentCountryCode\n  ) {\n    if (this.isCodeWordsLoading) {\n      return;\n    }\n\n    this.isCodeWordsLoading = true;\n    try {\n      if (countryCode) {\n        this.codeWords = await this.currencyPaymentService.getCodeWords(\n          countryCode\n        );\n        const currentCodeWord = this.form.controls.codeWord.value;\n        if (\n          !this.codeWords.find(\n            (codeWord) =>\n              currentCodeWord.code === codeWord.code &&\n              currentCodeWord.countryCode === codeWord.countryCode\n          )\n        ) {\n          this.form.controls.codeWord.setValue('');\n        }\n      }\n    } catch (error) {\n    } finally {\n      this.isCodeWordsLoading = false;\n    }\n  }\n\n  private listenCountrySelect() {\n    const { countryCode, senderAccount, country } = this.controlsStream;\n    this.subs.add(\n      combineLatest([countryCode, senderAccount, country])\n        .pipe(distinctUntilChanged())\n        .subscribe((values) => {\n          const [countryCode, senderAccount] = values;\n\n          if (!countryCode) {\n            return;\n          }\n\n          this.form.controls.bankLabel.setValue('');\n          this.form.controls.bank.setValue(null);\n\n          if (\n            senderAccount?.balance?.currency !== CURRENCY.RUB &&\n            !this.hasDefaultCity\n          ) {\n            this.isCityShown = true;\n            this.setValidation(\n              [this.form.controls.cityName],\n              [Validators.required]\n            );\n          } else {\n            this.isCityShown = false;\n            this.clearValidation([this.form.controls.cityName]);\n          }\n\n          if (\n            this.currentCountryCode === COUNTRY.RU &&\n            (senderAccount as RegularAccount)?.balance?.currency ===\n              CURRENCY.RUB\n          ) {\n            this.canPayCommission = false;\n          }\n        })\n    );\n  }\n\n  private listenContractsSwitchDescription() {\n    this.subs.add(\n      this.controlsStream.senderAccount.subscribe((senderAccount) => {\n        this.filteredContracts = this.contracts.filter((contract) =>\n          contract.permittedCurrencies?.includes(\n            senderAccount?.balance?.currency\n          )\n        );\n        if (\n          this.formValue.contract?.amount?.currency !==\n          senderAccount?.balance?.currency\n        ) {\n          this.form.controls.contract.setValue(null);\n          this.form.controls.contractId.setValue('');\n        }\n        this.updateContractsSwitchDescriptionParams(\n          senderAccount?.balance?.currency || null\n        );\n      })\n    );\n  }\n\n  private listenIsRussianBudget() {\n    this.subs.add(\n      combineLatest([\n        this.controlsStream.senderAccount,\n        this.controlsStream.bankAccount,\n        this.controlsStream.bank,\n        this.controlsStream.withinContract,\n        this.controlsStream.contract,\n        this.controlsStream.country,\n      ]).subscribe((values) => {\n        const [senderAccount, bankAccount, bank] = values;\n        const isRussianBudgetBic =\n          IS_RUSSIAN_BUDGET_IBAN_START_INDEX(bankAccount) &&\n          IS_RUSSIAN_BUDGET_BIC_MIDDLE_INDEX(bank?.bic);\n\n        if (\n          this.currentCountryCode === COUNTRY.RU &&\n          senderAccount?.balance?.currency === CURRENCY.RUB &&\n          isRussianBudgetBic &&\n          !this.featureFlagsService.isDisabled(FEATURE_FLAG.RUB_BUDGET_PAYMENT)\n        ) {\n          this.isRussianBudget$.next(true);\n          this.form.controls.isRussianBudget.setValue(true);\n        } else {\n          this.isRussianBudget$.next(false);\n          this.form.controls.isRussianBudget.setValue(false);\n        }\n      })\n    );\n  }\n\n  private listenWithinContractSwitch() {\n    const { withinContract, senderAccount, contract, country } =\n      this.controlsStream;\n    this.subs.add(\n      combineLatest([withinContract, senderAccount, contract, country])\n        .pipe(distinctUntilChanged())\n        .subscribe((values) => {\n          const [\n            withinContractValue,\n            senderAccountValue,\n            contractValue,\n            countryValue,\n          ] = values;\n\n          this.withinContract = withinContractValue;\n\n          const senderCurrencyValue = senderAccountValue?.balance?.currency;\n\n          const { bank, bankLabel } = this.form.controls;\n\n          const controlsToRequiredArray = [bank, bankLabel];\n\n          if (this.currentCountryCode === COUNTRY.US) {\n            this.cityPlaceholder$.next('CURRENCY_PAYMENT.RECIPIENT.CITY_STATE');\n            this.clearValidation([\n              this.form.controls.bankLabel,\n              this.form.controls.bank,\n            ]);\n            // this.isBicRequired = false;\n          } else if (this.formValue.isRubNonRussia) {\n            this.cityPlaceholder$.next('CURRENCY_PAYMENT.RECIPIENT.CITY_BANK');\n            // this.isBicRequired = true;\n          } else {\n            this.cityPlaceholder$.next('CURRENCY_PAYMENT.RECIPIENT.CITY');\n          }\n\n          if (withinContractValue) {\n            const hasCityInContract = !!contractValue?.contractor.cityName;\n            const isRussia = this.currentCountryCode === COUNTRY.RU;\n            const isRub = senderCurrencyValue === CURRENCY.RUB;\n\n            // if ((isRussia && isRub) || hasCityInContract) {\n            // this.shouldEnterCity$.next(false);\n            // } else {\n            // this.shouldEnterCity$.next(true);\n            // }\n\n            // if (!contractValue?.iban) {\n            // this.shouldEnterIban$.next(true);\n            // } else {\n            // this.shouldEnterIban$.next(false);\n            // }\n\n            if (!contractValue?.contractor.iinOrBin && isRub) {\n              this.isKioEnabled$.next(true);\n            } else {\n              this.isKioEnabled$.next(false);\n            }\n\n            this.clearValidation(controlsToRequiredArray);\n            this.setValidation(\n              [this.form.controls.contractId],\n              [\n                (control) => {\n                  // if (\n                  //   contract?.contractor?.country?.code !== COUNTRY.RU &&\n                  //   senderAccount?.balance?.currency === CURRENCY.RUB\n                  // ) {\n                  //   return { rubOnlyViaBranch: true };\n                  // } else\n                  if (\n                    this.currentCountryCode !== COUNTRY.CN &&\n                    senderCurrencyValue === CURRENCY.CNY\n                  ) {\n                    return { cnyOnlyToChina: true };\n                  }\n\n                  return null;\n                },\n                Validators.required,\n              ],\n              null,\n              false\n            );\n\n            const isAud = senderCurrencyValue === CURRENCY.AUD;\n            const isCanada = this.currentCountryCode === COUNTRY.CA;\n            const isAustralia = this.currentCountryCode === COUNTRY.AU;\n\n            this.isAustraliaAud$.next(isAud && isAustralia);\n            this.isAustraliaNonAud$.next(!isAud && isAustralia);\n            this.isCountryCanada$.next(isCanada);\n\n            if (\n              this.currentCountryCode &&\n              senderCurrencyValue === CURRENCY.RUB\n            ) {\n              this.rubNonRussiaWithinContractCountry = contractValue.contractor\n                .country.code as COUNTRY;\n\n              this.applyRubPaymentRules(this.rubNonRussiaWithinContractCountry);\n            }\n          } else {\n            this.form.controls.contract.setValue(null, { emitEvent: false });\n            this.form.controls.contractId.setValue(null);\n\n            this.clearValidation([this.form.controls.contractId]);\n\n            this.setValidation(controlsToRequiredArray, [Validators.required]);\n\n            const isAud = senderCurrencyValue === CURRENCY.AUD;\n            const isAustralia = this.currentCountryCode === COUNTRY.AU;\n            const isCanada = this.currentCountryCode === COUNTRY.CA;\n\n            this.isAustraliaAud$.next(isAud && isAustralia);\n            this.isAustraliaNonAud$.next(!isAud && isAustralia);\n            this.isCountryCanada$.next(isCanada);\n\n            if (senderCurrencyValue === CURRENCY.RUB) {\n              this.applyRubPaymentRules(this.currentCountryCode);\n            } else if (senderCurrencyValue === CURRENCY.CNY) {\n              this.form.controls.codeWord.setValue('');\n              this.applyChinaPaymentRules(this.currentCountryCode);\n            } else {\n              this.applyDefaultPaymentRules();\n            }\n          }\n        })\n    );\n  }\n\n  private listenCodeWordEnabling() {\n    const { withinContract, contract, country } = this.controlsStream;\n    this.subs.add(\n      combineLatest([withinContract, contract, country]).subscribe((values) => {\n        if (this.currentCountryCode === COUNTRY.AE) {\n          this.isCodeWordEnabled$.next(true);\n          this.codeWordLabel$.next('CURRENCY_PAYMENT.RECIPIENT.CODEWORD_AE');\n        } else if (this.currentCountryCode === COUNTRY.CN) {\n          this.isCodeWordEnabled$.next(true);\n          this.codeWordLabel$.next('CURRENCY_PAYMENT.RECIPIENT.CODEWORD');\n        } else {\n          this.isCodeWordEnabled$.next(false);\n          this.codeWordLabel$.next('CURRENCY_PAYMENT.RECIPIENT.CODEWORD');\n        }\n      })\n    );\n  }\n\n  private listenContractSelect() {\n    this.subs.add(\n      this.controlsStream.contractId\n        .pipe(distinctUntilChanged())\n        .subscribe((value) => {\n          if (value) {\n            this.isContractSelected = true;\n          } else {\n            this.isContractSelected = false;\n          }\n        })\n    );\n  }\n\n  private async updateContractsSwitchDescriptionParams(\n    senderCurrency: CURRENCY = CURRENCY.USD\n  ) {\n    if (!senderCurrency || senderCurrency === CURRENCY.USD) {\n      this.contractMaxAmount = {\n        amount: 10000,\n        currency: CURRENCY.USD,\n      };\n    } else {\n      this.isContractsDescriptionLoading = true;\n\n      const exchangeRate: IExchangeRate = {\n        currencyFrom: senderCurrency,\n        currencyTo: CURRENCY.USD,\n        sum: {\n          amount: 10000,\n          currency: CURRENCY.USD,\n        },\n      };\n      try {\n        const calculatedRate = await this.conversionService.getRate(\n          exchangeRate\n        );\n\n        this.contractMaxAmount = {\n          amount: calculatedRate.calculatedSum,\n          currency: senderCurrency,\n        };\n      } catch (error) {\n        this.contractMaxAmount = {\n          amount: 10000,\n          currency: CURRENCY.USD,\n        };\n      } finally {\n        this.isContractsDescriptionLoading = false;\n      }\n    }\n\n    let amount = this.maskService.getMaskedAmount(\n      this.contractMaxAmount.amount\n    );\n\n    amount = amount\n      .split(',')\n      .filter((number) => parseInt(number, 10) > 0)\n      .map((number, index) => {\n        if (index === 1 && number.length < 2) {\n          return `${number}0`;\n        }\n        return number;\n      })\n      .join(',');\n\n    const currency = this.curSymbolPipe.transform(\n      this.contractMaxAmount.currency\n    );\n\n    this.contractsSwitchDescriptionParams = {\n      amount: `${amount} ${currency}`,\n    };\n  }\n\n  async openForeignRecipientsDictionary() {\n    const modalRef = this.modals.open(ForeignRecipientsDictionaryComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_dictionary',\n      centered: true,\n    });\n\n    try {\n      const selectedRecipient = (await modalRef.result) as ISelectedRecipient;\n\n      const { countryCode, cityName, name, bankAccount, kbeCode, bank, kio } =\n        this.form.controls;\n\n      const { recipient, account } = selectedRecipient;\n\n      countryCode.setValue(recipient.countryCode);\n      cityName.setValue(recipient.cityName || '');\n      name.setValue(recipient.name || '');\n      bankAccount.setValue(account.iban);\n      kbeCode.setValue(recipient.kbe.code);\n\n      bank.setValue({\n        bic: account.bic,\n        name: account.bankName,\n      });\n\n      this.bankDropdown.selectByBic(account.bic);\n      this.rubNonRussiaBankDropdown?.selectByBic(account.bic);\n\n      kio?.setValue(recipient.iinOrBin);\n    } catch (error) {}\n  }\n\n  get formValue(): CurrencyPaymentFormModel {\n    return this.form.getRawValue();\n  }\n\n  get shouldBindContract(): boolean {\n    if (\n      KNP_WITHOUT_CONTRACT.indexOf(this.formValue.knp) !== -1 ||\n      this.isForeignContractDisabled\n    ) {\n      return false;\n    }\n    return (\n      this.formValue.senderAccount?.balance?.currency ===\n        this.contractMaxAmount.currency &&\n      !this.formValue.contractId &&\n      this.maskService.getNumberedAmount(this.formValue.amount) >\n        this.contractMaxAmount.amount\n    );\n  }\n\n  private applyAmountValidation() {\n    this.subs.add(\n      combineLatest([\n        this.controlsStream.senderAccount,\n        this.controlsStream.contractId,\n      ]).subscribe((values) => {\n        const [senderAccount, contractId] = values;\n\n        let validators = [\n          Validators.required,\n          Validators.min(this.paymentsService.rules.minAmount),\n          Validators.max(this.paymentsService.rules.maxAmount),\n          (control: AbstractControl) => {\n            if (control?.value === 0) {\n              return { cantBeZero: true };\n            }\n            return null;\n          },\n        ];\n\n        if (\n          senderAccount?.balance?.currency ===\n            this.contractMaxAmount.currency &&\n          !contractId\n        ) {\n          validators.push((control) => {\n            const numberedAmount = this.maskService.getNumberedAmount(\n              control.value\n            );\n            if (this.isForeignContractDisabled || this.withinContract) {\n              return;\n            } else {\n              if (numberedAmount > this.contractMaxAmount.amount) {\n                if (KNP_WITHOUT_CONTRACT.indexOf(this.formValue.knp) !== -1) {\n                  return null;\n                } else {\n                  return {\n                    mustIncludeContract: true,\n                  };\n                }\n              }\n            }\n            //  Когда будем реализовывать блокировку платежа если не хватает суммы, пригодится.\n            // else if (\n            //   numberedAmount > formValue.senderAccount?.balance?.amount\n            // ) {\n            //   return {\n            //     balanceNotEnough: true,\n            //   };\n            // }\n            return null;\n          });\n        }\n\n        this.setValidation(\n          [this.form.controls.amount],\n          validators,\n          null,\n          false\n        );\n      })\n    );\n  }\n\n  private setValidation(\n    controls: AbstractControl[],\n    validators: ValidatorFn[] | ValidatorFn,\n    asyncValidators: AsyncValidatorFn[] | AsyncValidatorFn = [],\n    emitEvent = true\n  ) {\n    controls.forEach((control) => {\n      const prevPristine = control.pristine;\n\n      control.setValidators(validators);\n      control.setAsyncValidators(asyncValidators);\n      control.updateValueAndValidity({ emitEvent });\n\n      setTimeout(() => {\n        if (prevPristine) {\n          control.markAsPristine();\n        }\n      }, 0);\n    });\n  }\n\n  private clearValidation(controls: AbstractControl[], emitEvent = true) {\n    controls.forEach((control) => {\n      const prevPristine = control.pristine;\n\n      control.clearValidators();\n      control.clearAsyncValidators();\n      control.updateValueAndValidity({ emitEvent });\n\n      setTimeout(() => {\n        if (prevPristine) {\n          control.markAsPristine();\n        }\n      }, 0);\n    });\n  }\n\n  private listenPayComission() {\n    this.subs.add(\n      this.controlsStream.payComission\n        .pipe(distinctUntilChanged())\n        .subscribe((value) => {\n          this.isOurComission = value;\n        })\n    );\n  }\n\n  private listenIntermediaryBankSwitchable() {\n    const { senderAccount, country, bank } = this.controlsStream;\n    this.subs.add(\n      combineLatest([senderAccount, country, bank]).subscribe((values) => {\n        const [senderAccount, country, bank] = values;\n\n        const currency = senderAccount?.balance?.currency;\n        const bic = bank?.bic;\n\n        if (\n          (currency === CURRENCY.EUR ||\n            (currency === CURRENCY.USD &&\n              this.currentCountryCode !== COUNTRY.US)) &&\n          bic !== BANKS.JYSAN\n        ) {\n          this.isIntermediaryBankSwitchable = true;\n          this.setValidation(\n            [this.form.controls.intermediaryBankLabel],\n            [\n              (control) => {\n                const formValue: CurrencyPaymentFormModel =\n                  this.form.getRawValue();\n\n                if (control.value && control.value === formValue.bankLabel) {\n                  return {\n                    equalBanks: true,\n                  };\n                }\n\n                return null;\n              },\n            ],\n            PaymentAsyncValidators.bankRestricted(this.dictionaries)\n          );\n        } else {\n          // this.form.controls.hasIntermediaryBank.setValue(false);\n          // this.form.controls.intermediaryBankLabel.setValue('');\n          // this.form.controls.intermediaryBank.setValue(null);\n          this.clearValidation([this.form.controls.intermediaryBankLabel]);\n          this.isIntermediaryBankSwitchable = false;\n        }\n      })\n    );\n  }\n\n  private listenIntermediaryBankSwitch() {\n    this.subs.add(\n      this.controlsStream.hasIntermediaryBank\n        .pipe(distinctUntilChanged())\n        .subscribe((value) => {\n          this.hasIntermediaryBank = value;\n\n          if (!value) {\n            this.form.controls.intermediaryBankLabel.setValue('');\n            this.form.controls.intermediaryBank.setValue(null);\n          }\n        })\n    );\n  }\n\n  private listenEmailSearch() {\n    const { emailOnSuccess } = this.form.controls;\n    this.subs.add(\n      this.controlsStream.notify\n        .pipe(debounceTime(100))\n        .subscribe((v) =>\n          v ? emailOnSuccess.enable() : emailOnSuccess.disable()\n        )\n    );\n    // this.subs.add(\n    //   this.controlsStream.iinOrBin\n    //     .pipe(\n    //       debounceTime(200),\n    //       filter((iinOrBin) => this.form.controls.iinOrBin.valid),\n    //       switchMap((iinOrBin) => {\n    //         this.fetchingEmailsFor$.next(iinOrBin);\n    //         this.prevEmails$.next([]);\n    //         return this.recipientsService\n    //           .getPrevNotifications(iinOrBin)\n    //           .catch((e) => []);\n    //       })\n    //     )\n    //     .subscribe((emails) => {\n    //       this.prevEmails$.next(emails);\n    //       this.fetchingEmailsFor$.next(null);\n    //     })\n    // );\n    this.search = (text$: Observable<string>) => {\n      return combineLatest([\n        this.prevEmails$.pipe(\n          map((emails) => emails.map((emailEntity) => emailEntity.email))\n        ),\n        text$.pipe(debounceTime(200), distinctUntilChanged(), startWith('')),\n        this.focusEmail$,\n      ]).pipe(\n        map(([emails, term, focus]) => {\n          if (term) {\n            return emails\n              .filter(\n                (item) => item.toLowerCase().indexOf(term.toLowerCase()) > -1\n              )\n              .slice(0, 3);\n          } else {\n            return emails.slice(0, 3);\n          }\n        })\n      );\n    };\n  }\n\n  // Override\n  setAutoNumeration() {\n    this.subs.add(\n      this.paymentsService.foreignPaymentNumber$\n        .pipe(withLatestFrom(this.controlsStream.number))\n        .subscribe(([numberFromStore, numberValue]) => {\n          if (!numberValue) {\n            this.form.controls.number.setValue(numberFromStore);\n          }\n        })\n    );\n  }\n\n  // Override\n  protected listenCommission() {\n    const { senderAccount, date, commissionAccount, amount, payComission } =\n      this.controlsStream;\n\n    combineLatest([\n      senderAccount,\n      date,\n      commissionAccount,\n      amount,\n      payComission,\n      this.workingHours$.asObservable(),\n    ])\n      .pipe(debounceTime(300))\n      .subscribe((values) => {\n        this.updateComission();\n      });\n  }\n\n  private async updateComission() {\n    const { senderAccount, date, commissionAccount, amount, payComission } =\n      this.form.controls;\n\n    let isAllFieldsValid = true;\n\n    [senderAccount, date, commissionAccount, amount, payComission].forEach(\n      (control) => {\n        if (control.invalid) {\n          isAllFieldsValid = false;\n          return;\n        }\n      }\n    );\n\n    if (!isAllFieldsValid) {\n      return;\n    }\n\n    const formValue: CurrencyPaymentFormModel = this.form.getRawValue();\n\n    try {\n      const date = formValue.date ? ngbStructToISO(formValue.date) : null;\n      const amountValue = this.maskService.getNumberedAmount(formValue.amount);\n\n      const body = {\n        companyId: this.companyService.currentId,\n        category: PAYMENT_CATEGORY.FOREIGN,\n        type: PAYMENT_TYPE.FOREIGN,\n        details: {\n          valueDate: date,\n          paymentAmount: {\n            amount: amountValue,\n            currency: formValue.senderAccount?.balance?.currency,\n          },\n          foreignPaymentDetails: {\n            type: formValue.payComission ? 'OUR' : 'SHA',\n          },\n          urgent: false,\n          payerIban: formValue.senderAccount.iban,\n        },\n      };\n\n      this.commissionBalance = await this.api.getCommissionWithCurrency(body);\n\n      this.form.controls.comission.setValue(\n        this.commissionBalance?.amount || 0\n      );\n      this.form.controls.comissionCurrency.setValue(\n        this.commissionBalance.currency\n      );\n\n      if (\n        formValue.commissionAccount?.balance?.amount <\n          this.commissionBalance?.amount &&\n        formValue.commissionAccount?.balance?.currency ===\n          this.commissionBalance?.currency\n      ) {\n        this.comissionMessage = this.mapCommissionMessage({\n          amount:\n            this.commissionBalance?.amount -\n            formValue.commissionAccount?.balance?.amount,\n          currency: this.commissionBalance.currency,\n        });\n      } else {\n        this.comissionMessage = of(null);\n      }\n    } catch (error) {\n      this.commission$.next(null);\n      this.comissionMessage = null;\n    }\n  }\n\n  private mapCommissionMessage(\n    balance: IMoney,\n    workingHours = this.workingHours$.value\n  ) {\n    const formValue: CurrencyPaymentFormModel = this.form.getRawValue();\n    const date = formValue.date;\n\n    const amountMasked = this.maskService.formatAmount(balance.amount);\n    const currencySymbol = this.curSymbolPipe.transform(balance.currency);\n\n    const edge = workingHours?.endTime || edgeTimeLabel;\n    const message = date\n      ? 'CURRENCY_PAYMENT.MESSAGES.COMMISSION.WITH_DATE'\n      : 'CURRENCY_PAYMENT.MESSAGES.COMMISSION.DEFAULT';\n\n    return this.translateService.get(message, {\n      amount: `${amountMasked} ${currencySymbol}`,\n      edge: `${formatNgbDate(date, this.translateService.currentLang)} ${edge}`,\n    });\n  }\n\n  private mapAmountMessage(\n    balance: IMoney,\n    workingHours = this.workingHours$.value\n  ) {\n    const formValue: CurrencyPaymentFormModel = this.form.getRawValue();\n    const date = formValue.date;\n\n    const amountMasked = this.maskService.formatAmount(balance.amount);\n    const currencySymbol = this.curSymbolPipe.transform(balance.currency);\n    const edge = workingHours?.endTime || edgeTimeLabel;\n\n    let message = date\n      ? 'CURRENCY_PAYMENT.MESSAGES.AMOUNT.WITH_DATE'\n      : 'CURRENCY_PAYMENT.MESSAGES.AMOUNT.DEFAULT';\n\n    return this.translateService.get(message, {\n      amount: `${amountMasked} ${currencySymbol}`,\n      edge: `${formatNgbDate(date, this.translateService.currentLang)} ${edge}`,\n    });\n  }\n\n  private sortAccounts(a: RegularAccount, b: RegularAccount) {\n    if (a.balance.currency === b.balance.currency) {\n      return 0;\n    } else if (a.balance.currency === CURRENCY.USD) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n\n  private listenAmount() {\n    const { amount } = this.form.controls;\n    this.subs.add(\n      this.controlsStream.senderAccount\n        .pipe(\n          distinctUntilChanged(),\n          map((value) => {\n            const currency = value?.balance?.currency;\n            const prevPristine = amount.pristine;\n            this.amountSuffix = ` ${\n              this.curSymbolPipe.transform(currency) ||\n              currency ||\n              this.curSymbolPipe.transform(CURRENCY.KZT)\n            }`;\n\n            if (currency === NO_DECIMALS_CURRENCY) {\n              this.amountMask = 'separator.0';\n              this.amountPlaceholder = '0';\n            } else {\n              this.amountMask = 'separator.2';\n              this.amountPlaceholder = '0,00';\n            }\n            return prevPristine;\n          }),\n          // wait for ngx mask recalc\n          delay(0)\n        )\n        .subscribe((prevPristine) => {\n          // ngx mask is making field dirty on force recalculating after mask and suffix change\n          if (prevPristine && prevPristine !== amount.pristine) {\n            amount.markAsPristine();\n          }\n        })\n    );\n  }\n\n  private listenAmountMessage() {\n    const { senderAccount, date, amount, contractId } = this.controlsStream;\n\n    combineLatest([\n      senderAccount,\n      date,\n      amount,\n      contractId,\n      this.workingHours$.asObservable(),\n    ])\n      .pipe(distinctUntilChanged())\n      .subscribe((values) => {\n        const [senderAccount, date, amount, contractId, workingHours] = values;\n        const amountValue = this.maskService.getNumberedAmount(amount);\n\n        const showAmountMessage =\n          senderAccount?.balance?.amount < amountValue &&\n          !this.shouldBindContract;\n\n        this.amountMessage = showAmountMessage\n          ? this.mapAmountMessage({\n              amount: amountValue - senderAccount?.balance?.amount,\n              currency: senderAccount.balance.currency,\n            })\n          : of(null);\n      });\n  }\n\n  private listenCommissionAccount() {\n    this.subs.add(\n      this.controlsStream.senderAccount\n        .pipe(distinctUntilChanged())\n        .subscribe((senderAccount) => {\n          const formValue: CurrencyPaymentFormModel = this.form.getRawValue();\n          const commissionAccount = formValue.commissionAccount;\n\n          if (\n            commissionAccount &&\n            commissionAccount?.balance?.currency !=\n              senderAccount?.balance?.currency\n          ) {\n            this.commissionAccountDropdown.clearSelected();\n            this.onCommissionAccountSelect(null);\n          }\n\n          if (this.commissionAccountsList.length === 1) {\n            const onlyAccount = this.commissionAccountsList[0];\n            this.commissionAccountDropdown?.selectAccount(onlyAccount);\n            this.onCommissionAccountSelect(onlyAccount);\n            this.isCommissionAccountSelectable = false;\n          } else {\n            this.isCommissionAccountSelectable = true;\n          }\n\n          const kztAccounts = this.commissionAccountsList.filter(\n            (account) => account.balance.currency === CURRENCY.KZT\n          );\n\n          if (kztAccounts?.length === 1) {\n            this.commissionAccountDropdown?.selectAccount(kztAccounts[0]);\n            this.onCommissionAccountSelect(kztAccounts[0]);\n          } else if (kztAccounts.length === 0 && senderAccount) {\n            this.commissionAccountDropdown?.selectAccount(senderAccount);\n            this.onCommissionAccountSelect(senderAccount);\n          }\n        })\n    );\n  }\n\n  /**\n   * @override\n   */\n  saveToDraft(body?: any) {\n    (this.formDirective as any).submitted = true;\n\n    this.formDirective.form.markAsPristine();\n\n    const paymentNumberStore = this.paymentsService.foreignPaymentNumber;\n    const rawBody = body || {\n      ...this.form.value,\n    };\n    paymentNumberStore.entity = null;\n    this.processingPayment$.next({ id: this.paymentId, ...rawBody });\n\n    this.pipeline\n      .saveToDrafts(rawBody, {\n        paymentId: this.paymentId,\n        type: PAYMENT_TYPE.FOREIGN,\n        commission: this.commissionBalance?.amount,\n        userPurpose: this.form.value.purpose,\n        category: PAYMENT_CATEGORY.FOREIGN,\n      })\n      .then((payment) => {\n        if (payment.id !== this.paymentId) {\n          if (payment) {\n            this.restoredData = {\n              status: payment.status,\n              signatures: payment.signatures,\n              companyId: payment.companyId,\n            };\n          }\n\n          this.router.navigate(\n            [this.route.snapshot.params.paymentId ? '../' : '.', payment.id],\n            {\n              relativeTo: this.route,\n              replaceUrl: true,\n\n              state: {\n                silent: true,\n                resolvedPayment: this.currencyPaymentService.mapForm(\n                  this.form.getRawValue()\n                ),\n              },\n            }\n          );\n        }\n      })\n      .catch((e) => {\n        if (!paymentNumberStore.entity && !paymentNumberStore.fetching) {\n          paymentNumberStore.entity = rawBody.number;\n        }\n      })\n      .finally(() => {\n        this.processingPayment$.next(null);\n      });\n  }\n\n  protected listenRouterParams() {\n    this.subs.add(\n      this.route.params\n        .pipe(\n          map((params) => ({\n            state: window.history.state,\n            params,\n            route: this.route,\n          })),\n          debounceTime(0),\n          switchMap(({ params, state }) => {\n            // silent passed for redirect with id without reloading in addition with custom url state matcher after payment creation\n            if (state?.silent) {\n              if (this.restoredData.status === PAYMENT_STATUS.DRAFT) {\n                this.paymentsService.rootTitle = PaymentRootTitle.EDIT_DRAFT;\n              } else if (this.restoredData.status === PAYMENT_STATUS.CREATED) {\n                this.paymentsService.rootTitle = PaymentRootTitle.EDIT_PAYMENT;\n              }\n              // only drafts can be edited on redirect after creation\n              return EMPTY;\n            } else if (state?.resolvedPayment) {\n              return of(state.resolvedPayment);\n            } else if (params.paymentId || state?.repeatPaymentId) {\n              const paymentId = params.paymentId || state.repeatPaymentId;\n              return from(this.api.getPaymentById(paymentId)).pipe(\n                // wrong id\n                catchError((e) => {\n                  this.router.navigate([\n                    this.router.url.replace('/' + paymentId, ''),\n                  ]);\n                  return EMPTY;\n                })\n              );\n            }\n            this.setAutoNumeration();\n            this.paymentsService.rootTitle = PaymentRootTitle.NEW;\n            return EMPTY;\n          })\n        )\n        .subscribe((restorePayment) => {\n          this.restorePayment(restorePayment);\n        })\n    );\n  }\n\n  /**\n   * @override\n   */\n  protected restorePayment(data) {\n    this.subs.add(\n      combineLatest([\n        this.knpStore.fetched$,\n        // this.kbkStore.fetched$,\n        // this.ugdStore.fetched$,\n        // this.dictionaries.bankDictionary.fetched$,\n        // this.accountStore.fetched$,\n      ])\n        .pipe(\n          filter((loaded) => loaded.every((l) => l)),\n          tap(() => {\n            let model;\n\n            try {\n              model = this.pipeline.flattenPaymentToModel(data);\n            } catch (e) {\n              model = {};\n            }\n\n            this.restoredData = {\n              companyId: data.companyId,\n              status: data.status?.code,\n              signatures: data.signatures,\n            };\n\n            // resolved payment full data but no id in router - going further as 'repeat payment' branch\n            if (data.isNewPayment || (data.id && !this.paymentId)) {\n              model.number = '';\n              model.date = null;\n              this.restoredData.status = null;\n              this.paymentsService.rootTitle = PaymentRootTitle.NEW;\n            } else {\n              this.paymentsService.rootTitle =\n                this.restoredData.status === PAYMENT_STATUS.DRAFT\n                  ? PaymentRootTitle.EDIT_DRAFT\n                  : PaymentRootTitle.EDIT_PAYMENT;\n            }\n\n            if (model.emailOnSuccess) {\n              model.notify = true;\n            }\n\n            this.form.patchValue({\n              ...model,\n              // purpose: data.details.associatedField?.parameters?.paymentPurpose,\n              // input prefix for bankAccount\n              // bankAccount: model.bankAccount?.replace('KZ', ''),\n            });\n            this.restoreAsyncData(data);\n            // mark filled amount to trigger commission request;\n            // reworked commission\n            // this.form.controls.amount.value &&\n            //   this.form.controls.amount.markAsDirty();\n            this.isImported = data.imported;\n            if (!model.number) {\n              this.setAutoNumeration();\n            }\n          }),\n          debounceTime(10),\n          // tap(() => {\n          //   // remove duplicated purpose additional message as vat or knp name\n          //   this.form.controls.purpose.patchValue(\n          //     this.form.controls.purpose.value.replace(\n          //       this.purposeMessage$.getValue(),\n          //       ''\n          //     )\n          //   );\n          // }),\n          take(1)\n        )\n        .subscribe()\n    );\n  }\n\n  /**\n   * @override\n   */\n  sendPayment(body?: any) {\n    this.formDirective.form.markAsPristine();\n    const paymentNumberStore = this.paymentsService.paymentNumber;\n    const rawBody = body || {\n      ...this.form.value,\n    };\n    this.processingPayment$.next(rawBody);\n    this.paymentsService.paymentNumber.entity = null;\n\n    return this.pipeline\n      .processPayment({\n        paymentId: this.paymentId,\n        // no commission in total JSN-1624\n        total: rawBody.amount,\n        commission: this.commissionBalance?.amount,\n        status: this.restoredData?.status,\n        userPurpose: this.form.value.purpose,\n        rawBody,\n      })\n      .then((r) => {\n        if (r) {\n          this.restoredData = {\n            status: r.status.code,\n            signatures: r.signatures,\n            companyId: r.companyId,\n          };\n        } else {\n          this.restoredData = null;\n          if (!paymentNumberStore.entity && !paymentNumberStore.fetching) {\n            paymentNumberStore.entity = rawBody.number;\n          }\n        }\n      })\n      .catch((err) => {})\n      .finally(() => {\n        // this.formDirective.resetForm();\n        this.processingPayment$.next(null);\n      });\n  }\n\n  /** @override */\n  public onSubmit(e: Event) {\n    e && e.preventDefault();\n\n    if (this.form.valid) {\n      this.processPayment();\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n\n  public async processPayment() {\n    const formValue = this.form.getRawValue();\n\n    this.processingPayment$.next(formValue);\n\n    try {\n      const isWorkingTimeCheckPassed = await this.api.checkWorkingTime(\n        formValue.date\n      );\n\n      const isAmountCheckPassed = await this.api.checkAmountLimit(\n        formValue.amount,\n        this.paymentType\n      );\n\n      // await this.showAmlMainModal();\n\n      if (isWorkingTimeCheckPassed && isAmountCheckPassed) {\n        this.sendPayment();\n      } else {\n        this.processingPayment$.next(null);\n      }\n    } catch (error) {\n      this.processingPayment$.next(null);\n    }\n  }\n\n  async showAmlMainModal() {\n    const modalRef = this.modalService.open(AmlMainModalComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_sm',\n      centered: true,\n    });\n\n    try {\n      await modalRef.result;\n    } catch (error) {\n    } finally {\n      return;\n    }\n  }\n\n  openContractsAddingModal(event: Event = null) {\n    event?.preventDefault();\n    this.contractsModalsService.showAddContractModal(false);\n  }\n\n  public openKnpDictionary(select: JSelectComponent, event: Event) {\n    select.close();\n    select.blur();\n    setTimeout(() => {\n      this.modals\n        .open(KnpDictionaryComponent, {\n          backdropClass: 'backdrop_light',\n          windowClass: 'modal_light modal_max-height',\n          centered: true,\n        })\n        .result.then((item: KNP) => {\n          this.form.controls.knp.patchValue(item);\n          this.form.controls.knpObject.patchValue(item);\n          // trigger cd to update dynamic bottom form field slot\n          // this.form.controls.purpose.patchValue(\n          //   this.form.controls.purpose.value\n          // );\n        })\n        .catch(() => {\n          /*  no selection or dismiss */\n        });\n    }, 0);\n  }\n\n  private async restoreAsyncData(data: IHistoryPayment) {\n    await this.retrieveAccounts();\n\n    this.senderAccountDropdown.selectByIban(data.details?.payerIban);\n\n    const currentBank = data?.paymentRecipient?.recipientAccount?.bic;\n    const intermediaryBank =\n      data?.details?.foreignPaymentDetails?.intermediaryBankBic;\n    const intermediaryBankIban =\n      data?.details?.foreignPaymentDetails?.intermediaryBankIban;\n\n    if (\n      this.formValue.senderAccount?.balance.currency === CURRENCY.RUB &&\n      this.currentCountryCode !== COUNTRY.RU\n    ) {\n      this.isRubNonRussia$.next(true);\n    }\n\n    if (currentBank) {\n      setTimeout(() => {\n        if (this.formValue.isRubNonRussia) {\n          this.rubNonRussiaBankDropdown?.selectByBic(currentBank);\n        } else {\n          this.bankDropdown?.selectByBic(currentBank);\n        }\n      }, 100);\n    }\n\n    if (intermediaryBank) {\n      setTimeout(() => {\n        if (this.formValue.isRubNonRussia) {\n          this.rubNonRussiaCorrespondentBankDropdown.selectByBic(\n            intermediaryBank\n          );\n        } else {\n          this.intermediaryBankDropdown?.selectByBic(intermediaryBank);\n        }\n      }, 100);\n    }\n\n    if (intermediaryBankIban && this.formValue.isRubNonRussia) {\n      this.form.controls.rubNonRussiaCorrespondentIban.setValue(\n        intermediaryBankIban\n      );\n    }\n\n    if (this.withinContract) {\n      this.onContractSelect(this.formValue.contract, true);\n    }\n\n    if (data.details?.foreignPaymentDetails.codeWord) {\n      await this.retrieveCodeWords();\n      this.form.controls.codeWord.setValue(\n        data.details.foreignPaymentDetails.codeWord\n      );\n    }\n\n    this.commissionAccountDropdown.selectByIban(\n      data.details.foreignPaymentDetails.commissionWithdrawalIban\n    );\n\n    this.hasDefaultCity = !!data.paymentRecipient?.country?.defaultCityName;\n\n    if (\n      data?.details?.paymentAmount?.currency !== CURRENCY.RUB &&\n      !this.hasDefaultCity\n    ) {\n      this.isCityShown = true;\n      this.setValidation([this.form.controls.cityName], [Validators.required]);\n    } else {\n      this.isCityShown = false;\n      this.clearValidation([this.form.controls.cityName]);\n    }\n  }\n\n  // Override\n  protected listenPurposeMessageStream() {\n    this.subs.add(\n      combineLatest([\n        this.purposeMessage$,\n        this.controlsStream.purpose,\n        this.controlsStream.countryCode,\n      ])\n        .pipe(\n          map((values) => {\n            const [purposeMessage, userMessage, countryCode] = values;\n\n            if (countryCode === COUNTRY.CN) {\n              return (userMessage || '').length;\n            } else {\n              return (purposeMessage || '').length + (userMessage || '').length;\n            }\n          })\n        )\n        .subscribe(this.purposeLength$)\n    );\n\n    this.validatePurpose();\n  }\n\n  private listenIsRussianTaxpayer() {\n    this.subs.add(\n      this.controlsStream.isRussianTaxPayer.subscribe((value) => {\n        if (value) {\n          this.isRussianTaxpayer = true;\n          this.setValidation(\n            [this.form.controls.payerInn],\n            [Validators.required, RUB_KIO_VALIDATOR]\n          );\n        } else {\n          this.isRussianTaxpayer = false;\n          this.clearValidation([this.form.controls.payerInn]);\n        }\n      })\n    );\n  }\n\n  private listenHasRussianBudgetExtras() {\n    this.subs.add(\n      this.controlsStream.hasRussianBudgetExtras.subscribe((value) => {\n        if (value) {\n          this.hasRussianBudgetExtras = true;\n        } else {\n          this.hasRussianBudgetExtras = false;\n        }\n      })\n    );\n  }\n\n  private listenKvo() {\n    this.subs.add(\n      this.isKvoEnabled$\n        .pipe(distinctUntilChanged())\n        .subscribe((isKvoEnabled) => {\n          if (isKvoEnabled) {\n            this.setValidation([this.form.controls.kvo], [Validators.required]);\n          } else {\n            this.clearValidation([this.form.controls.kvo]);\n          }\n        })\n    );\n  }\n\n  private listenPurpose() {\n    this.subs.add(\n      combineLatest([\n        this.isKvoEnabled$.pipe(distinctUntilChanged()),\n        this.controlsStream.kvo.pipe(distinctUntilChanged()),\n        this.controlsStream.isRubNonRussia.pipe(distinctUntilChanged()),\n        this.controlsStream.name.pipe(distinctUntilChanged()),\n        this.controlsStream.withinContract.pipe(distinctUntilChanged()),\n        this.controlsStream.bankAccount,\n        this.controlsStream.country,\n        this.controlsStream.countryCode,\n        this.controlsStream.codeWord,\n      ]).subscribe((values) => {\n        const [\n          isKvoEnabled,\n          kvoValue,\n          isRubNonRussia,\n          name,\n          withinContract,\n          bankAccount,\n          country,\n          countryCode,\n          codeWord,\n        ] = values;\n\n        let message = '';\n\n        if (isKvoEnabled) {\n          message += `'(VO${kvoValue || ''})'`;\n        }\n\n        if (isRubNonRussia && !withinContract) {\n          message += ` для ${name || ''} счёт '${bankAccount || ''}'`;\n        }\n\n        if (countryCode === COUNTRY.CN) {\n          message += `//${(codeWord as IDictionaryValue)?.code || ''}`;\n        }\n\n        this.purposeMessage$.next(message);\n      })\n    );\n  }\n\n  private listenKio() {\n    this.subs.add(\n      combineLatest([this.isKioEnabled$, this.isRussianBudget$])\n        .pipe(distinctUntilChanged())\n        .subscribe((values) => {\n          const [isKioEnabled, isRussianBudget] = values;\n\n          if (isKioEnabled) {\n            let validators;\n\n            if (isRussianBudget) {\n              validators = [RUB_KIO_VALIDATOR, Validators.required];\n            } else {\n              validators = [RUB_KIO_VALIDATOR];\n            }\n\n            this.setValidation([this.form.controls.kio], validators);\n          } else {\n            this.clearValidation([this.form.controls.kio]);\n          }\n        })\n    );\n  }\n\n  private listenCodeWordsList() {\n    const { country, countryCode, contract, withinContract } =\n      this.controlsStream;\n    this.subs.add(\n      combineLatest([country, countryCode, contract, withinContract]).subscribe(\n        (values) => {\n          this.retrieveCodeWords();\n        }\n      )\n    );\n  }\n\n  private listenCodeWord() {\n    this.subs.add(\n      this.isCodeWordEnabled$\n        .pipe(distinctUntilChanged())\n        .subscribe((isEnabled) => {\n          if (isEnabled) {\n            this.setValidation(\n              [this.form.controls.codeWord],\n              [Validators.required]\n            );\n          } else {\n            this.clearValidation([this.form.controls.codeWord]);\n          }\n        })\n    );\n  }\n\n  private listenRubToNonRussia() {\n    this.subs.add(\n      combineLatest([\n        this.isRussianBudget$,\n        this.isRubToRussia$,\n        this.isRubNonRussia$,\n        this.controlsStream.senderAccount,\n        this.controlsStream.contract,\n        this.controlsStream.withinContract,\n        this.controlsStream.bankAccount,\n        this.controlsStream.bank,\n      ]).subscribe((values) => {\n        const [\n          isRussianBudget,\n          isRubToRussia,\n          isRubNonRussia,\n          senderAccount,\n          contract,\n          withinContract,\n          bankAccount,\n          bank,\n        ] = values;\n\n        this.form.controls.isRubNonRussia.setValue(isRubNonRussia);\n\n        const bankCountryCode = (contract as IFxContract)?.contractor\n          .bankCountryCode;\n\n        if (isRubNonRussia) {\n          // if (!this.formValue.rubNonRussiaCorrespondentBank) {\n          //   setTimeout(() => {\n          //     if (this.formValue.withinContract) {\n          //       this.rubNonRussiaCorrespondentBankDropdownWithinContract.focus();\n          //     } else {\n          //       this.rubNonRussiaCorrespondentBankDropdown.focus();\n          //     }\n          //   }, 0);\n          // }\n\n          if (bankCountryCode && bankCountryCode === COUNTRY.RU) {\n            setTimeout(() => {\n              this.rubNonRussiaCorrespondentBankDropdown.selectByBic(\n                (contract as IFxContract).contractor.bank.code\n              );\n            }, 100);\n          } else if (bankCountryCode && bankCountryCode !== COUNTRY.RU) {\n            setTimeout(() => {\n              this.rubNonRussiaBankDropdown.selectByBic(\n                this.formValue.contract?.contractor.bank.code\n              );\n            }, 100);\n          }\n\n          this.clearValidation(\n            [this.form.controls.bank, this.form.controls.bankLabel],\n            false\n          );\n\n          this.setValidation(\n            [\n              this.form.controls.rubNonRussiaBank,\n              this.form.controls.rubNonRussiaBankLabel,\n            ],\n            [Validators.required]\n          );\n\n          this.setValidation(\n            [this.form.controls.rubNonRussiaCorrespondentBankLabel],\n            [\n              Validators.required,\n              (control) => {\n                if (!control.value) {\n                  return {\n                    required: true,\n                  };\n                }\n                return null;\n              },\n              () => {\n                const bank = this.dictionaries.bankDictionary.getItemByKey(\n                  this.form.controls.rubNonRussiaBank.value?.id,\n                  'id'\n                );\n\n                if (bank?.transferAllowed === false) {\n                  return { bankRestricted: true };\n                }\n\n                return null;\n              },\n            ]\n            // PaymentAsyncValidators.bankLabelRestricted(\n            //   this.dictionaries,\n            //   this.form.controls.bank\n            // )\n          );\n          this.setValidation(\n            [this.form.controls.rubNonRussiaCorrespondentIban],\n            [Validators.required, RUB_NON_RUSSIA_IBAN_VALIDATOR],\n            PaymentAsyncValidators.externalIbanRestricted(this.dictionaries)\n          );\n        } else {\n          if (withinContract) {\n            this.clearValidation(\n              [this.form.controls.bank, this.form.controls.bankLabel],\n              false\n            );\n          } else {\n            this.setValidation(\n              [this.form.controls.bank],\n              [Validators.required],\n              null,\n              false\n            );\n\n            this.setValidation(\n              [this.form.controls.bankLabel],\n              [\n                Validators.required,\n                () => {\n                  if (\n                    this.currentCountryCode === COUNTRY.RU &&\n                    (senderAccount as RegularAccount)?.balance?.currency ===\n                      CURRENCY.RUB &&\n                    IS_RUSSIAN_BUDGET_IBAN_START_INDEX(bankAccount as string) &&\n                    IS_RUSSIAN_BUDGET_BIC_MIDDLE_INDEX((bank as IBank)?.bic) &&\n                    this.isRussianBudgetDisabled\n                  ) {\n                    return {\n                      rubBudgetDisabled: true,\n                    };\n                  } else if (\n                    this.currentCountryCode === COUNTRY.RU &&\n                    (senderAccount as RegularAccount)?.balance?.currency ===\n                      CURRENCY.RUB &&\n                    IS_RUSSIAN_BUDGET_IBAN_START_INDEX(bankAccount as string) &&\n                    !IS_RUSSIAN_BUDGET_BIC_MIDDLE_INDEX((bank as IBank)?.bic)\n                  ) {\n                    return {\n                      rubBudgetWrongBic: true,\n                    };\n                  }\n                  return null;\n                },\n                () => {\n                  const bank = this.dictionaries.bankDictionary.getItemByKey(\n                    this.form.controls.bank.value?.id,\n                    'id'\n                  );\n\n                  if (bank?.transferAllowed === false) {\n                    return { bankRestricted: true };\n                  }\n\n                  return null;\n                },\n              ]\n              // PaymentAsyncValidators.bankLabelRestricted(\n              //   this.dictionaries,\n              //   this.form.controls.bank\n              // )\n            );\n          }\n          this.clearValidation([\n            this.form.controls.rubNonRussiaCorrespondentBankLabel,\n            this.form.controls.rubNonRussiaCorrespondentIban,\n          ]);\n        }\n      })\n    );\n  }\n\n  private listenRubNonRussiaCorrespondentBank() {\n    this.subs.add(\n      this.controlsStream.rubNonRussiaBank.subscribe((bank) => {\n        if (bank?.cityName) {\n          this.form.controls.cityName.setValue(bank.cityName);\n        }\n      })\n    );\n  }\n\n  // private listenShouldEnterCity() {\n  //   this.subs.add(\n  //     this.shouldEnterCity$.subscribe((shouldEnterCity) => {\n  //       if (shouldEnterCity) {\n  //         this.setValidation(\n  //           [this.form.controls.cityName],\n  //           [Validators.required]\n  //         );\n  //       } else {\n  //         this.clearValidation([this.form.controls.cityName]);\n  //       }\n  //     })\n  //   );\n  // }\n\n  // RUB Payment Rules\n  private applyRubPaymentRules(country: COUNTRY) {\n    if (!country) {\n      return;\n    }\n\n    this.applyRubPurposeRules();\n\n    if (country === COUNTRY.RU) {\n      this.isRubNonRussia$.next(false);\n      this.isRubToRussia$.next(true);\n\n      this.applyRubToRussiaKvoAndKioRules();\n      this.applyRubToRussiaPayCommissionRules();\n    } else {\n      this.isRubNonRussia$.next(true);\n      this.isRubToRussia$.next(false);\n\n      this.applyRubToNonRussiaCorrespondentRules();\n      this.applyRubToNonRussiaKvoAndKioRules();\n    }\n  }\n\n  private applyRubPurposeRules() {\n    this.masks.purpose = Masks.foreignCyrillic;\n  }\n\n  private applyRubToRussiaKvoAndKioRules() {\n    this.isKvoEnabled$.next(true);\n    this.isKioEnabled$.next(true);\n    this.isKppEnabled$.next(true);\n  }\n\n  private applyRubToRussiaPayCommissionRules() {\n    this.canPayCommission = false;\n    this.form.controls.payComission.setValue(false);\n  }\n\n  private applyRubToNonRussiaCorrespondentRules() {\n    this.cityPlaceholder$.next('CURRENCY_PAYMENT.RECIPIENT.CITY_BANK');\n    // this.shouldEnterCity$.next(true);\n    // this.shouldEnterIban$.next(true);\n  }\n\n  private applyRubToNonRussiaKvoAndKioRules() {\n    this.isKvoEnabled$.next(true);\n    this.isKioEnabled$.next(false);\n    this.isKppEnabled$.next(false);\n  }\n\n  // Non Rub Payment Rules\n  private applyDefaultPaymentRules() {\n    this.isRubNonRussia$.next(false);\n\n    this.applyDefaultPaymentPurposeRules();\n    this.applyDefaultPaymentKvoAndKioRules();\n    this.applyDefaultPaymentPayCommissionRules();\n    this.applyDefaultPaymentCodeWordRules();\n  }\n\n  private applyDefaultPaymentPayCommissionRules() {\n    this.canPayCommission = true;\n  }\n\n  private applyDefaultPaymentPurposeRules() {\n    this.masks.purpose = Masks.foreignLatin;\n  }\n\n  private applyDefaultPaymentKvoAndKioRules() {\n    this.isKioEnabled$.next(false);\n    this.isKvoEnabled$.next(false);\n    this.isKppEnabled$.next(false);\n  }\n\n  private applyDefaultPaymentCodeWordRules() {\n    this.isCodeWordEnabled$.next(false);\n  }\n\n  private applyChinaPaymentRules(countryCode: COUNTRY) {\n    if (!countryCode) {\n      this.form.controls.countryCode.setValue(COUNTRY.CN);\n      this.hasDefaultCity = false;\n      this.retrieveCodeWords(COUNTRY.CN);\n    }\n    this.isCodeWordEnabled$.next(true);\n    this.codeWordLabel$.next('CURRENCY_PAYMENT.RECIPIENT.CODEWORD');\n  }\n\n  knpIsChanged() {\n    this.subs.add(\n      combineLatest([\n        this.controlsStream.senderAccount,\n        this.controlsStream.contractId,\n      ]).subscribe((values) => {\n        const validators = [\n          Validators.required,\n          Validators.min(this.paymentsService.rules.minAmount),\n          Validators.max(this.paymentsService.rules.maxAmount),\n          (control: AbstractControl) => {\n            if (control?.value === 0) {\n              return { cantBeZero: true };\n            }\n            return null;\n          },\n        ];\n\n        validators.push((control) => {\n          const numberedAmount = this.maskService.getNumberedAmount(\n            control.value\n          );\n          if (this.isForeignContractDisabled || this.withinContract) {\n            return;\n          } else {\n            if (numberedAmount > this.contractMaxAmount.amount) {\n              if (KNP_WITHOUT_CONTRACT.indexOf(this.formValue.knp) !== -1) {\n                return null;\n              } else {\n                return {\n                  mustIncludeContract: true,\n                };\n              }\n            }\n          }\n          return null;\n        });\n        this.setValidation(\n          [this.form.controls.amount],\n          validators,\n          null,\n          false\n        );\n      })\n    );\n  }\n}\n","import { Location } from '@angular/common';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentsService } from '@payments/services/payments.service';\r\nimport {\r\n  ErrorStateMatcher,\r\n  ShowOnDirtyErrorStateMatcher,\r\n} from '@shared/form-field/utils';\r\nimport { NavService } from '@shared/nav/nav.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CurrencyPaymentComponent } from '../currency-payment/currency-payment.component';\r\n\r\n@Component({\r\n  selector: 'j-currency-payments',\r\n  templateUrl: './currency-payments.component.html',\r\n  styleUrls: ['./currency-payments.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ErrorStateMatcher,\r\n      useClass: ShowOnDirtyErrorStateMatcher,\r\n    },\r\n  ],\r\n})\r\nexport class CurrencyPaymentsComponent implements OnInit, AfterViewInit {\r\n  title$: Observable<string>;\r\n  @ViewChild('paymentComponent') paymentComponent: CurrencyPaymentComponent;\r\n  // get child form controls to activate unsaved changes guard\r\n  formDirective: NgForm;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private navService: NavService,\r\n    private paymentsService: PaymentsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.title$ = this.paymentsService.rootTitle$.pipe(\r\n      map((v) => `CURRENCY_PAYMENT.${v}`)\r\n    );\r\n  }\r\n\r\n  onClose() {\r\n    this.navService.retrieveContractBadges();\r\n    this.navService.retrieveLetterBadges();\r\n    \r\n    this.location.back();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.formDirective = this.paymentComponent.formDirective;\r\n    this.form = this.paymentComponent.form;\r\n  }\r\n\r\n}\r\n","import { CurrencyPaymentsComponent } from './currency-payments/currency-payments.component';\nimport { TengePaymentsComponent } from './tenge-payments/tenge-payments.component';\nimport { TaxPaymentComponent } from './tax-payment/tax-payment.component';\nimport { BudgetPaymentsComponent } from './budget-payments/budget-payments.component';\nimport { PaymentOrderComponent } from './payment-order/payment-order.component';\nimport { PensionPaymentComponent } from './pension-payment/pension-payment.component';\nimport { SocialPaymentComponent } from './social-payment/social-payment.component';\nimport { MedicalPaymentComponent } from './medical-payment/medical-payment.component';\nimport { SalaryPaymentComponent } from './salary-payment/salary-payment.component';\nimport { CurrencyPaymentComponent } from './currency-payment/currency-payment.component';\n\nexport const PAYMENTS_CONTAINERS = [\n  CurrencyPaymentsComponent,\n  CurrencyPaymentComponent,\n\n  TengePaymentsComponent,\n\n  TaxPaymentComponent,\n  BudgetPaymentsComponent,\n  PaymentOrderComponent,\n\n  PensionPaymentComponent,\n  SocialPaymentComponent,\n  MedicalPaymentComponent,\n  SalaryPaymentComponent,\n];\n\nexport * from './currency-payments/currency-payments.component';\nexport * from './tenge-payments/tenge-payments.component';\nexport * from './tax-payment/tax-payment.component';\nexport * from './budget-payments/budget-payments.component';\nexport * from './payment-order/payment-order.component';\nexport * from './pension-payment/pension-payment.component';\nexport * from './social-payment/social-payment.component';\nexport * from './medical-payment/medical-payment.component';\nexport * from './salary-payment/salary-payment.component';\n\n\nexport * from './base-payment.container';\n\n","import { Component, OnInit } from '@angular/core';\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\nimport {\n  SocialPaymentFormModel,\n  MedicalPaymentFormModel,\n} from '@payments/services/form-model';\nimport { PaymentsService } from '@payments/services/payments.service';\nimport {\n  NgbDateParserFormatter,\n  NgbModal,\n  NgbDateStruct,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { AccountsService, RegularAccount } from '@accounts/index';\nimport { tap, map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Employee } from '@shared/employee/employee.model';\nimport { SimpleStore } from '@utils/index';\nimport { PaymentResultComponent } from '@payments/components/payment-result/payment-result.component';\nimport { DictionariesService } from '@shared/services/dictionaries.service';\nimport { CompanyService } from '@company/company.service';\nimport { PAYMENT_TYPE } from '@shared/models';\nimport { PaymentsPipelineService } from '@payments/services/payments-pipeline.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PaymentApiService } from '@payments/services/payment-api.service';\nimport { PaymentsFormFactoryService } from '@payments/services/payments-form-factory.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthorityPermissionsService } from '@authorities/services';\nimport { FeatureFlagsService } from '@feature-flags/index';\nimport { MEDICAL_EMPLOYEE_MAX_AMOUNT, MEDICAL_EMPLOYEE_MIN_AMOUNT } from '@payments/config/amounts';\nimport { BankFromAccountPipe } from '@shared/pipes';\n\n@Component({\n  selector: 'j-medical-payment',\n  templateUrl: './medical-payment.component.html',\n  styleUrls: ['./medical-payment.component.scss'],\n})\nexport class MedicalPaymentComponent\n  extends BasePaymentContainer<MedicalPaymentFormModel>\n  implements OnInit\n{\n  accountStore: SimpleStore<RegularAccount>;\n  acceptableAccounts$: Observable<RegularAccount[]>;\n  masks: {\n    [k in keyof MedicalPaymentFormModel]?: any;\n  } = {\n    number: 'paymentNum',\n    amount: 'amount',\n    knp: 'knp',\n  };\n  dateLimit: {\n    minDate: NgbDateStruct;\n    maxDate: NgbDateStruct;\n  };\n\n  employeeMinAmount = MEDICAL_EMPLOYEE_MIN_AMOUNT;\n  employeeMaxAmount = MEDICAL_EMPLOYEE_MAX_AMOUNT;\n\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    public paymentsService: PaymentsService,\n    public companyService: CompanyService,\n    public dateAdapter: NgbDateParserFormatter,\n    protected maskService: MaskedService,\n    protected accountsService: AccountsService,\n    protected modalService: NgbModal,\n    protected dictionaries: DictionariesService,\n    protected api: PaymentApiService,\n    protected pipeline: PaymentsPipelineService,\n    protected translateService: TranslateService,\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\n    protected authorityPermissionsService: AuthorityPermissionsService,\n    protected featureFlagsService: FeatureFlagsService,\n    protected bankFromAccount: BankFromAccountPipe,\n  ) {\n    super(\n      paymentsFormsFactory.createMedicalForm(),\n      api,\n      route,\n      router,\n      companyService,\n      paymentsService,\n      maskService,\n      modalService,\n      dictionaries,\n      pipeline,\n      translateService,\n      authorityPermissionsService,\n      featureFlagsService,\n      bankFromAccount\n    );\n    this.paymentType = PAYMENT_TYPE.MEDICAL;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.accountStore = this.accountsService.store;\n    this.acceptableAccounts$ = this.paymentsService\n      .combineAcceptableAccounts(this.accountStore)\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\n\n    this.getMaskConfig();\n    this.createControlsStream(this.form);\n\n    this.knp$ = this.combineKNP();\n\n    this.combineEmployeesAmount();\n    this.listenCommission();\n    this.listenTotal();\n    this.provideAmountMessage();\n    this.listenDateMessageStream();\n    this.listenPurposeMessageStream();\n  }\n}\n","import { AccountsService, RegularAccount } from '@accounts/index';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '@company/company.service';\r\nimport {\r\n  Recipient,\r\n  RecipientAccount,\r\n} from '@company/recipient/recipient.model';\r\nimport {\r\n  NgbDateParserFormatter,\r\n  NgbModal,\r\n  NgbTypeahead,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { RecipientsDictionaryComponent } from '@payments/components/recipients-dictionary/recipients-dictionary.component';\r\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\r\nimport { OrderPaymentFormModel } from '@payments/services/form-model';\r\nimport { PaymentsPipelineService } from '@payments/services/payments-pipeline.service';\r\nimport { PaymentsService } from '@payments/services/payments.service';\r\nimport { MaskedService } from '@shared/masked/masked.service';\r\nimport { DictionariesService } from '@shared/services/dictionaries.service';\r\nimport { SimpleStore } from '@utils/index';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  Observable,\r\n  EMPTY,\r\n  of,\r\n  Subject,\r\n  merge,\r\n} from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  filter,\r\n  map,\r\n  take,\r\n  tap,\r\n  startWith,\r\n  switchMap,\r\n  distinctUntilChanged,\r\n  catchError,\r\n  withLatestFrom,\r\n  debounce,\r\n  finalize,\r\n} from 'rxjs/operators';\r\nimport {\r\n  IFxContract,\r\n  IFxContractRecipient,\r\n  KNP,\r\n  PAYMENT_TYPE,\r\n  User,\r\n} from '@shared/models';\r\nimport { PaymentApiService } from '@payments/services/payment-api.service';\r\nimport { RecipientsService, ICounterParty } from '@company/recipients.service';\r\nimport { PaymentsFormFactoryService } from '@payments/services/payments-form-factory.service';\r\nimport { JSelectComponent } from '@shared/select-module/select.component';\r\nimport {\r\n  FxContractDetailsComponent,\r\n  IinCheckErrorComponent,\r\n  KnpDictionaryComponent,\r\n} from '@payments/components';\r\nimport { UserService } from '@shared/services';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Account } from '@home/models/account';\r\nimport { AuthorityPermissionsService } from '@authorities/services';\r\nimport { FeatureFlagsService } from '@feature-flags/index';\r\nimport { ContractsModalsService } from '@contracts/services';\r\nimport { CurrencyPaymentService } from '@payments/services';\r\nimport { Validators } from '@angular/forms';\r\nimport { CURRENCY } from '@core/models';\r\nimport { BankFromAccountPipe } from '@shared/pipes';\r\n\r\nenum COUNTER_PARTY_STATUS {\r\n  SUCCESS = 'SUCCESS',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\n@Component({\r\n  selector: 'j-payment-order',\r\n  templateUrl: './payment-order.component.html',\r\n  styleUrls: ['./payment-order.component.scss'],\r\n})\r\nexport class PaymentOrderComponent\r\n  extends BasePaymentContainer<OrderPaymentFormModel>\r\n  implements OnInit, OnDestroy\r\n{\r\n  acceptableAccounts$: Observable<RegularAccount[]>;\r\n  accountStore: SimpleStore<RegularAccount>;\r\n\r\n  rules: PaymentsService['rules'];\r\n\r\n  loadingByiin$: Observable<boolean>;\r\n  selectedAccount$: Observable<Account>;\r\n\r\n  isCounterPartyLoading$ = new BehaviorSubject<string | null>(null);\r\n  isContractApplyable$: Observable<boolean>;\r\n\r\n  masks: {\r\n    [k in keyof OrderPaymentFormModel]?: any;\r\n  } = {\r\n    iinOrBin: 'iin',\r\n    bankAccount: 'tengeAccount',\r\n    kbeCode: 'kbe',\r\n    knp: 'knp',\r\n    number: 'paymentNum',\r\n    amount: 'amount',\r\n  };\r\n\r\n  riskGroups: { id: string; name: string }[] = [];\r\n  user: User;\r\n  counterPartyStatus = COUNTER_PARTY_STATUS;\r\n  counterParty$ = new BehaviorSubject<COUNTER_PARTY_STATUS>(null);\r\n\r\n  focusEmail$ = new Subject<string>();\r\n  prevEmails$ = new BehaviorSubject([]);\r\n  fetchingEmailsFor$ = new BehaviorSubject(null);\r\n\r\n  search: (text$: Observable<string>) => Observable<any>;\r\n\r\n  @ViewChild('emailOnSuccess', { static: true }) emailOnSuccess: NgbTypeahead;\r\n  iinIsNotOwn;\r\n  iinIsSubmitted$ = new BehaviorSubject<boolean>(null);\r\n  iinIsFound$ = new BehaviorSubject<boolean>(null);\r\n\r\n  isFxContractsLoading = true;\r\n  fxContracts: IFxContract[] = [];\r\n\r\n  @ViewChild('contractDetails')\r\n  contractDetails: FxContractDetailsComponent;\r\n\r\n  constructor(\r\n    public companyService: CompanyService,\r\n    public paymentsService: PaymentsService,\r\n    public maskService: MaskedService,\r\n\r\n    protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    protected api: PaymentApiService,\r\n    protected dictionaries: DictionariesService,\r\n    protected translateService: TranslateService,\r\n    protected authorityPermissionsService: AuthorityPermissionsService,\r\n    protected featureFlagsService: FeatureFlagsService,\r\n    protected bankFromAccount: BankFromAccountPipe,\r\n\r\n    private accountsService: AccountsService,\r\n    private modalService: NgbModal,\r\n    private pipelines: PaymentsPipelineService,\r\n    private paymentsFormsFactory: PaymentsFormFactoryService,\r\n\r\n    private recipientsService: RecipientsService,\r\n    private userService: UserService,\r\n    private contractsModalsService: ContractsModalsService,\r\n    private currencyPaymentService: CurrencyPaymentService\r\n  ) {\r\n    super(\r\n      paymentsFormsFactory.createPaymentInTengeForm(),\r\n      api,\r\n      route,\r\n      router,\r\n      companyService,\r\n      paymentsService,\r\n      maskService,\r\n      modalService,\r\n      dictionaries,\r\n      pipelines,\r\n      translateService,\r\n      authorityPermissionsService,\r\n      featureFlagsService,\r\n      bankFromAccount\r\n    );\r\n    this.paymentType = PAYMENT_TYPE.REGULAR_PAYMENT_ORDER;\r\n    this.user = this.userService.user;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.dateLimit = this.paymentsService.stdDateRangeNgb;\r\n    this.accountStore = this.accountsService.store;\r\n    this.acceptableAccounts$ = this.paymentsService\r\n      .combineAcceptableAccounts(this.accountStore)\r\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\r\n\r\n    this.knp$ = this.combineKNP([\r\n      (knps) =>\r\n        this.dictionaries.selectByPaymentType(knps, {\r\n          type: PAYMENT_TYPE.REGULAR_PAYMENT_ORDER,\r\n          sortFavourite: true,\r\n        }),\r\n    ]);\r\n    this.listenWorkingDays();\r\n    this.getMaskConfig();\r\n    this.createControlsStream(this.form);\r\n    this.listenVAT();\r\n    this.listenCommission();\r\n    this.listenTotal();\r\n    this.provideAmountMessage();\r\n    this.listenDateMessageStream();\r\n    this.listenPurposeMessageStream();\r\n    this.listenEmailSearch();\r\n    this.retrieveContracts();\r\n\r\n    const { bankAccount, senderAccount } = this.controlsStream;\r\n    this.subs.add(\r\n      combineLatest([\r\n        bankAccount.pipe(\r\n          filter((v) => this.form.controls.bankAccount.valid),\r\n          startWith('')\r\n        ),\r\n        senderAccount.pipe(\r\n          filter((v) => this.form.controls.senderAccount.valid),\r\n          map((a) => a.iban),\r\n          startWith('')\r\n        ),\r\n      ])\r\n        .pipe(\r\n          map(([payerIban, senderAccount]) =>\r\n            this.paymentsService.checkPaymentTypeFromIban(\r\n              senderAccount,\r\n              'KZ' + payerIban\r\n            )\r\n          )\r\n        )\r\n        .subscribe((t) => (this.paymentType = t))\r\n    );\r\n\r\n    this.applyCounterAgentVerification();\r\n    this.applyContractApplyableRule();\r\n    this.applyContractValidationRule();\r\n  }\r\n\r\n  openSavedPayments() {\r\n    this.modalService\r\n      .open(RecipientsDictionaryComponent, {\r\n        backdropClass: 'backdrop_light',\r\n        windowClass: 'modal_light modal_max-height',\r\n        centered: true,\r\n      })\r\n      .result.then(\r\n        ({\r\n          recipient,\r\n          account,\r\n        }: {\r\n          recipient: Recipient;\r\n          account: RecipientAccount;\r\n        }) => {\r\n          this.form.patchValue({\r\n            bankAccount: account.iban,\r\n            iinOrBin: recipient.iinOrBin,\r\n            name: recipient.name,\r\n            kbeCode: recipient.kbe.code,\r\n          });\r\n          this.form.markAsDirty();\r\n        }\r\n      )\r\n      .catch(() => {\r\n        /*  no selection or dismiss */\r\n      });\r\n  }\r\n\r\n  onEmailOnSuccessFocus(event: FocusEvent) {\r\n    this.focusEmail$.next((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  openContractsAddingModal(event: Event = null) {\r\n    event?.preventDefault();\r\n    this.contractsModalsService.showAddContractModal(false);\r\n  }\r\n\r\n  showContractDetails(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.contractDetails.show();\r\n  }\r\n\r\n  retrieveContracts() {\r\n    this.subs.add(\r\n      this.api\r\n        .getFxContracts()\r\n        .pipe(\r\n          finalize(() => {\r\n            this.isFxContractsLoading = false;\r\n          }),\r\n          map((contracts) =>\r\n            contracts.filter((contract) =>\r\n              contract.permittedCurrencies.includes(CURRENCY.KZT)\r\n            )\r\n          )\r\n        )\r\n        .subscribe((contracts) => {\r\n          this.fxContracts = contracts;\r\n        })\r\n    );\r\n  }\r\n\r\n  async onContractSelect(selected: IFxContract) {\r\n    const { contract, contractId } = this.form.controls;\r\n\r\n    const loaded = await this.currencyPaymentService.getContractById(\r\n      selected.id\r\n    );\r\n\r\n    Object.assign(selected, loaded);\r\n\r\n    contract.setValue(selected);\r\n    contractId.setValue(selected.id);\r\n\r\n    let recipientToSelect = selected.recipients?.find(\r\n      (recipient) => recipient.primary\r\n    );\r\n\r\n    const { fxContractRecipient, fxContractRecipientId } =\r\n      this.form.getRawValue();\r\n\r\n    if (!fxContractRecipient && !fxContractRecipientId && recipientToSelect) {\r\n      this.selectContractRecipient(recipientToSelect);\r\n      return;\r\n    }\r\n\r\n    const foundRecipient = selected.recipients?.find(\r\n      (recipient) =>\r\n        fxContractRecipient?.id === recipient.id ||\r\n        fxContractRecipientId === recipient.id\r\n    );\r\n\r\n    if (foundRecipient) {\r\n      recipientToSelect = foundRecipient;\r\n    }\r\n\r\n    this.selectContractRecipient(recipientToSelect);\r\n  }\r\n\r\n  selectContractRecipient(recipient: IFxContractRecipient) {\r\n    if (!recipient) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      // name,\r\n      // bankAccount,\r\n      fxContractRecipient,\r\n      fxContractRecipientId,\r\n    } = this.form.controls;\r\n\r\n    fxContractRecipient.setValue(recipient);\r\n    fxContractRecipientId.setValue(recipient.id);\r\n\r\n    // name.setValue(recipient.name || '');\r\n\r\n    // if (recipient.iban) {\r\n    // bankAccount.setValue(recipient.iban);\r\n    // }\r\n  }\r\n\r\n  public openKnpDictionary(select: JSelectComponent, event: Event) {\r\n    select.close();\r\n    select.blur();\r\n    setTimeout(() => {\r\n      const modalRef = this.modals.open(KnpDictionaryComponent, {\r\n        backdropClass: 'backdrop_light',\r\n        windowClass: 'modal_light modal_max-height',\r\n        centered: true,\r\n      });\r\n\r\n      modalRef.componentInstance.paymentType =\r\n        PAYMENT_TYPE.REGULAR_PAYMENT_ORDER;\r\n      modalRef.result\r\n        .then((item: KNP) => {\r\n          this.form.controls.knp.patchValue(item.code);\r\n          // trigger cd to update dynamic bottom form field slot\r\n          // this.form.controls.purpose.patchValue(\r\n          //   this.form.controls.purpose.value\r\n          // );\r\n        })\r\n        .catch(() => {\r\n          /*  no selection or dismiss */\r\n        });\r\n    }, 0);\r\n  }\r\n\r\n  private applyContractApplyableRule() {\r\n    this.isContractApplyable$ = this.controlsStream.kbeCode.pipe(\r\n      map((kbe) => {\r\n        return kbe && kbe[0] !== this.companyService.currentCompany.kod[0];\r\n      })\r\n    );\r\n  }\r\n\r\n  private applyContractValidationRule() {\r\n    this.subs.add(\r\n      this.controlsStream.withinContract.subscribe((withinContract) => {\r\n        if (withinContract) {\r\n          this.form.controls.contract.setValidators(Validators.required);\r\n        } else {\r\n          this.form.controls.contract.clearValidators();\r\n        }\r\n\r\n        this.form.controls.contract.updateValueAndValidity();\r\n      })\r\n    );\r\n  }\r\n\r\n  private applyCounterAgentVerification() {\r\n    const { iinOrBin } = this.form.controls;\r\n    this.subs.add(\r\n      this.controlsStream.iinOrBin\r\n        .pipe(\r\n          distinctUntilChanged(),\r\n          debounceTime(300),\r\n          switchMap((bin) => {\r\n            this.counterParty$.next(null);\r\n            this.iinIsFound$.next(null);\r\n            this.iinIsSubmitted$.next(null);\r\n            if (iinOrBin.valid) {\r\n              this.iinIsNotOwn = this.user.iin !== bin;\r\n              this.isCounterPartyLoading$.next(bin);\r\n            }\r\n            this.isCounterPartyLoading$.next(null);\r\n            return of(null);\r\n          })\r\n        )\r\n        .subscribe((counterPartyResult) => {\r\n          counterPartyResult && this.checkCounterParty(counterPartyResult);\r\n          this.isCounterPartyLoading$.next(null);\r\n        })\r\n    );\r\n  }\r\n\r\n  private checkCounterParty(counterPartyResult: ICounterParty) {\r\n    if (counterPartyResult.companyInfo?.name) {\r\n      this.form.controls.name.setValue(counterPartyResult.companyInfo?.name);\r\n    }\r\n    if (counterPartyResult.riskGroups) {\r\n      this.riskGroups = counterPartyResult.riskGroups;\r\n    }\r\n\r\n    this.counterParty$.next(\r\n      counterPartyResult.riskGroups?.length === 0\r\n        ? this.counterPartyStatus.SUCCESS\r\n        : this.counterPartyStatus.ERROR\r\n    );\r\n  }\r\n\r\n  private listenEmailSearch() {\r\n    const { emailOnSuccess } = this.form.controls;\r\n    this.subs.add(\r\n      this.controlsStream.notify\r\n        .pipe(debounceTime(100))\r\n        .subscribe((v) =>\r\n          v ? emailOnSuccess.enable() : emailOnSuccess.disable()\r\n        )\r\n    );\r\n    this.subs.add(\r\n      this.controlsStream.iinOrBin\r\n        .pipe(\r\n          debounceTime(200),\r\n          filter((iinOrBin) => this.form.controls.iinOrBin.valid),\r\n          switchMap((iinOrBin) => {\r\n            this.fetchingEmailsFor$.next(iinOrBin);\r\n            this.prevEmails$.next([]);\r\n            return this.recipientsService\r\n              .getPrevNotifications(iinOrBin)\r\n              .catch((e) => []);\r\n          })\r\n        )\r\n        .subscribe((emails) => {\r\n          this.prevEmails$.next(emails);\r\n          this.fetchingEmailsFor$.next(null);\r\n        })\r\n    );\r\n    this.search = (text$: Observable<string>) => {\r\n      return combineLatest([\r\n        this.prevEmails$.pipe(\r\n          map((emails) => emails.map((emailEntity) => emailEntity.email))\r\n        ),\r\n        text$.pipe(debounceTime(200), distinctUntilChanged(), startWith('')),\r\n        this.focusEmail$,\r\n      ]).pipe(\r\n        map(([emails, term, focus]) => {\r\n          if (term) {\r\n            return emails\r\n              .filter(\r\n                (item) => item.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n              )\r\n              .slice(0, 3);\r\n          } else {\r\n            return emails.slice(0, 3);\r\n          }\r\n        })\r\n      );\r\n    };\r\n  }\r\n\r\n  async checkIin() {\r\n    this.riskGroups = [];\r\n    this.iinIsSubmitted$.next(true);\r\n    const iinOrBin = this.form.controls.iinOrBin.value;\r\n    this.isCounterPartyLoading$.next(iinOrBin);\r\n    this.recipientsService\r\n      .checkCounterParty(iinOrBin)\r\n      .then(async (counterPartyResult) => {\r\n        counterPartyResult && this.checkCounterParty(counterPartyResult);\r\n        await this.successfulCounterPartyResult();\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        this.iinIsSubmitted$.next(null);\r\n        this.iinIsFound$.next(null);\r\n        this.isCounterPartyLoading$.next(null);\r\n        this.showSignError();\r\n      });\r\n  }\r\n  private async showSignError() {\r\n    return this.modalService.open(IinCheckErrorComponent, {\r\n      backdropClass: 'backdrop_light',\r\n      windowClass: 'modal_light modal_max-height',\r\n      centered: true,\r\n    }).result;\r\n  }\r\n  async successfulCounterPartyResult() {\r\n    this.iinIsSubmitted$.next(null);\r\n    this.iinIsFound$.next(true);\r\n    this.isCounterPartyLoading$.next(null);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RegularAccount, AccountsService } from '@accounts/index';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { Employee } from '@shared/employee/employee.model';\nimport { DictionariesService } from '@shared/services';\nimport { PAYMENT_TYPE } from '@shared/models';\n\nimport { SimpleStore } from '@utils/index';\n\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\nimport {\n  PensionPaymentFormModel,\n  PaymentsService,\n  PaymentsPipelineService,\n  PaymentApiService,\n  PaymentsFormFactoryService,\n} from '@payments/services';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthorityPermissionsService } from '@authorities/services';\nimport { FeatureFlagsService } from '@feature-flags/index';\nimport {\n  PENSION_EMPLOYEE_MAX_AMOUNT,\n  PENSION_EMPLOYEE_MIN_AMOUNT,\n} from '@payments/config/amounts';\nimport { BankFromAccountPipe } from '@shared/pipes';\n\n@Component({\n  selector: 'j-pension-payment',\n  templateUrl: './pension-payment.component.html',\n  styleUrls: ['./pension-payment.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PensionPaymentComponent\n  extends BasePaymentContainer<PensionPaymentFormModel>\n  implements OnInit, OnDestroy\n{\n  acceptableAccounts$: Observable<RegularAccount[]>;\n  accountStore: SimpleStore<RegularAccount>;\n\n  rules: PaymentsService['rules'];\n  masks: {\n    [k in keyof PensionPaymentFormModel]?: any;\n  } = {\n    number: 'paymentNum',\n    amount: 'amount',\n    knp: 'knp',\n  };\n\n  employeeMinAmount = PENSION_EMPLOYEE_MIN_AMOUNT;\n  employeeMaxAmount = PENSION_EMPLOYEE_MAX_AMOUNT;\n\n  readonly employees$ = new BehaviorSubject<Employee[]>([]);\n  readonly amount$ = new BehaviorSubject<number>(0);\n  readonly subs = new Subscription();\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    public paymentsService: PaymentsService,\n    public companyService: CompanyService,\n    public dateAdapter: NgbDateParserFormatter,\n    public maskService: MaskedService,\n    private accountsService: AccountsService,\n    private modalService: NgbModal,\n    protected dictionaries: DictionariesService,\n    protected api: PaymentApiService,\n    protected pipeline: PaymentsPipelineService,\n    protected translateService: TranslateService,\n    protected authorityPermissionsService: AuthorityPermissionsService,\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\n    protected featureFlagsService: FeatureFlagsService,\n    protected bankFromAccount: BankFromAccountPipe,\n  ) {\n    super(\n      paymentsFormsFactory.createPensionForm(),\n      api,\n      route,\n      router,\n      companyService,\n      paymentsService,\n      maskService,\n      modalService,\n      dictionaries,\n      pipeline,\n      translateService,\n      authorityPermissionsService,\n      featureFlagsService,\n      bankFromAccount\n    );\n    this.paymentType = PAYMENT_TYPE.PENSION;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.accountStore = this.accountsService.store;\n    this.acceptableAccounts$ = this.paymentsService\n      .combineAcceptableAccounts(this.accountStore)\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\n\n    this.getMaskConfig();\n    this.createControlsStream(this.form);\n\n    this.knp$ = this.combineKNP();\n\n    this.combineEmployeesAmount();\n    this.listenCommission();\n    this.listenTotal();\n    this.provideAmountMessage();\n    this.listenDateMessageStream();\n    this.listenPurposeMessageStream();\n  }\n\n  // sendPayment() {\n  //   this.pipeline.processPayment({\n  //     rawBody: {\n  //       ...this.form.value,\n  //       purpose: [this.form.value.purpose, this.purposeMessage$.getValue()]\n  //         .filter((v) => !!v)\n  //         .join('; '),\n  //     },\n  //     total: this.total$.getValue(),\n  //     commission: this.commission$.getValue(),\n  //   });\n  // }\n\n  // onEmployeeUpdate(items: Employee[]) {\n  //   this.form.controls.employees.patchValue(items);\n  //   // this.employees$.next(items);\n  // }\n\n  // onEmployeeAdded(items: Employee[]) {\n  //   this.formDirective.resetForm(this.formDirective.value)\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { tap, map, distinctUntilChanged, withLatestFrom } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n  NgbDateParserFormatter,\n  NgbModal,\n  NgbDateStruct,\n} from '@ng-bootstrap/ng-bootstrap';\n\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { DictionariesService } from '@shared/services/dictionaries.service';\nimport { PAYMENT_TYPE, Bank } from '@shared/models';\n\nimport { SimpleStore, EntitiesStore } from '@utils/index';\n\nimport { AccountsService, RegularAccount } from '@accounts/index';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { PaymentsService } from '@payments/services/payments.service';\nimport { PaymentApiService } from '@payments/services/payment-api.service';\nimport { PaymentsPipelineService } from '@payments/services/payments-pipeline.service';\nimport { PaymentsFormFactoryService } from '@payments/services/payments-form-factory.service';\n\nimport { SalaryPaymentFormModel } from '@payments/services/form-model';\n\nimport { BanksReceiversComponent } from '@payments/components/banks-receivers/banks-receivers.component';\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthorityPermissionsService } from '@authorities/services';\nimport { FeatureFlagsService } from '@feature-flags/index';\n\nimport {\n  SALARY_EMPLOYEE_MAX_AMOUNT,\n  SALARY_EMPLOYEE_MIN_AMOUNT,\n} from '@payments/config/amounts';\nimport { BankFromAccountPipe } from '@shared/pipes';\n\n@Component({\n  selector: 'j-salary-payment',\n  templateUrl: './salary-payment.component.html',\n  styleUrls: ['./salary-payment.component.scss'],\n})\nexport class SalaryPaymentComponent\n  extends BasePaymentContainer<SalaryPaymentFormModel>\n  implements OnInit\n{\n  accountStore: SimpleStore<RegularAccount>;\n  banks: EntitiesStore<Bank>;\n  acceptableAccounts$: Observable<RegularAccount[]>;\n  masks: {\n    [k in keyof SalaryPaymentFormModel]?: any;\n  } = {\n    number: 'paymentNum',\n    amount: 'amount',\n    knp: 'knp',\n    bankAccount: 'tengeAccount',\n  };\n  dateLimit: {\n    minDate: NgbDateStruct;\n    maxDate: NgbDateStruct;\n  };\n\n  employeeMinAmount = SALARY_EMPLOYEE_MIN_AMOUNT;\n  employeeMaxAmount = SALARY_EMPLOYEE_MAX_AMOUNT;\n\n  constructor(\n    public paymentsService: PaymentsService,\n    public companyService: CompanyService,\n    public dateAdapter: NgbDateParserFormatter,\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected maskService: MaskedService,\n    protected accountsService: AccountsService,\n    protected modalService: NgbModal,\n    protected api: PaymentApiService,\n    protected dictionaries: DictionariesService,\n    protected pipeline: PaymentsPipelineService,\n    protected translateService: TranslateService,\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\n    protected authorityPermissionsService: AuthorityPermissionsService,\n    protected featureFlagsService: FeatureFlagsService,\n    protected bankFromAccount: BankFromAccountPipe,\n  ) {\n    super(\n      paymentsFormsFactory.createSalaryForm(),\n      api,\n      route,\n      router,\n      companyService,\n      paymentsService,\n      maskService,\n      modalService,\n      dictionaries,\n      pipeline,\n      translateService,\n      authorityPermissionsService,\n      featureFlagsService,\n      bankFromAccount\n    );\n    this.paymentType = PAYMENT_TYPE.SALARY;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.banks = this.dictionaries.bankDictionary;\n    this.dateLimit = this.paymentsService.stdDateRangeNgb;\n    this.accountStore = this.accountsService.store;\n    this.acceptableAccounts$ = this.paymentsService\n      .combineAcceptableAccounts(this.accountStore)\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\n    this.getMaskConfig();\n    this.createControlsStream(this.form);\n    this.listenWorkingDays();\n    this.combineEmployeesAmount();\n    this.listenCommission();\n    this.listenTotal();\n    this.provideAmountMessage();\n    this.listenDateMessageStream();\n    this.listenPurposeMessageStream();\n\n    this.knp$ = this.dictionaries.KNPDictionary.items$;\n\n    this.subs.add(\n      this.controlsStream.bankReceiver\n        .pipe(\n          withLatestFrom(this.banks.entities$),\n          map(([id, entities]) => id && entities[id]),\n          distinctUntilChanged()\n        )\n        .subscribe((bank) => {\n          const { bankAccount } = this.form.controls;\n          if (!bank || (bank.salaryTransitIban && bankAccount.enabled)) {\n            bankAccount.disable();\n            bankAccount.patchValue('');\n          } else if (bank && !bank.salaryTransitIban && bankAccount.disabled) {\n            // bankAccount.patchValue('');\n            bankAccount.enable();\n          } else if (bank) {\n            bankAccount.updateValueAndValidity();\n          }\n        })\n    );\n  }\n\n  // onEmployeeUpdate(items: Employee[]) {}\n\n  // onEmployeeAdded(items: Employee[]) {\n  //   this.formDirective.resetForm(this.formDirective.value);\n  // }\n\n  public openBanksDictionary() {\n    this.modals\n      .open(BanksReceiversComponent, {\n        backdropClass: 'backdrop_light',\n        windowClass: 'modal_light modal_max-height',\n        centered: true,\n      })\n      .result.then(\n        (item: Bank) =>\n          item && this.form.controls.bankReceiver.patchValue(item.id)\n      )\n      .catch(() => {\n        /*  no selection or dismiss */\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\nimport { SocialPaymentFormModel } from '@payments/services/form-model';\nimport { PaymentsService } from '@payments/services/payments.service';\nimport {\n  NgbDateParserFormatter,\n  NgbModal,\n  NgbDateStruct,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { AccountsService, RegularAccount } from '@accounts/index';\nimport { tap, map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Employee } from '@shared/employee/employee.model';\nimport { SimpleStore } from '@utils/index';\nimport { PaymentResultComponent } from '@payments/components/payment-result/payment-result.component';\nimport { DictionariesService } from '@shared/services/dictionaries.service';\nimport { CompanyService } from '@company/company.service';\nimport { PAYMENT_TYPE } from '@shared/models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PaymentApiService } from '@payments/services/payment-api.service';\nimport { PaymentsPipelineService } from '@payments/services/payments-pipeline.service';\nimport { PaymentsFormFactoryService } from '@payments/services/payments-form-factory.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthorityPermissionsService } from '@authorities/services';\nimport { FeatureFlagsService } from '@feature-flags/index';\n\nimport {\n  SOCIAL_EMPLOYEE_MAX_AMOUNT,\n  SOCIAL_EMPLOYEE_MIN_AMOUNT,\n} from '@payments/config/amounts';\nimport { BankFromAccountPipe } from '@shared/pipes';\n\n@Component({\n  selector: 'j-social-payment',\n  templateUrl: './social-payment.component.html',\n  styleUrls: ['./social-payment.component.scss'],\n})\nexport class SocialPaymentComponent\n  extends BasePaymentContainer<SocialPaymentFormModel>\n  implements OnInit\n{\n  accountStore: SimpleStore<RegularAccount>;\n  acceptableAccounts$: Observable<RegularAccount[]>;\n  masks: {\n    [k in keyof SocialPaymentFormModel]?: any;\n  } = {\n    number: 'paymentNum',\n    amount: 'amount',\n    knp: 'knp',\n  };\n  dateLimit: {\n    minDate: NgbDateStruct;\n    maxDate: NgbDateStruct;\n  };\n\n  employeeMinAmount = SOCIAL_EMPLOYEE_MIN_AMOUNT;\n  employeeMaxAmount = SOCIAL_EMPLOYEE_MAX_AMOUNT;\n\n  constructor(\n    public paymentsService: PaymentsService,\n    public companyService: CompanyService,\n    public dateAdapter: NgbDateParserFormatter,\n    protected route: ActivatedRoute,\n    protected router: Router,\n\n    protected maskService: MaskedService,\n    protected accountsService: AccountsService,\n    protected modalService: NgbModal,\n    protected api: PaymentApiService,\n    protected dictionaries: DictionariesService,\n    protected pipeline: PaymentsPipelineService,\n    protected translateService: TranslateService,\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\n    protected featureFlagsService: FeatureFlagsService,\n    protected authorityPermissionsService: AuthorityPermissionsService,\n    protected bankFromAccount: BankFromAccountPipe\n  ) {\n    super(\n      paymentsFormsFactory.createSocialForm(),\n      api,\n      route,\n      router,\n      companyService,\n      paymentsService,\n      maskService,\n      modalService,\n      dictionaries,\n      pipeline,\n      translateService,\n      authorityPermissionsService,\n      featureFlagsService,\n      bankFromAccount\n    );\n    this.paymentType = PAYMENT_TYPE.SOCIAL;\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.dateLimit = this.paymentsService.stdDateRangeNgb;\n    this.accountStore = this.accountsService.store;\n    this.acceptableAccounts$ = this.paymentsService\n      .combineAcceptableAccounts(this.accountStore)\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\n    this.getMaskConfig();\n    this.createControlsStream(this.form);\n    this.listenWorkingDays();\n    this.combineEmployeesAmount();\n    this.listenCommission();\n    this.listenTotal();\n    this.provideAmountMessage();\n    this.listenDateMessageStream();\n    this.listenPurposeMessageStream();\n\n    this.knp$ = this.combineKNP();\n  }\n\n  // onEmployeeUpdate(items: Employee[]) {}\n\n  // onEmployeeAdded(items: Employee[]) {\n  //   this.formDirective.resetForm(this.formDirective.value)\n  // }\n}\n","import { RegularAccount, AccountsService } from '@accounts/index';\r\nimport {\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport {\r\n  NgbDateParserFormatter,\r\n  NgbDateStruct,\r\n  NgbModal,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { BasePaymentContainer } from '@payments/containers/base-payment.container';\r\nimport { GenericDictionaryComponent } from '@payments/components/generic-dictionary/generic-dictionary.component';\r\nimport { UgdDictionaryComponent } from '@payments/components/ugd-dictionary/ugd-dictionary.component';\r\nimport { TaxPaymentFormModel } from '@payments/services/form-model';\r\nimport { PaymentsService } from '@payments/services/payments.service';\r\nimport { MaskedService } from '@shared/masked/masked.service';\r\nimport { KBK, KNP, UGD } from '@shared/models/dictionary';\r\nimport { SimpleStore } from '@utils/index';\r\nimport {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subscription,\r\n  combineLatest,\r\n} from 'rxjs';\r\nimport {\r\n  tap,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  throttleTime,\r\n  map,\r\n} from 'rxjs/operators';\r\nimport { DictionariesService } from '@shared/services/dictionaries.service';\r\nimport { CompanyService } from '@company/company.service';\r\nimport { PAYMENT_TYPE, SPECIAL_ACCOUNTS } from '@shared/models';\r\nimport { FocusableContainerDirective } from '@shared/directives';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { PaymentsPipelineService } from '@payments/services/payments-pipeline.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PaymentApiService } from '@payments/services/payment-api.service';\r\nimport { PaymentsFormFactoryService } from '@payments/services/payments-form-factory.service';\r\nimport { JSelectComponent } from '@shared/select-module/select.component';\r\nimport { KnpDictionaryComponent } from '@payments/components';\r\nimport { AuthorityPermissionsService } from '@authorities/services';\r\nimport { FeatureFlagsService } from '@feature-flags/index';\r\nimport { BankFromAccountPipe } from '@shared/pipes';\r\n\r\n@Component({\r\n  selector: 'j-tax-payment',\r\n  templateUrl: './tax-payment.component.html',\r\n  styleUrls: ['./tax-payment.component.scss'],\r\n})\r\nexport class TaxPaymentComponent\r\n  extends BasePaymentContainer<TaxPaymentFormModel>\r\n  implements OnInit, OnDestroy\r\n{\r\n  @ViewChild(NgForm)\r\n  ngForm: NgForm;\r\n  @ViewChild(FocusableContainerDirective)\r\n  focusableContainer: FocusableContainerDirective;\r\n\r\n  @ViewChild('vinTpl', { read: TemplateRef })\r\n  vinTpl: TemplateRef<any>;\r\n  @ViewChild('protocolNumberTpl', { read: TemplateRef })\r\n  protocolNumberTpl: TemplateRef<any>;\r\n\r\n  associatedFieldTpl: TemplateRef<any> = undefined;\r\n\r\n  accountStore: SimpleStore<RegularAccount>;\r\n  acceptableAccounts$: Observable<RegularAccount[]>;\r\n  masks: {\r\n    [k in keyof TaxPaymentFormModel]?: any;\r\n  } = {\r\n    number: 'paymentNum',\r\n    amount: 'amount',\r\n    vin: 'vin',\r\n    knp: 'knp',\r\n    kbk: 'kbk',\r\n    protocolNumber: 'protocol',\r\n    bankAccount: 'tengeAccount',\r\n  };\r\n  dateLimit: {\r\n    minDate: NgbDateStruct;\r\n    maxDate: NgbDateStruct;\r\n  };\r\n\r\n  // selectedAccount$: Observable<Account>;\r\n  commission$ = new BehaviorSubject(0);\r\n\r\n  controlsStream: {\r\n    [k in keyof TaxPaymentFormModel]: Observable<TaxPaymentFormModel[k]>;\r\n  };\r\n\r\n  protocolMessage$ = new BehaviorSubject('');\r\n  filteredKnpList: KNP[];\r\n  vinLength = 17;\r\n\r\n  readonly subs = new Subscription();\r\n  constructor(\r\n    protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    public paymentsService: PaymentsService,\r\n    public companyService: CompanyService,\r\n    public dateAdapter: NgbDateParserFormatter,\r\n    public maskService: MaskedService,\r\n    public translate: TranslateService,\r\n    public datePipe: DatePipe,\r\n    private accountsService: AccountsService,\r\n    private modalService: NgbModal,\r\n    private pipelines: PaymentsPipelineService,\r\n    protected api: PaymentApiService,\r\n    protected dictionaries: DictionariesService,\r\n    protected featureFlagsService: FeatureFlagsService,\r\n    protected paymentsFormsFactory: PaymentsFormFactoryService,\r\n    protected authorityPermissionsService: AuthorityPermissionsService,\r\n    protected bankFromAccount: BankFromAccountPipe\r\n  ) {\r\n    super(\r\n      paymentsFormsFactory.createTaxForm(),\r\n      api,\r\n      route,\r\n      router,\r\n      companyService,\r\n      paymentsService,\r\n      maskService,\r\n      modalService,\r\n      dictionaries,\r\n      pipelines,\r\n      translate,\r\n      authorityPermissionsService,\r\n      featureFlagsService,\r\n      bankFromAccount\r\n    );\r\n    this.paymentType = PAYMENT_TYPE.TAX;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.dateLimit = this.paymentsService.stdDateRangeNgb;\r\n\r\n    this.accountStore = this.accountsService.store;\r\n    this.acceptableAccounts$ = this.paymentsService\r\n      .combineAcceptableAccounts(this.accountStore)\r\n      .pipe(tap((next) => this.checkPersonalAccounts(next)));\r\n\r\n    this.getMaskConfig();\r\n    this.createControlsStream(this.form);\r\n\r\n    this.combineKBK(this.paymentType);\r\n    this.knp$ = this.combineKNP([\r\n      (knps) =>\r\n        this.dictionaries.selectByPaymentType(knps, {\r\n          type: PAYMENT_TYPE.TAX,\r\n          sortFavourite: false,\r\n        }),\r\n    ]);\r\n\r\n    this.listenWorkingDays();\r\n    this.listenCommission();\r\n    this.listenTotal();\r\n    this.provideAmountMessage();\r\n    this.listenDateMessageStream();\r\n    this.listenKnpUpdates();\r\n\r\n    this.subs.add(this.createPeriodMessage$().subscribe(this.periodMessage$));\r\n    this.subs.add(\r\n      combineLatest([\r\n        this.controlsStream.vin.pipe(map((v) => (v ? `VIN${v}/V` : ''))),\r\n        this.controlsStream.protocolNumber.pipe(\r\n          map((v) => (v ? `ADM${v}/A` : ''))\r\n        ),\r\n      ]).subscribe((values) => {\r\n        this.protocolMessage$.next(values.join(' '));\r\n      })\r\n    );\r\n\r\n    const purposeParts = [\r\n      this.protocolMessage$.pipe(map((message) => ['protocol', message])),\r\n      combineLatest([\r\n        this.translate.get('SHARED.NOT_SELECTED'),\r\n        this.translate.get('SHARED.TIME.PERIOD'),\r\n        this.periodMessage$,\r\n      ]).pipe(\r\n        map(([NOT_SELECTED, PERIOD, message]) => {\r\n          if (message && message !== NOT_SELECTED) {\r\n            return `${PERIOD}: ${message}.`;\r\n          }\r\n          return '';\r\n        }),\r\n        map((message) => ['period', message])\r\n      ),\r\n    ];\r\n    this.listenPurposeMessageStream(purposeParts, [\r\n      'protocol',\r\n      'kbk',\r\n      'knp',\r\n      'period',\r\n    ]);\r\n\r\n    this.subs.add(\r\n      this.controlsStream.kbk.pipe().subscribe((code) => {\r\n        const { protocolNumber, vin } = this.form.controls;\r\n        if (this.rules.kbkCodeVinReq.some((item) => item === code)) {\r\n          vin.enable();\r\n          protocolNumber.disable();\r\n          protocolNumber.value && protocolNumber.patchValue('');\r\n          this.associatedFieldTpl = this.vinTpl;\r\n        } else if (/^204\\d+$/.test(code)) {\r\n          vin.disable();\r\n          vin.value && vin.patchValue('');\r\n          protocolNumber.enable();\r\n          this.associatedFieldTpl = this.protocolNumberTpl;\r\n        } else {\r\n          this.associatedFieldTpl = null;\r\n          vin.disable();\r\n          protocolNumber.disable();\r\n          protocolNumber.value && protocolNumber.patchValue('');\r\n          vin.value && vin.patchValue('');\r\n        }\r\n      })\r\n    );\r\n\r\n    this.subs.add(\r\n      this.controlsStream.intervalEnabled\r\n        .pipe(\r\n          throttleTime(300, undefined, { leading: true, trailing: true }),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe((v) => {\r\n          const { period, periodEnd, periodStart } = this.form.controls;\r\n          if (v) {\r\n            [periodEnd, periodStart].forEach((c) => c.enable());\r\n            period.disable();\r\n          } else {\r\n            [periodEnd, periodStart].forEach((c) => c.disable());\r\n            period.enable();\r\n          }\r\n        })\r\n    );\r\n    if (!this.form.get('bankAccount').value) {\r\n      this.form.get('bankAccount').setValue(SPECIAL_ACCOUNTS.TAX_ACCOUNT);\r\n    }\r\n  }\r\n\r\n  get intervalSwitchLabel() {\r\n    return this.form.controls.intervalEnabled.value\r\n      ? 'PAYMENTS.INTERVAL.ENABLED'\r\n      : 'PAYMENTS.INTERVAL.DISABLED';\r\n  }\r\n\r\n  onKbkSelect(kbk: KBK) {\r\n    if (!this.form.controls.knp.value && kbk.associatedKnpList) {\r\n      this.form.controls.knp.setValue(kbk.associatedKnpList[0]);\r\n    }\r\n  }\r\n\r\n  openDepartmentDictionary(select, event?: Event) {\r\n    event && event.preventDefault();\r\n    if (select) {\r\n      select.blur();\r\n      select.close();\r\n    }\r\n    this.modalService\r\n      .open(UgdDictionaryComponent, {\r\n        backdropClass: 'backdrop_light',\r\n        windowClass: 'modal_light modal_max-height',\r\n        centered: true,\r\n      })\r\n      .result.then((item: UGD) => {\r\n        this.form.controls.ugd.setValue(item.code);\r\n      })\r\n      .catch(() => {\r\n        /*  no selection or dismiss */\r\n      });\r\n  }\r\n\r\n  openKBKDictionary(select, event?: Event) {\r\n    event && event.preventDefault();\r\n    if (select) {\r\n      select.blur();\r\n      select.close();\r\n    }\r\n    const modal = this.modalService.open(GenericDictionaryComponent, {\r\n      backdropClass: 'backdrop_light',\r\n      windowClass: 'modal_light modal_max-height',\r\n      centered: true,\r\n    });\r\n    Object.assign(modal.componentInstance, {\r\n      store: this.kbkStore,\r\n    });\r\n    modal.result\r\n      .then((item: KBK) => {\r\n        this.form.controls.kbk.setValue(item.code);\r\n      })\r\n      .catch(() => {\r\n        /*  no selection or dismiss */\r\n      });\r\n  }\r\n\r\n  onUgdSelect(ugd: UGD) {\r\n    // this.form.controls.knp.patchValue(ugd.knpCode);\r\n  }\r\n\r\n  // showResult() {\r\n  //   const modal = this.modalService.open(PaymentResultComponent, {\r\n  //     backdropClass: 'backdrop_light',\r\n  //     windowClass: 'modal_light modal_sm',\r\n  //     centered: true,\r\n  //     backdrop: 'static',\r\n  //   });\r\n  //   Object.assign(modal.componentInstance, {\r\n  //     result: true,\r\n  //     currency: 'KZT',\r\n  //     amount: +this.form.controls.amount.value + this.commission$.getValue(),\r\n  //     multySubscribers: false,\r\n  //     hasRights: true,\r\n  //   });\r\n  // }\r\n\r\n  createPeriodMessage$() {\r\n    const { intervalEnabled, periodEnd, periodStart, period } =\r\n      this.controlsStream;\r\n    return combineLatest([\r\n      intervalEnabled,\r\n      this.translate.get('SHARED.NOT_SELECTED'),\r\n      period,\r\n      periodStart,\r\n      periodEnd,\r\n    ]).pipe(\r\n      debounceTime(0),\r\n      map(([intervalEnabledV, notSelected, ...rest]) => {\r\n        const [periodV, periodStartV, periodEndV] = rest.map((v) =>\r\n          v ? this.datePipe.transform(v, 'MM.yyyy') : ''\r\n        );\r\n        if (\r\n          (!intervalEnabledV && !periodV) ||\r\n          (intervalEnabledV && !periodStartV && !periodEndV)\r\n        ) {\r\n          return notSelected;\r\n        }\r\n        if (intervalEnabledV) {\r\n          return `${periodStartV || notSelected} - ${\r\n            periodEndV || notSelected\r\n          }`;\r\n        }\r\n        return `${periodV || notSelected}`;\r\n      })\r\n    );\r\n  }\r\n\r\n  sendPayment() {\r\n    return super.sendPayment(this.constructTaxPaymentBody());\r\n  }\r\n\r\n  saveToDraft() {\r\n    return super.saveToDraft(this.constructTaxPaymentBody());\r\n  }\r\n\r\n  public openKnpDictionary(select: JSelectComponent, event: Event) {\r\n    select.close();\r\n    select.blur();\r\n    setTimeout(() => {\r\n      const modalRef = this.modals.open(KnpDictionaryComponent, {\r\n        backdropClass: 'backdrop_light',\r\n        windowClass: 'modal_light modal_max-height',\r\n        centered: true,\r\n      });\r\n\r\n      modalRef.componentInstance.paymentType = this.paymentType;\r\n      modalRef.result\r\n        .then((item: KNP) => {\r\n          this.form.controls.knp.patchValue(item.code);\r\n        })\r\n        .catch(() => {\r\n          /*  no selection or dismiss */\r\n        });\r\n    }, 0);\r\n  }\r\n\r\n  private constructTaxPaymentBody() {\r\n    const formValue = this.form.value;\r\n    const protocol = this.protocolMessage$.getValue();\r\n\r\n    let purpose = '';\r\n    if (protocol) {\r\n      purpose = this.purposeMessage$\r\n        .getValue()\r\n        .replace(\r\n          protocol,\r\n          [protocol, formValue.purpose].filter((v) => !!v).join(' ')\r\n        );\r\n    } else {\r\n      purpose = [formValue.purpose, this.purposeMessage$.getValue()]\r\n        .filter((v) => !!v)\r\n        .join('. ');\r\n    }\r\n    return {\r\n      ...formValue,\r\n      purpose,\r\n    };\r\n  }\r\n\r\n  private listenKnpUpdates() {\r\n    this.knp$.subscribe((list) => {\r\n      this.filteredKnpList = list;\r\n    });\r\n  }\r\n\r\n  get vinMessage() {\r\n    if (\r\n      !this.form.controls.vin.value ||\r\n      this.form.controls.vin.value.length === 0\r\n    ) {\r\n      return this.translate.instant('PAYMENTS.VIN_MESSAGE.OPTIONAL');\r\n    }\r\n    if (this.form.controls.vin.value?.length < this.vinLength) {\r\n      return this.translate.instant('PAYMENTS.VIN_MESSAGE.LESS', {\r\n        length: this.vinLength,\r\n      });\r\n    }\r\n    if (this.form.controls.vin.value?.length > this.vinLength) {\r\n      return this.translate.instant('PAYMENTS.VIN_MESSAGE.MORE', {\r\n        length: this.vinLength,\r\n      });\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\n/*Если ничего не заполнено: “Необязательное поле“.\r\n\r\nЕсли заполнен хотя бы один символ: “Введенный VIN- код менее 17 символов”.\r\n\r\nЕсли заполнен полностью, то текст пропадает.\r\n\r\nЕсли заполнен полностью, а затем стерт какой-то символ из поля, то снова показывается 2 пункт, если стерты все символы, то 1 пункт.*/\r\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { HomeRoutes, homeRoutes } from '@home/home-routes';\r\n\r\nimport { routeTransitionAnimations } from '@shared/animations';\r\nimport { RouterSlideAnimation } from '@shared/animations/helpers';\r\nimport {\r\n  ErrorStateMatcher,\r\n  ShowOnDirtyErrorStateMatcher,\r\n} from '@shared/form-field/utils';\r\nimport { map, debounceTime } from 'rxjs/operators';\r\nimport { PaymentApiService } from '@payments/services/payment-api.service';\r\nimport { PaymentsRoutes, paymentsRoutes } from '@payments/payments-routes';\r\nimport { PaymentsService } from '@payments/services/payments.service';\r\nimport { Observable } from 'rxjs';\r\nimport { NavService } from '@shared/nav/nav.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'j-tenge-payments',\r\n  templateUrl: './tenge-payments.component.html',\r\n  styleUrls: ['./tenge-payments.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [routeTransitionAnimations],\r\n  providers: [\r\n    {\r\n      provide: ErrorStateMatcher,\r\n      useClass: ShowOnDirtyErrorStateMatcher,\r\n    },\r\n  ],\r\n})\r\nexport class TengePaymentsComponent\r\n  extends RouterSlideAnimation\r\n  implements OnInit\r\n{\r\n  routes: PaymentsRoutes = paymentsRoutes;\r\n  title$: Observable<string>;\r\n  constructor(\r\n    private navService: NavService,\r\n    private router: Router,\r\n    private paymentsService: PaymentsService,\r\n    private location: Location\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.title$ = this.paymentsService.rootTitle$.pipe(\r\n      map((v) => `PAYMENTS.${v}`)\r\n    );\r\n  }\r\n\r\n  onClose() {\r\n    this.navService.retrieveContractBadges();\r\n    this.navService.retrieveLetterBadges();\r\n\r\n    this.location.back();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {\n  tengePaymentsRoutes,\n  statePaymentsRoutes,\n  paymentsRoutes,\n} from './payments-routes';\n\nimport { factoryUserPageMatcher } from '@utils/index';\n\nimport { CanDeactivatePaymentGuard } from './services/can-deactivate-payment.guard';\nimport { PaymentTypeSwitchGuard } from './services/payment-type-switch.guard';\n\nimport {\n  TengePaymentsComponent,\n  TaxPaymentComponent,\n  BudgetPaymentsComponent,\n  SalaryPaymentComponent,\n  PaymentOrderComponent,\n  CurrencyPaymentsComponent,\n  SocialPaymentComponent,\n  PensionPaymentComponent,\n  MedicalPaymentComponent,\n} from './containers';\n\nconst paymentId = '/:paymentId';\n\nconst routes: Routes = [\n  {\n    path: tengePaymentsRoutes.root,\n    component: TengePaymentsComponent,\n    children: [\n      {\n        path: '',\n        canActivate: [PaymentTypeSwitchGuard],\n      },\n      {\n        path: statePaymentsRoutes.root,\n        component: BudgetPaymentsComponent,\n        data: { animation: 'slideOrFade', index: 2 },\n        children: [\n          {\n            path: statePaymentsRoutes.tax,\n            matcher: factoryUserPageMatcher(\n              statePaymentsRoutes.tax,\n              'paymentId'\n            ),\n            component: TaxPaymentComponent,\n            canDeactivate: [CanDeactivatePaymentGuard],\n            data: { animation: 'slideOrFade', index: 21 },\n          },\n          {\n            path: statePaymentsRoutes.pension,\n            matcher: factoryUserPageMatcher(\n              statePaymentsRoutes.pension,\n              'paymentId'\n            ),\n            component: PensionPaymentComponent,\n            canDeactivate: [CanDeactivatePaymentGuard],\n            data: { animation: 'slideOrFade', index: 22 },\n          },\n\n          {\n            path: statePaymentsRoutes.social,\n            matcher: factoryUserPageMatcher(\n              statePaymentsRoutes.social,\n              'paymentId'\n            ),\n            component: SocialPaymentComponent,\n            canDeactivate: [CanDeactivatePaymentGuard],\n            data: { animation: 'slideOrFade', index: 23 },\n          },\n\n          {\n            path: statePaymentsRoutes.osms,\n            matcher: factoryUserPageMatcher(\n              statePaymentsRoutes.osms,\n              'paymentId'\n            ),\n            component: MedicalPaymentComponent,\n            canDeactivate: [CanDeactivatePaymentGuard],\n            data: { animation: 'slideOrFade', index: 24 },\n          },\n          {\n            path: '**',\n            redirectTo: statePaymentsRoutes.tax,\n          },\n        ],\n      },\n      {\n        path: tengePaymentsRoutes.order,\n        matcher: factoryUserPageMatcher(tengePaymentsRoutes.order, 'paymentId'),\n        component: PaymentOrderComponent,\n        canDeactivate: [CanDeactivatePaymentGuard],\n        data: { animation: 'slideOrFade', index: 1 },\n      },\n      {\n        path: tengePaymentsRoutes.salary,\n        matcher: factoryUserPageMatcher(\n          tengePaymentsRoutes.salary,\n          'paymentId'\n        ),\n        component: SalaryPaymentComponent,\n        canDeactivate: [CanDeactivatePaymentGuard],\n        data: { animation: 'slideOrFade', index: 3 },\n      },\n      // catch case when we have only id without type or provide easy navigation by id\n      // and restore state without explicit direct payment type route\n      {\n        path: ':paymentId',\n        canActivate: [PaymentTypeSwitchGuard],\n      },\n      {\n        path: '**',\n        redirectTo: tengePaymentsRoutes.order,\n      },\n    ],\n  },\n  {\n    path: paymentsRoutes.foreignCurrency,\n    canDeactivate: [CanDeactivatePaymentGuard],\n    matcher: factoryUserPageMatcher(\n      paymentsRoutes.foreignCurrency,\n      'paymentId'\n    ),\n    component: CurrencyPaymentsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: tengePaymentsRoutes.root,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentsRoutingModule {}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport {\r\n  NgbDatepickerModule,\r\n  NgbModalModule,\r\n  NgbPopoverModule,\r\n  NgbTypeaheadModule,\r\n  NgbPaginationModule,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\n\r\nimport { AccountsModule } from '@accounts/index';\r\nimport { ContractsModule } from '@contracts/contracts.module';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { SelectModule } from '@shared/select-module/select.module';\r\n\r\nimport { FormBuilderTypeSafe } from '@utils/typed-reactive-form-helper';\r\n\r\nimport { PaymentsRoutingModule } from './payments-routing.module';\r\nimport { PAYMENTS_COMPONENTS } from './components';\r\nimport { PAYMENTS_CONTAINERS } from './containers';\r\nimport { ErrorsConfiguration, IErrorsConfiguration } from '@ngspot/ngx-errors';\r\n\r\n@NgModule({\r\n  declarations: [PAYMENTS_CONTAINERS, PAYMENTS_COMPONENTS],\r\n  providers: [\r\n    FormBuilderTypeSafe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    NgxMaskModule,\r\n    NgbDatepickerModule,\r\n    NgbPopoverModule,\r\n    NgbTypeaheadModule,\r\n    NgbPaginationModule,\r\n    NgxSkeletonLoaderModule,\r\n    TranslateModule,\r\n\r\n    AccountsModule,\r\n    SharedModule,\r\n    SelectModule,\r\n    PaymentsRoutingModule,\r\n    ContractsModule,\r\n  ],\r\n  exports: [NgbModalModule, NgbPopoverModule],\r\n})\r\nexport class PaymentsModule {}\r\n","import { OnInit, OnDestroy, Directive } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { startWith, pairwise, map, share, debounceTime } from 'rxjs/operators';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Directive()\nexport abstract class RouterSlideAnimation implements OnInit, OnDestroy {\r\n  readonly subs = new Subscription();\r\n  itemChanges$ = new BehaviorSubject(0);\r\n  routerTrigger$ = this.itemChanges$.pipe(\r\n    startWith(this.itemChanges$.getValue()),\r\n    pairwise(),\r\n    map(([prev, next]) => {\r\n      const params = {\r\n        offsetEnterX: 0,\r\n        offsetLeaveX: 0,\r\n      };\r\n      if (prev !== 0) {\r\n        params.offsetEnterX = prev > next ? -100 : 100;\r\n        params.offsetLeaveX = prev > next ? 100 : -100;\r\n      }\r\n      return {\r\n        value: next,\r\n        params,\r\n      };\r\n    }),\r\n    share()\r\n  );\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.subs.add(this.routerTrigger$.subscribe());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  onActivate(e, outlet: RouterOutlet) {\r\n    if (\r\n      outlet.activatedRouteData &&\r\n      outlet.activatedRouteData['animation'] &&\r\n      outlet.activatedRouteData['index'] !== this.itemChanges$.getValue()\r\n    ) {\r\n      this.itemChanges$.next(outlet.activatedRouteData['index']);\r\n    }\r\n  }\r\n}\r\n","import { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        let pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}