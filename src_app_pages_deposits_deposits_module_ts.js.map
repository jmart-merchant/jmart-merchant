{"version":3,"file":"src_app_pages_deposits_deposits_module_ts.js","mappings":"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","sources":["./src/app/core/animations/aside.ts","./src/app/core/animations/index.ts","./src/app/helpers/statement2/components/index.ts","./src/app/helpers/statement2/components/statement2-details/statement2-details.component.ts","./src/app/helpers/statement2/components/statement2-group/statement2-group.component.ts","./src/app/helpers/statement2/components/statement2-header/statement2-header.component.ts","./src/app/helpers/statement2/components/statement2-loading/statement2-loading.component.ts","./src/app/helpers/statement2/components/statement2-transaction/statement2-transaction.component.ts","./src/app/helpers/statement2/config/index.ts","./src/app/helpers/statement2/config/options.ts","./src/app/helpers/statement2/models/index.ts","./src/app/helpers/statement2/models/statement2.model.ts","./src/app/helpers/statement2/models/statement2.options.ts","./src/app/helpers/statement2/services/index.ts","./src/app/helpers/statement2/services/statement2.service.ts","./src/app/helpers/statement2/statement2.component.ts","./src/app/helpers/statement2/statement2.module.ts","./src/app/pages/deposits/components/deposit-interests/deposit-interests.component.ts","./src/app/pages/deposits/components/deposit-requisites/deposit-requisites.component.ts","./src/app/pages/deposits/components/deposit-statement/deposit-statement.component.ts","./src/app/pages/deposits/components/deposit-terms/deposit-terms.component.ts","./src/app/pages/deposits/components/deposit/deposit.component.ts","./src/app/pages/deposits/components/index.ts","./src/app/pages/deposits/config/deposits.ts","./src/app/pages/deposits/config/index.ts","./src/app/pages/deposits/deposits-routing.module.ts","./src/app/pages/deposits/deposits.module.ts","./src/app/pages/deposits/helpers/deposit-header/deposit-header.component.ts","./src/app/pages/deposits/helpers/deposit-interests-details/deposit-interests-details.component.ts","./src/app/pages/deposits/helpers/deposit-interests-filter/deposit-interests-filter.component.ts","./src/app/pages/deposits/helpers/deposit-interests-group/deposit-interests-group.component.ts","./src/app/pages/deposits/helpers/deposit-interests-statement/deposit-interests-statement.component.ts","./src/app/pages/deposits/helpers/deposit-interests-transaction/deposit-interests-transaction.component.ts","./src/app/pages/deposits/helpers/deposit-tabs/deposit-tabs.component.ts","./src/app/pages/deposits/helpers/index.ts","./src/app/pages/deposits/services/deposits.service.ts","./src/app/pages/deposits/services/index.ts"],"sourcesContent":["import {\r\n  animate,\r\n  animateChild,\r\n  query,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\n\r\nconst wrapperInitialState = {\r\n  opacity: 0,\r\n  transform: 'scale(0.8)',\r\n  transformOrigin: '50% 50%',\r\n};\r\n\r\nconst wrapperFinalState = {\r\n  opacity: 1,\r\n  transform: 'scale(1)',\r\n  transformOrigin: '50% 50%',\r\n};\r\n\r\nconst duration = '200ms ease-in-out';\r\n\r\nconst childInitialState = {\r\n  right: '-100%',\r\n};\r\n\r\nconst childFinalState = {\r\n  right: 0,\r\n};\r\n\r\nexport const asideAnimations = [\r\n  trigger('wrapperAnimations', [\r\n    state('in', style(wrapperFinalState)),\r\n    transition(':enter', [\r\n      style(wrapperInitialState),\r\n      animate(duration),\r\n      query('@childAnimations', [animateChild()]),\r\n    ]),\r\n    transition(':leave', [\r\n      query('@childAnimations', [animateChild()]),\r\n      animate(duration, style(wrapperInitialState)),\r\n    ]),\r\n  ]),\r\n  trigger('childAnimations', [\r\n    state('in', style(childFinalState)),\r\n    transition(':enter', [style(childInitialState), animate(duration)]),\r\n    transition(':leave', [animate(duration, style(childInitialState))]),\r\n  ]),\r\n];\r\n","export * from './aside';\n","export * from './statement2-group/statement2-group.component';\r\nexport * from './statement2-transaction/statement2-transaction.component';\r\nexport * from './statement2-header/statement2-header.component';\r\nexport * from './statement2-details/statement2-details.component';\r\nexport * from './statement2-loading/statement2-loading.component';\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Masks } from '@shared/masked/masked';\nimport { BankAccountNamePipe } from '@shared/pipes';\nimport { MaskPipe } from 'ngx-mask';\n\nimport { Observable } from 'rxjs';\n\nimport { IStatement2Transaction, TRANSACTION_TYPE } from '../../models';\nimport { Statement2Service } from '../../services';\n\n@Component({\n  selector: 'j-statement2-details',\n  templateUrl: './statement2-details.component.html',\n  styleUrls: ['./statement2-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Statement2DetailsComponent implements OnInit {\n  @Input() transaction: IStatement2Transaction;\n  @Output() closed = new EventEmitter();\n\n  date$: Observable<string>;\n  isCredit: boolean;\n  groups: { title: string; data: { label: string; value: string }[] }[];\n\n  constructor(\n    private statement2Service: Statement2Service,\n    private maskPipe: MaskPipe,\n    private bankAccountName: BankAccountNamePipe\n  ) {}\n\n  ngOnInit() {\n    this.mapDate();\n    this.mapTransactionType();\n    this.mapGroups();\n\n    console.log(this.transaction);\n  }\n\n  onClose() {\n    this.closed.emit();\n  }\n\n  private mapDate() {\n    this.date$ = this.statement2Service.mapTransactionDate(this.transaction.documentDate);\n  }\n\n  private mapTransactionType() {\n    this.isCredit = this.transaction.type === TRANSACTION_TYPE.CREDIT;\n  }\n\n  private mapGroups() {\n    this.groups = [\n      {\n        title: this.mapMainLabel('TITLE'),\n        data: this.generateMainData(),\n      },\n      {\n        title: this.mapRecipientLabel('TITLE'),\n        data: this.generateRecipientData(),\n      },\n    ];\n  }\n\n  private generateMainData() {\n    const data = [];\n\n    if (this.isCredit) {\n      const { code, name } = this.transaction.knp;\n\n      data.push({\n        label: this.mapMainLabel('KNP'),\n        value: `${code} ${name ? '-' : ''} ${name}`,\n      });\n    }\n\n    data.push({\n      label: this.mapMainLabel('DOCUMENT_NUMBER'),\n      value: `№${this.transaction.documentNumber}`,\n    });\n\n    return data;\n  }\n\n  private generateRecipientData() {\n    const data = [\n      {\n        label: this.mapRecipientLabel('NAME'),\n        value: this.transaction.correspondentName,\n      },\n      {\n        label: this.mapRecipientLabel('BIN'),\n        value: this.maskPipe.transform(\n          this.transaction.correspondentBin,\n          Masks.iin.mask\n        ),\n      },\n    ];\n\n    if (!this.isCredit) {\n      data.push({\n        label: this.mapRecipientLabel('ACCOUNT'),\n        value: this.maskPipe.transform(\n          this.transaction.correspondentAccount,\n          Masks.account.mask\n        ),\n      });\n    }\n\n    data.push(\n      {\n        label: this.mapRecipientLabel('KBE'),\n        value: this.transaction.kbe.code,\n      },\n      {\n        label: this.mapRecipientLabel('BANK'),\n        value: this.bankAccountName.transform(\n          this.transaction.correspondentAccount\n        ),\n      },\n      {\n        label: this.mapRecipientLabel('BIC'),\n        value: this.transaction.correspondentBankBic,\n      }\n    );\n\n    return data;\n  }\n\n  private mapMainLabel(key: string) {\n    return this.mapDetailsLabel(`MAIN.${key}`);\n  }\n\n  private mapRecipientLabel(key: string) {\n    return this.mapDetailsLabel(`RECIPIENT.${key}`);\n  }\n\n  private mapDetailsLabel(key: string) {\n    return `DEPOSITS.STATEMENT.DETAILS.${key}`;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\n\nimport dayjs from 'dayjs';\n\nimport {\n  IStatement2Group,\n  IStatement2Transaction,\n  TRANSACTION_GROUP_TYPE,\n} from '../../models';\n\n@Component({\n  selector: 'j-statement2-group',\n  templateUrl: './statement2-group.component.html',\n  styleUrls: ['./statement2-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Statement2GroupComponent implements OnInit {\n  @Input() group: IStatement2Group;\n  @Input() groupType: TRANSACTION_GROUP_TYPE;\n\n  @Input() groupHeaderTemplate: TemplateRef<any>;\n  @Input() transactionTemplate: TemplateRef<any>;\n\n  @Output() clicked = new EventEmitter<IStatement2Transaction>();\n\n  title: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.mapTitle();\n  }\n\n  onClick(transaction: IStatement2Transaction) {\n    this.clicked.emit(transaction);\n  }\n\n  private mapTitle() {\n    switch (this.groupType) {\n      case TRANSACTION_GROUP_TYPE.MONTH:\n        let monthName = dayjs(this.group.groupDate).format('MMMM');\n        this.title = `${monthName[0].toUpperCase()}${monthName.slice(1)}`;\n        break;\n\n      default:\n      case TRANSACTION_GROUP_TYPE.DAY:\n        this.title = dayjs(this.group.groupDate).format('DD.MM.YYYY');\n        break;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { IStatement2 } from '@statement2/models';\n\n@Component({\n  selector: 'j-statement2-header',\n  templateUrl: './statement2-header.component.html',\n  styleUrls: ['./statement2-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Statement2HeaderComponent implements OnInit {\n  @Input()\n  statement: IStatement2;\n  balances;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.balances = [\n      {\n        label: 'DEPOSITS.STATEMENT.HEADER.INCOME',\n        classList: 'text-success',\n        showSign: true,\n        isCredit: true,\n        money: this.statement.creditTotalSum,\n      },\n      {\n        label: 'DEPOSITS.STATEMENT.HEADER.OUTCOME',\n        classList: 'text-danger',\n        showSign: true,\n        isDebit: true,\n        money: this.statement.debitTotalSum,\n      },\n      {\n        label: 'DEPOSITS.STATEMENT.HEADER.BALANCE_IN',\n        money: this.statement.balanceIn,\n      },\n      {\n        label: 'DEPOSITS.STATEMENT.HEADER.BALANCE_OUT',\n        money: this.statement.balanceOut,\n      },\n    ];\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'j-statement2-loading',\n  templateUrl: './statement2-loading.component.html',\n  styleUrls: ['./statement2-loading.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Statement2LoadingComponent {\n  headerCount = Array(4);\n  transactionCount = Array(3);\n\n  constructor() {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { IStatement2Transaction, TRANSACTION_TYPE } from '../../models';\nimport { Statement2Service } from '../../services';\n\n@Component({\n  selector: 'j-statement2-transaction',\n  templateUrl: './statement2-transaction.component.html',\n  styleUrls: ['./statement2-transaction.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Statement2TransactionComponent implements OnInit {\n  @Input() transaction: IStatement2Transaction;\n\n  isCredit: boolean;\n  date$: Observable<string>;\n\n  constructor(private statement2Service: Statement2Service) {}\n\n  ngOnInit() {\n    this.mapTransactionType();\n    this.mapDate();\n  }\n\n  private mapDate() {\n    this.date$ = this.statement2Service.mapTransactionDate(this.transaction.documentDate);\n  }\n\n  private mapTransactionType() {\n    this.isCredit = this.transaction.type === TRANSACTION_TYPE.CREDIT;\n  }\n}\n","export * from './options';\r\n","import { IStatement2Options } from '@statement2/models';\r\n\r\nexport const defaultOptions: IStatement2Options = {\r\n  hasDetails: false,\r\n};\r\n","export * from './statement2.model';\r\nexport * from './statement2.options';\r\n","import { IMoney } from '@shared/currency/currency.model';\r\nimport { IExchangeRate, IKbe, IKBK, IKNP } from '@shared/models';\r\n\r\nexport enum TRANSACTION_TYPE {\r\n  CREDIT = 'CREDIT',\r\n  DEBIT = 'DEBIT',\r\n}\r\n\r\nexport enum TRANSACTION_CATEGORY {\r\n  COMMISSION = 'COMMISSION',\r\n  REFUND = 'REFUND',\r\n  TRANSFER = 'TRANSFER',\r\n}\r\n\r\nexport enum TRANSACTION_GROUP_TYPE {\r\n  DAY = 'DAY',\r\n  MONTH = 'MONTH',\r\n  NONE = 'NONE',\r\n}\r\n\r\nexport interface IStatement2TransactionRefundDetails {\r\n  account: string;\r\n  amount: IMoney;\r\n  bin: string;\r\n  birthDate: Date;\r\n  date: Date;\r\n  description: string;\r\n  iban: string;\r\n  knp: string;\r\n  \r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  \r\n  period: string;\r\n  parentRef: string;\r\n  refundRef: string;\r\n}\r\n\r\nexport interface IStatement2Transaction {\r\n  amount: number;\r\n  amountLCY: number;\r\n  amountVat: number;\r\n  \r\n  category: TRANSACTION_CATEGORY;\r\n  commissionFlag: string;\r\n\r\n  correspondentAccount: string;\r\n  correspondentBankBic: string;\r\n  correspondentBankName: string;\r\n  correspondentBin: string;\r\n  correspondentName: string;\r\n  \r\n  credit: IMoney;\r\n  debit: IMoney;\r\n\r\n  description: string;\r\n  \r\n  documentDate: Date;\r\n  documentNumber: string;\r\n  documentType: string;\r\n\r\n  externalId: string;\r\n  iban: string;\r\n  id: string;\r\n  \r\n  kbe: IKbe;\r\n  kbk: IKBK;\r\n  knp: IKNP;\r\n  \r\n  parentReference: string;\r\n  paymentColvirId: string;\r\n\r\n  reference: string;\r\n  referenceKisc: string;\r\n  referenceRelatedDocument: string;\r\n  \r\n  refundDetails: IStatement2TransactionRefundDetails;\r\n  \r\n  signBuch: string;\r\n  signHead: string;\r\n  \r\n  type: TRANSACTION_TYPE;\r\n  valueDate: Date;\r\n}\r\n\r\nexport interface IStatement2Group {\r\n  groupDate: Date;\r\n\r\n  debitSum: IMoney;\r\n  creditSum: IMoney;\r\n\r\n  exchangeRate1: IExchangeRate;\r\n  exchangeRate2: IExchangeRate;\r\n\r\n  transactionsCount: number;\r\n\r\n  transactions: IStatement2Transaction[];\r\n}\r\n\r\nexport interface IStatement2 {\r\n  iban: string;\r\n  \r\n  statementDate: Date;\r\n  dateFrom: Date;\r\n  dateTo: Date;\r\n  \r\n  balanceIn: IMoney;\r\n  balanceOut: IMoney;\r\n  balanceInLCY: IMoney;\r\n  balanceOutLCY: IMoney;\r\n  \r\n  debitTotalSum: IMoney;\r\n  creditTotalSum: IMoney;\r\n\r\n  groupType: TRANSACTION_GROUP_TYPE;\r\n\r\n  totalTransactionsCount: number;\r\n\r\n  transactionGroups: IStatement2Group[];\r\n}\r\n","export interface IStatement2Options {\r\n  hasDetails: boolean;\r\n}\r\n","export * from './statement2.service';\r\n","import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport dayjs from 'dayjs';\n\nimport { IStatement2Transaction, IStatement2Options } from '../models';\nimport { defaultOptions } from '../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Statement2Service {\n  constructor(private translateService: TranslateService) {}\n\n  mapTransactionDate(transactionDate: Date) {\n    const date = dayjs(transactionDate);\n\n    if (date.isSame(dayjs(), 'day')) {\n      return this.translateService.get(\n        'DEPOSITS.INTERESTS.TRANSACTION.DATE.TODAY',\n        {\n          datetime: date.format('HH:mm'),\n        }\n      );\n    } else if (\n      dayjs(transactionDate).isSame(dayjs().subtract(1, 'day'), 'day')\n    ) {\n      return this.translateService.get(\n        'DEPOSITS.INTERESTS.TRANSACTION.DATE.YESTERDAY',\n        {\n          datetime: date.format('HH:mm'),\n        }\n      );\n    } else {\n      return of(date.format('DD MMMM HH:mm'));\n    }\n  }\n\n  mapStatementOptions(options: IStatement2Options) {\n    return {\n      ...defaultOptions,\n      ...options,\n    };\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { asideAnimations } from '@core/animations';\n\nimport {\n  IStatement2,\n  IStatement2Transaction,\n  IStatement2Options,\n} from './models';\n\nimport { Statement2Service } from './services';\n\n@Component({\n  selector: 'j-statement2',\n  templateUrl: './statement2.component.html',\n  styleUrls: ['./statement2.component.scss'],\n  animations: asideAnimations,\n})\nexport class Statement2Component implements OnInit, OnDestroy {\n  @Input() statement: IStatement2;\n  @Input() options: IStatement2Options;\n\n  @Output() scrolled = new EventEmitter();\n\n  activeTransaction: IStatement2Transaction;\n\n  private _options: IStatement2Options;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private statementService: Statement2Service\n  ) {}\n\n  ngOnInit() {\n    this._options = this.statementService.mapStatementOptions(this.options);\n  }\n\n  ngOnDestroy(): void {\n    this.document.body.classList.remove('overflow-hidden');\n  }\n\n  onScroll() {\n    this.scrolled.emit();\n  }\n\n  onClick(transaction: IStatement2Transaction) {\n    if (!this._options.hasDetails) {\n      return;\n    }\n\n    this.document.body.classList.add('overflow-hidden');\n    this.activeTransaction = transaction;\n  }\n\n  onClose() {\n    this.activeTransaction = null;\n    this.document.body.classList.remove('overflow-hidden');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { Statement2Component } from './statement2.component';\nimport {\n  Statement2DetailsComponent,\n  Statement2GroupComponent,\n  Statement2HeaderComponent,\n  Statement2LoadingComponent,\n  Statement2TransactionComponent,\n} from './components';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, InfiniteScrollModule],\n  declarations: [\n    Statement2Component,\n    Statement2DetailsComponent,\n    Statement2GroupComponent,\n    Statement2HeaderComponent,\n    Statement2LoadingComponent,\n    Statement2TransactionComponent,\n  ],\n  exports: [Statement2Component, Statement2LoadingComponent],\n})\nexport class Statement2Module {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  concatMap,\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  takeWhile,\n} from 'rxjs/operators';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotifierService } from 'angular-notifier';\nimport dayjs from 'dayjs';\n\nimport { Deposit } from '@accounts/account.model';\nimport { AccountsService } from '@accounts/services';\n\nimport { IStatementDates } from '@filter/filter.model';\n\nimport { FilesService } from '@shared/services';\n\nimport { API_DATE_FORMAT, UI_DATE_FORMAT } from '@utils/dates';\n\nimport { PAGE_COLS_CLASSLIST } from '../../config';\nimport { IDepositInterests } from '../../models';\nimport { DepositsService } from '../../services';\nimport { AnalyticsManagerAbstract } from '@analytics/services/manager';\n\n@Component({\n  selector: 'j-deposit-interests',\n  templateUrl: './deposit-interests.component.html',\n  styleUrls: ['./deposit-interests.component.scss'],\n})\nexport class DepositInterestsComponent implements OnDestroy {\n  colsClasslist = PAGE_COLS_CLASSLIST;\n  subscription = new Subscription();\n\n  loadingCount = Array(3);\n\n  deposit: Deposit;\n  depositName: string;\n  filterDates: IStatementDates;\n  iban: string;\n  hasError = false;\n\n  page = 1;\n  pageSize = 5;\n\n  page$ = new Subject<number>();\n  dates$ = new Subject<IStatementDates>();\n\n  statement: IDepositInterests;\n\n  constructor(\n    private route: ActivatedRoute,\n    private translateService: TranslateService,\n    private accountsService: AccountsService,\n    private analytics: AnalyticsManagerAbstract,\n    private depositsService: DepositsService,\n    private notifierService: NotifierService,\n    private filesService: FilesService\n  ) {\n    this.route.parent.params.pipe(take(1)).subscribe((params) => {\n      this.iban = params.iban;\n      this.initSubscriptions();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onKpnDownload() {\n    this.notifierService.notify(\n      'info',\n      this.translateService.instant('DEPOSITS.INTERESTS.DOWNLOADING')\n    );\n\n    const filename = this.translateService.instant('DEPOSITS.KPN.FILENAME', {\n      name: this.depositName,\n      period: this.retrievePeriod(),\n    });\n\n    this.depositsService\n      .downloadCertificate({\n        iban: this.iban,\n        dateFrom: dayjs(this.filterDates.from).format(API_DATE_FORMAT),\n        dateTo: dayjs(this.filterDates.to).format(API_DATE_FORMAT),\n      })\n      .subscribe({\n        next: (blob) => {\n          this.analytics.logEvent('DepositMain_KPNCert_Result', {\n            version: 1,\n            status: 200,\n          });\n          this.filesService.downloadFile(blob, `${filename}.pdf`);\n        },\n        error: (error) => {\n          this.analytics.logEvent('DepositMain_KPNCert_Result', {\n            version: 1,\n            status: 502,\n            error,\n          });\n        },\n      });\n  }\n\n  onDownload() {\n    this.notifierService.notify(\n      'info',\n      this.translateService.instant('DEPOSITS.INTERESTS.DOWNLOADING')\n    );\n\n    const filename = this.translateService.instant(\n      'DEPOSITS.INTERESTS.FILENAME',\n      {\n        iban: this.iban,\n        period: this.retrievePeriod(),\n      }\n    );\n\n    const filter = {\n      page: this.page,\n      pageSize: this.pageSize,\n      dateFrom: dayjs(this.filterDates.from).format(API_DATE_FORMAT),\n      dateTo: dayjs(this.filterDates.to).format(API_DATE_FORMAT),\n    };\n\n    this.depositsService\n      .downloadDepositInterests(this.iban, filter)\n      .pipe(take(1))\n      .subscribe(\n        {\n          next: (blob) => {\n            this.analytics.logEvent('MainReward_Download_Result', {\n              version: 1,\n              status: 200,\n            });\n            this.filesService.downloadFile(blob, `${filename}.pdf`);\n          },\n          error: (error)=>{\n            this.analytics.logEvent('MainReward_Download_Result', {\n              version: 1,\n              status: 502,\n              error\n            });\n          }\n        }\n      );\n  }\n\n  onRetry() {\n    this.onFilter();\n  }\n\n  onFilter(dates: IStatementDates = this.filterDates) {\n    this.page = 1;\n    this.statement = null;\n    this.hasError = false;\n    this.dates$.next(dates);\n  }\n\n  onScroll() {\n    this.page$.next(++this.page);\n  }\n\n  private initSubscriptions() {\n    this.subscription.add(\n      this.depositsService.getDepositByIban(this.iban).subscribe((deposit) => {\n        this.deposit = deposit;\n        this.filterDates = {\n          from: dayjs(deposit.openDate).toDate(),\n          to: dayjs().toDate(),\n        };\n\n        this.mapDepositName();\n        this.initStatementSubscriptions();\n      })\n    );\n\n    this.subscription.add(\n      this.translateService.onLangChange.subscribe(() => {\n        this.mapDepositName();\n      })\n    );\n  }\n\n  private initStatementSubscriptions() {\n    this.subscription.add(\n      this.dates$\n        .pipe(\n          distinctUntilChanged(),\n          map((dates: IStatementDates) => {\n            return {\n              page: this.page,\n              pageSize: this.pageSize,\n              dateFrom: dayjs(dates.from).format(API_DATE_FORMAT),\n              dateTo: dayjs(dates.to).format(API_DATE_FORMAT),\n            };\n          }),\n          switchMap((filter) => {\n            return this.depositsService.getDepositInterests(this.iban, filter);\n          })\n        )\n        .subscribe({\n          next: (statement) => {\n            this.statement = statement;\n          },\n          error: () => {\n            this.handleStatementError();\n          },\n          complete: () => {\n            if (!this.statement) {\n              this.handleStatementError();\n            }\n          },\n        })\n    );\n\n    this.subscription.add(\n      this.page$\n        .pipe(\n          distinctUntilChanged(),\n          map((page) => {\n            return {\n              page,\n              pageSize: this.pageSize,\n              dateFrom: dayjs(this.filterDates?.from).format(API_DATE_FORMAT),\n              dateTo: dayjs(this.filterDates?.to).format(API_DATE_FORMAT),\n            };\n          }),\n          concatMap((filter) =>\n            this.depositsService.getDepositInterests(this.iban, filter)\n          ),\n          takeWhile((statement) => statement.transactionGroups.length > 0)\n        )\n        .subscribe({\n          next: (statement) => {\n            this.handleStatementSuccess(statement);\n          },\n          error: () => {\n            this.handleStatementError();\n          },\n          complete: () => {\n            if (!this.statement) {\n              this.handleStatementError();\n            }\n          },\n        })\n    );\n  }\n\n  private handleStatementError() {\n    this.hasError = true;\n  }\n\n  private handleStatementSuccess(statement: IDepositInterests) {\n    if (!this.statement && !statement) {\n      this.handleStatementError();\n    }\n\n    if (\n      this.statement.transactionGroups[\n        this.statement.transactionGroups.length - 1\n      ].groupDate === statement.transactionGroups[0].groupDate\n    ) {\n      this.statement = {\n        ...this.statement,\n        transactionGroups: [\n          ...this.statement.transactionGroups.slice(0, -1),\n          ...this.statement.transactionGroups.slice(-1).map((group) => {\n            return {\n              ...group,\n              transactions: [\n                ...group.transactions,\n                ...statement.transactionGroups[0].transactions,\n              ],\n            };\n          }),\n        ],\n      };\n    } else {\n      this.statement = {\n        ...this.statement,\n        transactionGroups: [\n          ...this.statement.transactionGroups,\n          ...statement.transactionGroups,\n        ],\n      };\n    }\n  }\n\n  private retrievePeriod() {\n    return `${dayjs(this.filterDates.from).format(UI_DATE_FORMAT)} - ${dayjs(\n      this.filterDates.to\n    ).format(UI_DATE_FORMAT)}`;\n  }\n\n  private mapDepositName() {\n    this.depositName = this.accountsService.getDepositName(this.deposit);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { finalize, take } from 'rxjs/operators';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotifierService } from 'angular-notifier';\nimport { MaskPipe } from 'ngx-mask';\n\nimport { Deposit } from '@accounts/account.model';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { Masks } from '@shared/masked/masked';\nimport { FilesService } from '@shared/services';\nimport { BankFromAccountPipe, FormatIbanPipe } from '@shared/pipes';\n\nimport { DepositsService } from '../../services';\nimport { PAGE_COLS_CLASSLIST } from '../../config';\n\ninterface RequisitesItem {\n  label: string;\n  value: string;\n  valueToCopy?: string;\n}\n\n@Component({\n  selector: 'j-deposit-requisites',\n  templateUrl: './deposit-requisites.component.html',\n  styleUrls: ['./deposit-requisites.component.scss'],\n})\nexport class DepositRequisitesComponent implements OnDestroy {\n  colsClasslist = PAGE_COLS_CLASSLIST;\n\n  loadingCount = Array(6);\n  isReady = false;\n  isDownloading = false;\n  iban: string;\n\n  textToCopy: string;\n  list: RequisitesItem[];\n\n  subscription = new Subscription();\n\n  constructor(\n    private route: ActivatedRoute,\n    private depositsService: DepositsService,\n    private companyService: CompanyService,\n    private maskPipe: MaskPipe,\n    private formatIban: FormatIbanPipe,\n    private bankFromAccount: BankFromAccountPipe,\n    private translateService: TranslateService,\n    private notifierService: NotifierService,\n    private filesService: FilesService\n  ) {\n    this.route.parent.params.pipe(take(1)).subscribe((params) => {\n      this.iban = params.iban;\n      this.initSubscriptions();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onCopy() {\n    this.notifierService.notify(\n      'default',\n      this.translateService.instant(this.mapTranslate('COPIED'))\n    );\n  }\n\n  onDownload() {\n    this.isDownloading = true;\n\n    this.depositsService\n      .getRequisitesPdf(this.iban)\n      .pipe(\n        take(1),\n        finalize(() => (this.isDownloading = false))\n      )\n      .subscribe((blob) => {\n        this.filesService.downloadFile(blob, `${this.iban}.pdf`);\n      });\n  }\n\n  private initSubscriptions() {\n    this.depositsService\n      .getDepositByIban(this.iban)\n      .pipe(take(1))\n      .subscribe((deposit) => {\n        this.list = this.generateList(deposit);\n        this.textToCopy = this.generateTextToCopy();\n\n        this.isReady = true;\n      });\n\n    this.subscription.add(\n      this.translateService.onLangChange.subscribe(() => {\n        this.generateTextToCopy();\n      })\n    );\n  }\n\n  private generateTextToCopy() {\n    return this.list\n      .map((item) => {\n        if (!(item.value || item.valueToCopy)) {\n          return;\n        }\n        return `${this.translateService.instant(item.label)}: ${\n          item.valueToCopy || item.value\n        }`;\n      })\n      .join('\\n');\n  }\n\n  private mapListTranslate(key: string) {\n    if (!key) {\n      return '';\n    }\n\n    return this.mapTranslate(`LIST.${key}`);\n  }\n\n  private mapTranslate(key: string) {\n    return `DEPOSITS.REQUISITES.${key}`;\n  }\n\n  private generateList(deposit: Deposit) {\n    return [\n      {\n        label: this.mapListTranslate('COMPANY'),\n        value: this.companyService.currentCompany.name,\n      },\n      {\n        label: this.mapListTranslate('BIN'),\n        value: this.maskPipe.transform(\n          this.companyService.currentCompany.bin,\n          Masks.iin.mask\n        ),\n        valueToCopy: this.companyService.currentCompany.bin,\n      },\n      {\n        label: this.mapListTranslate('KBE'),\n        value: this.companyService.currentCompany.kod,\n      },\n      {\n        label: this.mapListTranslate('IBAN'),\n        value: this.formatIban.transform(deposit.iban),\n        valueToCopy: deposit.iban,\n      },\n      {\n        label: this.mapListTranslate('BANK'),\n        value: this.bankFromAccount.transform(deposit.iban, 'name'),\n      },\n      {\n        label: this.mapListTranslate('BIC'),\n        value: this.bankFromAccount.transform(deposit.iban, 'bic'),\n      },\n    ];\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport {\n  concatMap,\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  takeWhile,\n} from 'rxjs/operators';\n\nimport { convertDateToApiFormat } from '@utils/dates';\n\nimport {\n  FILTER_COMISSION,\n  FILTER_MODE,\n  FILTER_SORT,\n  IFilterScheme,\n  OPERATION_CODE,\n} from '@filter/filter.model';\nimport { FilterService } from '@filter/filter.service';\n\nimport { CURRENCY } from '@core/models';\n\nimport { IStatement2, IStatement2Options } from '@statement2/models';\n\nimport { MaskedService } from '@shared/masked/masked.service';\nimport { FilesService } from '@shared/services';\n\nimport { PAGE_COLS_CLASSLIST } from '../../config';\nimport { DepositsService } from '../../services';\nimport { AnalyticsManagerAbstract } from '@analytics/services/manager';\n\nconst MAX_PAGE_SIZE = 99999;\n\n@Component({\n  selector: 'j-deposit-statement',\n  templateUrl: './deposit-statement.component.html',\n  styleUrls: ['./deposit-statement.component.scss'],\n})\nexport class DepositStatementComponent implements OnDestroy {\n  filterMode = FILTER_MODE.DEPOSITS;\n  colsClasslist = PAGE_COLS_CLASSLIST;\n\n  iban: string;\n  filter: IFilterScheme = this.filterService.getDefaults(FILTER_MODE.DEPOSITS);\n  currency$: Observable<CURRENCY>;\n\n  statement: IStatement2;\n  statementOptions: IStatement2Options = {\n    hasDetails: true,\n  };\n\n  hasError = false;\n  emptyLabel: string = 'ACCOUNTS.EMPTY_STATEMENT';\n\n  subscription = new Subscription();\n\n  page$ = new Subject<number>();\n  filter$ = new Subject<IFilterScheme>();\n\n  page = 1;\n  pageSize = 10;\n\n  constructor(\n    private analytics: AnalyticsManagerAbstract,\n    private route: ActivatedRoute,\n    private filterService: FilterService,\n    private depositsService: DepositsService,\n    private maskedService: MaskedService,\n    private filesService: FilesService\n  ) {\n    this.route.parent.params.pipe(take(1)).subscribe((params) => {\n      this.iban = params.iban;\n\n      this.initSubscriptions();\n      this.initStatementSubscriptions();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onDownload(fileType: string) {\n    this.analytics.logEvent('DepositStatement_Download_Click', {\n      version: 1,\n      type: fileType,\n    });\n\n    const filter = {\n      ...this.mapFilter(this.filter),\n      pageSize: this.statement?.totalTransactionsCount || MAX_PAGE_SIZE,\n    };\n\n    this.depositsService\n      .downloadStatement(this.iban, filter, fileType)\n      .pipe(take(1))\n      .subscribe({\n        next: ({ file, filename }) => {\n          this.analytics.logEvent('DepositStatement_Download_Result', {\n            version: 1,\n            status: 200,\n          });\n          this.filesService.downloadFile(file, filename);\n        },\n        error: (error) => {\n          this.analytics.logEvent('DepositStatement_Download_Result', {\n            version: 1,\n            status: 502,\n            error,\n          });\n        },\n      });\n  }\n\n  onRetry() {\n    this.onFilter();\n  }\n\n  onFilter(filter: IFilterScheme = this.filter) {\n    this.statement = null;\n    this.hasError = false;\n    this.page = 1;\n    this.filter = { ...filter };\n    this.filter$.next(filter);\n  }\n\n  onScroll() {\n    this.page$.next(++this.page);\n  }\n\n  private initSubscriptions() {\n    this.currency$ = this.depositsService.getDepositByIban(this.iban).pipe(\n      map((deposit) => {\n        return deposit.balance.currency;\n      })\n    );\n  }\n\n  private initStatementSubscriptions() {\n    this.subscription.add(\n      this.filter$\n        .pipe(\n          distinctUntilChanged(),\n          map((filter: IFilterScheme) => {\n            return this.mapFilter(filter);\n          }),\n          switchMap((filter) => {\n            return this.depositsService.getStatement(this.iban, filter);\n          })\n        )\n        .subscribe(\n          (statement) => {\n            this.statement = statement;\n          },\n          () => {\n            this.hasError = true;\n          }\n        )\n    );\n\n    this.subscription.add(\n      this.page$\n        .pipe(\n          distinctUntilChanged(),\n          map((page) => {\n            return { ...this.mapFilter(this.filter), page };\n          }),\n          concatMap((filter) =>\n            this.depositsService.getStatement(this.iban, filter)\n          ),\n          takeWhile((statement) => statement.transactionGroups?.length > 0)\n        )\n        .subscribe((statement) => {\n          if (\n            this.statement.transactionGroups[\n              this.statement.transactionGroups.length - 1\n            ].groupDate === statement.transactionGroups[0].groupDate\n          ) {\n            this.statement = {\n              ...this.statement,\n              transactionGroups: [\n                ...this.statement.transactionGroups.slice(0, -1),\n                ...this.statement.transactionGroups.slice(-1).map((group) => {\n                  return {\n                    ...group,\n                    transactions: [\n                      ...group.transactions,\n                      ...statement.transactionGroups[0].transactions,\n                    ],\n                  };\n                }),\n              ],\n            };\n          } else {\n            this.statement = {\n              ...this.statement,\n              transactionGroups: [\n                ...this.statement.transactionGroups,\n                ...statement.transactionGroups,\n              ],\n            };\n          }\n        })\n    );\n  }\n\n  private mapFilter(filter: IFilterScheme) {\n    return {\n      dateFrom: filter.periodFrom\n        ? convertDateToApiFormat(filter.periodFrom)\n        : null,\n      dateTo: filter.periodTo ? convertDateToApiFormat(filter.periodTo) : null,\n      documentNumber: filter.documentNumber,\n      correspondentAccount: filter.recipientIban,\n      correspondentBin: filter.recipientBin,\n      type:\n        filter.operationType != OPERATION_CODE.ALL\n          ? filter.operationType\n          : null,\n      sort: filter.sortBy !== FILTER_SORT.DEFAULT ? filter.sortBy : null,\n      amountFrom: filter.amountFrom\n        ? this.maskedService.getNumberedAmount(filter.amountFrom)\n        : null,\n      amountTo: filter.amountTo\n        ? this.maskedService.getNumberedAmount(filter.amountTo)\n        : null,\n      withCommission: filter.comission\n        ? filter.comission === FILTER_COMISSION.WITH_COMISSION\n          ? true\n          : false\n        : null,\n      page: this.page,\n      pageSize: this.pageSize,\n    };\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport dayjs from 'dayjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { FormatIbanPipe, MoneyPipe } from '@shared/pipes';\n\nimport { convertApiDateToUiFormat } from '@utils/dates';\n\nimport { GeneralDictionaryTranslations, IMoney } from '@core/models';\n\nimport { PAGE_COLS_CLASSLIST } from '../../config';\nimport { DepositsService } from '../../services';\nimport { DepositTerms } from '../../models';\n\ninterface Info {\n  label: string;\n  value: string;\n}\n\n@Component({\n  selector: 'j-deposit-terms',\n  templateUrl: './deposit-terms.component.html',\n  styleUrls: ['./deposit-terms.component.scss'],\n})\nexport class DepositTermsComponent implements OnDestroy {\n  colsClasslist = PAGE_COLS_CLASSLIST;\n\n  subscription = new Subscription();\n  terms: DepositTerms;\n\n  termsBalance: IMoney;\n\n  name: string;\n  iban: string;\n  hasError = false;\n\n  mainInfo: Info[];\n  replenishmentInfo: Info[];\n  withdrawalInfo: Info[];\n\n  mainLoadingCount = Array(5);\n  otherLoadingCount = Array(2);\n\n  constructor(\n    private route: ActivatedRoute,\n    private depositsService: DepositsService,\n    private translateService: TranslateService,\n    private moneyPipe: MoneyPipe,\n    private formatIban: FormatIbanPipe\n  ) {\n    this.route.parent.params.pipe(take(1)).subscribe((params) => {\n      this.iban = params.iban;\n      this.initSubscriptions();\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onRetry() {\n    this.initTermsSubscription();\n  }\n\n  initSubscriptions() {\n    this.initTermsSubscription();\n\n    this.subscription.add(\n      this.translateService.onLangChange\n        .pipe(map((event) => event.lang))\n        .subscribe(() => {\n          this.generateInfo();\n        })\n    );\n  }\n\n  initTermsSubscription() {\n    this.subscription.add(\n      this.depositsService.getDepositTerms(this.iban).subscribe({\n        next: (terms) => {\n          this.terms = terms;\n          this.generateInfo();\n        },\n        error: () => {\n          this.handleTermsError();\n        },\n        complete: () => {\n          if (!this.terms) {\n            this.handleTermsError();\n          }\n        },\n      })\n    );\n  }\n\n  private handleTermsError() {\n    this.hasError = true;\n  }\n\n  private generateInfo() {\n    this.name = this.extractTranslation(\n      this.terms.depositType.descriptionTranslations\n    );\n\n    this.generateMainInfo();\n    this.generateReplenishmentInfo();\n    this.generateWithdrawalInfo();\n  }\n\n  private generateMainInfo() {\n    this.mainInfo = [\n      {\n        label: this.mapMainLabel('RATE'),\n        value: this.terms.interestRate ? `${this.terms.interestRate}%` : '',\n      },\n      {\n        label: this.mapMainLabel('DOCUMENT_NUMBER'),\n        value: this.terms.contractCode,\n      },\n      {\n        label: this.mapMainLabel('PERIOD'),\n        value: this.mapPeriodLabel(),\n      },\n      {\n        label: this.mapMainLabel('AMOUNT'),\n        value: this.moneyPipe.transform({\n          amount: this.terms.contractSum,\n          currency: this.terms.balance.currency,\n        }),\n      },\n      {\n        label: this.mapMainLabel('INTEREST'),\n        value: this.extractTranslation(\n          this.terms.interestPaymentOption.descriptionTranslations\n        ),\n      },\n      {\n        label: this.mapMainLabel('IBAN'),\n        value: this.formatIban.transform(this.terms.clientAccount),\n      },\n    ];\n  }\n\n  private generateReplenishmentInfo() {\n    this.replenishmentInfo = [\n      {\n        label: this.mapReplenishmentLabel('TITLE'),\n        value: this.translateService.instant(\n          this.terms.addPay ? 'SHARED.YES' : 'SHARED.NO'\n        ),\n      },\n      {\n        label: this.mapReplenishmentLabel('MAX_AMOUNT'),\n        value: this.moneyPipe.transform({\n          amount: this.terms.maxSum,\n          currency: this.terms.balance.currency,\n        }),\n      },\n    ];\n  }\n\n  private generateWithdrawalInfo() {\n    this.withdrawalInfo = [\n      {\n        label: this.mapWithdrawalLabel('PARTIAL_WITHDRAWAL'),\n        value: this.translateService.instant(\n          this.terms.payOut ? 'SHARED.YES' : 'SHARED.NO'\n        ),\n      },\n      {\n        label: this.mapWithdrawalLabel('IRREDUCIBLE_AMOUNT'),\n        value: this.moneyPipe.transform({\n          amount: this.terms.irreducibleBalance,\n          currency: this.terms.balance.currency,\n        }),\n      },\n    ];\n  }\n\n  private mapMainLabel(key: string) {\n    return this.mapLabel('MAIN', key);\n  }\n\n  private mapReplenishmentLabel(key: string) {\n    return this.mapLabel('REPLENISHMENT', key);\n  }\n\n  private mapWithdrawalLabel(key: string) {\n    return this.mapLabel('WITHDRAWAL', key);\n  }\n\n  private mapLabel(label: string, key: string) {\n    if (!key) {\n      return '';\n    }\n\n    return this.mapTranslate(`${label}.${key}`);\n  }\n\n  private mapPeriodLabel() {\n    const from = convertApiDateToUiFormat(this.terms.fromDate);\n\n    if (!this.terms.toDate) {\n      return from;\n    }\n\n    const to = convertApiDateToUiFormat(this.terms.toDate);\n    const count = dayjs(this.terms.toDate).diff(this.terms.fromDate, 'month');\n\n    let translateKey;\n    switch (count % 20) {\n      case 1:\n        translateKey = 'ONE';\n        break;\n\n      case 2:\n      case 3:\n      case 4:\n        translateKey = 'FEW';\n        break;\n\n      default:\n        translateKey = 'MANY';\n        break;\n    }\n\n    const monthsLabel = this.translateService.instant(\n      this.mapMainLabel(`MONTHS.${translateKey}`),\n      { count }\n    );\n\n    return `${from} - ${to} <br> (${monthsLabel})`;\n  }\n\n  private extractTranslation(translations: GeneralDictionaryTranslations) {\n    return translations.translations[this.translateService.currentLang];\n  }\n\n  private mapTranslate(key: string) {\n    if (!key) {\n      return '';\n    }\n\n    return `DEPOSITS.TERMS.${key}`;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Deposit } from '@accounts/account.model';\n\nimport { PAGE_COLS_CLASSLIST } from '../../config';\nimport { DepositsService } from '../../services';\n\n@Component({\n  selector: 'j-deposit',\n  templateUrl: './deposit.component.html',\n  styleUrls: ['./deposit.component.scss'],\n})\nexport class DepositComponent {\n  iban: string;\n  deposit$: Observable<Deposit>;\n\n  isLoading: boolean = true;\n\n  subscription = new Subscription();\n  colsClasslist = PAGE_COLS_CLASSLIST;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private depositsService: DepositsService\n  ) {\n    this.route.params.pipe(take(1)).subscribe((params) => {\n      this.iban = params.iban;\n      this.deposit$ = this.depositsService.getDepositByIban(this.iban);\n    });\n  }\n\n  onClose() {\n    this.router.navigate(['/accounts']);\n  }\n}\n","// wrapper\r\nexport * from './deposit/deposit.component';\r\n\r\n// pages\r\nexport * from './deposit-statement/deposit-statement.component';\r\nexport * from './deposit-interests/deposit-interests.component';\r\nexport * from './deposit-terms/deposit-terms.component';\r\nexport * from './deposit-requisites/deposit-requisites.component';\r\n","export const PAGE_COLS_CLASSLIST = 'offset-lg-1 col-lg-10 offset-xl-2 col-xl-8';\r\n","export * from './deposits';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IsFeatureEnabledGuard } from '@shared/guards/is-feature-enabled.guard';\r\n\r\nimport { FEATURE_FLAG } from '@feature-flags/feature-flags.model';\r\n\r\nimport {\r\n  DepositComponent,\r\n  DepositRequisitesComponent,\r\n  DepositInterestsComponent,\r\n  DepositStatementComponent,\r\n  DepositTermsComponent,\r\n} from './components';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':iban',\r\n    component: DepositComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'statement',\r\n      },\r\n      {\r\n        path: 'statement',\r\n        component: DepositStatementComponent,\r\n      },\r\n      {\r\n        path: 'interests',\r\n        canActivate: [IsFeatureEnabledGuard],\r\n        data: { featureFlag: FEATURE_FLAG.DEPOSIT_REWARDS },\r\n        component: DepositInterestsComponent,\r\n      },\r\n      {\r\n        path: 'terms',\r\n        component: DepositTermsComponent,\r\n      },\r\n      {\r\n        path: 'requisites',\r\n        component: DepositRequisitesComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DepositsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { FilterModule } from '@filter/filter.module';\nimport { Statement2Module } from '@statement2/statement2.module';\n\nimport { DepositsRoutingModule } from './deposits-routing.module';\n\nimport {\n  DepositComponent,\n  DepositRequisitesComponent,\n  DepositInterestsComponent,\n  DepositStatementComponent,\n  DepositTermsComponent,\n} from './components';\n\nimport {\n  DepositHeaderComponent,\n  DepositInterestsFilterComponent,\n  DepositTabsComponent,\n  DepositInterestsStatementComponent,\n  DepositInterestsTransactionComponent,\n  DepositInterestsGroupComponent,\n  DepositInterestsDetailsComponent,\n} from './helpers';\n\nconst COMPONENTS = [\n  DepositComponent,\n  DepositRequisitesComponent,\n  DepositInterestsComponent,\n  DepositStatementComponent,\n  DepositTermsComponent,\n];\n\nconst HELPERS = [\n  DepositHeaderComponent,\n  DepositInterestsFilterComponent,\n  DepositTabsComponent,\n  DepositInterestsStatementComponent,\n  DepositInterestsTransactionComponent,\n  DepositInterestsGroupComponent,\n  DepositInterestsDetailsComponent,\n];\n\n@NgModule({\n  imports: [\n    // Angular\n    CommonModule,\n\n    // Vendor\n    InfiniteScrollModule,\n\n    // Jusan\n    FilterModule,\n    Statement2Module,\n    SharedModule,\n\n    // routing\n    DepositsRoutingModule,\n  ],\n  declarations: [COMPONENTS, HELPERS],\n})\nexport class DepositsModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Deposit } from '@accounts/account.model';\n\nimport { FeatureFlagsService } from '@feature-flags/feature-flags.service';\nimport { FEATURE_FLAG } from '@feature-flags/feature-flags.model';\n\n@Component({\n  selector: 'j-deposit-header',\n  templateUrl: './deposit-header.component.html',\n  styleUrls: ['./deposit-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DepositHeaderComponent {\n  @Input() iban: string;\n  @Input() deposit: Deposit;\n\n  isDepositOperationsDisabled$ = this.featureFlagsService.isDisabledStream(\n    FEATURE_FLAG.DEPOSIT_OPERATIONS\n  );\n\n  constructor(private featureFlagsService: FeatureFlagsService) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { MaskPipe } from 'ngx-mask';\n\nimport { Masks } from '@shared/masked/masked';\nimport { MoneyPipe } from '@shared/pipes';\n\nimport { Statement2Service } from '@statement2/services';\n\nimport { IDepositInterestTransaction } from '../../models';\nimport { DepositsService } from '@pages/deposits/services';\nimport { NotifierService } from 'angular-notifier';\nimport dayjs from 'dayjs';\nimport { UI_DATE_FORMAT } from '@utils/dates';\nimport { take } from 'rxjs/operators';\nimport { FilesService } from '@shared/services';\nimport { AnalyticsManagerAbstract } from '@analytics/services/manager';\n\n@Component({\n  selector: 'j-deposit-interests-details',\n  templateUrl: './deposit-interests-details.component.html',\n  styleUrls: ['./deposit-interests-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DepositInterestsDetailsComponent implements OnInit {\n  @Input() transaction: IDepositInterestTransaction;\n  @Input() iban: string = '';\n  @Input() depositName: string = '';\n\n  date$: Observable<string>;\n\n  groups: {\n    title: string;\n    data: { label: string; value: string; isCertificate?: boolean }[];\n  }[];\n\n  constructor(\n    private analytics: AnalyticsManagerAbstract,\n    private depositsService: DepositsService,\n    private filesService: FilesService,\n    private maskPipe: MaskPipe,\n    private moneyPipe: MoneyPipe,\n    private notifierService: NotifierService,\n    private statement2Service: Statement2Service,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.mapDate();\n    this.mapGroups();\n  }\n\n  onDownload() {\n    this.analytics.logEvent('RewardDetails_Download_Click', {\n      version: 1,\n      type: 'PDF'\n    });\n\n    this.notifierService.notify(\n      'info',\n      this.translateService.instant(this.mapDetailsLabel('DOWNLOADING'))\n    );\n\n    const name = this.translateService.instant(\n      this.mapDetailsLabel('FILENAME'),\n      {\n        name: this.depositName,\n        period: dayjs(this.transaction.documentDate).format(UI_DATE_FORMAT),\n      }\n    );\n\n    this.depositsService\n      .downloadDepositInterestById(this.iban, this.transaction.id)\n      .pipe(take(1))\n      .subscribe({\n        next: (blob) => {\n          this.analytics.logEvent('RewardDetails_Download_Result', {\n            version: 1,\n            status: 200,\n          });\n          this.filesService.downloadFile(blob, `${name}.pdf`);\n        },\n        error: (error) => {\n          this.analytics.logEvent('RewardDetails_Download_Result', {\n            version: 1,\n            status: 502,\n            error,\n          });\n        },\n      });\n  }\n\n  onKpnDownload() {\n    this.analytics.logEvent('RewardDetails_KPNCert_Click', {\n      version: 1,\n    });\n\n    this.notifierService.notify(\n      'info',\n      this.translateService.instant('DEPOSITS.KPN.DOWNLOADING')\n    );\n\n    const name = this.translateService.instant('DEPOSITS.KPN.FILENAME_BY_ID', {\n      date: dayjs(this.transaction.documentDate).format(UI_DATE_FORMAT),\n    });\n\n    this.depositsService\n      .downloadCertificate({\n        iban: this.iban,\n        interestId: this.transaction.id,\n      })\n      .subscribe({\n        next: (blob) => {\n          this.analytics.logEvent('RewardDetails_KPNCert_Result', {\n            version: 1,\n            status: 200,\n          });\n          this.filesService.downloadFile(blob, `${name}.pdf`);\n        },\n        error: (error) => {\n          this.analytics.logEvent('RewardDetails_KPNCert_Result', {\n            version: 1,\n            status: 502,\n            error,\n          });\n        },\n      });\n  }\n\n  private mapDate() {\n    this.date$ = this.statement2Service.mapTransactionDate(\n      this.transaction.documentDate\n    );\n  }\n\n  private mapGroups() {\n    this.groups = [\n      {\n        title: this.mapMainLabel('TITLE'),\n        data: this.generateMainData(),\n      },\n      {\n        title: this.mapDetalizationLabel('TITLE'),\n        data: this.generateDetalizationData(),\n      },\n    ];\n  }\n\n  private generateMainData() {\n    const data = [];\n\n    data.push({\n      label: this.mapMainLabel('IBAN'),\n      value: of(\n        this.maskPipe.transform(\n          this.transaction.interestAccount,\n          Masks.account.mask\n        )\n      ),\n    });\n\n    return data;\n  }\n\n  private generateDetalizationData() {\n    const kpn$ = this.transaction.taxed\n      ? of(\n          `${this.transaction.interestTax}% • ${this.moneyPipe.transform(\n            this.transaction.totalTaxes\n          )}`\n        )\n      : this.translateService.get(this.mapDetalizationLabel('NO_KPN'));\n\n    const data = [\n      {\n        label: this.mapDetalizationLabel('TOTAL'),\n        value: of(this.moneyPipe.transform(this.transaction.totalInterest)),\n      },\n      {\n        isCertificate: true,\n        label: this.mapDetalizationLabel('KPN'),\n        value: kpn$,\n      },\n      {\n        label: this.mapDetalizationLabel('TRANSFERRED'),\n        value: of(this.moneyPipe.transform(this.transaction.interest)),\n      },\n    ];\n\n    return data;\n  }\n\n  private mapMainLabel(key: string) {\n    return this.mapDetailsLabel(`MAIN.${key}`);\n  }\n\n  private mapDetalizationLabel(key: string) {\n    return this.mapDetailsLabel(`DETALIZATION.${key}`);\n  }\n\n  private mapDetailsLabel(key: string) {\n    return `DEPOSITS.INTERESTS.DETAILS.${key}`;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { AnalyticsManagerAbstract } from '@analytics/services/manager';\nimport { IStatementDates } from '@filter/filter.model';\n\n@Component({\n  selector: 'j-deposit-interests-filter',\n  templateUrl: './deposit-interests-filter.component.html',\n  styleUrls: ['./deposit-interests-filter.component.scss'],\n})\nexport class DepositInterestsFilterComponent {\n  @Input() filterDates: IStatementDates;\n\n  @Output() filtered = new EventEmitter<IStatementDates>();\n\n  @Output() downloaded = new EventEmitter();\n  @Output() kpnDownloaded = new EventEmitter();\n\n  constructor(private analytics: AnalyticsManagerAbstract) {}\n\n  onFilter(dates: IStatementDates) {\n    this.filtered.emit(dates);\n  }\n\n  onKpnDownload() {\n    this.analytics.logEvent('DepositMain_KPNCert_Click', { version: 1 });\n    this.kpnDownloaded.emit();\n  }\n\n  onDownload() {\n    this.analytics.logEvent('MainReward_Download_Click', {\n      version: 1,\n      type: 'PDF',\n    });\n    this.downloaded.emit();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport dayjs from 'dayjs';\n\nimport {\n  IDepositInterestGroup,\n  IDepositInterestTransaction,\n} from '../../models';\n\n@Component({\n  selector: 'j-deposit-interests-group',\n  templateUrl: './deposit-interests-group.component.html',\n  styleUrls: ['./deposit-interests-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DepositInterestsGroupComponent implements OnInit {\n  @Input() group: IDepositInterestGroup;\n  @Input() depositName: string;\n\n  @Output() clicked = new EventEmitter<IDepositInterestTransaction>();\n\n  title: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.mapGroupTitle();\n  }\n\n  onClick(transaction: IDepositInterestTransaction) {\n    this.clicked.emit(transaction);\n  }\n\n  private mapGroupTitle() {\n    this.title = dayjs(this.group.groupDate).format('YYYY');\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, OnDestroy } from '@angular/core';\n\nimport { asideAnimations } from '@core/animations';\n\nimport {\n  IDepositInterests,\n  IDepositInterestTransaction,\n} from '../../models';\n\n@Component({\n  selector: 'j-deposit-interests-statement',\n  templateUrl: './deposit-interests-statement.component.html',\n  styleUrls: ['./deposit-interests-statement.component.scss'],\n  animations: asideAnimations,\n})\nexport class DepositInterestsStatementComponent implements OnDestroy{\n  @Input() statement: IDepositInterests;\n  @Input() iban: string;\n  @Input() depositName: string;\n\n  activeTransaction: IDepositInterestTransaction;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n  \n  ngOnDestroy(): void {\n    this.document.body.classList.remove('overflow-hidden');\n  }\n\n  onClick(transaction: IDepositInterestTransaction) {\n    this.document.body.classList.add('overflow-hidden');\n    this.activeTransaction = transaction;\n  }\n\n  onClose() {\n    this.activeTransaction = null;\n    this.document.body.classList.remove('overflow-hidden');\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport dayjs from 'dayjs';\n\nimport { IDepositInterestTransaction } from '../../models';\n\n@Component({\n  selector: 'j-deposit-interests-transaction',\n  templateUrl: './deposit-interests-transaction.component.html',\n  styleUrls: ['./deposit-interests-transaction.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DepositInterestsTransactionComponent implements OnInit {\n  @Input() transaction: IDepositInterestTransaction;\n  @Input() depositName: string;\n\n  date$: Observable<string>;\n\n  constructor(private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.mapDate();\n  }\n\n  private mapDate() {\n    const date = dayjs(this.transaction.documentDate);\n\n    if (date.isSame(dayjs(), 'day')) {\n      this.date$ = this.translateService.get('DEPOSITS.INTERESTS.DATE.TODAY', {\n        datetime: date.format('HH:mm'),\n      });\n    } else if (\n      dayjs(this.transaction.documentDate).isSame(\n        dayjs().subtract(1, 'day'),\n        'day'\n      )\n    ) {\n      this.date$ = this.translateService.get(\n        'DEPOSITS.INTERESTS.DATE.YESTERDAY',\n        {\n          datetime: date.format('HH:mm'),\n        }\n      );\n    } else {\n      this.date$ = of(date.format('DD MMMM HH:mm'));\n    }\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { FeatureFlagsService, FEATURE_FLAG } from '@feature-flags/index';\n\nconst TABS = [\n  {\n    label: 'DEPOSITS.STATEMENT.TITLE',\n    link: 'statement',\n  },\n  {\n    label: 'DEPOSITS.INTERESTS.TITLE',\n    link: 'interests',\n    isRewards: true,\n  },\n  {\n    label: 'DEPOSITS.TERMS.TITLE',\n    link: 'terms',\n  },\n  {\n    label: 'DEPOSITS.REQUISITES.TITLE',\n    link: 'requisites',\n  },\n];\n\n@Component({\n  selector: 'j-deposit-tabs',\n  templateUrl: './deposit-tabs.component.html',\n  styleUrls: ['./deposit-tabs.component.scss'],\n})\nexport class DepositTabsComponent implements OnDestroy {\n  tabs;\n  subscription = new Subscription();\n\n  constructor(private featureFlagsService: FeatureFlagsService) {\n    this.initFeatureFlags();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private initFeatureFlags() {\n    this.subscription.add(\n      this.featureFlagsService.getFeatureFlags().subscribe((flags) => {\n        if (this.featureFlagsService.isDisabled(FEATURE_FLAG.DEPOSIT_REWARDS)) {\n          this.tabs = TABS.filter((tab) => !tab.isRewards);\n        } else {\n          this.tabs = [...TABS];\n        }\n      })\n    );\n  }\n}\n","\r\n// common helpers\r\nexport * from './deposit-header/deposit-header.component';\r\nexport * from './deposit-tabs/deposit-tabs.component';\r\n\r\n// interests helpers\r\nexport * from './deposit-interests-filter/deposit-interests-filter.component';\r\nexport * from './deposit-interests-statement/deposit-interests-statement.component';\r\nexport * from './deposit-interests-transaction/deposit-interests-transaction.component';\r\nexport * from './deposit-interests-group/deposit-interests-group.component';\r\nexport * from './deposit-interests-details/deposit-interests-details.component';\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { ApiService } from '@api/api.service';\n\nimport { mapParams } from '@utils/api';\n\nimport { Deposit } from '@accounts/account.model';\nimport { AccountsService } from '@accounts/services';\n\nimport { DEPOSIT_CERTIFICATE_TYPE } from '@core/models';\nimport { CompanyService } from '@company/company.service';\n\nimport { IStatement2 } from '@statement2/models';\n\nimport {\n  IDepositInterests,\n  DepositTerms,\n  IDepositInterestFilter,\n  IDepositFilter,\n  IDepositCertificateParams,\n} from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DepositsService {\n  constructor(\n    private accountsService: AccountsService,\n    private companyService: CompanyService,\n    private apiService: ApiService\n  ) {}\n\n  getStatement(iban: string, filter: IDepositFilter) {\n    const url = `companies/${this.companyService.currentId}/accounts/${iban}/statements`;\n    const params = mapParams(filter);\n\n    return this.apiService.getObservable<IStatement2>(url, null, params);\n  }\n\n  downloadStatement(iban: string, filter: IDepositFilter, fileType: string) {\n    const url = `companies/${this.companyService.currentId}/accounts/${iban}/statements`;\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Accept-File', fileType);\n    headers = headers.set('Content-Type', 'application/octet-stream');\n\n    const params = mapParams(filter);\n\n    let extension = fileType.substring(\n      fileType.lastIndexOf('/') + 1,\n      fileType.length\n    );\n\n    if (extension === '1c') {\n      extension += '.txt';\n    }\n\n    return this.apiService\n      .getObservable<IStatement2>(url, headers, params, {\n        responseType: 'blob',\n      })\n      .pipe(\n        map((file) => {\n          const filename = `${iban}.${extension}`;\n          return {\n            file,\n            filename,\n          };\n        })\n      );\n  }\n\n  getRequisitesPdf(iban: string) {\n    const url = `companies/${this.companyService.currentId}/accounts/${iban}/requisites`;\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Accept-File', 'application/pdf');\n    headers = headers.set('Content-Type', 'application/octet-stream');\n\n    const params = new HttpParams();\n    const extras = {\n      responseType: 'blob',\n    };\n\n    return this.apiService.getObservable(url, headers, params, extras);\n  }\n\n  getDepositInterests(iban: string, filter: IDepositInterestFilter) {\n    const url = `deposit-service/companies/${this.companyService.currentId}/deposits/${iban}/interests`;\n    const params = mapParams(filter);\n\n    return this.apiService.getV2Observable<IDepositInterests>(\n      url,\n      null,\n      params\n    );\n  }\n\n  downloadDepositInterests(iban: string, filter: IDepositInterestFilter) {\n    const url = `deposit-service/companies/${this.companyService.currentId}/deposits/${iban}/interests:export`;\n    const params = mapParams(filter);\n    const extras = {\n      responseType: 'blob',\n    };\n\n    return this.apiService.getV2Observable<IDepositInterests>(\n      url,\n      null,\n      params,\n      extras\n    );\n  }\n\n  downloadDepositInterestById(iban: string, id: string) {\n    const url = `deposit-service/companies/${this.companyService.currentId}/deposits/${iban}/interests/${id}/export`;\n    const extras = {\n      responseType: 'blob',\n    };\n\n    return this.apiService.getV2Observable(url, null, null, extras);\n  }\n\n  downloadCertificate(params: IDepositCertificateParams) {\n    const url = `deposit-service/companies/${this.companyService.currentId}/certificates`;\n    const body = {\n      params,\n      certificateTypeCode: DEPOSIT_CERTIFICATE_TYPE.TAX_ON_DEPOSIT_INTEREST,\n    };\n    const extras = {\n      responseType: 'blob',\n    };\n\n    return this.apiService.postV2Observable(url, body, null, null, extras);\n  }\n\n  getDepositTerms(iban: string) {\n    const url = `deposit-service/companies/${this.companyService.currentId}/deposits/${iban}`;\n    return this.apiService.getV2Observable<DepositTerms>(url);\n  }\n\n  getDepositByIban(iban: string) {\n    return this.accountsService.getAccountsList().pipe(\n      filter((list) => list.length > 0),\n      distinctUntilChanged(this.areArraysEqual),\n      map((list) => list.find((deposit) => deposit.iban === iban)),\n      filter((deposit) => !!deposit)\n    );\n  }\n\n  private areArraysEqual(a: Deposit[], b: Deposit[]) {\n    return (\n      a.length === b.length &&\n      a.every((value, index) => value.id === b[index].id)\n    );\n  }\n}\n","export * from './deposits.service';\r\n"],"names":[],"sourceRoot":"webpack:///"}