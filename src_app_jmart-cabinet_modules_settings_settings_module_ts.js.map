{"version":3,"file":"src_app_jmart-cabinet_modules_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/jmart-cabinet/components/input-autocomplete/input-autocomplete.component.ts","./src/app/jmart-cabinet/modules/settings/components/checkbox/checkbox.component.ts","./src/app/jmart-cabinet/modules/settings/components/delivery-list/delivery-list.component.ts","./src/app/jmart-cabinet/modules/settings/components/delivery-price/delivery-price.component.ts","./src/app/jmart-cabinet/modules/settings/components/delivery-table/delivery-table.component.ts","./src/app/jmart-cabinet/modules/settings/components/index.ts","./src/app/jmart-cabinet/modules/settings/components/information-logo/information-logo.component.ts","./src/app/jmart-cabinet/modules/settings/components/information-main/information-main.component.ts","./src/app/jmart-cabinet/modules/settings/components/information-person/information-person.component.ts","./src/app/jmart-cabinet/modules/settings/components/information-persons/information-persons.component.ts","./src/app/jmart-cabinet/modules/settings/components/information-res-persons/information-res-persons.component.ts","./src/app/jmart-cabinet/modules/settings/components/j-table/get-template.directive.ts","./src/app/jmart-cabinet/modules/settings/components/j-table/j-table.component.ts","./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/classes/working-time-mapper.class.ts","./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/j-tole-work-regime.ts","./src/app/jmart-cabinet/modules/settings/components/no-data/no-data.component.ts","./src/app/jmart-cabinet/modules/settings/components/points-info/points-info.component.ts","./src/app/jmart-cabinet/modules/settings/components/points-status/points-status.component.ts","./src/app/jmart-cabinet/modules/settings/components/points-table/points-table.component.ts","./src/app/jmart-cabinet/modules/settings/components/radio-button/radio-button.component.ts","./src/app/jmart-cabinet/modules/settings/components/select-city/select-city.component.ts","./src/app/jmart-cabinet/modules/settings/components/tabs/tabs.component.ts","./src/app/jmart-cabinet/modules/settings/containers/delivery/delivery.component.ts","./src/app/jmart-cabinet/modules/settings/containers/forms/create-delivery.form/create-delivery.component.ts","./src/app/jmart-cabinet/modules/settings/containers/index.ts","./src/app/jmart-cabinet/modules/settings/containers/information/information.component.ts","./src/app/jmart-cabinet/modules/settings/containers/pickup-points/pickup-points.component.ts","./src/app/jmart-cabinet/modules/settings/containers/schedule/schedule.component.ts","./src/app/jmart-cabinet/modules/settings/containers/users/users.component.ts","./src/app/jmart-cabinet/modules/settings/data/delivery-mock.ts","./src/app/jmart-cabinet/modules/settings/data/information-mock.ts","./src/app/jmart-cabinet/modules/settings/data/pickup-points-mock.ts","./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component.ts","./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/create-delivery-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-modal/delivery-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-remove-modal/delivery-remove-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/delivery/set-delivery-modal/set-delivery-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/index.ts","./src/app/jmart-cabinet/modules/settings/modals/information/add-edit-modal/add-edit-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/information/logo-modal/logo-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/information/remove-modal/remove-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/point/notice-modal/notice-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/point/pickup-points-modal/pickup-points-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/point/points-remove-modal/points-remove-modal.component.ts","./src/app/jmart-cabinet/modules/settings/modals/remove-delivery-modal/remove-delivery-modal.component.ts","./src/app/jmart-cabinet/modules/settings/models/delivery.model.ts","./src/app/jmart-cabinet/modules/settings/models/index.ts","./src/app/jmart-cabinet/modules/settings/models/information.model.ts","./src/app/jmart-cabinet/modules/settings/models/pickup-points.model.ts","./src/app/jmart-cabinet/modules/settings/pipes/filterPoints.pipe.ts","./src/app/jmart-cabinet/modules/settings/pipes/maskPrefixPhone.pipe.ts","./src/app/jmart-cabinet/modules/settings/pipes/number-space-format.pipe.ts","./src/app/jmart-cabinet/modules/settings/services/index.ts","./src/app/jmart-cabinet/modules/settings/services/information/responsible-persons/responsible-persons.abstract.ts","./src/app/jmart-cabinet/modules/settings/services/information/responsible-persons/responsible-persons.service.ts","./src/app/jmart-cabinet/modules/settings/services/modals.service.ts","./src/app/jmart-cabinet/modules/settings/services/pickup-points.service.ts","./src/app/jmart-cabinet/modules/settings/settings-routing.module.ts","./src/app/jmart-cabinet/modules/settings/settings.component.ts","./src/app/jmart-cabinet/modules/settings/settings.module.ts","./src/app/jmart-cabinet/modules/settings/utils/getRuDays.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { JInputComponent } from '@shared/input';\nimport { MaskedService } from '@shared/masked/masked.service';\n\nexport type InputAutocompleteOption<T = any> = {\n  title: string,\n  value: T\n};\n\n@Component({\n  selector: 'j-input-autocomplete',\n  templateUrl: './input-autocomplete.component.html',\n  styleUrls: ['./input-autocomplete.component.scss']\n})\nexport class InputAutocompleteComponent extends JInputComponent implements OnInit, OnDestroy {\n\n  @Input() options: InputAutocompleteOption[] = [];\n  @Input() name = 'inputAutocomplete';\n\n  @Output() onSelect = new EventEmitter();\n  @Output() inputChange = new EventEmitter();\n\n  inputValue: string = '';\n\n  constructor(\n    public maskedService: MaskedService\n  ) {\n    super(maskedService);\n  }\n\n  get isFilled(): boolean {\n    const hasAutoFill =\n      this.input?.nativeElement &&\n      window\n        .getComputedStyle(this.input.nativeElement, null)\n        .getPropertyValue('appearance') === 'menulist-button';\n    return `${this.formControl.value.title}`?.length || hasAutoFill ? true : false;\n  }\n\n  onChange(title: string) {\n    this.formControl.setValue({\n      title,\n      value: null,\n    });\n    this.inputChange.emit();\n  }\n  \n  onOptionSelect(option: InputAutocompleteOption): void {\n    this.formControl.setValue(option);\n    this.inputValue = option.title;\n    this.onSelect.emit(option);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.inputValue = this.formControl.value.title || '';\n    // if (this.formControl.value.title) {\n    //   const selectedOption = this.options.find(({ title }) => (\n    //     title === this.formControl.value.title\n    //   )) || { title: '', value: null };\n    //   this.onOptionSelect(selectedOption);\n    // }\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'j-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n\n  @Input() label: string = '';\n  @Input() control: FormControl = new FormControl();\n  @Input() name: string = 'checkbox';\n  @Input() class: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { DELIVERY_CATEGORY } from '../../models/delivery.model';\nimport { DeliveryService } from '../../services/delivery.service';\n\n@Component({\n  selector: 'j-delivery-list',\n  templateUrl: './delivery-list.component.html',\n  styleUrls: ['./delivery-list.component.scss']\n})\nexport class DeliveryListComponent implements OnInit, OnDestroy {\n  search = new FormControl('');\n\n  deliveries: any[] = [];\n\n  translatePrefix = 'JMART.SETTINGS.DELIVERY';\n  deliveryCategory: DELIVERY_CATEGORY;\n\n  dSub = new Subscription();\n\n  constructor(\n    private router: ActivatedRoute,\n    private deliveryService: DeliveryService\n  ) { }\n\n  ngOnInit(): void {\n    this.router.data.subscribe((data) => {\n      this.deliveryCategory = data.category;\n      this.deliveryService.selectedDelivery = this.deliveryCategory;\n    });\n\n    this.deliveryService.getDeliveries();\n\n    this.dSub.add(\n      this.deliveryService.deliveryCity$.subscribe(delivery => {\n        const isCity = this.deliveryCategory === DELIVERY_CATEGORY.BY_CITY;\n        this.deliveries = delivery.filter((d) => d.isCity === isCity);\n      })\n    );\n\n    // const deliveryCity$ = this.deliveryService.getDeliveries();\n\n    // this.dSub.add(\n    //   combineLatest([this.deliveryService.deliveryCity$.pipe(), this.search.valueChanges.pipe(startWith(''))])\n    //     .pipe(\n    //       map(([deliveryCity, search]) => {\n    //         // const isCity = this.deliveryCategory === DELIVERY_CATEGORY.BY_CITY;\n    //         const data = deliveryCity.filter(d => {\n    //           // add both from and to\n    //           return d.direction.from.title.toLowerCase().includes(search.toLowerCase())\n    //             // && d.isCity === isCity\n    //         });\n    //         console.log(data);\n    //         return data;\n    //       })\n    //     )\n    //     .subscribe(delivery => {\n    //       this.deliveries = delivery;\n    //     })\n    // );\n\n    this.search.valueChanges.subscribe(search => {\n      if(!search.trim()) { return this.deliveries }\n      return this.deliveries.filter(d => {\n        return d.city.name.toLowerCase().includes(search.toLowerCase())\n      })\n    })\n  }\n\n  ngOnDestroy() {\n    if(this.dSub) {\n      this.dSub.unsubscribe();\n    }\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nexport type DeliveryPrice = {\n  from: FormControl,\n  to: FormControl,\n  deliveryPrice: FormControl\n};\n\n@Component({\n  selector: 'j-delivery-price',\n  templateUrl: './delivery-price.component.html',\n  styleUrls: ['./delivery-price.component.scss']\n})\nexport class DeliveryPriceComponent implements OnInit, OnDestroy {\n\n  @Input() class: string = '';\n  @Input() price: FormGroup = null;\n  @Input() canBeRemoved: boolean;\n  @Input() isLast: boolean = false;\n\n  @Output() remove = new EventEmitter();\n\n  controls: DeliveryPrice;\n  checkbox;\n  checkboxChangeSub: Subscription;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.controls = this.price.controls as DeliveryPrice;\n    if (!this.showToInput) {\n      this.checkbox = new FormControl(false);\n      this.checkboxChangeSub = this.checkbox.valueChanges.subscribe((value) => {\n        this.controls.deliveryPrice.setValue(value ? '0' : '');\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (!this.showToInput) {\n      this.checkboxChangeSub.unsubscribe();\n    }\n  }\n\n  get showToInput() {\n    return [ 'deliveryPrice', 'to' ].every(controlName => String(this.controls[controlName].value) !== '0');\n  }\n\n  onRemove() {\n    this.remove.emit();\n  }\n\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CreateDeliveryModalComponent } from '../../modals/create-delivery-modal/create-delivery-modal.component';\nimport { RemoveDeliveryModalComponent } from '../../modals/remove-delivery-modal/remove-delivery-modal.component';\nimport { IDelivery } from '../../models/delivery.model';\nimport { NumberSpaceFormatPipe } from '../../pipes/number-space-format.pipe';\nimport { getRuDays } from '../../utils/getRuDays';\nimport { JTableClasses, JTableData } from '../j-table/j-table.component';\n\n@Component({\n  selector: 'j-delivery-table',\n  templateUrl: './delivery-table.component.html',\n  styleUrls: ['./delivery-table.component.scss'],\n})\nexport class DeliveryTableComponent implements OnInit, OnChanges {\n  @Input() deliveries: any[];\n\n  deliveryTableData: JTableData;\n  deliveryTableClasses: JTableClasses = {\n    th: 'p-3',\n    td: 'p-3',\n  };\n\n  translatePrefix = 'JMART.SETTINGS.DELIVERY';\n\n  constructor(\n    private translateService: TranslateService,\n    private ngbModalService: NgbModal,\n    private numberSpaceFormatPipe: NumberSpaceFormatPipe\n  ) {}\n\n  ngOnInit(): void {\n    const translate = this.translateService.instant(this.translatePrefix);\n    const rows = this.deliveries.map((delivery, index) => this.mapDelivery(delivery, index));\n    const columns = ['CITY', 'PRICE', 'TIME', 'ESTIMATED_TIME', 'ESTIMATED_MODE'].map(key => translate[key]);\n    \n    columns.push('');\n    this.deliveryTableData = {\n      columns,\n      rows,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.deliveryTableData) {\n      this.deliveryTableData.rows = changes.deliveries.currentValue.map((delivery, index) => this.mapDelivery(delivery, index));\n    }\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  edit(data: { delivery: IDelivery }) {\n    const modalRef = this.ngbModalService.open(CreateDeliveryModalComponent);\n    modalRef.componentInstance.editDelivery = data;\n  }\n\n  remove({ delivery: { id } }: { delivery: IDelivery, index: number }) {\n    const modalRef = this.ngbModalService.open(RemoveDeliveryModalComponent);\n    modalRef.componentInstance.deliveryId = id;\n  }\n\n  mapDelivery( delivery: IDelivery, index: number) {\n\n    const {\n      isJpost,\n      isCity,\n      direction: { from, to },\n      attributes,\n    } = delivery;\n\n      const city: { from: string, to?: string } = { from: from.title };\n      if (to && !isCity) city.to = to.title;\n      const jpostTitle = isJpost ? 'JPost' : 'Своя';\n\n      if (isJpost) {\n        return [\n          city,\n          null,\n          null,\n          null,\n          jpostTitle,\n          { delivery, index },\n        ]\n      }\n\n      const {\n        prices,\n        workingTime,\n        estimatedTime,\n        isToday,\n        deliveryEstimatedDay,\n      } = attributes;\n\n      return [\n        city,\n        prices.map(p => {\n          return {\n            price: parseInt(p.deliveryPrice as string) === 0 ? `Бесплатно` : `${this.numberSpaceFormatPipe.transform(p.deliveryPrice)}тг`,\n            range: ` от ${this.numberSpaceFormatPipe.transform(p.from)}тг ${parseInt(p.deliveryPrice as string) !== 0 ? `до ${this.numberSpaceFormatPipe.transform(p.to)}тг` : ''}`\n          }\n        }),\n        workingTime.map(t => {\n          return {\n            days: t.days.map(({ day, name }) => day || name.slice(0, -1)).join(', '),\n            hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0\n              ? ' Круглосуточно'\n              : `${t.hour.from} - ${t.hour.to}`\n          }\n        }),\n        {\n          ...(isToday && {\n            estimatedTime: `заказ до ${estimatedTime}`\n          }),\n          estimatedType: isToday ? 'Сегодня' : 'На следующий день',\n          deliveryEstimatedDay: `${deliveryEstimatedDay}${getRuDays(deliveryEstimatedDay)}`,\n          isCity\n        },\n        jpostTitle,\n        { delivery, index },\n      ];\n\n  }\n\n}\n","import { TabsComponent } from './tabs/tabs.component';\nimport { InformationLogoComponent } from './information-logo/information-logo.component';\nimport { InformationResPersonsComponent } from './information-res-persons/information-res-persons.component';\nimport { InformationPersonComponent } from './information-person/information-person.component';\nimport { InformationMainComponent } from './information-main/information-main.component';\nimport { InformationPersonsComponent } from './information-persons/information-persons.component';\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\nimport { PointsTableComponent } from './points-table/points-table.component';\nimport { PointsStatusComponent } from './points-status/points-status.component';\nimport { PointsInfoComponent } from './points-info/points-info.component';\nimport { CreateDeliveryModalComponent } from '../modals/create-delivery-modal/create-delivery-modal.component';\nimport { DeliveryModeToggleComponent } from '../modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component';\nimport { NoDataComponent } from './no-data/no-data.component';\nimport { DeliveryTableComponent } from './delivery-table/delivery-table.component';\nimport { DeliveryListComponent } from './delivery-list/delivery-list.component';\n\nexport const SETTINGS_COMPONENTS = [\n  TabsComponent,\n  InformationLogoComponent,\n  InformationResPersonsComponent,\n  InformationPersonComponent,\n  InformationMainComponent,\n  InformationPersonsComponent,\n  RadioButtonComponent,\n  PointsTableComponent,\n  PointsStatusComponent,\n  PointsInfoComponent,\n  NoDataComponent,\n  DeliveryListComponent,\n  DeliveryTableComponent,\n  CreateDeliveryModalComponent,\n  DeliveryModeToggleComponent,\n];\n\nexport * from './tabs/tabs.component';\nexport * from './information-logo/information-logo.component';\nexport * from './information-res-persons/information-res-persons.component';\nexport * from './information-person/information-person.component';\nexport * from './information-main/information-main.component';\nexport * from './information-persons/information-persons.component';\nexport * from './radio-button/radio-button.component';\nexport * from './points-table/points-table.component';\nexport * from './points-status/points-status.component';\nexport * from './points-info/points-info.component';\nexport * from './no-data/no-data.component';\nexport * from './delivery-list/delivery-list.component';\nexport * from './delivery-table/delivery-table.component';\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LogoModalComponent } from '../../modals';\nimport { ModalsService } from '../../services/modals.service';\n\n@Component({\n  selector: 'j-information-logo',\n  templateUrl: './information-logo.component.html',\n  styleUrls: ['./information-logo.component.scss']\n})\nexport class InformationLogoComponent implements OnInit {\n  @Input() smallLogo: string;\n\n  constructor(\n    private modalService: ModalsService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addLogo() {\n    this.modalService.addLogoModal(LogoModalComponent, this.smallLogo);\n  }\n\n  get tooltip() {\n    if(this.smallLogo) {\n      return 'JMART.SETTINGS.INFORMATION.UPLOAD_NEW_LOGO'\n    } else {\n      return 'JMART.SETTINGS.INFORMATION.UPLOAD_LOGO'\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CompanyService } from '@company/company.service';\nimport { ModalsService } from '../../services';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'j-information-main',\n  templateUrl: './information-main.component.html',\n  styleUrls: ['./information-main.component.scss']\n})\nexport class InformationMainComponent implements OnInit, OnDestroy {\n  logo: string;\n  companyName: FormControl;\n  fSub: Subscription;\n  cSub: Subscription;\n\n  constructor(private companyService: CompanyService, public modalService: ModalsService) { }\n\n  ngOnInit(): void {\n    this.fSub = this.modalService.uploadedLogo$.subscribe(el => {\n      if(el) {\n        const file = el;\n        const reader = new FileReader();\n        reader.onload = e => this.logo = reader.result.toString();\n        reader.readAsDataURL(file);\n      } else {\n        this.logo = '';\n      }\n    });\n\n    this.cSub = this.companyService.currentAuthority$.subscribe(el => {\n      // dev returns undefined\n      // this.companyName = new FormControl({ value: el.company.shortName, disabled: true });\n      this.companyName = new FormControl({value: 'TOO Tech and Friends', disabled: true});\n    });\n  }\n\n  ngOnDestroy(): void {\n    if(this.fSub) {\n      this.fSub.unsubscribe();\n    }\n\n    if(this.cSub) {\n      this.cSub.unsubscribe();\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AddEditModalComponent } from '../../modals';\nimport { IResponsablePerson } from '../../models';\nimport { ModalsService } from '../../services';\n\n@Component({\n  selector: 'j-information-person',\n  templateUrl: './information-person.component.html',\n  styleUrls: ['./information-person.component.scss']\n})\nexport class InformationPersonComponent implements OnInit {\n  @Input() blockId: number;\n  @Input() info: IResponsablePerson;\n  @Input() isLast: boolean;\n\n  constructor(private modalsService: ModalsService) { }\n\n  ngOnInit(): void {}\n\n  editPerson(info) {\n    this.modalsService.addEditPersonModal(AddEditModalComponent, this.blockId, info);\n  }\n\n  removePerson(id) {\n    this.modalsService.removePersonModal(this.blockId, id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IResponsablePersonsBlock } from '../../models';\nimport { ResponsiblePersonsService } from '../../services';\n\n@Component({\n  selector: 'j-information-persons',\n  templateUrl: './information-persons.component.html',\n  styleUrls: ['./information-persons.component.scss']\n})\nexport class InformationPersonsComponent implements OnInit {\n  persons: IResponsablePersonsBlock[];\n\n  constructor(private responsiblePersonsService: ResponsiblePersonsService) { }\n\n  ngOnInit(): void {\n    this.persons = this.responsiblePersonsService.get();\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AddEditModalComponent } from '../../modals';\nimport { IResponsablePersonsBlock } from '../../models';\nimport { ModalsService } from '../../services';\n\n@Component({\n  selector: 'j-information-res-persons',\n  templateUrl: './information-res-persons.component.html',\n  styleUrls: ['./information-res-persons.component.scss']\n})\nexport class InformationResPersonsComponent implements OnInit {\n\n\n  @Input() respPersons: IResponsablePersonsBlock[];\n\n  constructor(private modalsService: ModalsService) { }\n\n  ngOnInit(): void {\n  }\n\n  identify(index, item) {\n    return item.id;\n  }\n\n  addPerson(blockId) {\n    this.modalsService.addEditPersonModal(AddEditModalComponent, blockId);\n  }\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n@Directive({\n selector: '[getTemplate]',\n})\nexport class GetTemplateDirective {\n  @Input() name: string;\n  constructor(public template: TemplateRef<any>) { \n  }\n}","import { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\nimport { GetTemplateDirective } from './get-template.directive';\n\n// TODO probably we need generic type here instead of any\n// but the question is how we pass generic to input\nexport type JTableData = {\n  columns: any[],\n  rows: Array<any[]>,\n};\n\nexport type JTableClasses = Partial<{\n  table: string,\n  th: string,\n  td: string,\n}>;\n\n@Component({\n  selector: 'j-table',\n  templateUrl: './j-table.component.html',\n  styleUrls: ['./j-table.component.scss']\n})\nexport class JTableComponent implements OnInit, AfterContentInit {\n\n  @ContentChildren(GetTemplateDirective) templates: QueryList<GetTemplateDirective>;\n\n  @Input() data: JTableData;\n  @Input() class: JTableClasses = {};\n\n  tpls;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterContentInit() {\n    this.tpls = this.templates.toArray().reduce(\n      (acc, { name, template }) => {\n        acc[name] = template;\n        return acc;\n      },\n      {}\n    );\n  }\n\n  getColumnTplsByIndex(i: number) {\n    return this.tpls[`column-${i + 1}`];\n  }\n\n}\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { IWorkRegime, WORK_DAYS } from '../j-tole-work-regime';\n\nexport class WorkingTimeMapper {\n\n    workignTimeFormGroup = null;\n\n    constructor(externalWorkingTime = null) {\n        this.workignTimeFormGroup = externalWorkingTime\n            ? this.mapExternalToInternalWorkingTime(externalWorkingTime)\n            : this.getDefaultWorkingTime();\n    }\n\n    private getDefaultWorkingTime(): IWorkRegime[] {\n        return [\n            {\n              form: new FormGroup({\n                monday: new FormControl(false),\n                tuesday: new FormControl(false),\n                wednesday: new FormControl(false),\n                thursday: new FormControl(false),\n                friday: new FormControl(false),\n                saturday: new FormControl(false),\n                sunday: new FormControl(false),\n              }),\n              days: WORK_DAYS,\n              workRegimeTime: new FormGroup({\n                open: new FormControl('0900'),\n                close: new FormControl('1800'),\n              }),\n              workRegimeBreakTime: new FormGroup({\n                from: new FormControl('09:00'),\n                to: new FormControl('18:00'),\n              }),\n              workRegimeOptions: new FormGroup({\n                workRegimeTime: new FormControl(false),\n                workRegimeBreakTime: new FormControl(false),\n              }),\n            },\n          ];\n    }\n\n    public mapExternalToInternalWorkingTime(workingTime) {\n        return this.workignTimeFormGroup = workingTime.map((workTime, index) => {\n              const newWorkTime = {\n                form: new FormGroup({\n                  monday: new FormControl(false),\n                  tuesday: new FormControl(false),\n                  wednesday: new FormControl(false),\n                  thursday: new FormControl(false),\n                  friday: new FormControl(false),\n                  saturday: new FormControl(false),\n                  sunday: new FormControl(false),\n                }),\n                days: WORK_DAYS,\n                workRegimeTime: new FormGroup({\n                  open: new FormControl('0900'),\n                  close: new FormControl('1800'),\n                }),\n                workRegimeBreakTime: new FormGroup({\n                  from: new FormControl('09:00'),\n                  to: new FormControl('18:00'),\n                }),\n                workRegimeOptions: new FormGroup({\n                  workRegimeTime: new FormControl(false),\n                  workRegimeBreakTime: new FormControl(false),\n                }),\n              };\n      \n              const days = {\n                'Пн': 'monday',\n                'Вт': 'tuesday',\n                'Ср': 'wednesday',\n                'Чт': 'thursday',\n                'Пт': 'friday',\n                'Сб': 'saturday',\n                'Вс': 'sunday',\n              };\n      \n              const prevWorkingTime = workingTime[index - 1];\n              if (prevWorkingTime) {\n                prevWorkingTime.days.forEach(({ name, day }) => {\n                  const control = newWorkTime.form.get(\n                    days[day || name.slice(0, -1)]\n                  );\n                  control.disable();\n                  control.setValue(true);\n                });\n              }\n      \n              workTime.days.forEach(({ day, name }) => {\n                const enDay = days[day || name.slice(0, -1)];\n                newWorkTime.form.get(enDay).setValue(true);\n              });\n      \n              const isDayAngNight =\n                workTime.hour.from === '00:00' && workTime.hour.to === '23:59';\n      \n              if (isDayAngNight) {\n                newWorkTime.workRegimeOptions.get('workRegimeTime').setValue(true);\n                WorkingTimeMapper.toggleDisabledFromTo(true, newWorkTime);\n              }\n      \n              const [from, to] = isDayAngNight\n                ? ['', '']\n                : [workTime.hour.from, workTime.hour.to];\n      \n              newWorkTime.workRegimeTime.get('open').setValue(from);\n              newWorkTime.workRegimeTime.get('close').setValue(to);\n      \n              return newWorkTime;\n        });\n    }\n\n    public getExternalState() {\n        return this.workignTimeFormGroup.map((regTime) => {\n            const { open, close } = regTime.workRegimeTime.value;\n            let from = open,\n              to = close;\n      \n            const days = Object.entries(regTime.form.controls)\n              .filter(\n                ([_, { value, disabled }]: [string, FormControl]) =>\n                  value && !disabled\n              )\n              .map(([dayName]) => {\n                return {\n                  id: {\n                    sunday: 0,\n                    monday: 1,\n                    tuesday: 2,\n                    wednesday: 3,\n                    thursday: 4,\n                    friday: 5,\n                    saturday: 6,\n                  }[dayName],\n                  day: WorkingTimeMapper.mapDay(dayName),\n                };\n              });\n      \n            const hour = regTime.workRegimeOptions.value.workRegimeTime\n              ? {\n                  from: '00:00',\n                  to: '23:59',\n                }\n              : {\n                  from: from.indexOf(':') > -1 ? from : from.match(/.{1,2}/g).join(':'),\n                  to: to.indexOf(':') > -1 ? to : to.match(/.{1,2}/g).join(':'),\n                };\n      \n            return {\n              days,\n              hour,\n            };\n          });\n    }\n\n    public static mapDay(value: string) {\n        const dayNames = {\n            monday: WORK_DAYS[0],\n            tuesday: WORK_DAYS[1],\n            wednesday: WORK_DAYS[2],\n            thursday: WORK_DAYS[3],\n            friday: WORK_DAYS[4],\n            saturday: WORK_DAYS[5],\n            sunday: WORK_DAYS[6],\n          };\n    \n          switch (value) {\n            case dayNames.monday:\n              return 'Пн';\n            case dayNames.tuesday:\n              return 'Вт';\n            case dayNames.wednesday:\n              return 'Ср';\n            case dayNames.thursday:\n              return 'Чт';\n            case dayNames.friday:\n              return 'Пт';\n            case dayNames.saturday:\n              return 'Сб';\n            case dayNames.sunday:\n              return 'Вс';\n            default:\n              return '';\n            }\n    }\n\n    public static toggleDisabledFromTo(value: boolean, workTime): void {\n        const action = value ? 'disable' : 'enable';\n        ['open', 'close'].forEach((controlName) => {\n          const control = workTime.workRegimeTime.get(controlName);\n          control.setValue('');\n          control[action]();\n        });\n      }\n\n}\n","import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\nimport { WorkingTimeMapper } from './classes/working-time-mapper.class';\n\nexport interface IWorkRegime {\n  form: FormGroup;\n  days?: string[];\n  workRegimeTime?: FormGroup;\n  workRegimeBreakTime?: FormGroup;\n  workRegimeOptions?: FormGroup;\n}\n\nexport enum TIME_INPUT_TYPE {\n  FROM = 'FROM',\n  TO = 'TO',\n}\n\nexport const WORK_DAYS = [\n  'monday',\n  'tuesday',\n  'wednesday',\n  'thursday',\n  'friday',\n  'saturday',\n  'sunday',\n];\n\n@Component({\n  selector: 'j-tole-work-regime',\n  templateUrl: 'j-tole-work-regime.html',\n  styleUrls: ['j-tole-work-regime.scss'],\n})\nexport class JToleWorkRegimeComponent implements OnInit, OnDestroy {\n  subscription = new Subscription();\n\n  @Input() workRegimes: IWorkRegime[] = [\n    {\n      form: new FormGroup({\n        monday: new FormControl(false),\n        tuesday: new FormControl(false),\n        wednesday: new FormControl(false),\n        thursday: new FormControl(false),\n        friday: new FormControl(false),\n        saturday: new FormControl(false),\n        sunday: new FormControl(false),\n      }),\n      days: WORK_DAYS,\n      workRegimeTime: new FormGroup({\n        open: new FormControl('0900'),\n        close: new FormControl('1800'),\n      }),\n      workRegimeBreakTime: new FormGroup({\n        from: new FormControl('09:00'),\n        to: new FormControl('18:00'),\n      }),\n      workRegimeOptions: new FormGroup({\n        workRegimeTime: new FormControl(false),\n        workRegimeBreakTime: new FormControl(false),\n      }),\n    },\n  ];\n\n  pickedDaysCount = 0;\n  TIME_INPUT_TYPE = TIME_INPUT_TYPE;\n\n  @Input() showWorkRegimeBreakTime = true;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.workRegimes.forEach((workTime) =>\n      this.subsribeWorkTimeIsDayAndNight(workTime)\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  subsribeWorkTimeIsDayAndNight(workTime: IWorkRegime) {\n    const isDayAndNightSub = workTime.workRegimeOptions\n      .get('workRegimeTime')\n      .valueChanges.subscribe((value) =>\n        WorkingTimeMapper.toggleDisabledFromTo(value, workTime)\n      );\n    this.subscription.add(isDayAndNightSub);\n  }\n\n  deleteWorkRegimeHandler(index: number) {\n    this.workRegimes.splice(index, 1);\n  }\n\n  getDayTranslateKey(day: string) {\n    switch (day) {\n      case WORK_DAYS[0]:\n        return 'WEEK_DAYS.MONDAY';\n      case WORK_DAYS[1]:\n        return 'WEEK_DAYS.TUESDAY';\n      case WORK_DAYS[2]:\n        return 'WEEK_DAYS.WEDNESDAY';\n      case WORK_DAYS[3]:\n        return 'WEEK_DAYS.THURSDAY';\n      case WORK_DAYS[4]:\n        return 'WEEK_DAYS.FRIDAY';\n      case WORK_DAYS[5]:\n        return 'WEEK_DAYS.SATURDAY';\n      case WORK_DAYS[6]:\n        return 'WEEK_DAYS.SUNDAY';\n      default:\n        return '';\n    }\n  }\n\n  addWorkRegimesHandler() {\n    const newWorkRegimeForm = {\n      form: new FormGroup({}),\n      days: WORK_DAYS,\n      workRegimeTime: new FormGroup({\n        open: new FormControl(),\n        close: new FormControl(),\n      }),\n      workRegimeBreakTime: new FormGroup({\n        from: new FormControl(),\n        to: new FormControl(),\n      }),\n      workRegimeOptions: new FormGroup({\n        workRegimeTime: new FormControl(false),\n        workRegimeBreakTime: new FormControl(false),\n      }),\n    };\n\n    const prevWorkRegime = this.workRegimes[this.workRegimes.length - 1];\n\n    Object.entries(prevWorkRegime.form.controls).forEach((control) => {\n      if (control?.[1].value) {\n        newWorkRegimeForm.form.addControl(\n          control[0],\n          new FormControl({\n            value: true,\n            disabled: true,\n          })\n        );\n      } else {\n        newWorkRegimeForm.form.addControl(\n          control[0],\n          new FormControl({\n            value: false,\n            disabled: false,\n          })\n        );\n      }\n    });\n\n    this.subsribeWorkTimeIsDayAndNight(newWorkRegimeForm);\n\n    if (this.pickedDaysCount !== 7) {\n      this.workRegimes.push(newWorkRegimeForm);\n    }\n  }\n\n  getWorkRegimeSelectedDays(form: FormGroup, workTimeIndex): string {\n    const currentWorkRegimeSelectedDays = [];\n\n    const prevWorkTime = this.workRegimes[workTimeIndex - 1];\n\n    Object.entries(form.controls).forEach(\n      ([dayName, control]: [string, FormControl]) => {\n        if (\n          (control.value && !prevWorkTime) ||\n          (control.value &&\n            prevWorkTime &&\n            !prevWorkTime.form.get(dayName).value)\n        ) {\n          currentWorkRegimeSelectedDays.push(dayName);\n        }\n      }\n    );\n\n    this.pickedDaysCount = currentWorkRegimeSelectedDays.length;\n\n    return currentWorkRegimeSelectedDays.map(day => WorkingTimeMapper.mapDay(day)).join(', ');\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-no-data',\n  templateUrl: './no-data.component.html',\n  styleUrls: ['./no-data.component.scss']\n})\nexport class NoDataComponent implements OnInit {\n  @Input() text = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-points-info',\n  templateUrl: './points-info.component.html',\n  styleUrls: ['./points-info.component.scss']\n})\nexport class PointsInfoComponent implements OnInit {\n  @Input() text: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IPointStatus } from '../../models';\n\n@Component({\n  selector: 'j-points-status',\n  templateUrl: './points-status.component.html',\n  styleUrls: ['./points-status.component.scss']\n})\nexport class PointsStatusComponent implements OnInit {\n  @Input() statuses: IPointStatus[];\n  @Output() toggle = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onToggle(item) {\n    this.toggle.emit(item);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IPoint } from '../../models';\nimport { ModalsService } from '../../services';\n\n@Component({\n  selector: 'j-points-table',\n  templateUrl: './points-table.component.html',\n  styleUrls: ['./points-table.component.scss']\n})\nexport class PointsTableComponent implements OnInit {\n  @Input() points: IPoint[];\n  @Input() search: string;\n\n  translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';\n\n  constructor(private modalsService: ModalsService) { }\n\n  ngOnInit(): void {\n  }\n\n  identify(index, item) {\n    return item.storeLocationId;\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  edit(point: IPoint) {\n    this.modalsService.pickupPointsModal(point);\n  }\n}\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { POINT_TYPE } from '../../models';\n\n@Component({\n  selector: 'j-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonComponent implements OnInit {\n  @Input() options: any[];\n  @Input() formControl: FormControl = new FormControl(POINT_TYPE.SHOP);\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n}\n","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ICity } from '../../models/delivery.model';\nimport { DeliveryService } from '../../services/delivery.service';\n\n@Component({\n  selector: 'j-select-city',\n  templateUrl: './select-city.component.html',\n  styleUrls: ['./select-city.component.scss']\n})\nexport class SelectCityComponent implements OnInit {\n\n  @Input() label: string = '';\n  @Input() error = null;\n  @Input() class: string = '';\n  @Input() control = new FormControl({ cityName: '' });\n  @Output() select = new EventEmitter<ICity>();\n\n  cities: ICity[];\n  citiesNames: ICity[\"title\"][];\n\n  constructor(\n    // probably this service would be statefull for the case of memoizing select city component\n    private deliveryService: DeliveryService,\n  ) {}\n\n  ngOnInit(): void {\n    this.deliveryService.getCities().subscribe(cities => {\n      this.cities = cities;\n      this.citiesNames = this.cities.map(({ title }) => title);\n    });\n  }\n\n  onCitySelect(cityName) {\n    const city = this.cities.find(({ title: name }) => name === cityName);\n    this.control.setValue(city);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute } from '@angular/router';\nimport { CreateDeliveryModalComponent } from '../../modals/create-delivery-modal/create-delivery-modal.component';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'j-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.scss']\n})\nexport class DeliveryComponent implements OnInit {\n\n  translatePrefix = 'JMART.SETTINGS.DELIVERY';\n\n  modalSmParams = {\n    backdropClass: 'backdrop_light',\n    windowClass: 'modal_light modal_dictionary',\n    centered: true\n  };\n\n  constructor(private ngbModalService: NgbModal) { }\n\n  ngOnInit(): void {}\n\n  addDelivery() {\n    this.ngbModalService.open(CreateDeliveryModalComponent, this.modalSmParams);\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { deliveryModes, estimatedType } from '@jmart-cabinet/modules/settings/data/delivery-mock';\nimport { ICity, IType } from '@jmart-cabinet/modules/settings/models/delivery.model';\nimport { DeliveryService } from '@jmart-cabinet/modules/settings/services/delivery.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'j-create-delivery-form',\n  templateUrl: './create-delivery.component.html',\n  styleUrls: ['./create-delivery.component.scss']\n})\nexport class CreateDeliveryFormComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private fb: FormBuilder,\n    private deliveryService: DeliveryService\n  ) {}\n  \n  subscription = new Subscription();\n\n  form: FormGroup;\n  isSubmitted = false;\n  isCancel = false;\n\n  cities: ICity[];\n  cityNames: string[];\n\n  deliveryModes: IType[] = deliveryModes;\n  estimatedType = estimatedType;\n\n  formPricesLink = null;\n\n  editedIndex = -1;\n  test  = [1,2,3]\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      // deliveryMode: new FormControl('jpost', Validators.required),\n      isToday: new FormControl('today', Validators.required),\n      estimatedTime: new FormControl('1300', Validators.required),\n      workingTime: new FormGroup({\n        isDayAndNight: new FormControl(''),\n        hour: new FormGroup({\n          from: new FormControl(''),\n          to: new FormControl(''),\n        })\n      }),\n      prices: new FormArray([])\n    });\n    \n    this.addPrice(),\n    this.addPrice(true),\n\n    this.formPricesLink = (<FormArray>this.form.get('prices')).controls;\n\n    const isTodaySub = this.form.get('isToday').valueChanges.subscribe((value) => {\n      const action = value !== 'today'\n        ? 'disable'\n        : 'enable';\n      this.form.get('estimatedTime')[action]();\n    });\n    this.subscription.add(isTodaySub);\n    \n    const workingTimeSub = this.form.get('workingTime.isDayAndNight').valueChanges.subscribe((value) => {\n      const action = value\n        ? 'disable'\n        : 'enable';\n      const hourGroup = this.form.get('workingTime.hour') as FormGroup;  \n      Object.keys(hourGroup.controls).forEach(\n        key => hourGroup.controls[key][action]()\n      );\n    });\n\n    this.subscription.add(workingTimeSub);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  addPrice(canBeFree = false) {\n    const isDeliveryTypeCheckbox = canBeFree ? false : '';\n    (this.form.get('prices') as FormArray).push(new FormGroup({\n      from: new FormControl(''),\n      to: new FormControl(isDeliveryTypeCheckbox),\n      deliveryPrice: new FormControl(''),\n    }));\n  }\n\n  // get disabeEstimatedTime() {\n  //   console.log(this.form.get('isToday').value !== 'today')\n  //   return this.form.get('isToday').value !== 'today';\n  // }\n\n  get formTitle() {\n    const formTitleKey = this.editedIndex === -1 ? 'ADD' : 'EDIT';\n    return `JMART.SETTINGS.DELIVERY.${formTitleKey}`; \n  }\n\n  get cityError() {\n    return this.form.get('city').errors;\n  }\n\n  selectedCity(city: string) {\n    this.form.get('city').setValue(city);\n  }\n\n  save() {\n\n  }\n\n  remove() {}\n\n  cancel() {\n  }\n\n}\n","import { InformationComponent } from './information/information.component';\nimport { PickupPointsComponent } from './pickup-points/pickup-points.component';\nimport { DeliveryComponent } from './delivery/delivery.component';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { UsersComponent } from './users/users.component';\n\nexport const SETTINGS_CONTAINERS = [\n  InformationComponent,\n  PickupPointsComponent,\n  DeliveryComponent,\n  ScheduleComponent,\n  UsersComponent\n];\n\nexport * from './information/information.component';\nexport * from './pickup-points/pickup-points.component';\nexport * from './delivery/delivery.component';\nexport * from './schedule/schedule.component';\nexport * from './users/users.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-jmart-main',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss'],\n})\nexport class InformationComponent implements OnInit {\n\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ModalsService, PickupPointsService } from '../../services';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { pointsTypes } from '../../data/pickup-points-mock';\nimport { map, startWith } from 'rxjs/operators';\nimport { FILTER_POINT_STATUS, IPoint, IPointStatus } from '../../models/pickup-points.model';\n\n@Component({\n  selector: 'j-pickup-points',\n  templateUrl: './pickup-points.component.html',\n  styleUrls: ['./pickup-points.component.scss']\n})\nexport class PickupPointsComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  search = new FormControl('');\n  points: IPoint[];\n  translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';\n  isLoading = true;\n  statuses: IPointStatus[];\n  sSub: Subscription;\n  pSub = new Subscription();\n  cities: any[];\n\n  constructor(\n    private modalsService: ModalsService,\n    private pointsService: PickupPointsService\n    ) {\n    this.form = new FormGroup({ status: new FormControl('all')});\n\n    this.sSub = this.pointsService\n      .getStatuses()\n      .subscribe((statuses) => {\n        this.statuses = statuses.slice(0, 3);\n      });\n  }\n\n  ngOnInit(): void {\n    this.getCities();\n    const points$ = this.pointsService.getPoints();\n\n    this.pSub.add(\n      combineLatest([points$, this.search.valueChanges.pipe(startWith('')), this.form.get('status').valueChanges.pipe(startWith('all'))])\n        .pipe(\n          map(([points, search, status]) => {\n            let filteredData;\n            if(status !== 'all') {\n              filteredData = points.filter((point) => point.type === status);\n            } else {\n              filteredData = points;\n            }\n\n            let searchedData = filteredData.filter(d => {\n              return (d.companyStoreId && d.companyStoreId.toLowerCase().includes(search.toLowerCase()))\n                || d.city.name.toLowerCase().includes(search.toLowerCase())\n                || d.pickupAddress.toLowerCase().includes(search.toLowerCase())\n            });\n\n            return searchedData.map(el => ({\n              ...el,\n              workingTime: el.workingTime\n                ?  el.workingTime.map(t => {\n                    return {\n                      days: t.days.map(d => d.day).join(', '),\n                      hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0\n                        ? ' Круглосуточно'\n                        : `${t.hour.from} - ${t.hour.to}`,\n                      break: t.break.from.localeCompare('00:00') === 0  && t.break.to.localeCompare('00:00') === 0\n                        ? ' без перерыва'\n                        : `перерыв ${t.break.from} - ${t.break.to}`,\n                    }\n                  })\n                : '',\n              type: pointsTypes.find(p => {\n                if(p.value === el.type) return p.label\n              }),\n              isMain: el.isMain === 'Y' ? 'Основной склад по городу' : '',\n              isMainInCity: el.isMainInCity === 'Y' ? 'Основной склад в Казахстане' : ''\n            }))\n          })\n        )\n        .subscribe(\n          points => { this.points = points; }\n        )\n    );\n\n    this.pointsService.onPointsChanged.subscribe(\n      (({ action, id, point = null }) => {\n        const reaction = {\n          add: 'handleAdd',\n          edit: 'handleEdit',\n          delete: 'handleDelete',\n        }[action];\n        this[reaction](id, point)\n        // handle logic here\n        // don't forget to unsubscribe, also use Subacription if you multiple subs for teardown\n      })\n    )\n  }\n\n  handleAdd(id: number, point: IPoint) {\n    const modifiedPoint = this.mapPoint(point);\n    this.points.push(modifiedPoint);\n  }\n\n  handleEdit(id: number, point: IPoint) {\n    const index = this.points.findIndex(\n      ({ storeLocationId }) => id === storeLocationId\n    );\n    const modifiedPoint = this.mapPoint(point);\n    this.points[index] = modifiedPoint;\n  }\n\n  handleDelete(id: number, _) {\n    const index = this.points.findIndex(\n      ({ storeLocationId }) => id === storeLocationId\n    );\n    this.points.splice(index, 1);\n  }\n\n  ngOnDestroy(): void {\n    if(this.pSub) {\n      this.pSub.unsubscribe();\n    }\n    if(this.sSub) {\n      this.sSub.unsubscribe();\n    }\n  }\n\n  addPickupPoints() {\n    this.modalsService.pickupPointsModal();\n  }\n\n  get selected() {\n    return this.statuses.find((status) => {\n      return status.isSelected === true;\n    });\n  }\n\n  onSelect(status: FILTER_POINT_STATUS) {\n    this.form.get('status').patchValue(status);\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  getCities() {\n    this.pointsService.getCities().subscribe(city => {\n      this.cities = city;\n    });\n  }\n\n  mapPoint(el) {\n    return  {\n        ...el,\n        workingTime: el.workingTime\n          ?  el.workingTime.map(t => {\n              return {\n                days: t.days.map(d => d.day).join(', '),\n                hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0\n                  ? ' Круглосуточно'\n                  : `${t.hour.from} - ${t.hour.to}`,\n                break: t.break.from.localeCompare('00:00') === 0  && t.break.to.localeCompare('00:00') === 0\n                  ? ' без перерыва'\n                  : `перерыв ${t.break.from} - ${t.break.to}`,\n              }\n            })\n          : '',\n        type: pointsTypes.find(p => {\n          if(p.value === el.type) return p.label\n        }),\n        isMain: el.isMain === 'Y' ? 'Основной склад по городу' : '',\n        isMainInCity: el.isMainInCity === 'Y' ? 'Основной склад в Казахстане' : '',\n        city: this.cities.find(el => el.id === el.cityId)\n      }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-jmart-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-jmart-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { IDelivery, IType } from '../models/delivery.model';\n\nexport const deliveryModes: IType[] = [\n  {\n    value: 'jpost',\n    label: 'JPost'\n  },\n  {\n    value:  'own',\n    label: ' Своя',\n  }\n];\n\nexport const estimatedType: { value: boolean, label: string }[] = [\n  {\n    value:  true,\n    label: 'В день заказа, при заказе',\n  },\n  {\n    value:  false,\n    label: 'На следующий день',\n  }\n];\n\nexport const deliveryCity: IDelivery[] = [\n  {\n    id: 12,\n    isCity: true,\n    isJpost: false,\n    direction: {\n      from: {\n        cityId: 1,\n        title: '​​Нур-Султан'\n      },\n    },\n    attributes: {\n      prices: [\n        {\n          from: 1000,\n          to: 10000,\n          deliveryPrice: 1000\n        },\n        {\n          from: 10000,\n          to: 0,\n          deliveryPrice: 0\n        }\n      ],\n      workingTime: [\n        {\n          days: [\n            {\n              id: 0,\n              day: 'Пн',\n              name: 'Пн.',\n            },\n            {\n              id: 1,\n              day: 'Вт',\n              name: 'Вт.'\n            },\n            {\n              id: 2,\n              day: 'Ср',\n              name: 'Ср.'\n            },\n            {\n              id: 3,\n              day: 'Чт',\n              name: 'Чт.',\n            },\n            {\n              id: 4,\n              day: 'Пт',\n              name: 'Пт.',\n            },\n          ],\n          hour: {\n            from: '15:00',\n            to: '22:00'\n          },\n        },\n        {\n          days: [\n            {\n              id: 5,\n              day: 'Сб',\n              name: 'Сб.',\n            },\n            {\n              id: 6,\n              day: 'Вн',\n              name: 'Вн.',\n            },\n          ],\n          hour: {\n            from: '00:00',\n            to: '23:59'\n          },\n        },\n      ],\n      estimatedTime: '13:00',\n      isToday: false,\n    }\n  },\n  {\n    id: 13,\n    isJpost: false,\n    isCity: true,\n    direction: {\n      from: {\n        cityId: 2,\n        title: 'Алматы'\n      },\n    },\n    attributes: {\n      prices: [\n        {\n          from: 500,\n          to: 10000,\n          deliveryPrice: 1000\n        },\n        {\n          from: 10000,\n          to: 0,\n          deliveryPrice: 0\n        }\n      ],\n      workingTime: [\n        {\n          days: [\n            {\n              id: 0,\n              day: 'Пн',\n              name: 'Пн.',\n            },\n            {\n              id: 1,\n              day: 'Вт',\n              name: 'Вт.',\n            },\n            {\n              id: 2,\n              day: 'Ср',\n              name: 'Ср.',\n            },\n            {\n              id: 3,\n              day: 'Чт',\n              name: 'Чт.',\n            },\n            {\n              id: 4,\n              day: 'Пт',\n              name: 'Пт.',\n            },\n          ],\n          hour: {\n            from: '15:00',\n            to: '22:00'\n          },\n        },\n        {\n          days: [\n            {\n              id: 5,\n              day: 'Сб',\n              name: 'Сб.',\n            },\n            {\n              id: 6,\n              day: 'Вн',\n              name: 'Вн.',\n            },\n          ],\n          hour: {\n            from: '00:00',\n            to: '23:59'\n          },\n        },\n      ],\n      estimatedTime: '13:00',\n      isToday: true,\n    }\n  }\n];\n\nexport const deliveryIntercity = [];\n","import { IResponsablePersonsBlock } from '../models/information.model';\n\nexport const responsiblePersons: IResponsablePersonsBlock[] = [\n  {\n    id: 0,\n    title: 'Вопросы доставки',\n    persons: [\n      {\n        id: 1,\n        lastName: 'Хованская',\n        firstName: 'Антонида',\n        patronymic: 'Филипповна',\n        emails: ['AntonidaHovanskaya96@gmail.com', 'AHovanskaya96@gmail.com'],\n        phones: ['7023483123', '7023483100']\n      },\n      {\n        id: 2,\n        lastName: 'Яковлев',\n        firstName: 'Милий',\n        patronymic: 'Аркадьевич',\n        emails: ['ivlad1982@gmail.com', 'miliy@hotmail.com'],\n        phones: ['7053343248']\n      },\n    ]\n  },\n  {\n    id: 1,\n    title: 'Обновление остатков',\n    persons: [\n      {\n        id: 3,\n        lastName: 'Изофатова',\n        firstName: 'Мстислава',\n        patronymic: 'Виталиевна',\n        emails: ['MstislavaIzofatova215@mail.ru'],\n        phones: ['7025094556']\n      },\n      {\n        id: 4,\n        lastName: 'Журавлёв',\n        firstName: 'Никанор',\n        patronymic: 'Кириллович',\n        emails: ['NikanorZhuravlev@gmail.com'],\n        phones: ['7052396184']\n      },\n    ]\n  },\n  {\n    id: 2,\n    title: 'Жалобы и отзывы клиентов',\n    persons: [\n      {\n        id: 5,\n        lastName: 'Ибрагимова',\n        firstName: 'Алия',\n        patronymic: 'Шаяхметова',\n        emails: ['alya_shayachmetova@gmail.com'],\n        phones: ['7008188540']\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: 'Бухгалтерские вопросы',\n    persons: [\n      {\n        id: 6,\n        lastName: 'Алишеров',\n        firstName: 'Аскар',\n        patronymic: 'Куатович',\n        emails: ['askarbragim1982@gmail.com'],\n        phones: ['7023758534']\n      },\n      {\n        id: 7,\n        lastName: 'Владимировна',\n        firstName: 'Александра',\n        patronymic: 'Войчук',\n        emails: ['a_voychuk1982@gmail.com'],\n        phones: ['7703343248']\n      },\n    ]\n  },\n];\n\n","import { ICity, IPoint, IPointType } from '../models';\n\nexport const pointsTypes: IPointType[] = [\n  {\n    value: 'shop',\n    label: 'Магазин'\n  },\n  {\n    value: 'warehouse',\n    label: 'Склад'\n  }\n];\n\nexport const cities: ICity[] = [\n  {\n    cityId: 0,\n    cityName: 'Алматы'\n  },\n  {\n    cityId: 1,\n    cityName: 'Нур-Султан'\n  },\n  {\n    cityId: 2,\n    cityName: 'Шымкент'\n  },\n  {\n    cityId: 3,\n    cityName: 'Караганда'\n  },\n  {\n    cityId: 4,\n    cityName: 'Костанай'\n  },\n  {\n    cityId: 5,\n    cityName: 'Актобе'\n  },\n  {\n    cityId: 6,\n    cityName: 'Атырау'\n  },\n  {\n    cityId: 7,\n    cityName: 'Актау'\n  },\n  {\n    cityId: 8,\n    cityName: 'Усть-Каменогорск'\n  },\n  {\n    cityId: 9,\n    cityName: 'Павлодар'\n  },\n  {\n    cityId: 10,\n    cityName: 'Тараз'\n  },\n  {\n    cityId: 11,\n    cityName: 'Петропавловск'\n  },\n  {\n    cityId: 12,\n    cityName: 'Кокшетау'\n  },\n  {\n    cityId: 13,\n    cityName: 'Уральск'\n  },\n  {\n    cityId: 14,\n    cityName: 'Кызылорда'\n  },\n  {\n    cityId: 15,\n    cityName: 'Семей'\n  },\n  {\n    cityId: 16,\n    cityName: 'Талдыкорган'\n  }\n];\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport type DeliveryToggleMode = {\n  value: boolean,\n  label: string\n};\n\nexport type DeliveryToggleModesTuple = [\n  DeliveryToggleMode,\n  DeliveryToggleMode,\n];\n\n@Component({\n  selector: 'j-delivery-mode-toggle',\n  templateUrl: './delivery-mode-toggle.component.html',\n  styleUrls: ['./delivery-mode-toggle.component.scss']\n})\nexport class DeliveryModeToggleComponent implements OnInit {\n\n  @Input() control = new FormControl();\n\n  constructor() {}\n\n  mods: DeliveryToggleModesTuple = [\n    {\n      value: true,\n      label: 'Доставка JPost',\n    },\n    {\n      value: false,\n      label: 'Своя доставка',\n    },\n  ]\n\n  ngOnInit(): void {\n    // this.selectedMode = this.mods[0];\n    this.control.setValue(this.mods[1].value);\n  }\n\n  setMod({ value }: DeliveryToggleMode) {\n    this.control.setValue(value);\n  }\n\n}\n","import { AnalyticsManagerAbstract } from '@analytics/services/manager';\nimport { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { InputAutocompleteOption } from '@jmart-cabinet/components/input-autocomplete/input-autocomplete.component';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { WorkingTimeMapper } from '../../components/j-tole-work-regime/classes/working-time-mapper.class';\nimport { deliveryModes, estimatedType } from '../../data/delivery-mock';\nimport {\n  DELIVERY_MODE,\n  ICity,\n  IDelivery,\n  IType,\n} from '../../models/delivery.model';\nimport {\n  CityAndRegionOption,\n  DeliveryService,\n} from '../../services/delivery.service';\nimport { getRuDays } from '../../utils/getRuDays';\n\n@Component({\n  selector: 'j-create-deivery-modal',\n  templateUrl: './create-delivery-modal.component.html',\n  styleUrls: ['./create-delivery-modal.component.scss'],\n})\nexport class CreateDeliveryModalComponent implements OnInit {\n\n  modalSmParams = {\n    backdropClass: 'backdrop_light',\n    windowClass: 'modal_light modal_dictionary',\n    centered: true,\n  };\n\n  @Input() editDelivery: { delivery: IDelivery; index: number } = null;\n\n  subscription = new Subscription();\n\n  form: FormGroup;\n  isSubmitted = false;\n  isCancel = false;\n\n  cities: ICity[];\n  cityNames: string[];\n\n  deliveryModes: IType[] = deliveryModes;\n  estimatedType = estimatedType;\n\n  formPricesLink = null;\n\n  editedIndex = -1;\n\n  selectedMode: DELIVERY_MODE;\n  selectedCity: '';\n\n  workingTime = new WorkingTimeMapper();\n\n  editDeliveryId = null;\n  \n  accidentTimeToggle = false;\n\n  citiesAndRegionsCache: CityAndRegionOption[] = [];\n  citiesAndRegions: { [fieldName: string]: CityAndRegionOption[] } = {};\n\n  constructor(\n    public modal: NgbActiveModal,\n    private deliveryService: DeliveryService,\n    private fb: FormBuilder,\n    private router: Router,\n    private analytics: AnalyticsManagerAbstract\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      isJpost: new FormControl(false, Validators.required),\n      direction: new FormGroup({\n        from: new FormControl({ cityName: '' }, Validators.required),\n      }),\n      prices: new FormArray([]),\n      deliveryEstimatedDay: new FormControl('', Validators.required),\n    });\n\n    this.isInterCity\n      ? this.onInterCityFormEstablish()\n      : this.onCityFormEstablish();\n\n    this.deliveryService\n      .getCitiesAndRegion()\n      .subscribe((citiesAndRegions: CityAndRegionOption[]) => {\n        this.citiesAndRegionsCache = citiesAndRegions;\n        Object.keys((this.form.get('direction') as FormGroup).controls).forEach(\n          (fieldName) => {\n            this.setDefaultDirectionsOptions(fieldName);\n          }\n        );\n      });\n\n    this.addPrice();\n    this.addPrice(true);\n\n    this.formPricesLink = (<FormArray>this.form.get('prices')).controls;\n    const firstPriceFromField = this.formPricesLink[0].controls.from;\n    firstPriceFromField.setValue('0');\n    firstPriceFromField.disable();\n\n    if (this.editDelivery) {\n      this.onEdit();\n    }\n    \n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  setDefaultDirectionsOptions(fieldName: string) {\n    const regionsCount = 15;\n    this.citiesAndRegions[fieldName] = this.citiesAndRegionsCache.slice(\n      0,\n      regionsCount\n    );\n  }\n\n  onInterCityFormEstablish() {\n\n    const directions = this.form.get('direction') as FormGroup;\n    directions.addControl('to', new FormControl({ cityName: '' }));\n    directions.setValue({\n      from: { title: '', value: null },\n      to: { title: '', value: null },\n    });\n    Object.keys(directions.controls).forEach((fieldName) => {\n      const field = directions.get(fieldName);\n      field.valueChanges\n        .pipe(debounceTime(200))\n        .subscribe((option: InputAutocompleteOption) => {\n          if (!option.value) {\n            this.citiesAndRegions[fieldName] =\n              this.citiesAndRegionsCache.filter(\n                ({ title }) =>\n                  title.toLowerCase().indexOf(option.title.toLowerCase()) > -1\n              );\n          } else {\n            this.setDefaultDirectionsOptions(fieldName);\n          }\n          if (option.title === '') {\n            this.setDefaultDirectionsOptions(fieldName);\n          }\n          this.excludeSelectedCityDirections();\n        });\n    });\n  }\n\n  onCityFormEstablish() {\n\n    this.form.get('deliveryEstimatedDay').disable();\n\n    this.form.addControl('isToday', new FormControl(true, Validators.required));\n    this.form.addControl(\n      'workingTime',\n      new FormGroup({\n        isDayAndNight: new FormControl('', Validators.required),\n        hour: new FormGroup({\n          from: new FormControl('', Validators.required),\n          to: new FormControl('', Validators.required),\n        }),\n      })\n    );\n\n    this.form.addControl(\n      'estimatedTime',\n      new FormControl('1300', Validators.required)\n    );\n\n    const workingTimeSub = this.form\n      .get('workingTime.isDayAndNight')\n      .valueChanges.subscribe((value) => {\n        const action = value ? 'disable' : 'enable';\n        const hourGroup = this.form.get('workingTime.hour') as FormGroup;\n        Object.keys(hourGroup.controls).forEach((key) =>\n          hourGroup.controls[key][action]()\n        );\n      });\n\n    this.subscription.add(workingTimeSub);\n\n    const isTodaySub = this.form\n      .get('isToday')\n      .valueChanges.subscribe((value) => {\n        const action = value ? 'enable' : 'disable';\n        this.form.get('estimatedTime')[action]();\n      });\n\n    this.subscription.add(isTodaySub);\n  }\n\n  setAccidentTimeToggle(value: boolean): void {\n    this.accidentTimeToggle = value;\n    const deliveryEstimatedDay = this.form.get('deliveryEstimatedDay');\n    const estimatedTime = this.form.get('estimatedTime');\n    const isToday = this.form.get('isToday');\n\n    const [\n      dayAction,\n      timeAction,\n      dayEffect,\n    ] = value\n      ? [ 'enable', 'disable', () => {} ]\n      : [ 'disable', 'enable', () => deliveryEstimatedDay.setValue('') ];\n\n    deliveryEstimatedDay[dayAction]();\n    isToday[timeAction]();\n    estimatedTime[timeAction]();\n    dayEffect();\n    isToday.setValue(false);\n\n  }\n\n  excludeSelectedCityDirections() {\n    const selectedCityDirections = Object.values(\n      (this.form.get('direction') as FormGroup).controls\n    )\n      .filter(({ value: { value } }) => value && value.type === 3)\n      .map(({ value: { title } }) => title);\n\n    this.citiesAndRegions = Object.entries(this.citiesAndRegions).reduce(\n      (acc, [fieldName, directions]) => {\n        acc[fieldName] = directions.filter(\n          ({ title }) => !selectedCityDirections.includes(title)\n        );\n        return acc;\n      },\n      {}\n    );\n  }\n\n  close() {\n    this.modal.dismiss();\n  }\n\n  setMode(mode: DELIVERY_MODE) {\n    this.selectedMode = mode;\n  }\n\n  get isModeOwn() {\n    return !this.form.get('isJpost').value;\n  }\n\n  get isInterCity() {\n    return this.router.url.indexOf('intercity') > -1;\n  }\n\n  addPrice(canBeFree = false) {\n    const isDeliveryTypeCheckbox = canBeFree ? '0' : '';\n    const prices = this.form.get('prices') as FormArray;\n    const price = new FormGroup({\n      from: new FormControl(''),\n      to: new FormControl(isDeliveryTypeCheckbox),\n      deliveryPrice: new FormControl(isDeliveryTypeCheckbox),\n    });\n    let index;\n\n    if (prices.length <= 1) {\n      prices.push(price);\n      index = prices.length;\n    } else {\n      index = prices.length;\n      prices.insert(index - 1, price);\n      const nextPrice = prices.at(index);\n      price.get('from').setValue(nextPrice.get('from').value);\n      nextPrice.get('from').setValue('0');\n    }\n\n    if (!canBeFree) {\n      const priceSub = price.get('to').valueChanges.subscribe((value) => {\n        (prices.at(index) as FormGroup).get('from').setValue(value);\n      });\n      this.subscription.add(priceSub);\n    }\n  }\n\n  removePrice(index: number) {\n    const prices = this.form.get('prices') as FormArray;\n    prices\n      .at(index + 1)\n      .get('from')\n      .setValue(prices.at(index - 1).get('to').value);\n    (this.form.get('prices') as FormArray).removeAt(index);\n  }\n\n  public getEstimatedDaysSuffix = getRuDays;\n\n  // get disabeEstimatedTime() {\n  //   console.log(this.form.get('isToday').value !== 'today')\n  //   return this.form.get('isToday').value !== 'today';\n  // }\n\n  get formTitle() {\n    const formTitleKey = this.editedIndex === -1 ? 'ADD' : 'EDIT';\n    return `JMART.SETTINGS.DELIVERY.${formTitleKey}`;\n  }\n\n  get cityError() {\n    return this.form.get('city').errors;\n  }\n\n  onSave() {\n    const {\n      isJpost,\n      direction: rawDirection,\n      prices,\n      isToday,\n      estimatedTime,\n      deliveryEstimatedDay,\n    } = this.form.getRawValue();\n\n    const isCity = !this.isInterCity;\n\n    const mapDirection = this.isInterCity\n      ? ({ value }: CityAndRegionOption) => value\n      : (city: ICity) => ({\n          ...city,\n          id: city.cityId || city.id,\n          type: city.type,\n        });\n\n    const direction = Object.entries(rawDirection).reduce(\n      (acc, [key, value]: [string, ICity & CityAndRegionOption]) => {\n        acc[key] = mapDirection(value);\n        return acc;\n      },\n      {}\n    );\n\n    const delivery = {\n      ...(this.editDeliveryId && {\n        id: this.editDeliveryId,\n      }),\n      isCity,\n      isJpost,\n      direction,\n      attributes: null,\n    };\n\n    if (!isJpost) {\n      delivery.attributes = {\n        prices: prices.map((price) => {\n          Object.keys(price).forEach((key) => {\n            const value = price[key];\n            price[key] =\n              typeof price[key] === 'number'\n                ? value\n                : parseInt(value.replace(/ /g, ''));\n          });\n          return price;\n        }),\n        workingTime: this.workingTime.getExternalState(),\n        ...(estimatedTime &&\n          isToday && {\n            estimatedTime: estimatedTime.match(/.{1,2}/g).join(':'),\n          }),\n        isToday: isToday || false,\n        deliveryEstimatedDay: deliveryEstimatedDay || (isToday ? 0 : 1),\n      };\n    }\n\n    const [action, args] = this.editDelivery\n      ? ['editDelivery', [delivery, this.editDeliveryId]]\n      : ['addDelivery', [delivery]];\n\n    if (action === 'addDelivery') {\n      this.analytics.logEvent('JMartDeliveryAdd_Save_Click', {\n        version: 1,\n        region: this.deliveryService.selectedDelivery,\n        type: isJpost ? 'jpost' : 'client',\n      });\n    }\n\n    this.deliveryService[action](...args);\n    this.close();\n  }\n\n  onEdit() {\n    this.editDeliveryId = this.editDelivery.delivery.id;\n\n    const {\n      isJpost,\n      direction: { from, to },\n      attributes: {\n        isToday,\n        estimatedTime,\n        workingTime,\n        prices,\n        deliveryEstimatedDay,\n      },\n    } = this.editDelivery.delivery;\n\n    const direction = this.isInterCity\n      ? {\n          from: { title: from.title, value: from },\n          to: { title: to.title, value: to },\n        }\n      : {\n          from,\n        };\n\n    const form = {\n      isJpost,\n      isToday,\n      direction,\n      ...(!isJpost && {\n        ...(estimatedTime && {\n          estimatedTime: estimatedTime.split(':').join(''),\n        }),\n        workingTime: {\n          hour: {\n            to: workingTime[0].hour.to,\n            from: workingTime[0].hour.from,\n          },\n          isDayAndNight: [\n            { key: 'to', value: '23:59' },\n            { key: 'from', value: '00:00' },\n          ].every(({ key, value }) => workingTime[0].hour[key] === value),\n        },\n        prices,\n        ...(deliveryEstimatedDay && { deliveryEstimatedDay }),\n      }),\n    };\n\n    if (!isJpost) {\n      const pricesDiff =\n        prices.length - (this.form.get('prices') as FormArray).length;\n\n      if (pricesDiff > 0) {\n        for (let i = 0; i < pricesDiff; i++) {\n          this.addPrice();\n        }\n      }\n\n      if (workingTime) {\n        this.workingTime = new WorkingTimeMapper(workingTime);\n      }\n    }\n\n    // this.form.setValue(form);\n    this.form.patchValue(form);\n    setTimeout(() => {\n      if (\n        (parseInt(this.editDelivery.delivery.attributes.deliveryEstimatedDay) > 1)\n      ) {\n        this.setAccidentTimeToggle(true);\n      }\n      this.form.get('isJpost').setValue(isJpost);\n    }, 0);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DELIVERY_MODE, ICity, IType } from '@jmart-cabinet/modules/settings/models/delivery.model';\nimport { deliveryModes, estimatedType } from '@jmart-cabinet/modules/settings/data/delivery-mock';\nimport { DeliveryService } from '@jmart-cabinet/modules/settings/services/delivery.service';\n\n@Component({\n  selector: 'j-delivery-modal',\n  templateUrl: './delivery-modal.component.html',\n  styleUrls: ['./delivery-modal.component.scss']\n})\nexport class DeliveryModalComponent implements OnInit {\n  @Input() mode: DELIVERY_MODE;\n\n  form: FormGroup;\n  isSubmitted = false;\n  isCancel = false;\n\n  cities: ICity[];\n  cityNames: string[];\n\n  translatePrefix = 'JMART.SETTINGS.DELIVERY';\n\n  deliveryModes: IType[] = deliveryModes;\n  estimatedType = estimatedType;\n\n  editedIndex = -1;\n\n  constructor(\n    private ngbActiveModal: NgbActiveModal,\n    private ngbModalService: NgbModal,\n    private fb: FormBuilder,\n    private deliveryService: DeliveryService\n  ) { }\n\n  ngOnInit(): void {\n    this.getCities();\n\n    /* Form initialization */\n    this.form = this.fb.group({\n      city: new FormControl('', Validators.required),\n      deliveryMode: new FormControl('jpost', Validators.required),\n      estimatedType: new FormControl('today', Validators.required),\n    });\n  }\n\n  save() {}\n\n  remove() {}\n\n  cancel() {\n    this.ngbActiveModal.dismiss();\n  }\n\n  get formTitle() {\n    return this.editedIndex === -1 ? this.mapTranslate('ADD') : this.mapTranslate('EDIT')\n  }\n\n  getCities() {\n    const cities = this.deliveryService.getCities();\n    // this.cities = cities;\n    // this.cityNames = cities.map((city) => city.cityName);\n  }\n\n  get cityError() {\n    return this.form.get('city').errors;\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  selectedCity(city: string) {\n    this.form.get('city').setValue(city);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-delivery-remove-modal',\n  templateUrl: './delivery-remove-modal.component.html',\n  styleUrls: ['./delivery-remove-modal.component.scss']\n})\nexport class DeliveryRemoveModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DELIVERY_MODE } from '@jmart-cabinet/modules/settings/models/delivery.model';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeliveryModalComponent } from '../delivery-modal/delivery-modal.component';\n\n@Component({\n  selector: 'j-set-delivery-modal',\n  templateUrl: './set-delivery-modal.component.html',\n  styleUrls: ['./set-delivery-modal.component.scss']\n})\nexport class SetDeliveryModalComponent implements OnInit {\n  modalSmParams = {\n    backdropClass: 'backdrop_light',\n    windowClass: 'modal_light modal_dictionary',\n    centered: true\n  };\n\n  constructor(public modal: NgbActiveModal, private ngbModalService: NgbModal) { }\n\n  ngOnInit(): void { }\n\n  close() {\n    this.modal.dismiss();\n  }\n\n  setJpost() {\n    const modalRef = this.ngbModalService.open(DeliveryModalComponent, this.modalSmParams);\n    modalRef.componentInstance.mode = DELIVERY_MODE.JPOST;\n    this.modal.dismiss();\n  }\n\n  setOwnDelivery() {\n    const modalRef = this.ngbModalService.open(DeliveryModalComponent, this.modalSmParams);\n    modalRef.componentInstance.mode = DELIVERY_MODE.OWN;\n    this.modal.dismiss();\n  }\n}\n","import { LogoModalComponent } from './information/logo-modal/logo-modal.component';\nimport { AddEditModalComponent } from './information/add-edit-modal/add-edit-modal.component';\nimport { RemoveModalComponent } from './information/remove-modal/remove-modal.component';\nimport { PickupPointsModalComponent } from './point/pickup-points-modal/pickup-points-modal.component';\nimport { PointsRemoveModalComponent } from './point/points-remove-modal/points-remove-modal.component';\nimport { NoticeModalComponent } from './point/notice-modal/notice-modal.component';\nimport { SetDeliveryModalComponent } from './delivery/set-delivery-modal/set-delivery-modal.component';\nimport { DeliveryModalComponent } from './delivery/delivery-modal/delivery-modal.component';\nimport { DeliveryRemoveModalComponent } from './delivery/delivery-remove-modal/delivery-remove-modal.component';\n\nexport const SETTINGS_MODALS = [\n  LogoModalComponent,\n  AddEditModalComponent,\n  RemoveModalComponent,\n  PickupPointsModalComponent,\n  PointsRemoveModalComponent,\n  NoticeModalComponent,\n  SetDeliveryModalComponent,\n  DeliveryModalComponent,\n  DeliveryRemoveModalComponent,\n];\n\nexport * from './information/logo-modal/logo-modal.component';\nexport * from './information/add-edit-modal/add-edit-modal.component';\nexport * from './information/remove-modal/remove-modal.component';\nexport * from './point/pickup-points-modal/pickup-points-modal.component';\nexport * from './information/remove-modal/remove-modal.component';\nexport * from './point/notice-modal/notice-modal.component';\nexport * from './delivery/set-delivery-modal/set-delivery-modal.component';\nexport * from './delivery/delivery-modal/delivery-modal.component';\nexport * from './delivery/delivery-remove-modal/delivery-remove-modal.component';\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IResponsablePerson, IResponsablePersonsBlock } from '../../../models';\nimport { ModalsService } from '../../../services/modals.service';\nimport { ResponsiblePersonsService } from '../../../services/information/responsible-persons/responsible-persons.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-jmart-settings-add-modal',\n  templateUrl: './add-edit-modal.component.html',\n  styleUrls: ['./add-edit-modal.component.scss']\n})\nexport class AddEditModalComponent implements OnInit {\n  @Input() public blockId;\n  @Input() public info: IResponsablePerson;\n  form: FormGroup;\n  isSubmitted = false;\n  limit = 4;\n  editedIndex = -1;\n\n  constructor(\n    private modal: NgbActiveModal,\n    private resPersonsService: ResponsiblePersonsService,\n    private modalsService: ModalsService,\n    private fb: FormBuilder,\n  ) {\n    /* Form initialization */\n    this.form = this.fb.group({\n      lastName: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      patronymic: new FormControl(''),\n      emails:  this.fb.array([\n        this.fb.group({\n          email: new FormControl('', [Validators.required, Validators.email])\n        })\n      ]),\n      phones: this.fb.array([\n        this.fb.group({\n          phone: new FormControl('', Validators.required)\n        })\n      ])\n    });\n  }\n\n  ngOnInit(): void {\n    /* Filling in a form */\n    if(this.info) {\n      this.editedIndex = 1;\n      this.form.patchValue({\n        lastName: this.info.lastName,\n        firstName: this.info.firstName,\n        patronymic: this.info.patronymic,\n      });\n      this.info.emails.forEach((el, index) => {\n        if(index > 0) this.addEmail();\n        this.emails().at(index).get('email').patchValue(el);\n      });\n      this.info.phones.forEach((el, index) => {\n        if(index > 0) this.addPhone();\n        this.phones().at(index).get('phone').patchValue(el);\n      });\n    }\n  }\n\n  get formTitle () {\n    return this.editedIndex === -1 ? 'JMART.SETTINGS.INFORMATION.ADD_RESP_PERSON' : 'JMART.SETTINGS.INFORMATION.EDIT_RESP_PERSON'\n  }\n\n  get lastNameError() {\n    return this.form.get('lastName').errors;\n  }\n\n  get fistNameError() {\n    return this.form.get('firstName').errors;\n  }\n\n  /* Phones */\n  phones(): FormArray {\n    return this.form.get('phones') as FormArray;\n  }\n\n  newPhone(): FormGroup {\n    return this.fb.group({\n      phone: new FormControl('', Validators.required)\n    });\n  }\n\n  addPhone() {\n    if(this.phones().length > this.limit) {\n      return;\n    }\n    this.phones().push(this.newPhone());\n  }\n\n  removePhone(i: number) {\n    this.phones().removeAt(i);\n  }\n\n  phoneError(i) {\n    // @ts-ignore\n    return (<FormArray>this.form.get('phones')).controls[i].controls.phone.errors;\n  }\n\n  /* Emails */\n  emails(): FormArray {\n    return this.form.get('emails') as FormArray;\n  }\n\n  newEmail(): FormGroup {\n    return this.fb.group({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n\n  addEmail() {\n    if(this.emails().length > this.limit) {\n      return;\n    }\n    this.emails().push(this.newEmail());\n  }\n\n  removeEmail(i: number) {\n    this.emails().removeAt(i);\n  }\n\n  emailError(i) {\n    // @ts-ignore\n    return (<FormArray>this.form.get('emails')).controls[i].controls.email.errors;\n  }\n\n  /*Add person*/\n  addPerson() {\n    this.isSubmitted = true;\n    if(this.form.invalid) {\n      return;\n    }\n\n    if(this.editedIndex === -1) {\n      const person: IResponsablePersonsBlock = {\n        id: this.blockId,\n        persons: [\n          {\n            lastName: this.form.value.lastName,\n            firstName: this.form.value.firstName,\n            patronymic: this.form.value.patronymic,\n            emails: this.form.value.emails.map(el => el.email),\n            phones: this.form.value.phones.map(el => el.phone)\n          }\n        ]\n      };\n      this.resPersonsService.create(person);\n    } else {\n      const person: IResponsablePersonsBlock = {\n        id: this.blockId,\n        persons: [\n          {\n            id: this.info.id,\n            lastName: this.form.value.lastName,\n            firstName: this.form.value.firstName,\n            patronymic: this.form.value.patronymic,\n            emails: this.form.value.emails.map(el => el.email),\n            phones: this.form.value.phones.map(el => el.phone)\n          }\n        ]\n      };\n      this.resPersonsService.edit(person);\n    }\n    this.cancel();\n  }\n\n  removePerson() {\n    this.modalsService.removePersonModal(this.blockId, this.info.id);\n    this.cancel();\n  }\n\n  formReset() {\n    this.form.get('lastName').reset();\n    this.form.get('firstName').reset();\n    this.form.get('patronymic').reset();\n    (this.form.controls['emails']).reset();\n    (this.form.controls['phones']).reset();\n  }\n\n  cancel() {\n    this.formReset();\n    this.editedIndex = -1;\n    this.modal.dismiss();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalsService } from '../../../services/modals.service';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'j-jmart-settings-logo-modal',\n  templateUrl: './logo-modal.component.html',\n  styleUrls: ['./logo-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LogoModalComponent implements OnInit, OnDestroy {\n  @Input() smallLogo: string;\n\n  largeLogo: string;\n  reader = new FileReader();\n  file: File;\n  fileInput = document.querySelector('#fileInput');\n\n  constructor(\n    private modal: NgbActiveModal,\n    private modalService: ModalsService,\n    private notifier: NotifierService\n  ) { }\n\n  ngOnInit() {\n    if(this.smallLogo) {\n      this.largeLogo = this.smallLogo;\n    } else {\n      this.largeLogo = '';\n    }\n  }\n\n  ngOnDestroy() {\n    this.largeLogo = '';\n  }\n\n  uploadFile(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      this.file = event.target.files[0];\n\n      const type = this.file.type;\n      if(type.match('image.png') || type.match('image.jpg') || type.match('image.jpeg') || type.match('image.svg')) {\n        this.reader.onload = e => this.largeLogo = this.reader.result.toString();\n        this.reader.readAsDataURL(this.file);\n      } else {\n        this.notifier.show({\n          type: 'warning',\n          message: 'Формат файла должен быть .jpeg, .jpg, .png, .svg'\n        });\n        this.file = null;\n      }\n    }\n  }\n\n  saveFile() {\n    this.modalService.changeUploadedLogo(this.file);\n    this.closeModal()\n  }\n\n  removeFile() {\n    this.closeModal();\n    this.file = null;\n    this.modalService.changeUploadedLogo();\n  }\n\n\n  dismissModal(error: any = null, imageSrc: string = '') {\n    this.modal.dismiss({ error, imageSrc });\n    this.largeLogo = '';\n  }\n\n  closeModal() {\n    this.largeLogo = '';\n    this.modal.close();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ResponsiblePersonsService } from '../../../services/information/responsible-persons/responsible-persons.service';\n\n@Component({\n  selector: 'j-remove-modal',\n  templateUrl: './remove-modal.component.html',\n  styleUrls: ['./remove-modal.component.scss']\n})\nexport class RemoveModalComponent implements OnInit {\n  @Input() blockId: number;\n  @Input() id: number;\n\n  constructor(private modal: NgbActiveModal, private resPersonsService: ResponsiblePersonsService) { }\n\n  ngOnInit(): void {\n  }\n\n  remove() {\n    this.resPersonsService.remove(this.blockId, this.id);\n    this.modal.dismiss();\n  }\n\n  cancel() {\n    this.modal.dismiss();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalsService } from '@jmart-cabinet/modules/settings/services/modals.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-notice-modal',\n  templateUrl: './notice-modal.component.html',\n  styleUrls: ['./notice-modal.component.scss']\n})\nexport class NoticeModalComponent implements OnInit {\n\n  constructor(public modal: NgbActiveModal, private modalsService: ModalsService) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    localStorage.removeItem('form');\n    this.modal.dismiss();\n  }\n\n  cancel() {\n    this.modal.dismiss();\n    this.modalsService.pickupPointsModal();\n  }\n}\n","import { Component, DoCheck, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ICity, IPoint, IPointType } from '../../../models';\nimport { pointsTypes } from '../../../data/pickup-points-mock';\nimport { PickupPointsService } from '../../../services/pickup-points.service';\nimport { CompanyService } from '@company/company.service';\nimport { PointsRemoveModalComponent } from '../points-remove-modal/points-remove-modal.component';\nimport { WorkingTimeMapper } from '@jmart-cabinet/modules/settings/components/j-tole-work-regime/classes/working-time-mapper.class';\n\n@Component({\n  selector: 'j-pickup-points-modal',\n  templateUrl: './pickup-points-modal.component.html',\n  styleUrls: ['./pickup-points-modal.component.scss']\n})\nexport class PickupPointsModalComponent implements OnInit, OnDestroy {\n  @Input() public point;\n\n  form: FormGroup;\n  isSubmitted = false;\n  isCancel = false;\n  isSave = false;\n\n  cityNames: string[];\n\n  translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';\n\n  typePointList: IPointType[] = pointsTypes;\n\n  editedIndex = -1;\n\n  modalSmParams = {\n    backdropClass: 'backdrop_light',\n    windowClass: 'modal_light modal_dictionary',\n    centered: true\n  };\n\n  workingTime = new WorkingTimeMapper();\n\n  constructor(\n    private ngbActiveModal: NgbActiveModal,\n    private ngbModalService: NgbModal,\n    private fb: FormBuilder,\n    private pointService: PickupPointsService,\n    private companyService: CompanyService\n    ) {\n    /* Form initialization */\n    this.form = this.fb.group({\n      status: new FormControl('A', Validators.required),\n      companyStoreId: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      pickupAddress: new FormControl({ value: '', disabled: true }, Validators.required),\n      iban: new FormControl(''),\n      type: new FormControl('shop', Validators.required),\n      isMain: new FormControl(''),\n      isMainInCity: new FormControl('')\n    });\n\n    this.form.get('city').valueChanges.subscribe(val => {\n      if(val) this.form.get('pickupAddress').enable();\n    });\n  }\n\n  ngOnInit(): void {\n\n    /*Form draft pre-Save*/\n    const draft = sessionStorage.getItem('form');\n\n    /* Filling in a form */\n    if(this.point) {\n      this.editedIndex = 1;\n      const form = this.point;\n      this.form.patchValue({\n        companyStoreId: form.companyStoreId,\n        status: form.status,\n        name: form.name,\n        city: form.city.name,\n        pickupAddress: form.pickupAddress,\n        iban: form.iban,\n        type: form.type.value,\n        isMain: form.isMain,\n        isMainInCity: form.isMainInCity,\n      });\n    } else {\n      if(draft) {\n        const form = JSON.parse(draft);\n        this.form.patchValue({\n          companyStoreId: form.companyStoreId,\n          status: form.status,\n          name: form.name,\n          city: form.city.name,\n          pickupAddress: form.pickupAddress,\n          iban: form.iban,\n          type: form.type,\n          isMain: form.isMain,\n          isMainInCity: form.isMainInCity,\n        });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if(this.editedIndex === -1) {\n      sessionStorage.setItem('form', JSON.stringify(this.form.value));\n\n      if(this.isCancel || this.isSave) {\n        sessionStorage.removeItem('form');\n      }\n    }\n  }\n\n  test() {\n    console.log('asd');\n    console.log(this.form.get('city').value);\n  }\n\n  save() {\n    this.isSave = true;\n    this.isSubmitted = true;\n    if(this.form.invalid) {\n      return;\n    }\n\n    if(this.editedIndex === -1) {\n      const point: IPoint = {\n        status: 'A',\n        companyStoreId: this.form.value.companyStoreId,\n        name: this.form.value.name,\n        cityId: this.form.get('city').value.cityId,\n        pickupAddress: this.form.value.pickupAddress,\n        latitude: 43.3444,\n        longitude: 23.445,\n        // workingTime: null,\n        type: this.form.value.type,\n        isMain: this.form.value.isMain ? 'Y' : 'N',\n        isMainInCity: this.form.value.isMainInCity ? 'Y' : 'N',\n        iban: this.form.value.iban,\n        workingTime: this.workingTime.getExternalState(),\n      };\n      this.pointService.addPoint(point).subscribe((res) => {\n        this.pointService.onPointsChanged.next({\n          action: 'add',\n          point: res.data\n        })\n      });\n    } else {\n      const point: IPoint = {\n        status: this.form.value.status,\n        companyStoreId: this.form.value.companyStoreId,\n        name: this.form.value.name,\n        cityId: this.form.get('city').value.cityId,\n        pickupAddress: this.form.value.pickupAddress,\n        latitude: 43.3444,\n        longitude: 23.445,\n        // workingTime: null,\n        type: this.form.value.type,\n        isMain: this.form.value.isMain ? 'Y' : 'N',\n        isMainInCity: this.form.value.isMainInCity ? 'Y' : 'N',\n        iban: this.form.value.iban ? this.form.value.iban : '',\n        workingTime: this.workingTime.getExternalState(),\n      };\n      this.pointService.edit(point, this.point.storeLocationId).subscribe((res) => {\n        this.pointService.onPointsChanged.next({\n          id: this.point.storeLocationId,\n          action: 'edit',\n          point: res.data\n        })\n      });\n    }\n    this.cancel();\n  }\n\n  remove() {\n    const modalRef = this.ngbModalService.open(PointsRemoveModalComponent, this.modalSmParams);\n    modalRef.componentInstance.storeLocationId = this.point.storeLocationId;\n    this.cancel();\n  }\n\n  cancel() {\n    this.isCancel = true;\n    this.ngbActiveModal.dismiss();\n  }\n\n  get status(): boolean {\n    return this.form.get('status').value.includes('A');\n  }\n\n  get formTitle() {\n    return this.editedIndex === -1 ? this.mapTranslate('ADD') : this.mapTranslate('EDIT')\n  }\n\n  get idPointError() {\n    return this.form.get('companyStoreId').errors;\n  }\n\n  get titleError() {\n    return this.form.get('name').errors;\n  }\n\n  get cityError() {\n    return this.form.get('city').errors;\n  }\n\n  get addressError() {\n    return this.form.get('pickupAddress').errors;\n  }\n\n  get ibanError() {\n    return this.form.get('iban').errors;\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  selectedCity(city: string) {\n    this.form.get('city').setValue(city);\n  }\n\n  changeStatus(val) {\n    let statusValue = val.target.value === 'true' ? 'A' : 'D';\n    this.form.get('status').setValue(statusValue);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PickupPointsService } from '@jmart-cabinet/modules/settings/services/pickup-points.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-points-remove-modal',\n  templateUrl: './points-remove-modal.component.html',\n  styleUrls: ['./points-remove-modal.component.scss']\n})\nexport class PointsRemoveModalComponent implements OnInit {\n  @Input() storeLocationId: number;\n\n  constructor(private modal: NgbActiveModal, private pointService: PickupPointsService) { }\n\n  ngOnInit(): void {\n  }\n\n  remove() {\n    this.pointService.remove(this.storeLocationId).subscribe(\n      () => {\n        this.pointService.onPointsChanged.next({\n          id: this.storeLocationId,\n          action: 'delete'\n        });\n        this.modal.dismiss();\n      },\n      err => {\n        // handle error\n      }\n    );\n  }\n\n  cancel() {\n    this.modal.dismiss();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeliveryService } from '../../services/delivery.service';\n\n\n@Component({\n    selector: 'j-remove-delivery-modal',\n    templateUrl: './remove-delivery-modal.component.html',\n    styleUrls: ['./remove-delivery-modal.component.scss'],\n})\nexport class RemoveDeliveryModalComponent {\n\n    @Input() deliveryId;\n\n    constructor(\n        public modal: NgbActiveModal,\n        private deliveryService: DeliveryService,\n    ) {}\n\n    close() {\n        this.modal.dismiss();\n    }\n\n    remove() {\n        this.deliveryService.removeDelivery(this.deliveryId, this.modal);\n    }\n\n}\n","import { ITime } from './pickup-points.model';\n\nexport enum DELIVERY_CATEGORY {\n  BY_CITY = 'BY_CITY',\n  BY_INTERCITY = 'BY_INTERCITY'\n}\n\nexport enum DELIVERY_MODE {\n  OWN = 'own',\n  JPOST = 'jpost'\n}\n\nexport interface IPrice {\n  from: number | string,\n  to: number | string,\n  deliveryPrice: number | string\n}\n\nexport interface IType {\n  value:  string,\n  label: string,\n}\n\nexport interface ICity {\n  cityId: number,\n  title: string;\n  id?: number,\n  type?: number,\n};\n\nexport interface IDelivery {\n  id?: number,\n  isCity: boolean,\n  isJpost: boolean,\n  direction: {\n    from: ICity,\n    to?: ICity, \n  },\n  attributes: {\n    prices: IPrice[],\n    workingTime: ITime[],\n    estimatedTime: string,\n    isToday: boolean,\n    deliveryEstimatedDay?: string\n  },\n}\n\ninterface IDeliveryInterCity extends IDelivery {\n  deliveryEstimatedDay: number,\n}\n\n","export * from './information.model';\nexport * from './pickup-points.model';\n","export interface IResponsablePerson {\n  id?: number;\n  lastName: string;\n  firstName: string;\n  patronymic?: string;\n  emails: Array<string>;\n  phones: Array<string>;\n}\n\nexport interface IResponsablePersonsBlock {\n  id: number;\n  title?: string;\n  persons: Array<IResponsablePerson>;\n}\n","import { IStatus } from '@shared/models';\n\nexport interface ICity {\n  cityId: number,\n  cityName: string\n}\n\nexport interface IDay {\n  id: number,\n  day: string,\n  name: string,\n}\n\nexport interface IHour {\n  from: string,\n  to: string\n}\n\nexport interface ITime {\n  days: IDay[],\n  hour: IHour,\n  break?: IHour\n}\n\nexport interface IPoint {\n  storeLocationId?: number,\n  companyId?: string,\n  status?: string,\n  companyStoreId: string,\n  name: string,\n  city?: any,\n  cityId: number,\n  pickupAddress: string,\n  latitude: number,\n  longitude: number,\n  iban?: string\n  type: string,\n  isMain: string,\n  isMainInCity: string,\n  workingTime?: ITime[]\n}\n\nexport interface IPointType {\n  value: string,\n  label: string,\n  checked?: boolean\n}\n\nexport enum FILTER_POINT_STATUS {\n  ALL = 'all',\n  SHOP = 'shop',\n  WAREHOUSE = 'warehouse',\n  MAIN_WAREHOUSE = 'mainWarehouse',\n  COUNTRY_WAREHOUSE = 'countryWarehouse'\n}\n\nexport enum POINT_TYPE {\n  SHOP = 'shop',\n  WAREHOUSE = 'warehouse'\n}\n\nexport enum WAREHOUSE_TYPE {\n  DEFAULT = 'none',\n  MAIN_WAREHOUSE = 'mainWarehouse',\n  COUNTRY_WAREHOUSE = 'countryWarehouse'\n}\n\nexport interface IPointStatus extends IStatus {\n  value: FILTER_POINT_STATUS\n}\n\nexport interface IPointScheme {\n  pointStatus?: FILTER_POINT_STATUS,\n  pointSearch?: string\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IPoint } from '../models';\n\n@Pipe({\n  name: 'filterPoint'\n})\nexport class FilterPointsPipe implements PipeTransform{\n  transform(points: IPoint[], search: string = ''): IPoint[] {\n    if(!search.trim()) { return points}\n    return points.filter(point => {\n      return point.companyStoreId.toLowerCase().includes(search.toLowerCase()) ||\n           point.city.name.toLowerCase().includes(search.toLowerCase()) ||\n           point.pickupAddress.toLowerCase().includes(search.toLowerCase())\n    })\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maskPrefixPhone'\n})\nexport class MaskPrefixPhonePipe implements PipeTransform{\n  transform(value: string): string {\n    if(value.length === 10) {\n      return '+7' + ' ('\n        + value.slice(0, 3) + ') '\n        + value.slice(3,6) + '-'\n        + value.slice(6, 8) + '-'\n        + value.slice(8, 10)\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberSpaceFormat'\n})\nexport class NumberSpaceFormatPipe implements PipeTransform {\n\n  transform(value: string | number, ...args: unknown[]): unknown {\n    return String(value).replace(\n      /(?!^)(?=(?:\\d{3})+$)/g,\n      ' '\n    );\n  }\n\n}\n","export * from './modals.service';\nexport * from './information/responsible-persons/responsible-persons.service';\nexport * from './pickup-points.service';\n","import { IResponsablePersonsBlock } from '../../../models';\n\nexport abstract class ResponsiblePersonsAbstract {\n  abstract get(): IResponsablePersonsBlock[];\n}\n","import { Injectable } from '@angular/core';\nimport { ResponsiblePersonsAbstract } from './responsible-persons.abstract';\nimport { IResponsablePersonsBlock } from '../../../models';\nimport { responsiblePersons } from '../../../data/information-mock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiblePersonsService extends ResponsiblePersonsAbstract {\n  rPersons: IResponsablePersonsBlock[] = responsiblePersons;\n\n  constructor() {\n    super();\n  }\n\n  get(): IResponsablePersonsBlock[] {\n    return this.rPersons;\n  }\n\n\n   create(person: IResponsablePersonsBlock) {\n     this.rPersons.map(block => {\n       if (block.id === person.id) {\n         block.persons.push(person.persons[0]);\n       }\n     });\n  }\n\n  edit(person: IResponsablePersonsBlock) {\n    let objIndex;\n    this.rPersons.map(block => {\n      if(block.id === person.id) {\n        objIndex = block.persons.findIndex(p => p.id === person.persons[0].id);\n        block.persons[objIndex].lastName = person.persons[0].lastName;\n        block.persons[objIndex].firstName = person.persons[0].firstName;\n        block.persons[objIndex].patronymic = person.persons[0].patronymic;\n        block.persons[objIndex].emails = person.persons[0].emails;\n        block.persons[objIndex].phones = person.persons[0].phones;\n      }\n    });\n  }\n\n  remove(blockId: number, id: number) {\n    let objIndex;\n    this.rPersons.map(block => {\n      if(block.id === blockId) {\n        objIndex = block.persons.findIndex(p => p.id === id);\n        if (objIndex > -1) {\n          block.persons.splice(objIndex, 1);\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RemoveModalComponent } from '../modals/information/remove-modal/remove-modal.component';\nimport { PickupPointsModalComponent } from '../modals/point/pickup-points-modal/pickup-points-modal.component';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ModalsService {\n  public uploadedLogo$ = new Subject<File>();\n\n  modalSmParams = {\n    backdropClass: 'backdrop_light',\n    windowClass: 'modal_light modal_dictionary',\n    centered: true\n  };\n\n  constructor(private ngbModalService: NgbModal) {}\n\n  public changeUploadedLogo(file?: File) {\n    if(file) {\n      this.uploadedLogo$.next(file);\n    } else {\n      this.uploadedLogo$.next(null);\n    }\n  }\n\n  addLogoModal(modal, smallLogo?) {\n    const modalRef = this.ngbModalService.open(modal, this.modalSmParams);\n    modalRef.componentInstance.smallLogo = smallLogo;\n  }\n\n  addEditPersonModal(modal, blockId?, info?) {\n    const modalRef = this.ngbModalService.open(modal, this.modalSmParams);\n    modalRef.componentInstance.blockId = blockId;\n    modalRef.componentInstance.info = info;\n  }\n\n  removePersonModal(blockId, id) {\n    const modalRef = this.ngbModalService.open(RemoveModalComponent, this.modalSmParams);\n    modalRef.componentInstance.blockId = blockId;\n    modalRef.componentInstance.id = id;\n  }\n\n  pickupPointsModal(point?) {\n    const modalRef = this.ngbModalService.open(PickupPointsModalComponent, this.modalSmParams);\n    modalRef.componentInstance.point = point;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { FILTER_POINT_STATUS, IPoint, IPointStatus } from '../models/pickup-points.model';\nimport { cities } from '../data/pickup-points-mock';\nimport { CompanyService } from '@company/company.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map} from 'rxjs/operators';\n\nexport type pointsActions = 'add' | 'edit' | 'delete';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PickupPointsService {\n\n  onPointsChanged = new Subject<{ id?: number, action: pointsActions, point?: IPoint }>();\n\n  private STATUSES = [\n    {\n      label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.ALL',\n      value: FILTER_POINT_STATUS.ALL,\n      count: 0,\n      classList: 'badge-primary',\n      isSelected: true,\n      isDisabled: false,\n    },\n    {\n      label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.SHOP',\n      value: FILTER_POINT_STATUS.SHOP,\n      count: 0,\n      classList: 'badge-primary',\n      isSelected: false,\n      isDisabled: false,\n    },\n    {\n      label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.WAREHOUSE',\n      value: FILTER_POINT_STATUS.WAREHOUSE,\n      count: 0,\n      classList: 'badge-light',\n      isSelected: false,\n      isDisabled: false,\n    },\n    {\n      label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.MAIN_WAREHOUSE',\n      value: FILTER_POINT_STATUS.MAIN_WAREHOUSE,\n      count: 0,\n      classList: 'badge-primary',\n      isSelected: false,\n      isDisabled: false,\n    },\n    {\n      label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.COUNTRY_WAREHOUSE',\n      value: FILTER_POINT_STATUS.COUNTRY_WAREHOUSE,\n      count: 0,\n      classList: 'badge-light',\n      isSelected: false,\n      isDisabled: false,\n    }\n  ];\n  private statuses$ = new BehaviorSubject<IPointStatus[]>(this.STATUSES);\n\n  constructor(\n    private companyService: CompanyService,\n    private http: HttpClient,\n    @Inject('JMART_CABINET_BASE_URL') private baseUrl: string,\n  ) {}\n\n  getStatuses() {\n    return this.statuses$;\n  }\n\n  getCities() {\n    const url = `${this.baseUrl}/gw/dictionary/v1/cities`;\n    return this.http.get<any>(url)\n      .pipe(map(res => res.data));\n  }\n\n  getPoints() {\n    const url = `${this.baseUrl}/gw/company/v2/my/store-location`;\n    return this.http.get<any>(url)\n      .pipe(map(res => {\n        return res.data.data;\n      }));\n  }\n\n  addPoint(point: IPoint): Observable<any> {\n    const url = `${this.baseUrl}/gw/company/v2/my/store-location`;\n    return this.http.post<IPoint>(url, point);\n  }\n\n  edit(point: IPoint, storeLocationId: string): Observable<any> {\n    const url = `${this.baseUrl}/gw/company/v2/my/store-location/${storeLocationId}`;\n    return this.http.put<IPoint>(url, point);\n  }\n\n  remove(storeLocationId: number): Observable<unknown> {\n    const url = `${this.baseUrl}/gw/company/v2/my/store-location/${storeLocationId}`;\n    return this.http.delete(url);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsComponent, } from './settings.component';\nimport {\n  InformationComponent,\n  DeliveryComponent,\n  PickupPointsComponent,\n  ScheduleComponent,\n  UsersComponent\n} from './containers';\nimport { DELIVERY_CATEGORY } from './models/delivery.model';\nimport { DeliveryListComponent } from './components';\nimport { JmartCabinetLayoutComponent } from '@jmart-cabinet/components/jmart-cabinet-layout/jmart-cabinet-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JmartCabinetLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: SettingsComponent,\n        data: {\n          title: 'SETTINGS.TITLE',\n        },\n        children: [\n          // {\n          //   path: 'information',\n          //   component: InformationComponent,\n          // },\n          // {\n          //   path: 'pickup-points',\n          //   component: PickupPointsComponent\n          // },\n          {\n            path: 'delivery',\n            component: DeliveryComponent,\n            children: [\n              {\n                path: 'city',\n                component: DeliveryListComponent,\n                data: {\n                  category: DELIVERY_CATEGORY.BY_CITY,\n                }\n              },\n              {\n                path: 'intercity',\n                component: DeliveryListComponent,\n                data: {\n                  category: DELIVERY_CATEGORY.BY_INTERCITY,\n                }\n              },\n              {\n                path: '**',\n                redirectTo: 'city',\n              },\n            ]\n          },\n          {\n            path: 'schedule',\n            component: ScheduleComponent\n          },\n          {\n            path: 'users',\n            component: UsersComponent\n          },\n          {\n            path: '**',\n            redirectTo: 'delivery',\n          },\n        ],\n      },\n    ],\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { AnalyticsManagerAbstract } from '@analytics/services/manager';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'j-jmart-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  constructor(\n    private analytics: AnalyticsManagerAbstract\n  ) {}\n\n  ngOnInit(): void {\n    this.analytics.logEvent('JMartDelivery_Start', { version: 1 });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { SettingsComponent } from './settings.component';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\nimport { SETTINGS_COMPONENTS } from './components';\nimport { SETTINGS_CONTAINERS } from './containers';\nimport { SETTINGS_MODALS } from './modals';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { MaskPrefixPhonePipe } from './pipes/maskPrefixPhone.pipe';\nimport { JTableComponent } from './components/j-table/j-table.component';\nimport { GetTemplateDirective } from './components/j-table/get-template.directive';\nimport { SelectCityComponent } from './components/select-city/select-city.component';\nimport { CreateDeliveryFormComponent } from './containers/forms/create-delivery.form/create-delivery.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { DeliveryPriceComponent } from './components/delivery-price/delivery-price.component';\nimport { JToleWorkRegimeComponent } from './components/j-tole-work-regime/j-tole-work-regime';\nimport { RemoveDeliveryModalComponent } from './modals/remove-delivery-modal/remove-delivery-modal.component';\nimport { FilterPointsPipe } from './pipes/filterPoints.pipe';\nimport { JmartAuthService } from '@jmart-cabinet/services/jmart-auth.service';\nimport { environment } from '@environments/environment';\nimport { InputAutocompleteComponent } from '@jmart-cabinet/components/input-autocomplete/input-autocomplete.component';\nimport { NumberSpaceFormatPipe } from './pipes/number-space-format.pipe';\n\n@NgModule({\n  declarations: [\n    SettingsComponent,\n\n    SETTINGS_CONTAINERS,\n    SETTINGS_COMPONENTS,\n    SETTINGS_MODALS,\n\n    MaskPrefixPhonePipe,\n    FilterPointsPipe,\n    NumberSpaceFormatPipe,\n    JTableComponent,\n    GetTemplateDirective,\n    SelectCityComponent,\n    CreateDeliveryFormComponent,\n    CheckboxComponent,\n    DeliveryPriceComponent,\n    JToleWorkRegimeComponent,\n    RemoveDeliveryModalComponent,\n    InputAutocompleteComponent,\n  ],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule, FormsModule, ReactiveFormsModule, NgxFileDropModule],\n  exports: [SETTINGS_CONTAINERS],\n  providers: [\n    NumberSpaceFormatPipe,\n  ]\n})\nexport class SettingsModule {\n}\n","\nexport const getRuDays = (value: string, returnValue: boolean = false): string => {\n    const daysCount = parseInt(value);\n    const n1 = Math.abs(daysCount) % 100; \n    const n2 = n1 % 10;\n    if (n1 > 10 && n1 < 20) { return ' дней'; }\n    if (n2 > 1 && n2 < 5) { return ' дня'; }\n    if (n2 == 1) { return ' день'; }\n    return ' дней';\n};\n"],"names":[],"sourceRoot":"webpack:///"}