{"version":3,"file":"default-src_app_contracts_contracts_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyD;AACQ;AACvC;AACA;AAC6B;AACV;IAOhC,sBAAsB,SAAtB,sBAAsB;IAIjC,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH5C,oBAAe,GAAW,gBAAgB,CAAC;IAIxC,CAAC;IAEJ,QAAQ,KAAI,CAAC;IAEb,IAAI,OAAO;QACT,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QAED,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,KAAK,sEAA0B,CAAC;YAChC,KAAK,oEAAwB,CAAC;YAC9B,KAAK,yEAA6B,CAAC;YACnC,KAAK,yEAA6B;gBAChC,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAEnC,KAAK,uEAA2B;gBAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SACxC;IACH,CAAC;IAED,YAAY,CAAC,GAAW;QACtB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,GAAG,EAAE,CAAC;IAC1C,CAAC;IAEM,WAAW,CAAC,IAAU;QAC3B,MAAM,OAAO,GAAG,4CAAK,EAAE,CAAC,MAAM,CAAC,4CAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACnD,MAAM,WAAW,GAAG,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,4CAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAE3E,IAAI,OAAO,EAAE;YACX,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;SACtE;aAAM,IAAI,WAAW,EAAE;YACtB,OAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;SAC3E;aAAM;YACL,OAAO,wCAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAEO,sBAAsB,CAAC,IAAU;QACvC,MAAM,MAAM,GAAG,4CAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC;YAC1D,CAAC,CAAC,cAAc;YAChB,CAAC,CAAC,mBAAmB,CAAC;QACxB,OAAO,2DAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACtF,CAAC;CACF;;YA1DQ,iEAAgB;;;uBAStB,gDAAK;;AADK,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAkDlC;AAlDkC;;;;;;;;;;;;;;;;;;;;;;ACZc;IAOpC,uBAAuB,SAAvB,uBAAuB;IAIlC;QAFA,UAAK,GAAG,iBAAiB,CAAC;IAEX,CAAC;CACjB;;;oBAJE,gDAAK;;AADK,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAKnC;AALmC;;;;;;;;;;;;;;;;;;;;;;ACPmC;IAO1D,uBAAuB,SAAvB,uBAAuB;IAMlC;QAJA,UAAK,GAAG,mBAAmB,CAAC;QAElB,YAAO,GAAG,IAAI,uDAAY,EAAE,CAAC;IAExB,CAAC;IAEhB,OAAO,CAAC,KAAY;QAClB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CACF;;;oBAXE,gDAAK;sBAGL,iDAAM;;AAJI,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAYnC;AAZmC;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AAQtB;AAEgC;AAGF;IAUxC,uBAAuB,SAAvB,uBAAuB;IAoBlC,YACU,UAAsB,EACtB,gBAAkC,EACf,MAAc;QAFjC,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACf,WAAM,GAAN,MAAM,CAAQ;QAjBlC,gBAAW,GAAY,KAAK,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU,GAAY,KAAK,CAAC;QAE3B,aAAQ,GAAG,IAAI,uDAAY,EAAE,CAAC;QAC9B,WAAM,GAAG,IAAI,uDAAY,EAAE,CAAC;QAEtC,oBAAe,GAAG,gBAAgB,CAAC;QACnC,YAAO,GAAG,cAAc,CAAC;QAEzB,iBAAY,GAAG,EAAE,CAAC;QAElB,wBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAMxD,CAAC;IAEJ,oBAAoB,CAAC,QAAqB;QACxC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC1C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAC/B;YACE,IAAI,EAAE,2DAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC;SAC/D,CACF,CAAC;QAEF,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IACpC,CAAC;IAED,YAAY,CAAC,GAAW;QACtB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,GAAG,EAAE,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,QAAqB;QAC3B,QAAQ,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;IAC/C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;CACF;;YAlEQ,+DAAU;YAHV,iEAAgB;yCAoCpB,iDAAM,SAAC,oDAAS;;;oBAtBlB,gDAAK;mBACL,gDAAK;2BAEL,gDAAK;0BAEL,gDAAK;2BACL,gDAAK;yBACL,gDAAK;uBAEL,iDAAM;qBACN,iDAAM;;AAXI,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAwDnC;AAxDmC;;;;;;;;;;;;;;;;;;;;;;ACvBc;AAElD,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;IAOhC,6BAA6B,SAA7B,6BAA6B;IACxC,gBAAe,CAAC;IAEhB,QAAQ,KAAI,CAAC;IAEb,YAAY,CAAC,MAAc;QACzB,OAAO,GAAG,gBAAgB,IAAI,MAAM,EAAE,CAAC;IACzC,CAAC;CACF;;AARY,6BAA6B;IALzC,wDAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,wFAAsD;;KAEvD,CAAC;GACW,6BAA6B,CAQzC;AARyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0B;AACvB;AACJ;AAEL;AAEmB;AACJ;AAEH;AAKxB;AAE+B;AAKzB;AAE6B;AAE3D,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAC7C,MAAM,WAAW,GAAG,cAAc,CAAC;IAOtB,sBAAsB,SAAtB,sBAAsB;IAUjC,YACU,eAAgC,EAChC,gBAAkC,EAClC,gBAAkC,EAClC,mBAAwC,EACxC,YAA0B,EAC1B,MAAc;QALd,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAZxB,uBAAkB,GAAG,IAAI,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAAG,KAAK,CAAC;QACtB,4BAAuB,GAAG,KAAK,CAAC;QAChC,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAUhC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,oBAAoB,CAAC,KAAY,EAAE,UAAiC;QAClE,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAChC,UAAU,CAAC,IAAI,CAAC,EAAE,EAClB,UAAU,CAAC,IAAI,CAAC,IAAI,CACrB,CAAC;IACJ,CAAC;IACD,aAAa;QACX,IAAI,CAAC,uBAAuB,GAAG,IAAI;QACnC,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACvH,CAAC;IACD,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,CAAC,IAAI,0EAAmB,IAAI,qFAA8B,EAAE,CAAC,EAC7D;YACE,KAAK,EAAE;gBACL,eAAe,EAAE;oBACf,IAAI,EAAE,gEAAoB;oBAC1B,YAAY,EAAE,IAAI;oBAClB,OAAO,EAAE;wBACP,gBAAgB,EAAE,IAAI;wBACtB,qBAAqB,EAAE;4BACrB,cAAc,EAAE,IAAI;4BACpB,UAAU,EAAE,IAAI,CAAC,QAAQ;4BACzB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;yBAC/B;qBACF;iBACF;aACF;SACF,CACF,CAAC;IACJ,CAAC;IAEK,UAAU;;YACd,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,OAAO;aACR;YAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI;gBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACxE;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,OAAO,EACP,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CACvD,CAAC;aACH;oBAAS;gBACR,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACH,CAAC;KAAA;IAED,YAAY,CAAC,MAAc;QACzB,OAAO,GAAG,gBAAgB,IAAI,MAAM,EAAE,CAAC;IACzC,CAAC;IAEO,OAAO;;QACb,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAC5D,IAAI,CAAC,QAAQ,CACd,CAAC;QAEF,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG;gBACV,GAAG,IAAI,CAAC,IAAI;gBACZ;oBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;oBAChC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;oBACrE,UAAU,EAAE,aAAa;iBAC1B;aACF,CAAC;SACH;QAED,IAAI,CAAC,IAAI,GAAG;YACV,GAAG,IAAI,CAAC,IAAI;YACZ;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW;aACtC;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;gBACrC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;oBAC3B,CAAC,CAAC,2DAAU,CACR,IAAI,CAAC,QAAQ,CAAC,QAAQ,EACtB,WAAW,EACX,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAClC;oBACH,CAAC,CAAC,GAAG;aACR;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;gBACnC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;oBACzB,CAAC,CAAC,2DAAU,CACR,IAAI,CAAC,QAAQ,CAAC,MAAM,EACpB,WAAW,EACX,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAClC;oBACH,CAAC,CAAC,GAAG;aACR;SACF,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,CAAC,0BAA0B,EAAE;YAC5C,IAAI,CAAC,IAAI,GAAG;gBACV,GAAG,IAAI,CAAC,IAAI;gBACZ;oBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBAC/B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,0BAA0B;iBAChD;aACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG;gBACV,GAAG,IAAI,CAAC,IAAI;gBACZ;oBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBACpC,KAAK,EAAE,2DAAU,CACf,IAAI,CAAC,QAAQ,CAAC,YAAY,EAC1B,WAAW,EACX,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAClC;iBACF;aACF,CAAC;SACH;QAED,IAAI,CAAC,IAAI,GAAG;YACV,GAAG,IAAI,CAAC,IAAI;YACZ;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBACpC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ;aACrC;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;gBACnC,KAAK,EAAE,GAAG,iBAAI,CAAC,QAAQ,CAAC,UAAU,0CAAE,OAAO,0CAAE,IAAI,KAAI,EAAE,MACrD,iBAAI,CAAC,QAAQ,CAAC,UAAU,0CAAE,OAAO,0CAAE,IAAI,KAAI,EAC7C,EAAE;aACH;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,WAAI,CAAC,QAAQ,CAAC,UAAU,0CAAE,QAAQ,KAAI,GAAG;aACjD;YACD;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC/B,KAAK,EAAE,WAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,0CAAE,IAAI,KAAI,GAAG;aAClD;SACF,CAAC;IACJ,CAAC;IAEa,iBAAiB;;YAC7B,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAC5D,8EAA4B,CAC7B,CAAC;QACJ,CAAC;KAAA;CACF;;YAtNQ,8DAAe;YADf,kEAAgB;YAUhB,iEAAgB;YAGvB,qEAAmB;YAVZ,0DAAY;YAPZ,oDAAM;;;uBAgCZ,iDAAK;;AADK,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CA4LlC;AA5LkC;;;;;;;;;;;;;;;;;;;;;;;;ACjCsB;AAEF;AAGP;IAOnC,sBAAsB,SAAtB,sBAAsB;IAUjC,YACU,gBAAkC,EAClC,YAA0B;QAD1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAT3B,gBAAW,GAAY,KAAK,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU,GAAY,KAAK,CAAC;QAErC,oBAAe,GAAW,gBAAgB,CAAC;QAC3C,0BAAqB,GAAG,EAAE,CAAC;IAKxB,CAAC;IAEJ,QAAQ,KAAI,CAAC;IAEb,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;IACvE,CAAC;IAED,IAAI,oBAAoB;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC9B,OAAO,CAAC,CAAC;SACV;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;QAE7C,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,SAAS,IAAI,EAAE,CAAC;SACjB;QAED,OAAO,GAAG,SAAS,IAAI,CAAC;IAC1B,CAAC;IAEK,oBAAoB,CAAC,KAAY,EAAE,UAAiC;;YACxE,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,IAAI,UAAU,CAAC,SAAS,EAAE;gBACxB,OAAO;aACR;YAED,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;YAE5B,IAAI;gBACF,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CACtC,UAAU,CAAC,IAAI,CAAC,EAAE,EAClB,UAAU,CAAC,IAAI,CAAC,IAAI,CACrB,CAAC;aACH;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;aAC9B;QACH,CAAC;KAAA;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,mBAAmB,CAAC,QAAqB;;QACvC,OAAO,IAAI,CAAC,iBAAiB,CAC3B,mBAAmB,EACnB,cAAQ,CAAC,WAAW,0CAAE,MAAM,CAC7B,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,GAAW;QACtB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,GAAG,EAAE,CAAC;IAC1C,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,iBAAiB,CAC3B,MAAM,EACN,IAAI,CAAC,GAAG,CACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,EAC7D,EAAE,CACH,CACF,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,GAAW,EAAE,UAAkB;QACvD,MAAM,MAAM,GAAG;YACb,KAAK,EAAE,UAAU;SAClB,CAAC;QAEF,IAAI,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;IACzE,CAAC;IAEO,YAAY,CAAC,UAAkB;QACrC,QAAQ,UAAU,GAAG,EAAE,EAAE;YACvB,KAAK,CAAC;gBACJ,OAAO,KAAK,CAAC;YACf,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;gBACJ,OAAO,KAAK,CAAC;YACf;gBACE,OAAO,OAAO,CAAC;SAClB;IACH,CAAC;CACF;;YApHQ,iEAAgB;YAGhB,0DAAY;;;uBAQlB,gDAAK;0BAEL,gDAAK;2BACL,gDAAK;yBACL,gDAAK;;AALK,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CA0GlC;AA1GkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACLZ;AAEa;AAEsB;AAGR;AAEG;IAOxC,sBAAsB,SAAtB,sBAAsB;IAkBjC,YACU,gBAAkC,EAClC,cAA8B,EAC9B,UAAsB;QAFtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QARhC,cAAS,GAAY,KAAK,CAAC;QAG3B,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;IAM/B,CAAC;IAEJ,QAAQ;QACN,MAAM,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YACtE,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,EAAE,CAAC;IAC5C,CAAC;IAEK,aAAa;;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,IAAI,MAAM,GAAG,IAAI,CAAC;gBAElB,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,MAAM,GAAG;wBACP,WAAW,EAAE,IAAI;qBAClB,CAAC;iBACH;gBAED,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,MAAM,GAAG;wBACP,eAAe,EAAE,IAAI;qBACtB,CAAC;iBACH;gBAED,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC3D,IAAI,CAAC,YAAY,EACjB,MAAM,CACP,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;aAC1C;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC;aACnE;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;CACF;;YA/EQ,uDAAgB;YAHhB,oEAAc;YAKd,+DAAU;;;8BAQhB,gDAAK;2BACL,gDAAK;0BAEL,gDAAK;8BACL,gDAAK;2BAEL,uDAAY,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;6BAE9C,uDAAY,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;AATtC,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAsElC;AAtEkC;;;;;;;;;;;;;;;;;;;;;;ACvBsB;IAO5C,yBAAyB,SAAzB,yBAAyB;IAGpC;QAFS,aAAQ,GAAG,KAAK,CAAC;IAEX,CAAC;IAEhB,QAAQ,KAAI,CAAC;CACd;;;uBALE,gDAAK;;AADK,yBAAyB;IALrC,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mFAAiD;;KAElD,CAAC;GACW,yBAAyB,CAMrC;AANqC;;;;;;;;;;;;;;;;;;;;;;;;;ACPuB;AAEA;AAK/B;AAEM;IAOvB,qBAAqB,SAArB,qBAAqB;IAgBhC,YACU,sBAA8C,EAC9C,mBAAwC;QADxC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,wBAAmB,GAAnB,mBAAmB,CAAqB;QAjBlD,qBAAgB,GAAY,KAAK,CAAC;QAClC,iBAAY,GAAG;YACb;gBACE,KAAK,EAAE,0BAA0B;gBACjC,GAAG,EAAE,sBAAsB;aAC5B;YACD;gBACE,KAAK,EAAE,yBAAyB;gBAChC,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,IAAI;aACX;SACF,CAAC;QAEF,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;IAK/B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CACzD,2EAAyB,CAC1B,CAAC;IACJ,CAAC;CACF;;YA1DQ,uEAAsB;YAG7B,qEAAmB;;AAWR,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA4CjC;AA5CiC;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACY;AAEe;IAOpD,wBAAwB,SAAxB,wBAAwB;IAInC,gBAAe,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,eAAe;QACrB,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,KAAK,oEAAwB;gBAC3B,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;gBACtC,MAAM;YAER,KAAK,yEAA6B,CAAC;YACnC,KAAK,yEAA6B;gBAChC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;gBACtC,MAAM;YAER,KAAK,uEAA2B;gBAC9B,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;gBACrC,MAAM;SACT;IACH,CAAC;CACF;;;uBAzBE,gDAAK;;AADK,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,kFAAgD;;KAEjD,CAAC;GACW,wBAAwB,CA0BpC;AA1BoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViD;AACA;AACM;AACZ;AAEG;AACuB;AACvB;AACG;AACG;AACN;AACA;AAE5E,MAAM,oBAAoB,GAAG;IAClC,yFAAqB;IACrB,qGAAyB;IACzB,+FAAuB;IACvB,+FAAuB;IACvB,4FAAsB;IACtB,mHAA6B;IAC7B,4FAAsB;IACtB,+FAAuB;IACvB,kGAAwB;IACxB,4FAAsB;IACtB,6FAAsB;CACvB,CAAC;AAE8E;AACY;AACN;AACA;AAEH;AACuB;AACvB;AACG;AACG;AACN;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCzC;AACe;AAEN;AAEc;AAEf;AACL;AACU;AAEvD,MAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAOzB,0BAA0B,SAA1B,0BAA0B;IAcrC,YACU,gBAAkC,EAClC,KAAqB,EACrB,MAAc,EACd,eAAgC,EAChC,gBAAkC;QAJlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAlB5C,aAAQ,GAAG;YACT,iBAAiB;YACjB,eAAe;YACf,iBAAiB;YACjB,oBAAoB;SACrB,CAAC;QAEF,oBAAe,GAAG,oBAAoB,CAAC;QACvC,iBAAY,GAAG,2DAAsB,CAAC;QAEtC,eAAU,GAAG,EAAE,CAAC;QAChB,kBAAa,GAAG,EAAE,CAAC;IAQhB,CAAC;IAEJ,YAAY,CAAC,KAAa;QACxB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,EAAE,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,QAAqB;QAC1B,OAAO,CACL,QAAQ,CAAC,MAAM,IAAI,oEAAwB;YAC3C,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,QAAqB;QACvC,MAAM,gBAAgB,GACpB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACtD,OAAO,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvE,CAAC;IAED,eAAe,CAAC,QAAqB;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YAClC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;SACrC,CAAC,CAAC;IACL,CAAC;IAEK,UAAU,CAAC,KAAY,EAAE,QAAqB;;YAClD,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBACzC,OAAO;aACR;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAElC,IAAI;gBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;aACnE;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,OAAO,EACP,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CACvD,CAAC;aACH;oBAAS;gBACR,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAClC;QACH,CAAC;KAAA;IACK,aAAa,CAAC,KAAY,EAAE,QAAqB;;YACrD,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBAC5C,OAAO;aACR;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAErC,IAAI;gBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,QAAQ,CAAC,CAAC;aACvE;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,OAAO,EACP,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CACvD,CAAC;aACH;oBAAS;gBACR,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACrC;QACH,CAAC;KAAA;CACF;;YAlGQ,uDAAgB;YANhB,2DAAc;YAAE,mDAAM;YAEtB,6DAAe;YAMf,iEAAgB;;AASZ,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,oFAAkD;;KAEnD,CAAC;GACW,0BAA0B,CAuFtC;AAvFsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBI;AACU;AACJ;AACS;AACH;AAK/B;AAEoC;AACS;AAClB;AACI;IAQ1C,yBAAyB,SAAzB,yBAAyB;IAQpC,YACU,cAA8B,EAC9B,gBAAkC,EAClC,QAAkB,EAClB,QAAyB,EACzB,KAAqB,EACrB,SAA2B;QAL3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAkB;QARrC,cAAS,GAAG,KAAK,CAAC;QAUhB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;YAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,IAAI,aAAa;QACf,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,KAAK,yEAA6B,CAAC;YACnC,KAAK,yEAA6B;gBAChC,OAAO,cAAc,CAAC;YAExB,KAAK,oEAAwB;gBAC3B,OAAO,cAAc,CAAC;YAExB,KAAK,uEAA2B,CAAC;YACjC,KAAK,qEAAyB;gBAC5B,OAAO,aAAa,CAAC;SACxB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB;aAClB,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC;aAC1C,IAAI,CACH,qEAAc,CAAC,IAAI,CAAC,EACpB,wDAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAlFQ,oEAAc;YACd,iEAAgB;YAJhB,qDAAQ;YAaR,6DAAe;YAXf,4DAAc;YAYd,kEAAgB;;AAQZ,yBAAyB;IANrC,mEAAY,EAAE;IACd,yDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mFAAiD;;KAElD,CAAC;GACW,yBAAyB,CA+DrC;AA/DqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBY;AACD;AAEE;AAGE;AAEK;AAER;AACL;IAOhC,0BAA0B,SAA1B,0BAA0B;IAerC,YACU,UAAsB,EACtB,gBAAkC,EAClC,cAA8B,EAC9B,KAAqB;QAHrB,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QAhB/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU,GAAY,KAAK,CAAC;QAE5B,oBAAe,GAAW,gBAAgB,CAAC;QAE3C,cAAS,GAAY,KAAK,CAAC;QAI3B,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;IAO/B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,mDAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CACtE,CAAC,MAAM,EAAE,EAAE;YACT,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,GAAG,MAAM,CAAC;YAEtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CACF,CACF,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,EAAE,CAAC;IAC5C,CAAC;IAEK,iBAAiB;;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC3D,IAAI,CAAC,YAAY,CAClB,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;aAC1C;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC;aACnE;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAEO,cAAc;QACpB,QAAQ,IAAI,CAAC,YAAY,EAAE;YACzB,KAAK,2DAAsB;gBACzB,2BAA2B;gBAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,MAAM;YAER;gBACE,MAAM;SACT;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,KAAK,GAAG,QAAQ,CAAC;QAErB,QAAQ,IAAI,CAAC,YAAY,EAAE;YACzB,KAAK,2DAAsB;gBACzB,KAAK,IAAI,UAAU,CAAC;gBACpB,MAAM;YAER,KAAK,2DAAsB;gBACzB,KAAK,IAAI,UAAU,CAAC;gBACpB,MAAM;YAER,KAAK,0DAAqB;gBACxB,KAAK,IAAI,SAAS,CAAC;gBACnB,MAAM;YAER;gBACE,MAAM;SACT;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;CACF;;YAlHQ,+DAAU;YAIV,uDAAgB;YAFhB,oEAAc;YAPd,2DAAc;;AAiBV,0BAA0B;IALtC,yDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,qFAAmD;;KAEpD,CAAC;GACW,0BAA0B,CAsGtC;AAtGsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBG;AACD;AAEL;AAEsB;AAGL;AAEH;AACL;IAOhC,wBAAwB,SAAxB,wBAAwB;IAanC,YACU,gBAAkC,EAClC,UAAsB,EACtB,cAA8B,EAC9B,MAAc;QAHd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAhBxB,oBAAe,GAAG,gBAAgB,CAAC;QACnC,iBAAY,GAAG,0DAAqB,CAAC;QAErC,cAAS,GAAY,IAAI,CAAC;QAE1B,oBAAe,GAAkB,EAAE,CAAC;QACpC,wBAAmB,GAAkB,EAAE,CAAC;QAExC,cAAS,GAAW,IAAI,CAAC;QAEzB,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAQhC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YACxD,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,cAAc,CAAC;YAErD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEK,MAAM;;YACV,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAE/B,IACE,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;gBACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,EACxC;gBACA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uBAAuB,0DAAqB,EAAE,CAAC,CAAC;aAC3E;QACH,CAAC;KAAA;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEK,iBAAiB;;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,MAAM,OAAO,CAAC,GAAG,CAAC;oBAChB,IAAI,CAAC,mBAAmB,EAAE;oBAC1B,IAAI,CAAC,uBAAuB,EAAE;iBAC/B,CAAC,CAAC;gBAEH,wBAAwB;gBACxB,8CAA8C;gBAC9C,sDAAsD;gBACtD,MAAM;aACP;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC;aAC7C;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAEK,mBAAmB;;YACvB,IAAI,CAAC,eAAe,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC7D,0DAAqB,EACrB;gBACE,WAAW,EAAE,IAAI;aAClB,CACF,CAAC;QACJ,CAAC;KAAA;IAEK,uBAAuB;;YAC3B,IAAI,CAAC,mBAAmB,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CACjE,0DAAqB,EACrB;gBACE,eAAe,EAAE,IAAI;aACtB,CACF,CAAC;QACJ,CAAC;KAAA;IAED,YAAY,CAAC,KAAa;QACxB,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,EAAE,CAAC;IAC5C,CAAC;CACF;;YA1GQ,uDAAgB;YAFhB,+DAAU;YAHV,oEAAc;YAJd,mDAAM;;AAiBF,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mFAAiD;;KAElD,CAAC;GACW,wBAAwB,CAkGpC;AAlGoC;;;;;;;;;;;;;;;;;;;;;;;;;;AClBwB;AACL;AAEpB;AAGiB;AAER;AAE7C,MAAM,aAAa,GAAG,sBAAsB,CAAC;IAOhC,2BAA2B,SAA3B,2BAA2B;IA8BtC,YAAoB,MAAc,EAAU,UAAsB;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QA7BlE,aAAQ,GAAc;YACpB;gBACE,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,yBAAyB;gBAChC,KAAK,EAAE,0DAAqB;aAC7B;YACD;gBACE,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,0BAA0B;gBACjC,KAAK,EAAE,2DAAsB;aAC9B;YACD;gBACE,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,yBAAyB;gBAChC,KAAK,EAAE,0DAAqB;aAC7B;YACD;gBACE,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,0BAA0B;gBACjC,KAAK,EAAE,2DAAsB;aAC9B;SACF,CAAC;QAEF,iBAAY,GAAG,IAAI,8CAAY,EAAE,CAAC;QAGhC,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC1D,IAAI,KAAK,YAAY,0DAAa,EAAE;gBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC3C,MAAM,CAAC,UAAU;wBACf,KAAK,CAAC,iBAAiB,KAAK,GAAG,aAAa,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjE,OAAO,MAAM,CAAC;gBAChB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU;aACvC,iBAAiB,EAAE;aACnB,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,MAAM,CAAC;YAChD,MAAM,cAAc,GAAG,WAAW,GAAG,CAAC,CAAC;YAEvC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC9B,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe;gBACrD,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa;aAC5D,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,IAAmB;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;CACF;;YAlFuB,mDAAM;YAKrB,+DAAU;;AAWN,2BAA2B;IALvC,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,qFAAmD;;KAEpD,CAAC;GACW,2BAA2B,CAkEvC;AAlEuC;;;;;;;;;;;;;;;;;;;;;;;;;ACjBoD;AAEG;AACG;AACP;AACM;AAE1F,MAAM,oBAAoB,GAAG;IAClC,qGAAyB;IAEzB,wGAA0B;IAC1B,oGAAwB;IACxB,0GAA0B;IAE1B,2GAA2B;CAC5B,CAAC;AAE0F;AAEK;AACF;AACG;AACP;;;;;;;;;;;;;;;;;;;;;;ACtBlD;AACc;AAQjC;AAEqC;AAClB;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAkB;QAC7B,IAAI,EAAE;YACJ,KAAK,EAAE,iBAAiB;SACzB;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,oEAA2B;gBACtC,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,0DAAqB;wBAC3B,SAAS,EAAE,iEAAwB;wBACnC,IAAI,EAAE;4BACJ,YAAY,EAAE,0DAAqB;yBACpC;qBACF;oBACD;wBACE,IAAI,EAAE,2DAAsB;wBAC5B,SAAS,EAAE,mEAA0B;wBACrC,IAAI,EAAE;4BACJ,YAAY,EAAE,2DAAsB;yBACrC;qBACF;oBACD;wBACE,IAAI,EAAE,0DAAqB;wBAC3B,SAAS,EAAE,mEAA0B;wBACrC,IAAI,EAAE;4BACJ,YAAY,EAAE,0DAAqB;yBACpC;qBACF;oBACD;wBACE,IAAI,EAAE,2DAAsB;wBAC5B,SAAS,EAAE,mEAA0B;wBACrC,IAAI,EAAE;4BACJ,YAAY,EAAE,2DAAsB;yBACrC;qBACF;oBACD;wBACE,IAAI,EAAE,IAAI;wBACV,UAAU,EAAE,0DAAqB;qBAClC;iBACF;aACF;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,kEAAyB;aACrC;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,WAAW;aACxB;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,EAAE;KACf;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;AChFe;IAOrC,kBAAkB,SAAlB,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,2EAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAO9B;AAP8B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPU;AAES;AAES;AACN;AAEM;AACS;AAEhB;AACA;AACR;AAE5C,MAAM,wBAAwB,GAAG;IAC/B,+DAAY;IACZ,6EAAsB;IACtB,4DAAiB;IACjB,qEAAc;CACf,CAAC;IAYW,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,wBAAwB,CAAC;QACnC,YAAY,EAAE;YACZ,oEAAkB;YAClB,6DAAoB;YACpB,6DAAoB;YACpB,qDAAgB;SACjB;QACD,OAAO,EAAE,CAAC,qDAAgB,CAAC;KAC5B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBL;AAEqC;AAOF;AAEkB;AACL;AAEvB;AAEK;AACM;AAES;AAEpE,MAAM,gBAAgB,GAAG,8BAA8B,CAAC;IAQ3C,yBAAyB,SAAzB,yBAAyB;IAiBpC,YACS,KAAqB,EACpB,cAA8B,EAC9B,gBAAkC,EAClC,YAA0B,EAC1B,UAAsB,EACtB,eAAgC;QALjC,UAAK,GAAL,KAAK,CAAgB;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,eAAU,GAAV,UAAU,CAAY;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAtBjC,8BAAyB,GAAY,KAAK,CAAC;QAKpD,oBAAe,GAAW,qCAAqC,CAAC;QAEhE,mBAAc,GAAqB,EAAE,CAAC;QAEtC,cAAS,GAAY,KAAK,CAAC;QAC3B,sBAAiB,GAAY,KAAK,CAAC;QAcjC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,EAAE;YACxD,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,YAAY,CAAC,GAAG,cAAc,CAAC;YAErD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,yBAAyB,CAAC,OAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;IACjC,CAAC;IAEM,UAAU,CAAC,KAAyB;QACzC,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;YAC/B,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE;gBAChC,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgC,CAAC;gBAE/D,SAAS,CAAC,IAAI,CAAC,CAAC,IAAU,EAAE,EAAE;oBAC5B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAEM,sBAAsB,CAAC,cAAgC;QAC5D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,OAAO,GAAG,gBAAgB,IAAI,KAAK,EAAE,CAAC;IACxC,CAAC;IAED,YAAY,CACV,QAAa,IAAI,EACjB,iBAAmC,IAAI,EACvC,IAAI,GAAG,IAAI;QAEX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IACnC,CAAC;IAEK,WAAW;;YACf,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,6BAA6B,CACnE,IAAI,CAAC,cAAc,CACpB,CAAC;YAEF,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBAC3C,OAAO;aACR;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI;gBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACzC,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAC1B,CAAC;gBAEF,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;gBAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,YAAY,CACf,KAAK,EACL,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAC1B,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC1B;aACF;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,EAAE;YAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC9C;aAAM,IACL,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,EACxC;YACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACvD;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACvD;IACH,CAAC;IAEK,gBAAgB;;YACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAE9B,IAAI;gBACF,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;gBAE3D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,CAC9B,CAAC,OAAO,EAAE,EAAE;;oBACV,qBAAO,CAAC,OAAO,0CAAE,QAAQ,MAAK,yEAAY;wBAC1C,OAAO,CAAC,WAAW,KAAK,yEAAoB;iBAAA,CAC/C,CAAC;gBAEF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACpE;aACF;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;QACH,CAAC;KAAA;CACF;;YArLQ,uEAAc;YAOd,oEAAc;YAUd,yEAAgB;YALhB,0DAAY;YAEZ,+DAAU;YALgB,4DAAe;;;wCAmB/C,iDAAK;wCAEL,qDAAS,SAAC,2BAA2B;uBAErC,qDAAS,SAAC,UAAU;;AALV,yBAAyB;IANrC,yDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,oFAAkD;QAElD,aAAa,EAAE,kEAAsB;;KACtC,CAAC;GACW,yBAAyB,CA0JrC;AA1JqC;;;;;;;;;;;;;;;;;;;;;;;;;ACpCW;AACZ;AAEuB;AAGQ;IAOvD,2BAA2B,SAA3B,2BAA2B;IAUtC,YACS,KAAqB,EACpB,gBAAkC;QADnC,UAAK,GAAL,KAAK,CAAgB;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAP5C,cAAS,GAAY,KAAK,CAAC;IAQxB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS;YACZ,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,yDAAgB;gBAClC,CAAC,CAAC,iCAAiC;gBACnC,CAAC,CAAC,+BAA+B,CAAC;IACxC,CAAC;IAEK,eAAe;;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5E,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;YAAC,OAAO,KAAK,EAAE;aACf;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;CACF;;YAlDQ,sEAAc;YAGd,yEAAgB;;;0BAQtB,gDAAK;oBACL,gDAAK;mBAKL,gDAAK;6BACL,gDAAK;;AARK,2BAA2B;IALvC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,sFAAoD;;KAErD,CAAC;GACW,2BAA2B,CAwCvC;AAxCuC;;;;;;;;;;;;;;;;;;;;;;;;ACbiB;AACC;AACE;IAO/C,6BAA6B,SAA7B,6BAA6B;IAGxC,YACS,KAAqB,EACpB,cAA8B;QAD/B,UAAK,GAAL,KAAK,CAAgB;QACpB,mBAAc,GAAd,cAAc,CAAgB;IACrC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,EAAE;YAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC;SAC/D;aAAM,IACL,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,EACxC;YACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACvD;IACH,CAAC;IAEO,YAAY,CAAC,GAAW;QAC9B,OAAO,2BAA2B,GAAG,EAAE,CAAC;IAC1C,CAAC;CACF;;YA3CQ,sEAAc;YADd,oEAAc;;AAQV,6BAA6B;IALzC,wDAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,wFAAsD;;KAEvD,CAAC;GACW,6BAA6B,CAoCzC;AApCyC;;;;;;;;;;;;;;;;;;;;;ACToD;AACM;AACM;AAEnG,MAAM,gBAAgB,GAAG;IAC9B,uGAAyB;IACzB,mHAA6B;IAC7B,6GAA2B;CAC5B,CAAC;AAE4F;AACM;AACM;;;;;;;;;;;;;;;ACZ1G,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,oCAAmB;IACnB,sCAAqB;IACrB,oCAAmB;IACnB,sCAAqB;AACvB,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;;;;;;;;;;;;;;;;ACLiC;;;;;;;;;;;;;;;;;;;;;;;;ACAS;AAEW;AAKxB;AAGmB;AAEqD;AACM;AACM;IAKrG,sBAAsB,SAAtB,sBAAsB;IACjC,YACU,YAAsB,EACtB,aAA4B,EAC5B,mBAAwC;QAFxC,iBAAY,GAAZ,YAAY,CAAU;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC/C,CAAC;IAEE,oBAAoB,CAAC,4BAAqC,KAAK;;YACnE,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CACvE,2EAAyB,CAC1B,CAAC;YAEF,IAAI,gBAAgB,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;gBAC1C,OAAO;aACR;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8GAAyB,EAAE;gBACjE,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,QAAQ,CAAC,iBAAiB,CAAC,yBAAyB;gBAClD,yBAAyB,CAAC;YAE5B,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;YAAC,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,EAAE;gBACxC,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;iBAClD;aACF;QACH,CAAC;KAAA;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0HAA6B,EAAE;YACpD,aAAa,EAAE,gBAAgB;YAC/B,WAAW,EAAE,sBAAsB;YACnC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAEK,cAAc,CAClB,KAAU,EACV,cAAgC,EAChC,IAAY;;YAEZ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oHAA2B,EAAE;gBACnE,aAAa,EAAE,gBAAgB;gBAC/B,WAAW,EAAE,sBAAsB;gBACnC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEF,QAAQ,CAAC,iBAAiD,CAAC,IAAI,GAAG,IAAI,CAAC;YACvE,QAAQ,CAAC,iBAAiD,CAAC,cAAc;gBACxE,cAAc,CAAC;YAChB,QAAQ,CAAC,iBAAiD,CAAC,KAAK,GAAG,KAAK,CAAC;YAE1E,IAAI;gBACF,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;YAAC,OAAO,KAAK,EAAE,GAAE;QACpB,CAAC;KAAA;CACF;;YAlFQ,gEAAQ;YAQR,2DAAa;YALpB,qEAAmB;;AAcR,sBAAsB;IAHlC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,sBAAsB,CAiElC;AAjEkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBQ;AACgC;AAClC;AAEE;AAEjB;AAEoB;AACY;AAMlC;AACwB;AACY;AAElB;IAO7B,gBAAgB,SAAhB,gBAAgB;IAG3B,YACU,cAA8B,EAC9B,UAAsB,EACtB,YAA0B,EAC1B,WAAwB,EACxB,MAAc,EACd,UAAsB;QALtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QARhC,wBAAmB,GAAG,IAAI,yCAAO,EAAE,CAAC;IASjC,CAAC;IAEJ,qBAAqB;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IACjD,CAAC;IAED,mBAAmB,CAAC,QAAqB;;QACvC,IAAI,eAAQ,CAAC,SAAS,0CAAE,MAAM,KAAI,CAAC,EAAE;YACnC,OAAO,eAAe,CAAC;SACxB;QAED,IAAI,4CAAK,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;YAC5C,OAAO,aAAa,CAAC;SACtB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEK,eAAe,CACnB,KAAuB,EACvB,IAAY,EACZ,4BAAqC,KAAK;;YAE1C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG;gBACX,wBAAwB,EAAE,IAAI;gBAC9B,WAAW,EAAE,KAAK;qBACf,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;oBACf,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;gBAClC,CAAC,CAAC;qBACD,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;oBACZ,OAAO;wBACL,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;qBACrB,CAAC;gBACJ,CAAC,CAAC;aACL,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,GAAG,EAAE,IAAI,CAAC,CAAC;YACpE,MAAM,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAE1C,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;YAEhC,IAAI,yBAAyB,EAAE;gBAC7B,IAAI,KAAK,GAAG,sBAAsB,CAAC;gBAEnC,IACE,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;oBACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,EACxC;oBACA,KAAK,IAAI,0DAAqB,CAAC;iBAChC;qBAAM;oBACL,KAAK,IAAI,0DAAqB,CAAC;iBAChC;gBAED,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAClC;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC;KAAA;IAED,YAAY,CAAC,OAAsB,IAAI,EAAE,SAAc,IAAI;QACzD,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAE7B,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;QAEhD,IAAI,MAAM,EAAE;YACV,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;gBACxB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;oBAC3C,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,KAAK,EAAE;wBACT,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;qBACpC;iBACF;aACF;SACF;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,0DAAqB;gBACxB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,sEAAoC,CAAC,CAAC;gBACvE,MAAM;YAER,KAAK,2DAAsB;gBACzB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,oEAAkC,CAAC,CAAC;gBACrE,yEAAyE;gBACzE,MAAM;YAER,KAAK,0DAAqB;gBACxB,MAAM,GAAG,MAAM,CAAC,MAAM,CACpB,QAAQ,EACR,yEAAuC,CACxC,CAAC;gBACF,MAAM,GAAG,MAAM,CAAC,MAAM,CACpB,QAAQ,EACR,yEAAuC,CACxC,CAAC;gBAEF,MAAM;YAER,KAAK,2DAAsB;gBACzB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,uEAAqC,CAAC,CAAC;gBACxE,MAAM;YAER;gBACE,MAAM;SACT;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAgB,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAEK,sBAAsB,CAAC,UAAkB;;YAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,UAAU,cAAc,CAAC,CAAC;YAExD,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;YAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;YACxD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAC;YAElE,MAAM,MAAM,GAAG;gBACb,YAAY,EAAE,MAAM;aACrB,CAAC;YAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9D,CAAC;KAAA;IAEK,2BAA2B,CAAC,QAAqB;;YACrD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChE,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAClC,QAAQ,EACR,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAClC,CAAC;YAEF,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAED,IAAI,CAAC,QAAqB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEK,oBAAoB,CAAC,QAAqB;;YAC9C,IACE,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE;gBAC1C,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;oBACvC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,EAC3C;gBACA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEzC,IAAI,CAAC,MAAM,EAAE;oBACX,MAAM,KAAK,CAAC;iBACb;gBAED,OAAO,MAAM,CAAC;aACf;YAED,OAAO;QACT,CAAC;KAAA;IAEK,eAAe,CAAC,UAAkB;;YACtC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,GAAG,CAAC,CAAC;QAC/C,CAAC;KAAA;IAED,yBAAyB,CAAC,UAAkB;QAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAc,GAAG,CAAC,CAAC;IACzD,CAAC;IACM,sBAAsB,CAAC,UAAkB;QAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,UAAU,qBAAqB,CAAC;QAC9D,MAAM,MAAM,GAAG;YACb,YAAY,EAAE,MAAM;SACrB,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC3D,CAAC;IACK,+BAA+B,CAAC,QAAqB;;YACzD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChE,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAClC,QAAQ,EACR,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAClC,CAAC;YAEF,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IACO,SAAS,CAAC,OAAe,IAAI;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACtC,OAAO,aAAa,IAAI,CAAC,cAAc,CAAC,SAAS,gBAAgB,MAAM,EAAE,CAAC;IAC5E,CAAC;CAEF;;YArNQ,oEAAc;YADd,wDAAU;YAQV,0DAAY;YACZ,sEAAW;YAfX,oDAAM;YADN,4DAAU;;AAyBN,gBAAgB;IAH5B,0DAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAoM5B;AApM4B;;;;;;;;;;;;;;;;;;AC1BO;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDE;AACA;AACF;;AAE3C,oBAAoB,0DAAY;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,8CAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,2BAA2B,gDAAgD,kBAAkB;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwC","sources":["./src/app/contracts/components/contracts-date/contracts-date.component.ts","./src/app/contracts/components/contracts-empty/contracts-empty.component.ts","./src/app/contracts/components/contracts-error/contracts-error.component.ts","./src/app/contracts/components/contracts-group/contracts-group.component.ts","./src/app/contracts/components/contracts-info-loading/contracts-info-loading.component.ts","./src/app/contracts/components/contracts-info/contracts-info.component.ts","./src/app/contracts/components/contracts-item/contracts-item.component.ts","./src/app/contracts/components/contracts-list/contracts-list.component.ts","./src/app/contracts/components/contracts-loading/contracts-loading.component.ts","./src/app/contracts/components/contracts-nav/contracts-nav.component.ts","./src/app/contracts/components/contracts-status/contracts-status.component.ts","./src/app/contracts/components/index.ts","./src/app/contracts/containers/contracts-approved/contracts-approved.component.ts","./src/app/contracts/containers/contracts-details/contracts-details.component.ts","./src/app/contracts/containers/contracts-list-base/contracts-list-base.component.ts","./src/app/contracts/containers/contracts-on-sign/contracts-on-sign.component.ts","./src/app/contracts/containers/contracts-outcoming/contracts-outcoming.component.ts","./src/app/contracts/containers/index.ts","./src/app/contracts/contracts-routing.module.ts","./src/app/contracts/contracts.component.ts","./src/app/contracts/contracts.module.ts","./src/app/contracts/modals/add-contract-modal/add-contract-modal.component.ts","./src/app/contracts/modals/contract-error-modal/contract-error-modal.component.ts","./src/app/contracts/modals/contract-success-modal/contract-success-modal.component.ts","./src/app/contracts/modals/index.ts","./src/app/contracts/models/contracts.model.ts","./src/app/contracts/models/index.ts","./src/app/contracts/services/contracts-modals.service.ts","./src/app/contracts/services/contracts.service.ts","./src/app/contracts/services/index.ts","./node_modules/@ngneat/until-destroy/fesm2015/ngneat-until-destroy.mjs"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FX_CONTRACT_STATUS, IFxContract } from '@shared/models';\nimport dayjs from 'dayjs';\nimport { of } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'j-contracts-date',\n  templateUrl: './contracts-date.component.html',\n  styleUrls: ['./contracts-date.component.scss'],\n})\nexport class ContractsDateComponent implements OnInit {\n  @Input() contract: IFxContract;\n  translatePrefix: string = 'CONTRACTS.DATE';\n\n  constructor(\n    private translateService: TranslateService,\n  ) {}\n\n  ngOnInit() {}\n\n  get tooltip() {\n    if (!this.contract) {\n      return;\n    }\n\n    switch (this.contract.status) {\n      case FX_CONTRACT_STATUS.ON_SIGN:\n      case FX_CONTRACT_STATUS.REGED:\n      case FX_CONTRACT_STATUS.REGISTERED:\n      case FX_CONTRACT_STATUS.PROCESSING:\n        return this.mapTranslate('SENT');\n\n      case FX_CONTRACT_STATUS.REJECTED:\n        return this.mapTranslate('REJECTED');\n    }\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  public mapDateTime(date: Date) {\n    const isToday = dayjs().isSame(dayjs(date), 'day');\n    const isYesterday = dayjs().subtract(1, 'date').isSame(dayjs(date), 'day');\n\n    if (isToday) {\n      return this.translateService.get('STATEMENT.TRANSACTION.DATE.TODAY');\n    } else if (isYesterday) {\n      return  this.translateService.get('STATEMENT.TRANSACTION.DATE.YESTERDAY');\n    } else {\n      return of(this.convertToDayHourFormat(this.contract.created));\n    }\n  }\n\n  private convertToDayHourFormat(date: Date) {\n    const format = dayjs().isSame(this.contract.created, 'year')\n      ? 'd MMMM HH:mm'\n      : 'd MMMM yyyy HH:mm';\n    return formatDate(this.contract.created, format, this.translateService.currentLang);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'j-contracts-empty',\n  templateUrl: './contracts-empty.component.html',\n  styleUrls: ['./contracts-empty.component.scss'],\n})\nexport class ContractsEmptyComponent {\n  @Input()\n  label = 'CONTRACTS.EMPTY';\n\n  constructor() {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'j-contracts-error',\n  templateUrl: './contracts-error.component.html',\n  styleUrls: ['./contracts-error.component.scss'],\n})\nexport class ContractsErrorComponent {\n  @Input()\n  label = 'CONTRACTS.ERRORED';\n\n  @Output() retried = new EventEmitter();\n\n  constructor() {}\n\n  onRetry(event: Event) {\n    event.preventDefault();\n    this.retried.emit();\n  }\n}\n","import { formatDate } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  LOCALE_ID,\n  Output,\n} from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IFxContract, IFxContractAttachment } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\nimport { FilesService } from '@shared/services';\n\nimport { CONTRACT_TYPE } from '../../models';\n\n@Component({\n  selector: 'j-contracts-group',\n  templateUrl: './contracts-group.component.html',\n  styleUrls: ['./contracts-group.component.scss'],\n})\nexport class ContractsGroupComponent {\n  @Input() title: string;\n  @Input() list: IFxContract[];\n\n  @Input() contractType: CONTRACT_TYPE;\n\n  @Input() isDeletable: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSignable: boolean = false;\n\n  @Output() scrolled = new EventEmitter();\n  @Output() signed = new EventEmitter();\n\n  translatePrefix = 'CONTRACTS.LIST';\n  urlPath = 'fx-contracts';\n\n  collapsedIds = [];\n\n  modalPartialTitleFn = this.mapModalPartialTitle.bind(this);\n\n  constructor(\n    private navService: NavService,\n    private translateService: TranslateService,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  mapModalPartialTitle(contract: IFxContract) {\n    const mapped = this.translateService.instant(\n      this.mapTranslate('ITEM_TITLE'),\n      {\n        date: formatDate(contract.created, 'd MMMM yyyy', this.locale),\n      }\n    );\n\n    return mapped ? `${mapped}:` : ``;\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  onClick(contract: IFxContract) {\n    contract.isCollapsed = !contract.isCollapsed;\n  }\n\n  onScroll() {\n    this.scrolled.emit();\n  }\n\n  onClear() {\n    this.navService.retrieveContractBadges();\n  }\n\n  onSign() {\n    this.signed.emit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nconst TRANSLATE_PREFIX = `CONTRACTS.DETAILS`;\n\n@Component({\n  selector: 'j-contracts-info-loading',\n  templateUrl: './contracts-info-loading.component.html',\n  styleUrls: ['./contracts-info-loading.component.scss'],\n})\nexport class ContractsInfoLoadingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  mapTranslate(prefix: string) {\n    return `${TRANSLATE_PREFIX}.${prefix}`;\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\nimport { FilesService } from '@shared/services';\r\nimport {\r\n  IFxContract,\r\n  IFxContractAttachment,\r\n  PAYMENT_TYPE,\r\n} from '@shared/models';\r\n\r\nimport { ContractsService } from '@contracts/services';\r\n\r\nimport {\r\n  FeatureFlagsService,\r\n  FEATURE_FLAG,\r\n} from '@feature-flags/index';\r\n\r\nimport { paymentsRoutes } from '@payments/payments-routes';\r\n\r\nconst TRANSLATE_PREFIX = `CONTRACTS.DETAILS`;\r\nconst DATE_FORMAT = 'dd MMMM yyyy';\r\n\r\n@Component({\r\n  selector: 'j-contracts-info',\r\n  templateUrl: './contracts-info.component.html',\r\n  styleUrls: ['./contracts-info.component.scss'],\r\n})\r\nexport class ContractsInfoComponent implements OnInit, OnDestroy {\r\n  @Input() contract: IFxContract;\r\n  data: { label: string; value: string; extraClass?: string }[];\r\n\r\n  isPaymentCreatable = true;\r\n  isContractErrored = false;\r\n  isDownloading = false;\r\n  isActReconciliationLoad = false;\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private notifierService: NotifierService,\r\n    private translateService: TranslateService,\r\n    private contractsService: ContractsService,\r\n    private featureFlagsService: FeatureFlagsService,\r\n    private filesService: FilesService,\r\n    private router: Router\r\n  ) {\r\n    this.subscription.add(\r\n      this.featureFlagsService.featureFlags$.subscribe((flags) => {\r\n        this.checkFeatureFlags();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapData();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onAttachmentDownload(event: Event, attachment: IFxContractAttachment) {\r\n    event.preventDefault();\r\n\r\n    this.filesService.downloadFileById(\r\n      attachment.file.id,\r\n      attachment.file.name\r\n    );\r\n  }\r\n  onXlsDownload(){\r\n    this.isActReconciliationLoad = true\r\n    this.contractsService.downloadActOfReconciliationXlsx(this.contract).then(() => this.isActReconciliationLoad = false)\r\n  }\r\n  onCreatePayment() {\r\n    this.router.navigate(\r\n      [`/${paymentsRoutes.root}/${paymentsRoutes.foreignCurrency}`],\r\n      {\r\n        state: {\r\n          resolvedPayment: {\r\n            type: PAYMENT_TYPE.FOREIGN,\r\n            isNewPayment: true,\r\n            details: {\r\n              paymentRecipient: null,\r\n              foreignPaymentDetails: {\r\n                withinContract: true,\r\n                fxContract: this.contract,\r\n                fxContractId: this.contract.id,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  async onDownload() {\r\n    if (this.isDownloading) {\r\n      return;\r\n    }\r\n\r\n    this.isDownloading = true;\r\n    try {\r\n      await this.contractsService.downloadContractCertificate(this.contract);\r\n    } catch (error) {\r\n      this.notifierService.notify(\r\n        'error',\r\n        this.translateService.instant('ERRORS.DOWNLOAD_ERROR')\r\n      );\r\n    } finally {\r\n      this.isDownloading = false;\r\n    }\r\n  }\r\n\r\n  mapTranslate(prefix: string) {\r\n    return `${TRANSLATE_PREFIX}.${prefix}`;\r\n  }\r\n\r\n  private mapData() {\r\n    this.data = [];\r\n\r\n    const errorMessage = this.contractsService.mapRemainderMessage(\r\n      this.contract\r\n    );\r\n\r\n    if (errorMessage) {\r\n      this.isContractErrored = true;\r\n      this.data = [\r\n        ...this.data,\r\n        {\r\n          label: this.mapTranslate('INFO'),\r\n          value: this.translateService.instant(this.mapTranslate(errorMessage)),\r\n          extraClass: 'text-danger',\r\n        },\r\n      ];\r\n    }\r\n\r\n    this.data = [\r\n      ...this.data,\r\n      {\r\n        label: this.mapTranslate('TYPE'),\r\n        value: this.contract.type.description,\r\n      },\r\n      {\r\n        label: this.mapTranslate('DATE_FROM'),\r\n        value: this.contract.dateFrom\r\n          ? formatDate(\r\n              this.contract.dateFrom,\r\n              DATE_FORMAT,\r\n              this.translateService.currentLang\r\n            )\r\n          : '-',\r\n      },\r\n      {\r\n        label: this.mapTranslate('DATE_TO'),\r\n        value: this.contract.dateTo\r\n          ? formatDate(\r\n              this.contract.dateTo,\r\n              DATE_FORMAT,\r\n              this.translateService.currentLang\r\n            )\r\n          : '-',\r\n      },\r\n    ];\r\n\r\n    if (this.contract.registrationNumberContract) {\r\n      this.data = [\r\n        ...this.data,\r\n        {\r\n          label: this.mapTranslate('UNK'),\r\n          value: this.contract.registrationNumberContract,\r\n        },\r\n      ];\r\n    }\r\n\r\n    if (this.contract.documentDate) {\r\n      this.data = [\r\n        ...this.data,\r\n        {\r\n          label: this.mapTranslate('UNK_DATE'),\r\n          value: formatDate(\r\n            this.contract.documentDate,\r\n            DATE_FORMAT,\r\n            this.translateService.currentLang\r\n          ),\r\n        },\r\n      ];\r\n    }\r\n\r\n    this.data = [\r\n      ...this.data,\r\n      {\r\n        label: this.mapTranslate('CURRENCY'),\r\n        value: this.contract.amount.currency,\r\n      },\r\n      {\r\n        label: this.mapTranslate('COUNTRY'),\r\n        value: `${this.contract.contractor?.country?.code || ''} - ${\r\n          this.contract.contractor?.country?.name || ''\r\n        }`,\r\n      },\r\n      {\r\n        label: this.mapTranslate('CITY'),\r\n        value: this.contract.contractor?.cityName || '-',\r\n      },\r\n      {\r\n        label: this.mapTranslate('BIC'),\r\n        value: this.contract.contractor.bank?.code || '-',\r\n      },\r\n    ];\r\n  }\r\n\r\n  private async checkFeatureFlags() {\r\n    this.isPaymentCreatable = !this.featureFlagsService.isDisabled(\r\n      FEATURE_FLAG.FOREIGN_PAYMENT\r\n    );\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IFxContract, IFxContractAttachment } from '@shared/models';\nimport { FilesService } from '@shared/services';\n\n@Component({\n  selector: 'j-contracts-item',\n  templateUrl: './contracts-item.component.html',\n  styleUrls: ['./contracts-item.component.scss'],\n})\nexport class ContractsItemComponent implements OnInit {\n  @Input() contract: IFxContract;\n\n  @Input() isDeletable: boolean = false;\n  @Input() isSelectable: boolean = false;\n  @Input() isSignable: boolean = false;\n\n  translatePrefix: string = 'CONTRACTS.ITEM';\n  maxAllowedAttachments = 10;\n\n  constructor(\n    private translateService: TranslateService,\n    private filesService: FilesService\n  ) {}\n\n  ngOnInit() {}\n\n  get attachments() {\n    return this.contract.attachments.slice(0, this.maxAllowedAttachments);\n  }\n\n  get hasMoreAttachments() {\n    return this.maxAllowedAttachments < this.contract.attachments.length;\n  }\n\n  get attachmentsMaxHeight() {\n    if (!this.contract.isCollapsed) {\n      return 0;\n    }\n\n    let maxHeight = this.attachments.length * 56;\n\n    if (this.hasMoreAttachments) {\n      maxHeight += 42;\n    }\n\n    return `${maxHeight}px`;\n  }\n\n  async onAttachmentDownload(event: Event, attachment: IFxContractAttachment) {\n    event.stopPropagation();\n\n    if (attachment.isLoading) {\n      return;\n    }\n\n    attachment.isLoading = true;\n\n    try {\n      await this.filesService.downloadFileById(\n        attachment.file.id,\n        attachment.file.name\n      );\n    } catch (error) {\n    } finally {\n      attachment.isLoading = false;\n    }\n  }\n\n  showMoreAttachments() {\n    this.maxAllowedAttachments += 10;\n  }\n\n  mapAttachmentsTitle(contract: IFxContract) {\n    return this.mapAttachmentsKey(\n      'ATTACHMENTS_TITLE',\n      contract.attachments?.length\n    );\n  }\n\n  mapTranslate(key: string) {\n    return `${this.translatePrefix}.${key}`;\n  }\n\n  mapMoreTitle() {\n    return this.mapAttachmentsKey(\n      'MORE',\n      Math.min(\n        this.contract.attachments.length - this.maxAllowedAttachments,\n        10\n      )\n    );\n  }\n\n  private mapAttachmentsKey(key: string, itemsCount: number) {\n    const params = {\n      count: itemsCount,\n    };\n\n    let result = `${key}.${this.mapPluralKey(itemsCount)}`;\n\n    return this.translateService.stream(this.mapTranslate(result), params);\n  }\n\n  private mapPluralKey(itemsCount: number) {\n    switch (itemsCount % 20) {\n      case 1:\n        return 'ONE';\n      case 2:\n      case 3:\n      case 4:\n        return 'FEW';\n      default:\n        return 'OTHER';\n    }\n  }\n}\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { CompanyService } from '@company/company.service';\r\nimport { IFxContract } from '@shared/models';\r\n\r\nimport { ContractsService } from '../../services';\r\nimport { CONTRACT_TYPE } from '../../models';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\n@Component({\r\n  selector: 'j-contracts-list',\r\n  templateUrl: './contracts-list.component.html',\r\n  styleUrls: ['./contracts-list.component.scss'],\r\n})\r\nexport class ContractsListComponent implements OnDestroy, OnInit {\r\n  @Input() translatePrefix: string;\r\n  @Input() contractType: CONTRACT_TYPE;\r\n\r\n  @Input() onSignForMe: boolean;\r\n  @Input() onSignForOthers: boolean;\r\n\r\n  @ContentChild('itemTemplate', { static: false })\r\n  itemTemplate: TemplateRef<any>;\r\n  @ContentChild('headerTemplate', { static: false })\r\n  headerTemplate: TemplateRef<any>;\r\n\r\n  contractsList: IFxContract[];\r\n  isLoading: boolean = false;\r\n  errorText: string;\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private contractsService: ContractsService,\r\n    private companyService: CompanyService,\r\n    private navService: NavService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const companySubscription = this.companyService.refresh$.subscribe(() => {\r\n      this.loadContracts();\r\n    });\r\n\r\n    this.subscription.add(companySubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  mapTranslate(value: string) {\r\n    return `${this.translatePrefix}.${value}`;\r\n  }\r\n\r\n  async loadContracts() {\r\n    this.errorText = null;\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      let extras = null;\r\n\r\n      if (this.onSignForMe) {\r\n        extras = {\r\n          onSignForMe: true,\r\n        };\r\n      }\r\n\r\n      if (this.onSignForOthers) {\r\n        extras = {\r\n          onSignForOthers: true,\r\n        };\r\n      }\r\n\r\n      this.contractsList = await this.contractsService.getContracts(\r\n        this.contractType,\r\n        extras\r\n      );\r\n      this.navService.retrieveContractBadges();\r\n    } catch (error) {\r\n      this.errorText = error.description || error.code || error || true;\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-contracts-loading',\n  templateUrl: './contracts-loading.component.html',\n  styleUrls: ['./contracts-loading.component.scss'],\n})\nexport class ContractsLoadingComponent implements OnInit {\n  @Input() hasTitle = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { ContractsModalsService } from '@contracts/services';\r\n\r\nimport {\r\n  FeatureFlagsService,\r\n  FEATURE_FLAG,\r\n} from '@feature-flags/index';\r\nimport { JModalService } from '@shared/services/j-modal.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'j-contracts-nav',\r\n  templateUrl: './contracts-nav.component.html',\r\n  styleUrls: ['./contracts-nav.component.scss'],\r\n})\r\nexport class ContractsNavComponent implements OnDestroy, OnInit {\r\n  isAddingDisabled: boolean = false;\r\n  contractTabs = [\r\n    {\r\n      label: 'CONTRACTS.TABS.OUTCOMING',\r\n      url: '/contracts/outcoming',\r\n    },\r\n    {\r\n      label: 'CONTRACTS.TABS.INCOMING',\r\n      url: '/contracts/incoming',\r\n      soon: true,\r\n    },\r\n  ];\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private contractsModalsService: ContractsModalsService,\r\n    private featureFlagsService: FeatureFlagsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.checkFeatureFlag();\r\n\r\n    this.subscription.add(\r\n      this.featureFlagsService.featureFlags$.subscribe((flags) => {\r\n        this.checkFeatureFlag();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  showAddContractModal() {\r\n    this.contractsModalsService.showAddContractModal(true);\r\n  }\r\n\r\n  private checkFeatureFlag() {\r\n    this.isAddingDisabled = this.featureFlagsService.isDisabled(\r\n      FEATURE_FLAG.FX_CONTRACTS\r\n    );\r\n  }\r\n}\r\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { CONTRACT_TYPE } from '@contracts/models';\nimport { FX_CONTRACT_STATUS, IFxContract } from '@shared/models';\n\n@Component({\n  selector: 'j-contracts-status',\n  templateUrl: './contracts-status.component.html',\n  styleUrls: ['./contracts-status.component.scss'],\n})\nexport class ContractsStatusComponent implements OnInit {\n  @Input() contract: IFxContract;\n  statusClassname: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.mapContractType();\n  }\n\n  private mapContractType() {\n    switch (this.contract.status) {\n      case FX_CONTRACT_STATUS.REGED:\n        this.statusClassname = 'text-success';\n        break;\n\n      case FX_CONTRACT_STATUS.PROCESSING:\n      case FX_CONTRACT_STATUS.REGISTERED:\n        this.statusClassname = 'text-warning';\n        break;\n\n      case FX_CONTRACT_STATUS.REJECTED:\n        this.statusClassname = 'text-danger';\n        break;\n    }\n  }\n}\n","import { ContractsEmptyComponent } from './contracts-empty/contracts-empty.component';\r\nimport { ContractsErrorComponent } from './contracts-error/contracts-error.component';\r\nimport { ContractsLoadingComponent } from './contracts-loading/contracts-loading.component';\r\nimport { ContractsNavComponent } from './contracts-nav/contracts-nav.component';\r\n\r\nimport { ContractsInfoComponent } from './contracts-info/contracts-info.component';\r\nimport { ContractsInfoLoadingComponent } from './contracts-info-loading/contracts-info-loading.component';\r\nimport { ContractsListComponent } from './contracts-list/contracts-list.component';\r\nimport { ContractsGroupComponent } from './contracts-group/contracts-group.component';\r\nimport { ContractsStatusComponent } from './contracts-status/contracts-status.component';\r\nimport { ContractsDateComponent } from './contracts-date/contracts-date.component';\r\nimport { ContractsItemComponent } from './contracts-item/contracts-item.component';\r\n\r\nexport const CONTRACTS_COMPONENTS = [\r\n  ContractsNavComponent,\r\n  ContractsLoadingComponent,\r\n  ContractsEmptyComponent,\r\n  ContractsErrorComponent,\r\n  ContractsInfoComponent,\r\n  ContractsInfoLoadingComponent,\r\n  ContractsListComponent,\r\n  ContractsGroupComponent,\r\n  ContractsStatusComponent,\r\n  ContractsDateComponent,\r\n  ContractsItemComponent,\r\n];\r\n\r\nexport { ContractsNavComponent } from './contracts-nav/contracts-nav.component';\r\nexport { ContractsLoadingComponent } from './contracts-loading/contracts-loading.component';\r\nexport { ContractsEmptyComponent } from './contracts-empty/contracts-empty.component';\r\nexport { ContractsErrorComponent } from './contracts-error/contracts-error.component';\r\n\r\nexport { ContractsInfoComponent } from './contracts-info/contracts-info.component';\r\nexport { ContractsInfoLoadingComponent } from './contracts-info-loading/contracts-info-loading.component';\r\nexport { ContractsListComponent } from './contracts-list/contracts-list.component';\r\nexport { ContractsGroupComponent } from './contracts-group/contracts-group.component';\r\nexport { ContractsStatusComponent } from './contracts-status/contracts-status.component';\r\nexport { ContractsDateComponent } from './contracts-date/contracts-date.component';\r\nexport { ContractsItemComponent } from './contracts-item/contracts-item.component';\r\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NotifierService } from 'angular-notifier';\n\nimport { FX_CONTRACT_STATUS, IFxContract } from '@shared/models';\n\nimport { ContractsService } from '../../services';\nimport { CONTRACT_TYPE } from '../../models';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst UNK_COLVIR_CODES = ['01', '02'];\n\n@Component({\n  selector: 'j-contracts-approved',\n  templateUrl: './contracts-approved.component.html',\n  styleUrls: ['./contracts-approved.component.scss'],\n})\nexport class ContractsApprovedComponent {\n  headings = [\n    'CONTRACT_NUMBER',\n    'CONTRACT_NAME',\n    'CONTRACT_AMOUNT',\n    'CONTRACT_REMAINDER',\n  ];\n\n  translatePrefix = 'CONTRACTS.APPROVED';\n  contractType = CONTRACT_TYPE.APPROVED;\n\n  loadingIds = [];\n  loadingXlsIds = [];\n\n  constructor(\n    private contractsService: ContractsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private notifierService: NotifierService,\n    private translateService: TranslateService\n  ) {}\n\n  mapTranslate(value: string) {\n    return `${this.translatePrefix}.${value}`;\n  }\n\n  hasUnk(contract: IFxContract) {\n    return (\n      contract.status == FX_CONTRACT_STATUS.REGED &&\n      UNK_COLVIR_CODES.includes(contract.type.colvirCode)\n    );\n  }\n\n  mapRemainderMessage(contract: IFxContract) {\n    const remainderMessage =\n      this.contractsService.mapRemainderMessage(contract);\n    return remainderMessage ? this.mapTranslate(remainderMessage) : null;\n  }\n\n  onContractClick(contract: IFxContract) {\n    this.router.navigate([contract.id], {\n      relativeTo: this.route.parent.parent,\n    });\n  }\n\n  async onDownload(event: Event, contract: IFxContract) {\n    event.stopPropagation();\n\n    if (this.loadingIds.includes(contract.id)) {\n      return;\n    }\n\n    this.loadingIds.push(contract.id);\n\n    try {\n      await this.contractsService.downloadContractCertificate(contract);\n    } catch (error) {\n      this.notifierService.notify(\n        'error',\n        this.translateService.instant('ERRORS.DOWNLOAD_ERROR')\n      );\n    } finally {\n      const index = this.loadingIds.indexOf(contract.id);\n      this.loadingIds.splice(index, 1);\n    }\n  }\n  async onXlsDownload(event: Event, contract: IFxContract) {\n    event.stopPropagation();\n\n    if (this.loadingXlsIds.includes(contract.id)) {\n      return;\n    }\n\n    this.loadingXlsIds.push(contract.id);\n\n    try {\n      await this.contractsService.downloadActOfReconciliationXlsx(contract);\n    } catch (error) {\n      this.notifierService.notify(\n        'error',\n        this.translateService.instant('ERRORS.DOWNLOAD_ERROR')\n      );\n    } finally {\n      const index = this.loadingXlsIds.indexOf(contract.id);\n      this.loadingXlsIds.splice(index, 1);\n    }\n  }\n}\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CompanyService } from '@company/company.service';\nimport { ContractsService } from '@contracts/services';\nimport {\n  FX_CONTRACT_ATTACHMENT_TYPE,\n  FX_CONTRACT_STATUS,\n  IFxContract,\n} from '@shared/models';\nimport { of, Subscription } from 'rxjs';\nimport { catchError, finalize, take } from 'rxjs/operators';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { NotifierService } from 'angular-notifier';\nimport { TranslateService } from '@ngx-translate/core';\n\n@UntilDestroy()\n@Component({\n  selector: 'j-contracts-details',\n  templateUrl: './contracts-details.component.html',\n  styleUrls: ['./contracts-details.component.scss'],\n})\nexport class ContractsDetailsComponent {\n  contract: IFxContract;\n\n  contractId: string;\n  companyName: string;\n\n  isLoading = false;\n\n  constructor(\n    private companyService: CompanyService,\n    private contractsService: ContractsService,\n    private location: Location,\n    private notifier: NotifierService,\n    private route: ActivatedRoute,\n    private translate: TranslateService\n  ) {\n    this.route.params.pipe(take(1)).subscribe((params) => {\n      this.contractId = params.id;\n    });\n\n    this.companyService.refresh$.pipe(untilDestroyed(this)).subscribe(() => {\n      this.companyName = this.companyService.currentCompany.name;\n      this.loadContract();\n    });\n  }\n\n  onClose() {\n    this.location.back();\n  }\n\n  get iconClassName() {\n    switch (this.contract.status) {\n      case FX_CONTRACT_STATUS.REGISTERED:\n      case FX_CONTRACT_STATUS.PROCESSING:\n        return 'text-warning';\n\n      case FX_CONTRACT_STATUS.REGED:\n        return 'text-success';\n\n      case FX_CONTRACT_STATUS.REJECTED:\n      case FX_CONTRACT_STATUS.CLOSED:\n        return 'text-danger';\n    }\n  }\n\n  onRetry() {\n    this.loadContract();\n  }\n\n  loadContract() {\n    this.isLoading = true;\n    this.contractsService\n      .getContractByIdObservable(this.contractId)\n      .pipe(\n        untilDestroyed(this),\n        finalize(() => {\n          this.isLoading = false;\n        })\n      )\n      .subscribe((contract) => {\n        this.contract = contract;\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { combineLatest, Subscription } from 'rxjs';\r\n\r\nimport { IFxContract } from '@shared/models';\r\nimport { NavService } from '@shared/nav/nav.service';\r\n\r\nimport { CompanyService } from '@company/company.service';\r\n\r\nimport { ContractsService } from '../../services';\r\nimport { CONTRACT_TYPE } from '../../models';\r\n\r\n@Component({\r\n  selector: 'j-contracts-list-base',\r\n  templateUrl: './contracts-list-base.component.html',\r\n  styleUrls: ['./contracts-list-base.component.scss'],\r\n})\r\nexport class ContractsListBaseComponent implements OnInit {\r\n  contractType: CONTRACT_TYPE;\r\n\r\n  isDeletable: boolean = false;\r\n  isSelectable: boolean = false;\r\n  isSignable: boolean = false;\r\n\r\n  translatePrefix: string = 'CONTRACTS.LIST';\r\n  contractsList: IFxContract[];\r\n  isLoading: boolean = false;\r\n  errorText: string;\r\n  emptyLabel: string;\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(\r\n    private navService: NavService,\r\n    private contractsService: ContractsService,\r\n    private companyService: CompanyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.add(\r\n      combineLatest([this.route.data, this.companyService.refresh$]).subscribe(\r\n        (values) => {\r\n          const [data, companyRefresh] = values;\r\n\r\n          this.contractType = data.contractType;\r\n          this.mapListActions();\r\n          this.mapEmptyLabel();\r\n\r\n          this.retrieveContracts();\r\n        }\r\n      )\r\n    );\r\n\r\n    this.subscription.add(\r\n      this.contractsService.getContractsSubmitted().subscribe(() => {\r\n        this.retrieveContracts();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  mapTranslate(value: string) {\r\n    return `${this.translatePrefix}.${value}`;\r\n  }\r\n\r\n  async retrieveContracts() {\r\n    this.errorText = null;\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      this.contractsList = await this.contractsService.getContracts(\r\n        this.contractType\r\n      );\r\n      this.navService.retrieveContractBadges();\r\n    } catch (error) {\r\n      this.errorText = error.description || error.code || error || true;\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private mapListActions() {\r\n    switch (this.contractType) {\r\n      case CONTRACT_TYPE.REJECTED:\r\n        // this.isDeletable = true;\r\n        this.isSelectable = true;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private mapEmptyLabel() {\r\n    let label = 'EMPTY.';\r\n\r\n    switch (this.contractType) {\r\n      case CONTRACT_TYPE.APPROVED:\r\n        label += 'APPROVED';\r\n        break;\r\n\r\n      case CONTRACT_TYPE.REJECTED:\r\n        label += 'REJECTED';\r\n        break;\r\n\r\n      case CONTRACT_TYPE.PENDING:\r\n        label += 'PENDING';\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.emptyLabel = this.mapTranslate(label);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { IFxContract } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { ContractsService } from '../../services';\nimport { CONTRACT_TYPE } from '../../models';\n\n@Component({\n  selector: 'j-contracts-on-sign',\n  templateUrl: './contracts-on-sign.component.html',\n  styleUrls: ['./contracts-on-sign.component.scss'],\n})\nexport class ContractsOnSignComponent {\n  translatePrefix = 'CONTRACTS.LIST';\n  contractType = CONTRACT_TYPE.ON_SIGN;\n\n  isLoading: boolean = true;\n\n  onSignForMeList: IFxContract[] = [];\n  onSignForOthersList: IFxContract[] = [];\n\n  errorText: string = null;\n\n  subscription = new Subscription();\n\n  constructor(\n    private contractsService: ContractsService,\n    private navService: NavService,\n    private companyService: CompanyService,\n    private router: Router\n  ) {\n    this.subscription.add(\n      this.companyService.refresh$.subscribe((companyRefresh) => {\n        const [user, company, isAuthorized] = companyRefresh;\n\n        if (isAuthorized) {\n          this.retrieveContracts();\n        }\n      })\n    );\n\n    this.subscription.add(\n      this.contractsService.getContractsSubmitted().subscribe(() => {\n        this.retrieveContracts();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  async onSign() {\n    await this.retrieveContracts();\n\n    if (\n      this.onSignForMeList.length == 0 &&\n      this.companyService.isPrimaryAuthority() &&\n      this.companyService.isSingleSignScheme()\n    ) {\n      this.router.navigateByUrl(`contracts/outcoming/${CONTRACT_TYPE.PENDING}`);\n    }\n  }\n\n  onRetry() {\n    this.navService.getContractBadges();\n    this.retrieveContracts();\n  }\n\n  async retrieveContracts() {\n    this.errorText = null;\n\n    try {\n      await Promise.all([\n        this.retrieveOnSignForMe(),\n        this.retrieveOnSignForOthers(),\n      ]);\n\n      // this.retrieved.emit({\n      //   onSignForMe: this.onSignForMeList.length,\n      //   onSignForOthers: this.onSignForOthersList.length,\n      // });\n    } catch (error) {\n      this.errorText = error.description || error;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async retrieveOnSignForMe() {\n    this.onSignForMeList = await this.contractsService.getContracts(\n      CONTRACT_TYPE.ON_SIGN,\n      {\n        onSignForMe: true,\n      }\n    );\n  }\n\n  async retrieveOnSignForOthers() {\n    this.onSignForOthersList = await this.contractsService.getContracts(\n      CONTRACT_TYPE.ON_SIGN,\n      {\n        onSignForOthers: true,\n      }\n    );\n  }\n\n  mapTranslate(value: string) {\n    return `${this.translatePrefix}.${value}`;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { IStatus } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\n\nimport { CONTRACT_TYPE } from '../../models';\n\nconst CONTRACTS_URL = '/contracts/outcoming';\n\n@Component({\n  selector: 'j-contracts-outcoming',\n  templateUrl: './contracts-outcoming.component.html',\n  styleUrls: ['./contracts-outcoming.component.scss'],\n})\nexport class ContractsOutcomingComponent implements OnInit, OnDestroy {\n  statuses: IStatus[] = [\n    {\n      count: 0,\n      isSelected: true,\n      label: 'CONTRACTS.TYPES.ON_SIGN',\n      value: CONTRACT_TYPE.ON_SIGN,\n    },\n    {\n      count: 0,\n      isSelected: false,\n      label: 'CONTRACTS.TYPES.APPROVED',\n      value: CONTRACT_TYPE.APPROVED,\n    },\n    {\n      count: 0,\n      isSelected: false,\n      label: 'CONTRACTS.TYPES.PENDING',\n      value: CONTRACT_TYPE.PENDING,\n    },\n    {\n      count: 0,\n      isSelected: false,\n      label: 'CONTRACTS.TYPES.REJECTED',\n      value: CONTRACT_TYPE.REJECTED,\n    },\n  ];\n\n  subscription = new Subscription();\n\n  constructor(private router: Router, private navService: NavService,) {\n    const routeSubscription = router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.statuses = this.statuses.map((status) => {\n          status.isSelected =\n            event.urlAfterRedirects === `${CONTRACTS_URL}/${status.value}`;\n          return status;\n        });\n      }\n    });\n\n    const badgesSubscription = this.navService\n      .getContractBadges()\n      .subscribe((badges) => {\n        const { onSignForMe, onSignForOthers } = badges;\n        const hasOnSignForMe = onSignForMe > 0;\n\n        Object.assign(this.statuses[0], {\n          count: hasOnSignForMe ? onSignForMe : onSignForOthers,\n          classList: hasOnSignForMe ? 'badge-primary' : 'badge-light',\n        });\n      });\n\n    this.subscription.add(routeSubscription);\n    this.subscription.add(badgesSubscription);\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onStatusSelect(type: CONTRACT_TYPE) {\n    this.router.navigate([CONTRACTS_URL, type]);\n  }\n}\n","import { ContractsDetailsComponent } from './contracts-details/contracts-details.component';\n\nimport { ContractsApprovedComponent } from './contracts-approved/contracts-approved.component';\nimport { ContractsOutcomingComponent } from './contracts-outcoming/contracts-outcoming.component';\nimport { ContractsOnSignComponent } from './contracts-on-sign/contracts-on-sign.component';\nimport { ContractsListBaseComponent } from './contracts-list-base/contracts-list-base.component';\n\nexport const CONTRACTS_CONTAINERS = [\n  ContractsDetailsComponent,\n\n  ContractsApprovedComponent,\n  ContractsOnSignComponent,\n  ContractsListBaseComponent,\n\n  ContractsOutcomingComponent,\n];\n\nexport { ContractsDetailsComponent } from './contracts-details/contracts-details.component';\n\nexport { ContractsListBaseComponent } from './contracts-list-base/contracts-list-base.component';\nexport { ContractsApprovedComponent } from './contracts-approved/contracts-approved.component';\nexport { ContractsOutcomingComponent } from './contracts-outcoming/contracts-outcoming.component';\nexport { ContractsOnSignComponent } from './contracts-on-sign/contracts-on-sign.component';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {\n  ContractsDetailsComponent,\n  ContractsOutcomingComponent,\n  ContractsApprovedComponent,\n  ContractsOnSignComponent,\n  ContractsListBaseComponent,\n} from './containers';\n\nimport { ContractsComponent } from './contracts.component';\nimport { CONTRACT_TYPE } from './models';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContractsComponent,\n    data: {\n      title: 'CONTRACTS.TITLE',\n    },\n    children: [\n      {\n        path: 'outcoming',\n        component: ContractsOutcomingComponent,\n        children: [\n          {\n            path: CONTRACT_TYPE.ON_SIGN,\n            component: ContractsOnSignComponent,\n            data: {\n              contractType: CONTRACT_TYPE.ON_SIGN,\n            },\n          },\n          {\n            path: CONTRACT_TYPE.APPROVED,\n            component: ContractsApprovedComponent,\n            data: {\n              contractType: CONTRACT_TYPE.APPROVED,\n            },\n          },\n          {\n            path: CONTRACT_TYPE.PENDING,\n            component: ContractsListBaseComponent,\n            data: {\n              contractType: CONTRACT_TYPE.PENDING,\n            },\n          },\n          {\n            path: CONTRACT_TYPE.REJECTED,\n            component: ContractsListBaseComponent,\n            data: {\n              contractType: CONTRACT_TYPE.REJECTED,\n            },\n          },\n          {\n            path: '**',\n            redirectTo: CONTRACT_TYPE.ON_SIGN,\n          },\n        ],\n      },\n      {\n        path: ':id',\n        component: ContractsDetailsComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'outcoming',\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContractsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'j-contracts',\n  templateUrl: './contracts.component.html',\n  styleUrls: ['./contracts.component.scss']\n})\nexport class ContractsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgxFileDropModule } from 'ngx-file-drop';\n\nimport { AccountsModule } from '@accounts/accounts.module';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { ContractsComponent } from './contracts.component';\nimport { ContractsRoutingModule } from './contracts-routing.module';\n\nimport { CONTRACTS_CONTAINERS } from './containers';\nimport { CONTRACTS_COMPONENTS } from './components';\nimport { CONTRACTS_MODALS } from './modals';\n\nconst CONTRACTS_IMPORT_MODULES = [\n  SharedModule,\n  ContractsRoutingModule,\n  NgxFileDropModule,\n  AccountsModule,\n];\n\n@NgModule({\n  imports: [CONTRACTS_IMPORT_MODULES],\n  declarations: [\n    ContractsComponent,\n    CONTRACTS_CONTAINERS,\n    CONTRACTS_COMPONENTS,\n    CONTRACTS_MODALS,\n  ],\n  exports: [CONTRACTS_MODALS],\n})\nexport class ContractsModule {}\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  FileSystemFileEntry,\n  NgxFileDropComponent,\n  NgxFileDropEntry,\n} from 'ngx-file-drop';\n\nimport { CompanyService } from '@company/company.service';\n\nimport { AccountDropdownComponent, AccountsService } from '@accounts/index';\nimport { ACCOUNT_TYPE, RegularAccount } from '@accounts/account.model';\n\nimport { FilesService } from '@shared/services';\nimport { IUploadingFile } from '@shared/models';\nimport { NavService } from '@shared/nav/nav.service';\nimport { CURRENCY } from '@shared/currency/currency.model';\n\nimport { ContractsService } from '../../services/contracts.service';\n\nconst TRANSLATE_PREFIX = 'CONTRACTS.ADD_CONTRACT_MODAL';\n\n@Component({\n  selector: 'j-add-contract-modal',\n  templateUrl: './add-contract-modal.component.html',\n  styleUrls: ['./add-contract-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AddContractModalComponent implements OnInit, OnDestroy {\n  @Input() shouldNavigateToContracts: boolean = false;\n\n  @ViewChild('commissionAccountDropdown')\n  commissionAccountDropdown: AccountDropdownComponent;\n  @ViewChild('fileDrop') fileDrop: NgxFileDropComponent;\n  acceptedFormats: string = '.pdf, .jpg, .jpeg, .doc, .png, .tif';\n\n  uploadingFiles: IUploadingFile[] = [];\n\n  isLoading: boolean = false;\n  isAccountsLoading: boolean = false;\n\n  selectedAccount: RegularAccount;\n  accounts: RegularAccount[];\n  submitLabel: string;\n\n  constructor(\n    public modal: NgbActiveModal,\n    private companyService: CompanyService,\n    private contractsService: ContractsService,\n    private filesService: FilesService,\n    private navService: NavService,\n    private accountsService: AccountsService\n  ) {\n    this.companyService.refresh$.subscribe((companyRefresh) => {\n      const [user, company, isAuthorized] = companyRefresh;\n\n      if (isAuthorized) {\n        this.retrieveAccounts();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.uploadingFiles = [];\n    this.mapSubmitLabel();\n  }\n\n  ngOnDestroy() {\n    this.uploadingFiles = [];\n  }\n\n  onCommissionAccountSelect(account: RegularAccount) {\n    this.selectedAccount = account;\n  }\n\n  public onFileDrop(files: NgxFileDropEntry[]) {\n    for (const droppedFile of files) {\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n\n        fileEntry.file((file: File) => {\n          this.filesService.uploading$.next([file]);\n        });\n      }\n    }\n  }\n\n  public onUploadingFilesUpdate(uploadingFiles: IUploadingFile[]) {\n    this.uploadingFiles = uploadingFiles;\n  }\n\n  mapTranslate(value: string) {\n    return `${TRANSLATE_PREFIX}.${value}`;\n  }\n\n  dismissModal(\n    error: any = null,\n    uploadingFiles: IUploadingFile[] = null,\n    iban = null\n  ) {\n    this.modal.dismiss({ error, uploadingFiles, iban });\n    this.uploadingFiles = [];\n  }\n\n  closeModal() {\n    this.uploadingFiles = [];\n    this.modal.close();\n  }\n\n  openFileSelector() {\n    this.fileDrop.openFileSelector();\n  }\n\n  async submitFiles() {\n    const canBeUploaded = this.filesService.checkIfCanBeUploadedAndNotify(\n      this.uploadingFiles\n    );\n\n    if (!canBeUploaded || !this.selectedAccount) {\n      return;\n    }\n\n    this.isLoading = true;\n\n    try {\n      await this.contractsService.submitContracts(\n        this.uploadingFiles,\n        this.selectedAccount.iban\n      );\n\n      this.navService.retrieveContractBadges();\n\n      this.closeModal();\n    } catch (error) {\n      if (error) {\n        this.dismissModal(\n          error,\n          this.uploadingFiles,\n          this.selectedAccount.iban\n        );\n      } else {\n        this.dismissModal(error);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private mapSubmitLabel() {\n    if (this.companyService.isSecondaryAuthority()) {\n      this.submitLabel = this.mapTranslate('SIGN');\n    } else if (\n      this.companyService.isPrimaryAuthority() &&\n      this.companyService.isSingleSignScheme()\n    ) {\n      this.submitLabel = this.mapTranslate('SIGN_AND_SEND');\n    } else {\n      this.submitLabel = this.mapTranslate('SENT_FOR_SIGN');\n    }\n  }\n\n  async retrieveAccounts() {\n    this.isAccountsLoading = true;\n\n    try {\n      const retrieved = await this.accountsService.getAccounts();\n\n      this.accounts = retrieved.filter(\n        (account) =>\n          account.balance?.currency === CURRENCY.KZT &&\n          account.accountType === ACCOUNT_TYPE.ACCOUNT\n      );\n\n      if (this.accounts.length) {\n        this.selectedAccount = this.accounts[0];\n        this.commissionAccountDropdown.selectAccount(this.selectedAccount);\n      }\n    } catch (error) {\n    } finally {\n      this.isAccountsLoading = false;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ERRORS } from '@api/errors';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { IUploadingFile } from '@shared/models';\n\nimport { ContractsService } from '../../services/contracts.service';\n\n@Component({\n  selector: 'j-contract-error-modal',\n  templateUrl: './contract-error-modal.component.html',\n  styleUrls: ['./contract-error-modal.component.scss'],\n})\nexport class ContractErrorModalComponent {\n  @Input() description: string;\n  @Input() error: any;\n  errorText: string;\n\n  isLoading: boolean = false;\n\n  @Input() iban: string;\n  @Input() uploadingFiles: IUploadingFile[];\n\n  constructor(\n    public modal: NgbActiveModal,\n    private contractsService: ContractsService\n  ) {}\n\n  ngOnInit() {\n    this.errorText =\n      this.error.code === ERRORS.FORBIDDEN\n        ? 'CONTRACTS.ERROR_MODAL.FORBIDDEN'\n        : 'CONTRACTS.ERROR_MODAL.GENERAL';\n  }\n\n  async submitContracts() {\n    this.isLoading = true;\n    try {\n      await this.contractsService.submitContracts(this.uploadingFiles, this.iban);\n      this.closeModal();\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CompanyService } from '@company/company.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'j-contract-success-modal',\n  templateUrl: './contract-success-modal.component.html',\n  styleUrls: ['./contract-success-modal.component.scss'],\n})\nexport class ContractSuccessModalComponent implements OnInit{\n  description: string;\n\n  constructor(\n    public modal: NgbActiveModal,\n    private companyService: CompanyService\n  ) {}\n\n  ngOnInit(){\n    this.mapDescription();\n  }\n\n  dismissModal() {\n    this.modal.dismiss();\n  }\n\n  closeModal() {\n    this.modal.close();\n  }\n\n  private mapDescription() {\n    if (this.companyService.isSecondaryAuthority()) {\n      this.description = this.mapTranslate('SENT_FOR_PRIMARY_SIGN');\n    } else if (\n      this.companyService.isPrimaryAuthority() &&\n      this.companyService.isSingleSignScheme()\n    ) {\n      this.description = this.mapTranslate('SENT_FOR_CHECK');\n    } else {\n      this.description = this.mapTranslate('SENT_FOR_SIGN');\n    }\n  }\n\n  private mapTranslate(key: string) {\n    return `CONTRACTS.SUCCESS_MODAL.${key}`;\n  }\n}\n","import { AddContractModalComponent } from './add-contract-modal/add-contract-modal.component';\nimport { ContractErrorModalComponent } from './contract-error-modal/contract-error-modal.component';\nimport { ContractSuccessModalComponent } from './contract-success-modal/contract-success-modal.component';\n\nexport const CONTRACTS_MODALS = [\n  AddContractModalComponent,\n  ContractSuccessModalComponent,\n  ContractErrorModalComponent,\n];\n\nexport { AddContractModalComponent } from './add-contract-modal/add-contract-modal.component';\nexport { ContractErrorModalComponent } from './contract-error-modal/contract-error-modal.component';\nexport { ContractSuccessModalComponent } from './contract-success-modal/contract-success-modal.component';\n","export enum CONTRACT_TYPE {\n  ON_SIGN = 'on-sign',\n  APPROVED = 'approved',\n  PENDING = 'pending',\n  REJECTED = 'rejected',\n}\n","export * from './contracts.model';\n","import { Injectable } from '@angular/core';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  FeatureFlagsService,\n  FEATURE_FLAG,\n} from '@feature-flags/index';\n\nimport { IUploadingFile } from '@shared/models';\nimport { JModalService } from '@shared/services';\n\nimport { AddContractModalComponent } from '../modals/add-contract-modal/add-contract-modal.component';\nimport { ContractErrorModalComponent } from '../modals/contract-error-modal/contract-error-modal.component';\nimport { ContractSuccessModalComponent } from '../modals/contract-success-modal/contract-success-modal.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractsModalsService {\n  constructor(\n    private modalService: NgbModal,\n    private jModalService: JModalService,\n    private featureFlagsService: FeatureFlagsService\n  ) {}\n\n  async showAddContractModal(shouldNavigateToContracts: boolean = false) {\n    const isAddingDisabled = await this.featureFlagsService.isDisabledPromise(\n      FEATURE_FLAG.FX_CONTRACTS\n    );\n\n    if (isAddingDisabled) {\n      this.jModalService.showMaintenanceModal();\n      return;\n    }\n\n    const modalRef = this.modalService.open(AddContractModalComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_dictionary',\n      centered: true,\n    });\n\n    modalRef.componentInstance.shouldNavigateToContracts =\n      shouldNavigateToContracts;\n\n    try {\n      await modalRef.result;\n      this.showSuccessModal();\n    } catch ({ error, uploadingFiles, iban }) {\n      if (uploadingFiles) {\n        this.showErrorModal(error, uploadingFiles, iban);\n      }\n    }\n  }\n\n  showSuccessModal() {\n    this.modalService.open(ContractSuccessModalComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_sm',\n      centered: true,\n    });\n  }\n\n  async showErrorModal(\n    error: any,\n    uploadingFiles: IUploadingFile[],\n    iban: string\n  ) {\n    const modalRef = this.modalService.open(ContractErrorModalComponent, {\n      backdropClass: 'backdrop_light',\n      windowClass: 'modal_light modal_sm',\n      centered: true,\n    });\n\n    (modalRef.componentInstance as ContractErrorModalComponent).iban = iban;\n    (modalRef.componentInstance as ContractErrorModalComponent).uploadingFiles =\n      uploadingFiles;\n    (modalRef.componentInstance as ContractErrorModalComponent).error = error;\n\n    try {\n      await modalRef.result;\n      this.showSuccessModal();\n    } catch (error) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport dayjs from 'dayjs';\n\nimport { ApiService } from '@api/api.service';\nimport { CompanyService } from '@company/company.service';\n\nimport {\n  FX_CONTRACT_STATUS,\n  IFxContract,\n  IUploadingFile,\n} from '@shared/models';\nimport { FilesService } from '@shared/services';\nimport { ListService } from '@shared/services/list.service';\n\nimport { CONTRACT_TYPE } from '../models';\nimport { share } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractsService {\n  contractsSubmitted$ = new Subject();\n\n  constructor(\n    private companyService: CompanyService,\n    private apiService: ApiService,\n    private filesService: FilesService,\n    private listService: ListService,\n    private router: Router,\n    private httpClient: HttpClient\n  ) {}\n\n  getContractsSubmitted() {\n    return this.contractsSubmitted$.asObservable();\n  }\n\n  mapRemainderMessage(contract: IFxContract) {\n    if (contract.remainder?.amount <= 0) {\n      return 'AMOUNT_CLOSED';\n    }\n\n    if (dayjs().isAfter(contract.dateTo, 'date')) {\n      return 'HAS_EXPIRED';\n    }\n\n    return null;\n  }\n\n  async submitContracts(\n    files: IUploadingFile[],\n    iban: string,\n    shouldNavigateToContracts: boolean = false\n  ) {\n    const url = this.mapApiUrl();\n    const body = {\n      commissionWithdrawalIban: iban,\n      attachments: files\n        .filter((item) => {\n          return !item.error && item.file;\n        })\n        .map((item) => {\n          return {\n            fileId: item.file.id,\n          };\n        }),\n    };\n\n    const contract = await this.apiService.post<IFxContract>(url, body);\n    await this.checkAndSignIfNeeded(contract);\n\n    this.contractsSubmitted$.next();\n\n    if (shouldNavigateToContracts) {\n      let route = 'contracts/outcoming/';\n\n      if (\n        this.companyService.isPrimaryAuthority() &&\n        this.companyService.isSingleSignScheme()\n      ) {\n        route += CONTRACT_TYPE.PENDING;\n      } else {\n        route += CONTRACT_TYPE.ON_SIGN;\n      }\n\n      this.router.navigateByUrl(route);\n    }\n\n    return contract;\n  }\n\n  getContracts(type: CONTRACT_TYPE = null, extras: any = null) {\n    const url = this.mapApiUrl();\n\n    let params = new HttpParams();\n    params = params.set('fetchAttachments', 'true');\n\n    if (extras) {\n      for (const key in extras) {\n        if (Object.hasOwnProperty.call(extras, key)) {\n          const value = extras[key];\n          if (value) {\n            params = params.append(key, value);\n          }\n        }\n      }\n    }\n\n    switch (type) {\n      case CONTRACT_TYPE.ON_SIGN:\n        params = params.append('status', FX_CONTRACT_STATUS.ON_SIGN as string);\n        break;\n\n      case CONTRACT_TYPE.APPROVED:\n        params = params.append('status', FX_CONTRACT_STATUS.REGED as string);\n        // params = params.append('status', FX_CONTRACT_STATUS.CLOSED as string);\n        break;\n\n      case CONTRACT_TYPE.PENDING:\n        params = params.append(\n          'status',\n          FX_CONTRACT_STATUS.REGISTERED as string\n        );\n        params = params.append(\n          'status',\n          FX_CONTRACT_STATUS.PROCESSING as string\n        );\n\n        break;\n\n      case CONTRACT_TYPE.REJECTED:\n        params = params.append('status', FX_CONTRACT_STATUS.REJECTED as string);\n        break;\n\n      default:\n        break;\n    }\n\n    return this.apiService.get<IFxContract[]>(url, null, params);\n  }\n\n  async getContractCertificate(contractId: string) {\n    const url = this.mapApiUrl(`${contractId}/certificate`);\n\n    let headers = new HttpHeaders();\n    headers = headers.set('Accept-File', 'application/pdf');\n    headers = headers.set('Content-Type', 'application/octet-stream');\n\n    const extras = {\n      responseType: 'blob',\n    };\n\n    return this.apiService.get<any>(url, headers, null, extras);\n  }\n\n  async downloadContractCertificate(contract: IFxContract) {\n    const fileBlob = await this.getContractCertificate(contract.id);\n    await this.filesService.downloadFile(\n      fileBlob,\n      `${contract.contractor.name}.pdf`\n    );\n\n    return true;\n  }\n\n  sign(contract: IFxContract) {\n    return this.listService.sign('fx-contracts', contract.id);\n  }\n\n  async checkAndSignIfNeeded(contract: IFxContract) {\n    if (\n      this.companyService.isSecondaryAuthority() ||\n      (this.companyService.isPrimaryAuthority() &&\n        this.companyService.isSingleSignScheme())\n    ) {\n      const result = await this.sign(contract);\n\n      if (!result) {\n        throw false;\n      }\n\n      return result;\n    }\n\n    return;\n  }\n\n  async getContractById(contractId: string) {\n    const url = this.mapApiUrl(contractId);\n    return this.apiService.get<IFxContract>(url);\n  }\n\n  getContractByIdObservable(contractId: string): Observable<IFxContract> {\n    const url = this.mapApiUrl(contractId);\n    return this.apiService.getObservable<IFxContract>(url);\n  }\n  public getActOfReconciliation(contractId: string){\n    const url = this.mapApiUrl(`${contractId}/act-reconciliation`)\n    const extras = {\n      responseType: 'blob',\n    };\n    return this.apiService.get<any>(url, null, null, extras);\n  }\n  async downloadActOfReconciliationXlsx(contract: IFxContract) {\n    const fileBlob = await this.getActOfReconciliation(contract.id);\n    await this.filesService.downloadFile(\n      fileBlob,\n      `${contract.contractor.name}.xls`\n    );\n\n    return true;\n  }\n  private mapApiUrl(path: string = null) {\n    const suffix = path ? `/${path}` : '';\n    return `companies/${this.companyService.currentId}/fx-contracts${suffix}`;\n  }\n\n}\n","export * from './contracts.service';\nexport * from './contracts-modals.service';","import { Subject, Subscription } from 'rxjs';\nimport { ɵNG_PIPE_DEF } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nconst NG_PIPE_DEF = ɵNG_PIPE_DEF;\nfunction isPipe(target) {\n    return !!target[NG_PIPE_DEF];\n}\n\n/**\n * Applied to instances and stores `Subject` instance when\n * no custom destroy method is provided.\n */\nconst DESTROY = Symbol('__destroy');\n/**\n * Applied to definitions and informs that class is decorated\n */\nconst DECORATOR_APPLIED = Symbol('__decoratorApplied');\n/**\n * If we use the `untilDestroyed` operator multiple times inside the single\n * instance providing different `destroyMethodName`, then all streams will\n * subscribe to the single subject. If any method is invoked, the subject will\n * emit and all streams will be unsubscribed. We wan't to prevent this behavior,\n * thus we store subjects under different symbols.\n */\nfunction getSymbol(destroyMethodName) {\n    if (typeof destroyMethodName === 'string') {\n        return Symbol(`__destroy__${destroyMethodName}`);\n    }\n    else {\n        return DESTROY;\n    }\n}\nfunction markAsDecorated(type) {\n    // Store this property on the prototype if it's an injectable class, component or directive.\n    // We will be able to handle class extension this way.\n    type.prototype[DECORATOR_APPLIED] = true;\n}\nfunction createSubjectOnTheInstance(instance, symbol) {\n    if (!instance[symbol]) {\n        instance[symbol] = new Subject();\n    }\n}\nfunction completeSubjectOnTheInstance(instance, symbol) {\n    if (instance[symbol]) {\n        instance[symbol].next();\n        instance[symbol].complete();\n        // We also have to re-assign this property thus in the future\n        // we will be able to create new subject on the same instance.\n        instance[symbol] = null;\n    }\n}\n\nfunction unsubscribe(property) {\n    if (property instanceof Subscription) {\n        property.unsubscribe();\n    }\n}\nfunction unsubscribeIfPropertyIsArrayLike(property) {\n    Array.isArray(property) && property.forEach(unsubscribe);\n}\nfunction decorateNgOnDestroy(ngOnDestroy, options) {\n    return function () {\n        var _a;\n        // Invoke the original `ngOnDestroy` if it exists\n        ngOnDestroy && ngOnDestroy.call(this);\n        // It's important to use `this` instead of caching instance\n        // that may lead to memory leaks\n        completeSubjectOnTheInstance(this, getSymbol());\n        // Check if subscriptions are pushed to some array\n        if (options.arrayName) {\n            unsubscribeIfPropertyIsArrayLike(this[options.arrayName]);\n        }\n        // Loop through the properties and find subscriptions\n        if (options.checkProperties) {\n            for (const property in this) {\n                if ((_a = options.blackList) === null || _a === void 0 ? void 0 : _a.includes(property)) {\n                    continue;\n                }\n                unsubscribe(this[property]);\n            }\n        }\n    };\n}\nfunction decorateProviderDirectiveOrComponent(type, options) {\n    type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n}\nfunction decoratePipe(type, options) {\n    const def = type.ɵpipe;\n    def.onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n}\nfunction UntilDestroy(options = {}) {\n    return (type) => {\n        if (isPipe(type)) {\n            decoratePipe(type, options);\n        }\n        else {\n            decorateProviderDirectiveOrComponent(type, options);\n        }\n        markAsDecorated(type);\n    };\n}\n\nfunction overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol) {\n    const originalDestroy = instance[destroyMethodName];\n    if (ngDevMode && typeof originalDestroy !== 'function') {\n        throw new Error(`${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`);\n    }\n    createSubjectOnTheInstance(instance, symbol);\n    instance[destroyMethodName] = function () {\n        // eslint-disable-next-line prefer-rest-params\n        originalDestroy.apply(this, arguments);\n        completeSubjectOnTheInstance(this, symbol);\n        // We have to re-assign this property back to the original value.\n        // If the `untilDestroyed` operator is called for the same instance\n        // multiple times, then we will be able to get the original\n        // method again and not the patched one.\n        instance[destroyMethodName] = originalDestroy;\n    };\n}\nfunction untilDestroyed(instance, destroyMethodName) {\n    return (source) => {\n        const symbol = getSymbol(destroyMethodName);\n        // If `destroyMethodName` is passed then the developer applies\n        // this operator to something non-related to Angular DI system\n        if (typeof destroyMethodName === 'string') {\n            overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol);\n        }\n        else {\n            ngDevMode && ensureClassIsDecorated(instance);\n            createSubjectOnTheInstance(instance, symbol);\n        }\n        return source.pipe(takeUntil(instance[symbol]));\n    };\n}\nfunction ensureClassIsDecorated(instance) {\n    const prototype = Object.getPrototypeOf(instance);\n    const missingDecorator = !(DECORATOR_APPLIED in prototype);\n    if (missingDecorator) {\n        throw new Error('untilDestroyed operator cannot be used inside directives or ' +\n            'components or providers that are not decorated with UntilDestroy decorator');\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UntilDestroy, untilDestroyed };\n"],"names":[],"sourceRoot":"webpack:///"}