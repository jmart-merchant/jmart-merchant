"use strict";
(self["webpackChunkjysan"] = self["webpackChunkjysan"] || []).push([["src_app_jmart-cabinet_modules_settings_settings_module_ts"],{

/***/ 7114:
/*!*********************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/components/input-autocomplete/input-autocomplete.component.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputAutocompleteComponent": () => (/* binding */ InputAutocompleteComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _input_autocomplete_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input-autocomplete.component.html?ngResource */ 67910);
/* harmony import */ var _input_autocomplete_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input-autocomplete.component.scss?ngResource */ 45681);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/input */ 66978);
/* harmony import */ var _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/masked/masked.service */ 26484);






let InputAutocompleteComponent = class InputAutocompleteComponent extends _shared_input__WEBPACK_IMPORTED_MODULE_2__.JInputComponent {
    constructor(maskedService) {
        super(maskedService);
        this.maskedService = maskedService;
        this.options = [];
        this.name = 'inputAutocomplete';
        this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.inputChange = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.inputValue = '';
    }
    get isFilled() {
        var _a, _b;
        const hasAutoFill = ((_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeElement) &&
            window
                .getComputedStyle(this.input.nativeElement, null)
                .getPropertyValue('appearance') === 'menulist-button';
        return ((_b = `${this.formControl.value.title}`) === null || _b === void 0 ? void 0 : _b.length) || hasAutoFill ? true : false;
    }
    onChange(title) {
        this.formControl.setValue({
            title,
            value: null,
        });
        this.inputChange.emit();
    }
    onOptionSelect(option) {
        this.formControl.setValue(option);
        this.inputValue = option.title;
        this.onSelect.emit(option);
    }
    ngOnInit() {
        super.ngOnInit();
        this.inputValue = this.formControl.value.title || '';
        // if (this.formControl.value.title) {
        //   const selectedOption = this.options.find(({ title }) => (
        //     title === this.formControl.value.title
        //   )) || { title: '', value: null };
        //   this.onOptionSelect(selectedOption);
        // }
    }
};
InputAutocompleteComponent.ctorParameters = () => [
    { type: _shared_masked_masked_service__WEBPACK_IMPORTED_MODULE_3__.MaskedService }
];
InputAutocompleteComponent.propDecorators = {
    options: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    onSelect: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }],
    inputChange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }]
};
InputAutocompleteComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-input-autocomplete',
        template: _input_autocomplete_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_input_autocomplete_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InputAutocompleteComponent);



/***/ }),

/***/ 37373:
/*!******************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/checkbox/checkbox.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CheckboxComponent": () => (/* binding */ CheckboxComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _checkbox_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checkbox.component.html?ngResource */ 16509);
/* harmony import */ var _checkbox_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkbox.component.scss?ngResource */ 31744);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 90587);





let CheckboxComponent = class CheckboxComponent {
    constructor() {
        this.label = '';
        this.control = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormControl();
        this.name = 'checkbox';
        this.class = '';
    }
    ngOnInit() {
    }
};
CheckboxComponent.ctorParameters = () => [];
CheckboxComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    control: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    class: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
CheckboxComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-checkbox',
        template: _checkbox_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_checkbox_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CheckboxComponent);



/***/ }),

/***/ 12765:
/*!****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-list/delivery-list.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryListComponent": () => (/* binding */ DeliveryListComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-list.component.html?ngResource */ 12608);
/* harmony import */ var _delivery_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-list.component.scss?ngResource */ 92325);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _models_delivery_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models/delivery.model */ 48873);
/* harmony import */ var _services_delivery_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/delivery.service */ 69942);









let DeliveryListComponent = class DeliveryListComponent {
    constructor(router, deliveryService) {
        this.router = router;
        this.deliveryService = deliveryService;
        this.search = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('');
        this.deliveries = [];
        this.translatePrefix = 'JMART.SETTINGS.DELIVERY';
        this.dSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subscription();
    }
    ngOnInit() {
        this.router.data.subscribe((data) => {
            this.deliveryCategory = data.category;
            this.deliveryService.selectedDelivery = this.deliveryCategory;
        });
        this.deliveryService.getDeliveries();
        this.dSub.add(this.deliveryService.deliveryCity$.subscribe(delivery => {
            const isCity = this.deliveryCategory === _models_delivery_model__WEBPACK_IMPORTED_MODULE_2__.DELIVERY_CATEGORY.BY_CITY;
            this.deliveries = delivery.filter((d) => d.isCity === isCity);
        }));
        // const deliveryCity$ = this.deliveryService.getDeliveries();
        // this.dSub.add(
        //   combineLatest([this.deliveryService.deliveryCity$.pipe(), this.search.valueChanges.pipe(startWith(''))])
        //     .pipe(
        //       map(([deliveryCity, search]) => {
        //         // const isCity = this.deliveryCategory === DELIVERY_CATEGORY.BY_CITY;
        //         const data = deliveryCity.filter(d => {
        //           // add both from and to
        //           return d.direction.from.title.toLowerCase().includes(search.toLowerCase())
        //             // && d.isCity === isCity
        //         });
        //         console.log(data);
        //         return data;
        //       })
        //     )
        //     .subscribe(delivery => {
        //       this.deliveries = delivery;
        //     })
        // );
        this.search.valueChanges.subscribe(search => {
            if (!search.trim()) {
                return this.deliveries;
            }
            return this.deliveries.filter(d => {
                return d.city.name.toLowerCase().includes(search.toLowerCase());
            });
        });
    }
    ngOnDestroy() {
        if (this.dSub) {
            this.dSub.unsubscribe();
        }
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
};
DeliveryListComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute },
    { type: _services_delivery_service__WEBPACK_IMPORTED_MODULE_3__.DeliveryService }
];
DeliveryListComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'j-delivery-list',
        template: _delivery_list_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_list_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryListComponent);



/***/ }),

/***/ 31763:
/*!******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-price/delivery-price.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryPriceComponent": () => (/* binding */ DeliveryPriceComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_price_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-price.component.html?ngResource */ 67409);
/* harmony import */ var _delivery_price_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-price.component.scss?ngResource */ 60522);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);





let DeliveryPriceComponent = class DeliveryPriceComponent {
    constructor() {
        this.class = '';
        this.price = null;
        this.isLast = false;
        this.remove = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
        this.controls = this.price.controls;
        if (!this.showToInput) {
            this.checkbox = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(false);
            this.checkboxChangeSub = this.checkbox.valueChanges.subscribe((value) => {
                this.controls.deliveryPrice.setValue(value ? '0' : '');
            });
        }
    }
    ngOnDestroy() {
        if (!this.showToInput) {
            this.checkboxChangeSub.unsubscribe();
        }
    }
    get showToInput() {
        return ['deliveryPrice', 'to'].every(controlName => String(this.controls[controlName].value) !== '0');
    }
    onRemove() {
        this.remove.emit();
    }
};
DeliveryPriceComponent.ctorParameters = () => [];
DeliveryPriceComponent.propDecorators = {
    class: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    price: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    canBeRemoved: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    isLast: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    remove: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
DeliveryPriceComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-delivery-price',
        template: _delivery_price_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_price_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryPriceComponent);



/***/ }),

/***/ 6383:
/*!******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-table/delivery-table.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryTableComponent": () => (/* binding */ DeliveryTableComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-table.component.html?ngResource */ 74170);
/* harmony import */ var _delivery_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-table.component.scss?ngResource */ 33201);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals/create-delivery-modal/create-delivery-modal.component */ 71542);
/* harmony import */ var _modals_remove_delivery_modal_remove_delivery_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modals/remove-delivery-modal/remove-delivery-modal.component */ 45286);
/* harmony import */ var _pipes_number_space_format_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../pipes/number-space-format.pipe */ 86567);
/* harmony import */ var _utils_getRuDays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/getRuDays */ 49134);










let DeliveryTableComponent = class DeliveryTableComponent {
    constructor(translateService, ngbModalService, numberSpaceFormatPipe) {
        this.translateService = translateService;
        this.ngbModalService = ngbModalService;
        this.numberSpaceFormatPipe = numberSpaceFormatPipe;
        this.deliveryTableClasses = {
            th: 'p-3',
            td: 'p-3',
        };
        this.translatePrefix = 'JMART.SETTINGS.DELIVERY';
    }
    ngOnInit() {
        const translate = this.translateService.instant(this.translatePrefix);
        const rows = this.deliveries.map((delivery, index) => this.mapDelivery(delivery, index));
        const columns = ['CITY', 'PRICE', 'TIME', 'ESTIMATED_TIME', 'ESTIMATED_MODE'].map(key => translate[key]);
        columns.push('');
        this.deliveryTableData = {
            columns,
            rows,
        };
    }
    ngOnChanges(changes) {
        if (this.deliveryTableData) {
            this.deliveryTableData.rows = changes.deliveries.currentValue.map((delivery, index) => this.mapDelivery(delivery, index));
        }
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    edit(data) {
        const modalRef = this.ngbModalService.open(_modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_2__.CreateDeliveryModalComponent);
        modalRef.componentInstance.editDelivery = data;
    }
    remove({ delivery: { id } }) {
        const modalRef = this.ngbModalService.open(_modals_remove_delivery_modal_remove_delivery_modal_component__WEBPACK_IMPORTED_MODULE_3__.RemoveDeliveryModalComponent);
        modalRef.componentInstance.deliveryId = id;
    }
    mapDelivery(delivery, index) {
        const { isJpost, isCity, direction: { from, to }, attributes, } = delivery;
        const city = { from: from.title };
        if (to && !isCity)
            city.to = to.title;
        const jpostTitle = isJpost ? 'JPost' : 'Своя';
        if (isJpost) {
            return [
                city,
                null,
                null,
                null,
                jpostTitle,
                { delivery, index },
            ];
        }
        const { prices, workingTime, estimatedTime, isToday, deliveryEstimatedDay, } = attributes;
        return [
            city,
            prices.map(p => {
                return {
                    price: parseInt(p.deliveryPrice) === 0 ? `Бесплатно` : `${this.numberSpaceFormatPipe.transform(p.deliveryPrice)}тг`,
                    range: ` от ${this.numberSpaceFormatPipe.transform(p.from)}тг ${parseInt(p.deliveryPrice) !== 0 ? `до ${this.numberSpaceFormatPipe.transform(p.to)}тг` : ''}`
                };
            }),
            workingTime.map(t => {
                return {
                    days: t.days.map(({ day, name }) => day || name.slice(0, -1)).join(', '),
                    hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0
                        ? ' Круглосуточно'
                        : `${t.hour.from} - ${t.hour.to}`
                };
            }),
            Object.assign(Object.assign({}, (isToday && {
                estimatedTime: `заказ до ${estimatedTime}`
            })), { estimatedType: isToday ? 'Сегодня' : 'На следующий день', deliveryEstimatedDay: `${deliveryEstimatedDay}${(0,_utils_getRuDays__WEBPACK_IMPORTED_MODULE_5__.getRuDays)(deliveryEstimatedDay)}`, isCity }),
            jpostTitle,
            { delivery, index },
        ];
    }
};
DeliveryTableComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__.NgbModal },
    { type: _pipes_number_space_format_pipe__WEBPACK_IMPORTED_MODULE_4__.NumberSpaceFormatPipe }
];
DeliveryTableComponent.propDecorators = {
    deliveries: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input }]
};
DeliveryTableComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
        selector: 'j-delivery-table',
        template: _delivery_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryTableComponent);



/***/ }),

/***/ 10813:
/*!********************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/index.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SETTINGS_COMPONENTS": () => (/* binding */ SETTINGS_COMPONENTS),
/* harmony export */   "TabsComponent": () => (/* reexport safe */ _tabs_tabs_component__WEBPACK_IMPORTED_MODULE_0__.TabsComponent),
/* harmony export */   "InformationLogoComponent": () => (/* reexport safe */ _information_logo_information_logo_component__WEBPACK_IMPORTED_MODULE_1__.InformationLogoComponent),
/* harmony export */   "InformationResPersonsComponent": () => (/* reexport safe */ _information_res_persons_information_res_persons_component__WEBPACK_IMPORTED_MODULE_2__.InformationResPersonsComponent),
/* harmony export */   "InformationPersonComponent": () => (/* reexport safe */ _information_person_information_person_component__WEBPACK_IMPORTED_MODULE_3__.InformationPersonComponent),
/* harmony export */   "InformationMainComponent": () => (/* reexport safe */ _information_main_information_main_component__WEBPACK_IMPORTED_MODULE_4__.InformationMainComponent),
/* harmony export */   "InformationPersonsComponent": () => (/* reexport safe */ _information_persons_information_persons_component__WEBPACK_IMPORTED_MODULE_5__.InformationPersonsComponent),
/* harmony export */   "RadioButtonComponent": () => (/* reexport safe */ _radio_button_radio_button_component__WEBPACK_IMPORTED_MODULE_6__.RadioButtonComponent),
/* harmony export */   "PointsTableComponent": () => (/* reexport safe */ _points_table_points_table_component__WEBPACK_IMPORTED_MODULE_7__.PointsTableComponent),
/* harmony export */   "PointsStatusComponent": () => (/* reexport safe */ _points_status_points_status_component__WEBPACK_IMPORTED_MODULE_8__.PointsStatusComponent),
/* harmony export */   "PointsInfoComponent": () => (/* reexport safe */ _points_info_points_info_component__WEBPACK_IMPORTED_MODULE_9__.PointsInfoComponent),
/* harmony export */   "NoDataComponent": () => (/* reexport safe */ _no_data_no_data_component__WEBPACK_IMPORTED_MODULE_12__.NoDataComponent),
/* harmony export */   "DeliveryListComponent": () => (/* reexport safe */ _delivery_list_delivery_list_component__WEBPACK_IMPORTED_MODULE_14__.DeliveryListComponent),
/* harmony export */   "DeliveryTableComponent": () => (/* reexport safe */ _delivery_table_delivery_table_component__WEBPACK_IMPORTED_MODULE_13__.DeliveryTableComponent)
/* harmony export */ });
/* harmony import */ var _tabs_tabs_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs/tabs.component */ 91073);
/* harmony import */ var _information_logo_information_logo_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-logo/information-logo.component */ 27995);
/* harmony import */ var _information_res_persons_information_res_persons_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./information-res-persons/information-res-persons.component */ 81741);
/* harmony import */ var _information_person_information_person_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./information-person/information-person.component */ 41601);
/* harmony import */ var _information_main_information_main_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./information-main/information-main.component */ 18498);
/* harmony import */ var _information_persons_information_persons_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./information-persons/information-persons.component */ 54083);
/* harmony import */ var _radio_button_radio_button_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./radio-button/radio-button.component */ 96610);
/* harmony import */ var _points_table_points_table_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./points-table/points-table.component */ 35590);
/* harmony import */ var _points_status_points_status_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./points-status/points-status.component */ 58179);
/* harmony import */ var _points_info_points_info_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./points-info/points-info.component */ 61087);
/* harmony import */ var _modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../modals/create-delivery-modal/create-delivery-modal.component */ 71542);
/* harmony import */ var _modals_create_delivery_modal_components_delivery_mode_toggle_delivery_mode_toggle_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component */ 96180);
/* harmony import */ var _no_data_no_data_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./no-data/no-data.component */ 85206);
/* harmony import */ var _delivery_table_delivery_table_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./delivery-table/delivery-table.component */ 6383);
/* harmony import */ var _delivery_list_delivery_list_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./delivery-list/delivery-list.component */ 12765);















const SETTINGS_COMPONENTS = [
    _tabs_tabs_component__WEBPACK_IMPORTED_MODULE_0__.TabsComponent,
    _information_logo_information_logo_component__WEBPACK_IMPORTED_MODULE_1__.InformationLogoComponent,
    _information_res_persons_information_res_persons_component__WEBPACK_IMPORTED_MODULE_2__.InformationResPersonsComponent,
    _information_person_information_person_component__WEBPACK_IMPORTED_MODULE_3__.InformationPersonComponent,
    _information_main_information_main_component__WEBPACK_IMPORTED_MODULE_4__.InformationMainComponent,
    _information_persons_information_persons_component__WEBPACK_IMPORTED_MODULE_5__.InformationPersonsComponent,
    _radio_button_radio_button_component__WEBPACK_IMPORTED_MODULE_6__.RadioButtonComponent,
    _points_table_points_table_component__WEBPACK_IMPORTED_MODULE_7__.PointsTableComponent,
    _points_status_points_status_component__WEBPACK_IMPORTED_MODULE_8__.PointsStatusComponent,
    _points_info_points_info_component__WEBPACK_IMPORTED_MODULE_9__.PointsInfoComponent,
    _no_data_no_data_component__WEBPACK_IMPORTED_MODULE_12__.NoDataComponent,
    _delivery_list_delivery_list_component__WEBPACK_IMPORTED_MODULE_14__.DeliveryListComponent,
    _delivery_table_delivery_table_component__WEBPACK_IMPORTED_MODULE_13__.DeliveryTableComponent,
    _modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_10__.CreateDeliveryModalComponent,
    _modals_create_delivery_modal_components_delivery_mode_toggle_delivery_mode_toggle_component__WEBPACK_IMPORTED_MODULE_11__.DeliveryModeToggleComponent,
];















/***/ }),

/***/ 27995:
/*!**********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-logo/information-logo.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationLogoComponent": () => (/* binding */ InformationLogoComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_logo_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information-logo.component.html?ngResource */ 54760);
/* harmony import */ var _information_logo_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-logo.component.scss?ngResource */ 43755);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals */ 9419);
/* harmony import */ var _services_modals_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/modals.service */ 85735);






let InformationLogoComponent = class InformationLogoComponent {
    constructor(modalService) {
        this.modalService = modalService;
    }
    ngOnInit() {
    }
    addLogo() {
        this.modalService.addLogoModal(_modals__WEBPACK_IMPORTED_MODULE_2__.LogoModalComponent, this.smallLogo);
    }
    get tooltip() {
        if (this.smallLogo) {
            return 'JMART.SETTINGS.INFORMATION.UPLOAD_NEW_LOGO';
        }
        else {
            return 'JMART.SETTINGS.INFORMATION.UPLOAD_LOGO';
        }
    }
};
InformationLogoComponent.ctorParameters = () => [
    { type: _services_modals_service__WEBPACK_IMPORTED_MODULE_3__.ModalsService }
];
InformationLogoComponent.propDecorators = {
    smallLogo: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
InformationLogoComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-information-logo',
        template: _information_logo_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_logo_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationLogoComponent);



/***/ }),

/***/ 18498:
/*!**********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-main/information-main.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationMainComponent": () => (/* binding */ InformationMainComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information-main.component.html?ngResource */ 86964);
/* harmony import */ var _information_main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-main.component.scss?ngResource */ 25761);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services */ 74211);







let InformationMainComponent = class InformationMainComponent {
    constructor(companyService, modalService) {
        this.companyService = companyService;
        this.modalService = modalService;
    }
    ngOnInit() {
        this.fSub = this.modalService.uploadedLogo$.subscribe(el => {
            if (el) {
                const file = el;
                const reader = new FileReader();
                reader.onload = e => this.logo = reader.result.toString();
                reader.readAsDataURL(file);
            }
            else {
                this.logo = '';
            }
        });
        this.cSub = this.companyService.currentAuthority$.subscribe(el => {
            // dev returns undefined
            // this.companyName = new FormControl({ value: el.company.shortName, disabled: true });
            this.companyName = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl({ value: 'TOO Tech and Friends', disabled: true });
        });
    }
    ngOnDestroy() {
        if (this.fSub) {
            this.fSub.unsubscribe();
        }
        if (this.cSub) {
            this.cSub.unsubscribe();
        }
    }
};
InformationMainComponent.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_2__.CompanyService },
    { type: _services__WEBPACK_IMPORTED_MODULE_3__.ModalsService }
];
InformationMainComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-information-main',
        template: _information_main_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_main_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationMainComponent);



/***/ }),

/***/ 41601:
/*!**************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-person/information-person.component.ts ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationPersonComponent": () => (/* binding */ InformationPersonComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_person_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information-person.component.html?ngResource */ 20205);
/* harmony import */ var _information_person_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-person.component.scss?ngResource */ 85063);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals */ 9419);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services */ 74211);






let InformationPersonComponent = class InformationPersonComponent {
    constructor(modalsService) {
        this.modalsService = modalsService;
    }
    ngOnInit() { }
    editPerson(info) {
        this.modalsService.addEditPersonModal(_modals__WEBPACK_IMPORTED_MODULE_2__.AddEditModalComponent, this.blockId, info);
    }
    removePerson(id) {
        this.modalsService.removePersonModal(this.blockId, id);
    }
};
InformationPersonComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_3__.ModalsService }
];
InformationPersonComponent.propDecorators = {
    blockId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    info: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    isLast: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
InformationPersonComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-information-person',
        template: _information_person_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_person_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationPersonComponent);



/***/ }),

/***/ 54083:
/*!****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-persons/information-persons.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationPersonsComponent": () => (/* binding */ InformationPersonsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_persons_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information-persons.component.html?ngResource */ 90301);
/* harmony import */ var _information_persons_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-persons.component.scss?ngResource */ 13766);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services */ 74211);





let InformationPersonsComponent = class InformationPersonsComponent {
    constructor(responsiblePersonsService) {
        this.responsiblePersonsService = responsiblePersonsService;
    }
    ngOnInit() {
        this.persons = this.responsiblePersonsService.get();
    }
};
InformationPersonsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_2__.ResponsiblePersonsService }
];
InformationPersonsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-information-persons',
        template: _information_persons_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_persons_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationPersonsComponent);



/***/ }),

/***/ 81741:
/*!************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-res-persons/information-res-persons.component.ts ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationResPersonsComponent": () => (/* binding */ InformationResPersonsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_res_persons_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information-res-persons.component.html?ngResource */ 43182);
/* harmony import */ var _information_res_persons_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information-res-persons.component.scss?ngResource */ 75107);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals */ 9419);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services */ 74211);






let InformationResPersonsComponent = class InformationResPersonsComponent {
    constructor(modalsService) {
        this.modalsService = modalsService;
    }
    ngOnInit() {
    }
    identify(index, item) {
        return item.id;
    }
    addPerson(blockId) {
        this.modalsService.addEditPersonModal(_modals__WEBPACK_IMPORTED_MODULE_2__.AddEditModalComponent, blockId);
    }
};
InformationResPersonsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_3__.ModalsService }
];
InformationResPersonsComponent.propDecorators = {
    respPersons: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
InformationResPersonsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-information-res-persons',
        template: _information_res_persons_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_res_persons_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationResPersonsComponent);



/***/ }),

/***/ 53677:
/*!*********************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-table/get-template.directive.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetTemplateDirective": () => (/* binding */ GetTemplateDirective)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


let GetTemplateDirective = class GetTemplateDirective {
    constructor(template) {
        this.template = template;
    }
};
GetTemplateDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef }
];
GetTemplateDirective.propDecorators = {
    name: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input }]
};
GetTemplateDirective = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({
        selector: '[getTemplate]',
    })
], GetTemplateDirective);



/***/ }),

/***/ 15573:
/*!****************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-table/j-table.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JTableComponent": () => (/* binding */ JTableComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _j_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./j-table.component.html?ngResource */ 26184);
/* harmony import */ var _j_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./j-table.component.scss?ngResource */ 71474);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _get_template_directive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-template.directive */ 53677);





let JTableComponent = class JTableComponent {
    constructor() {
        this.class = {};
    }
    ngOnInit() {
    }
    ngAfterContentInit() {
        this.tpls = this.templates.toArray().reduce((acc, { name, template }) => {
            acc[name] = template;
            return acc;
        }, {});
    }
    getColumnTplsByIndex(i) {
        return this.tpls[`column-${i + 1}`];
    }
};
JTableComponent.ctorParameters = () => [];
JTableComponent.propDecorators = {
    templates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.ContentChildren, args: [_get_template_directive__WEBPACK_IMPORTED_MODULE_2__.GetTemplateDirective,] }],
    data: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    class: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
JTableComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-table',
        template: _j_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_j_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], JTableComponent);



/***/ }),

/***/ 34327:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/classes/working-time-mapper.class.ts ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WorkingTimeMapper": () => (/* binding */ WorkingTimeMapper)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j-tole-work-regime */ 82047);


class WorkingTimeMapper {
    constructor(externalWorkingTime = null) {
        this.workignTimeFormGroup = null;
        this.workignTimeFormGroup = externalWorkingTime
            ? this.mapExternalToInternalWorkingTime(externalWorkingTime)
            : this.getDefaultWorkingTime();
    }
    getDefaultWorkingTime() {
        return [
            {
                form: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    monday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    tuesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    wednesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    thursday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    friday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    saturday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    sunday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                }),
                days: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS,
                workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    open: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('0900'),
                    close: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('1800'),
                }),
                workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    from: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('09:00'),
                    to: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('18:00'),
                }),
                workRegimeOptions: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                }),
            },
        ];
    }
    mapExternalToInternalWorkingTime(workingTime) {
        return this.workignTimeFormGroup = workingTime.map((workTime, index) => {
            const newWorkTime = {
                form: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    monday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    tuesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    wednesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    thursday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    friday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    saturday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    sunday: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                }),
                days: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS,
                workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    open: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('0900'),
                    close: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('1800'),
                }),
                workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    from: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('09:00'),
                    to: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl('18:00'),
                }),
                workRegimeOptions: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
                    workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                    workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl(false),
                }),
            };
            const days = {
                'Пн': 'monday',
                'Вт': 'tuesday',
                'Ср': 'wednesday',
                'Чт': 'thursday',
                'Пт': 'friday',
                'Сб': 'saturday',
                'Вс': 'sunday',
            };
            const prevWorkingTime = workingTime[index - 1];
            if (prevWorkingTime) {
                prevWorkingTime.days.forEach(({ name, day }) => {
                    const control = newWorkTime.form.get(days[day || name.slice(0, -1)]);
                    control.disable();
                    control.setValue(true);
                });
            }
            workTime.days.forEach(({ day, name }) => {
                const enDay = days[day || name.slice(0, -1)];
                newWorkTime.form.get(enDay).setValue(true);
            });
            const isDayAngNight = workTime.hour.from === '00:00' && workTime.hour.to === '23:59';
            if (isDayAngNight) {
                newWorkTime.workRegimeOptions.get('workRegimeTime').setValue(true);
                WorkingTimeMapper.toggleDisabledFromTo(true, newWorkTime);
            }
            const [from, to] = isDayAngNight
                ? ['', '']
                : [workTime.hour.from, workTime.hour.to];
            newWorkTime.workRegimeTime.get('open').setValue(from);
            newWorkTime.workRegimeTime.get('close').setValue(to);
            return newWorkTime;
        });
    }
    getExternalState() {
        return this.workignTimeFormGroup.map((regTime) => {
            const { open, close } = regTime.workRegimeTime.value;
            let from = open, to = close;
            const days = Object.entries(regTime.form.controls)
                .filter(([_, { value, disabled }]) => value && !disabled)
                .map(([dayName]) => {
                return {
                    id: {
                        sunday: 0,
                        monday: 1,
                        tuesday: 2,
                        wednesday: 3,
                        thursday: 4,
                        friday: 5,
                        saturday: 6,
                    }[dayName],
                    day: WorkingTimeMapper.mapDay(dayName),
                };
            });
            const hour = regTime.workRegimeOptions.value.workRegimeTime
                ? {
                    from: '00:00',
                    to: '23:59',
                }
                : {
                    from: from.indexOf(':') > -1 ? from : from.match(/.{1,2}/g).join(':'),
                    to: to.indexOf(':') > -1 ? to : to.match(/.{1,2}/g).join(':'),
                };
            return {
                days,
                hour,
            };
        });
    }
    static mapDay(value) {
        const dayNames = {
            monday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[0],
            tuesday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[1],
            wednesday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[2],
            thursday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[3],
            friday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[4],
            saturday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[5],
            sunday: _j_tole_work_regime__WEBPACK_IMPORTED_MODULE_0__.WORK_DAYS[6],
        };
        switch (value) {
            case dayNames.monday:
                return 'Пн';
            case dayNames.tuesday:
                return 'Вт';
            case dayNames.wednesday:
                return 'Ср';
            case dayNames.thursday:
                return 'Чт';
            case dayNames.friday:
                return 'Пт';
            case dayNames.saturday:
                return 'Сб';
            case dayNames.sunday:
                return 'Вс';
            default:
                return '';
        }
    }
    static toggleDisabledFromTo(value, workTime) {
        const action = value ? 'disable' : 'enable';
        ['open', 'close'].forEach((controlName) => {
            const control = workTime.workRegimeTime.get(controlName);
            control.setValue('');
            control[action]();
        });
    }
}


/***/ }),

/***/ 82047:
/*!****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/j-tole-work-regime.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TIME_INPUT_TYPE": () => (/* binding */ TIME_INPUT_TYPE),
/* harmony export */   "WORK_DAYS": () => (/* binding */ WORK_DAYS),
/* harmony export */   "JToleWorkRegimeComponent": () => (/* binding */ JToleWorkRegimeComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _j_tole_work_regime_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./j-tole-work-regime.html?ngResource */ 44789);
/* harmony import */ var _j_tole_work_regime_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./j-tole-work-regime.scss?ngResource */ 80878);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var _classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/working-time-mapper.class */ 34327);







var TIME_INPUT_TYPE;
(function (TIME_INPUT_TYPE) {
    TIME_INPUT_TYPE["FROM"] = "FROM";
    TIME_INPUT_TYPE["TO"] = "TO";
})(TIME_INPUT_TYPE || (TIME_INPUT_TYPE = {}));
const WORK_DAYS = [
    'monday',
    'tuesday',
    'wednesday',
    'thursday',
    'friday',
    'saturday',
    'sunday',
];
let JToleWorkRegimeComponent = class JToleWorkRegimeComponent {
    constructor() {
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription();
        this.workRegimes = [
            {
                form: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                    monday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    tuesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    wednesday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    thursday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    friday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    saturday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    sunday: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                }),
                days: WORK_DAYS,
                workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                    open: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('0900'),
                    close: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('1800'),
                }),
                workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                    from: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('09:00'),
                    to: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('18:00'),
                }),
                workRegimeOptions: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                    workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                    workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                }),
            },
        ];
        this.pickedDaysCount = 0;
        this.TIME_INPUT_TYPE = TIME_INPUT_TYPE;
        this.showWorkRegimeBreakTime = true;
    }
    ngOnInit() {
        this.workRegimes.forEach((workTime) => this.subsribeWorkTimeIsDayAndNight(workTime));
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    subsribeWorkTimeIsDayAndNight(workTime) {
        const isDayAndNightSub = workTime.workRegimeOptions
            .get('workRegimeTime')
            .valueChanges.subscribe((value) => _classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_2__.WorkingTimeMapper.toggleDisabledFromTo(value, workTime));
        this.subscription.add(isDayAndNightSub);
    }
    deleteWorkRegimeHandler(index) {
        this.workRegimes.splice(index, 1);
    }
    getDayTranslateKey(day) {
        switch (day) {
            case WORK_DAYS[0]:
                return 'WEEK_DAYS.MONDAY';
            case WORK_DAYS[1]:
                return 'WEEK_DAYS.TUESDAY';
            case WORK_DAYS[2]:
                return 'WEEK_DAYS.WEDNESDAY';
            case WORK_DAYS[3]:
                return 'WEEK_DAYS.THURSDAY';
            case WORK_DAYS[4]:
                return 'WEEK_DAYS.FRIDAY';
            case WORK_DAYS[5]:
                return 'WEEK_DAYS.SATURDAY';
            case WORK_DAYS[6]:
                return 'WEEK_DAYS.SUNDAY';
            default:
                return '';
        }
    }
    addWorkRegimesHandler() {
        const newWorkRegimeForm = {
            form: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({}),
            days: WORK_DAYS,
            workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                open: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(),
                close: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(),
            }),
            workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                from: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(),
                to: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(),
            }),
            workRegimeOptions: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({
                workRegimeTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
                workRegimeBreakTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(false),
            }),
        };
        const prevWorkRegime = this.workRegimes[this.workRegimes.length - 1];
        Object.entries(prevWorkRegime.form.controls).forEach((control) => {
            if (control === null || control === void 0 ? void 0 : control[1].value) {
                newWorkRegimeForm.form.addControl(control[0], new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl({
                    value: true,
                    disabled: true,
                }));
            }
            else {
                newWorkRegimeForm.form.addControl(control[0], new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl({
                    value: false,
                    disabled: false,
                }));
            }
        });
        this.subsribeWorkTimeIsDayAndNight(newWorkRegimeForm);
        if (this.pickedDaysCount !== 7) {
            this.workRegimes.push(newWorkRegimeForm);
        }
    }
    getWorkRegimeSelectedDays(form, workTimeIndex) {
        const currentWorkRegimeSelectedDays = [];
        const prevWorkTime = this.workRegimes[workTimeIndex - 1];
        Object.entries(form.controls).forEach(([dayName, control]) => {
            if ((control.value && !prevWorkTime) ||
                (control.value &&
                    prevWorkTime &&
                    !prevWorkTime.form.get(dayName).value)) {
                currentWorkRegimeSelectedDays.push(dayName);
            }
        });
        this.pickedDaysCount = currentWorkRegimeSelectedDays.length;
        return currentWorkRegimeSelectedDays.map(day => _classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_2__.WorkingTimeMapper.mapDay(day)).join(', ');
    }
};
JToleWorkRegimeComponent.ctorParameters = () => [];
JToleWorkRegimeComponent.propDecorators = {
    workRegimes: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }],
    showWorkRegimeBreakTime: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }]
};
JToleWorkRegimeComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-tole-work-regime',
        template: _j_tole_work_regime_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_j_tole_work_regime_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], JToleWorkRegimeComponent);



/***/ }),

/***/ 85206:
/*!****************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/no-data/no-data.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoDataComponent": () => (/* binding */ NoDataComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _no_data_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./no-data.component.html?ngResource */ 40574);
/* harmony import */ var _no_data_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./no-data.component.scss?ngResource */ 3138);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let NoDataComponent = class NoDataComponent {
    constructor() {
        this.text = '';
    }
    ngOnInit() {
    }
};
NoDataComponent.ctorParameters = () => [];
NoDataComponent.propDecorators = {
    text: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }]
};
NoDataComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-no-data',
        template: _no_data_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_no_data_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NoDataComponent);



/***/ }),

/***/ 61087:
/*!************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-info/points-info.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointsInfoComponent": () => (/* binding */ PointsInfoComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _points_info_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points-info.component.html?ngResource */ 59990);
/* harmony import */ var _points_info_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points-info.component.scss?ngResource */ 80767);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let PointsInfoComponent = class PointsInfoComponent {
    constructor() { }
    ngOnInit() {
    }
};
PointsInfoComponent.ctorParameters = () => [];
PointsInfoComponent.propDecorators = {
    text: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }]
};
PointsInfoComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-points-info',
        template: _points_info_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_points_info_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PointsInfoComponent);



/***/ }),

/***/ 58179:
/*!****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-status/points-status.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointsStatusComponent": () => (/* binding */ PointsStatusComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _points_status_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points-status.component.html?ngResource */ 48638);
/* harmony import */ var _points_status_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points-status.component.scss?ngResource */ 38145);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




let PointsStatusComponent = class PointsStatusComponent {
    constructor() {
        this.toggle = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    ngOnInit() {
    }
    onToggle(item) {
        this.toggle.emit(item);
    }
};
PointsStatusComponent.ctorParameters = () => [];
PointsStatusComponent.propDecorators = {
    statuses: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input }],
    toggle: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output }]
};
PointsStatusComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
        selector: 'j-points-status',
        template: _points_status_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_points_status_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PointsStatusComponent);



/***/ }),

/***/ 35590:
/*!**************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-table/points-table.component.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointsTableComponent": () => (/* binding */ PointsTableComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _points_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points-table.component.html?ngResource */ 94680);
/* harmony import */ var _points_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points-table.component.scss?ngResource */ 22430);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services */ 74211);





let PointsTableComponent = class PointsTableComponent {
    constructor(modalsService) {
        this.modalsService = modalsService;
        this.translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';
    }
    ngOnInit() {
    }
    identify(index, item) {
        return item.storeLocationId;
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    edit(point) {
        this.modalsService.pickupPointsModal(point);
    }
};
PointsTableComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_2__.ModalsService }
];
PointsTableComponent.propDecorators = {
    points: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }],
    search: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
PointsTableComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-points-table',
        template: _points_table_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_points_table_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PointsTableComponent);



/***/ }),

/***/ 96610:
/*!**************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/radio-button/radio-button.component.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadioButtonComponent": () => (/* binding */ RadioButtonComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _radio_button_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radio-button.component.html?ngResource */ 33529);
/* harmony import */ var _radio_button_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radio-button.component.scss?ngResource */ 70912);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models */ 40636);






let RadioButtonComponent = class RadioButtonComponent {
    constructor() {
        this.formControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(_models__WEBPACK_IMPORTED_MODULE_2__.POINT_TYPE.SHOP);
    }
    ngOnInit() { }
};
RadioButtonComponent.ctorParameters = () => [];
RadioButtonComponent.propDecorators = {
    options: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    formControl: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
RadioButtonComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-radio-button',
        template: _radio_button_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewEncapsulation.None,
        styles: [_radio_button_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], RadioButtonComponent);



/***/ }),

/***/ 50551:
/*!************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/select-city/select-city.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelectCityComponent": () => (/* binding */ SelectCityComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _select_city_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select-city.component.html?ngResource */ 89966);
/* harmony import */ var _select_city_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select-city.component.scss?ngResource */ 59318);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _services_delivery_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/delivery.service */ 69942);






let SelectCityComponent = class SelectCityComponent {
    constructor(
    // probably this service would be statefull for the case of memoizing select city component
    deliveryService) {
        this.deliveryService = deliveryService;
        this.label = '';
        this.error = null;
        this.class = '';
        this.control = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl({ cityName: '' });
        this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
    }
    ngOnInit() {
        this.deliveryService.getCities().subscribe(cities => {
            this.cities = cities;
            this.citiesNames = this.cities.map(({ title }) => title);
        });
    }
    onCitySelect(cityName) {
        const city = this.cities.find(({ title: name }) => name === cityName);
        this.control.setValue(city);
    }
};
SelectCityComponent.ctorParameters = () => [
    { type: _services_delivery_service__WEBPACK_IMPORTED_MODULE_2__.DeliveryService }
];
SelectCityComponent.propDecorators = {
    label: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    error: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    class: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    control: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    select: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Output }]
};
SelectCityComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-select-city',
        template: _select_city_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_select_city_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SelectCityComponent);



/***/ }),

/***/ 91073:
/*!**********************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/tabs/tabs.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TabsComponent": () => (/* binding */ TabsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _tabs_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs.component.html?ngResource */ 35234);
/* harmony import */ var _tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tabs.component.scss?ngResource */ 1416);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let TabsComponent = class TabsComponent {
    constructor() { }
    ngOnInit() {
    }
};
TabsComponent.ctorParameters = () => [];
TabsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-tabs',
        template: _tabs_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_tabs_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], TabsComponent);



/***/ }),

/***/ 95833:
/*!******************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/delivery/delivery.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryComponent": () => (/* binding */ DeliveryComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery.component.html?ngResource */ 95619);
/* harmony import */ var _delivery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery.component.scss?ngResource */ 16840);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modals/create-delivery-modal/create-delivery-modal.component */ 71542);






let DeliveryComponent = class DeliveryComponent {
    constructor(ngbModalService) {
        this.ngbModalService = ngbModalService;
        this.translatePrefix = 'JMART.SETTINGS.DELIVERY';
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_dictionary',
            centered: true
        };
    }
    ngOnInit() { }
    addDelivery() {
        this.ngbModalService.open(_modals_create_delivery_modal_create_delivery_modal_component__WEBPACK_IMPORTED_MODULE_2__.CreateDeliveryModalComponent, this.modalSmParams);
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
};
DeliveryComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbModal }
];
DeliveryComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-delivery',
        template: _delivery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryComponent);



/***/ }),

/***/ 13145:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/forms/create-delivery.form/create-delivery.component.ts ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateDeliveryFormComponent": () => (/* binding */ CreateDeliveryFormComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _create_delivery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-delivery.component.html?ngResource */ 33777);
/* harmony import */ var _create_delivery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-delivery.component.scss?ngResource */ 96168);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/data/delivery-mock */ 89607);
/* harmony import */ var _jmart_cabinet_modules_settings_services_delivery_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/services/delivery.service */ 69942);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 32425);








let CreateDeliveryFormComponent = class CreateDeliveryFormComponent {
    constructor(fb, deliveryService) {
        this.fb = fb;
        this.deliveryService = deliveryService;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subscription();
        this.isSubmitted = false;
        this.isCancel = false;
        this.deliveryModes = _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__.deliveryModes;
        this.estimatedType = _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__.estimatedType;
        this.formPricesLink = null;
        this.editedIndex = -1;
        this.test = [1, 2, 3];
    }
    ngOnInit() {
        this.form = this.fb.group({
            // deliveryMode: new FormControl('jpost', Validators.required),
            isToday: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl('today', _angular_forms__WEBPACK_IMPORTED_MODULE_5__.Validators.required),
            estimatedTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl('1300', _angular_forms__WEBPACK_IMPORTED_MODULE_5__.Validators.required),
            workingTime: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormGroup({
                isDayAndNight: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(''),
                hour: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormGroup({
                    from: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(''),
                    to: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(''),
                })
            }),
            prices: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormArray([])
        });
        this.addPrice(),
            this.addPrice(true),
            this.formPricesLink = this.form.get('prices').controls;
        const isTodaySub = this.form.get('isToday').valueChanges.subscribe((value) => {
            const action = value !== 'today'
                ? 'disable'
                : 'enable';
            this.form.get('estimatedTime')[action]();
        });
        this.subscription.add(isTodaySub);
        const workingTimeSub = this.form.get('workingTime.isDayAndNight').valueChanges.subscribe((value) => {
            const action = value
                ? 'disable'
                : 'enable';
            const hourGroup = this.form.get('workingTime.hour');
            Object.keys(hourGroup.controls).forEach(key => hourGroup.controls[key][action]());
        });
        this.subscription.add(workingTimeSub);
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    addPrice(canBeFree = false) {
        const isDeliveryTypeCheckbox = canBeFree ? false : '';
        this.form.get('prices').push(new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormGroup({
            from: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(''),
            to: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(isDeliveryTypeCheckbox),
            deliveryPrice: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormControl(''),
        }));
    }
    // get disabeEstimatedTime() {
    //   console.log(this.form.get('isToday').value !== 'today')
    //   return this.form.get('isToday').value !== 'today';
    // }
    get formTitle() {
        const formTitleKey = this.editedIndex === -1 ? 'ADD' : 'EDIT';
        return `JMART.SETTINGS.DELIVERY.${formTitleKey}`;
    }
    get cityError() {
        return this.form.get('city').errors;
    }
    selectedCity(city) {
        this.form.get('city').setValue(city);
    }
    save() {
    }
    remove() { }
    cancel() {
    }
};
CreateDeliveryFormComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormBuilder },
    { type: _jmart_cabinet_modules_settings_services_delivery_service__WEBPACK_IMPORTED_MODULE_3__.DeliveryService }
];
CreateDeliveryFormComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'j-create-delivery-form',
        template: _create_delivery_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_create_delivery_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CreateDeliveryFormComponent);



/***/ }),

/***/ 89866:
/*!********************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/index.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SETTINGS_CONTAINERS": () => (/* binding */ SETTINGS_CONTAINERS),
/* harmony export */   "InformationComponent": () => (/* reexport safe */ _information_information_component__WEBPACK_IMPORTED_MODULE_0__.InformationComponent),
/* harmony export */   "PickupPointsComponent": () => (/* reexport safe */ _pickup_points_pickup_points_component__WEBPACK_IMPORTED_MODULE_1__.PickupPointsComponent),
/* harmony export */   "DeliveryComponent": () => (/* reexport safe */ _delivery_delivery_component__WEBPACK_IMPORTED_MODULE_2__.DeliveryComponent),
/* harmony export */   "ScheduleComponent": () => (/* reexport safe */ _schedule_schedule_component__WEBPACK_IMPORTED_MODULE_3__.ScheduleComponent),
/* harmony export */   "UsersComponent": () => (/* reexport safe */ _users_users_component__WEBPACK_IMPORTED_MODULE_4__.UsersComponent)
/* harmony export */ });
/* harmony import */ var _information_information_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information/information.component */ 520);
/* harmony import */ var _pickup_points_pickup_points_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickup-points/pickup-points.component */ 43877);
/* harmony import */ var _delivery_delivery_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delivery/delivery.component */ 95833);
/* harmony import */ var _schedule_schedule_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schedule/schedule.component */ 1874);
/* harmony import */ var _users_users_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./users/users.component */ 90784);





const SETTINGS_CONTAINERS = [
    _information_information_component__WEBPACK_IMPORTED_MODULE_0__.InformationComponent,
    _pickup_points_pickup_points_component__WEBPACK_IMPORTED_MODULE_1__.PickupPointsComponent,
    _delivery_delivery_component__WEBPACK_IMPORTED_MODULE_2__.DeliveryComponent,
    _schedule_schedule_component__WEBPACK_IMPORTED_MODULE_3__.ScheduleComponent,
    _users_users_component__WEBPACK_IMPORTED_MODULE_4__.UsersComponent
];







/***/ }),

/***/ 520:
/*!************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/information/information.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformationComponent": () => (/* binding */ InformationComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _information_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information.component.html?ngResource */ 50896);
/* harmony import */ var _information_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information.component.scss?ngResource */ 82432);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let InformationComponent = class InformationComponent {
    constructor() { }
    ngOnInit() {
    }
};
InformationComponent.ctorParameters = () => [];
InformationComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-jmart-main',
        template: _information_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_information_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], InformationComponent);



/***/ }),

/***/ 43877:
/*!****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/pickup-points/pickup-points.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PickupPointsComponent": () => (/* binding */ PickupPointsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _pickup_points_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pickup-points.component.html?ngResource */ 79999);
/* harmony import */ var _pickup_points_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickup-points.component.scss?ngResource */ 39520);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services */ 74211);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 19193);
/* harmony import */ var _data_pickup_points_mock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../data/pickup-points-mock */ 4229);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 25722);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 86942);









let PickupPointsComponent = class PickupPointsComponent {
    constructor(modalsService, pointsService) {
        this.modalsService = modalsService;
        this.pointsService = pointsService;
        this.search = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('');
        this.translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';
        this.isLoading = true;
        this.pSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subscription();
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroup({ status: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('all') });
        this.sSub = this.pointsService
            .getStatuses()
            .subscribe((statuses) => {
            this.statuses = statuses.slice(0, 3);
        });
    }
    ngOnInit() {
        this.getCities();
        const points$ = this.pointsService.getPoints();
        this.pSub.add((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.combineLatest)([points$, this.search.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.startWith)('')), this.form.get('status').valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.startWith)('all'))])
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(([points, search, status]) => {
            let filteredData;
            if (status !== 'all') {
                filteredData = points.filter((point) => point.type === status);
            }
            else {
                filteredData = points;
            }
            let searchedData = filteredData.filter(d => {
                return (d.companyStoreId && d.companyStoreId.toLowerCase().includes(search.toLowerCase()))
                    || d.city.name.toLowerCase().includes(search.toLowerCase())
                    || d.pickupAddress.toLowerCase().includes(search.toLowerCase());
            });
            return searchedData.map(el => (Object.assign(Object.assign({}, el), { workingTime: el.workingTime
                    ? el.workingTime.map(t => {
                        return {
                            days: t.days.map(d => d.day).join(', '),
                            hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0
                                ? ' Круглосуточно'
                                : `${t.hour.from} - ${t.hour.to}`,
                            break: t.break.from.localeCompare('00:00') === 0 && t.break.to.localeCompare('00:00') === 0
                                ? ' без перерыва'
                                : `перерыв ${t.break.from} - ${t.break.to}`,
                        };
                    })
                    : '', type: _data_pickup_points_mock__WEBPACK_IMPORTED_MODULE_3__.pointsTypes.find(p => {
                    if (p.value === el.type)
                        return p.label;
                }), isMain: el.isMain === 'Y' ? 'Основной склад по городу' : '', isMainInCity: el.isMainInCity === 'Y' ? 'Основной склад в Казахстане' : '' })));
        }))
            .subscribe(points => { this.points = points; }));
        this.pointsService.onPointsChanged.subscribe((({ action, id, point = null }) => {
            const reaction = {
                add: 'handleAdd',
                edit: 'handleEdit',
                delete: 'handleDelete',
            }[action];
            this[reaction](id, point);
            // handle logic here
            // don't forget to unsubscribe, also use Subacription if you multiple subs for teardown
        }));
    }
    handleAdd(id, point) {
        const modifiedPoint = this.mapPoint(point);
        this.points.push(modifiedPoint);
    }
    handleEdit(id, point) {
        const index = this.points.findIndex(({ storeLocationId }) => id === storeLocationId);
        const modifiedPoint = this.mapPoint(point);
        this.points[index] = modifiedPoint;
    }
    handleDelete(id, _) {
        const index = this.points.findIndex(({ storeLocationId }) => id === storeLocationId);
        this.points.splice(index, 1);
    }
    ngOnDestroy() {
        if (this.pSub) {
            this.pSub.unsubscribe();
        }
        if (this.sSub) {
            this.sSub.unsubscribe();
        }
    }
    addPickupPoints() {
        this.modalsService.pickupPointsModal();
    }
    get selected() {
        return this.statuses.find((status) => {
            return status.isSelected === true;
        });
    }
    onSelect(status) {
        this.form.get('status').patchValue(status);
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    getCities() {
        this.pointsService.getCities().subscribe(city => {
            this.cities = city;
        });
    }
    mapPoint(el) {
        return Object.assign(Object.assign({}, el), { workingTime: el.workingTime
                ? el.workingTime.map(t => {
                    return {
                        days: t.days.map(d => d.day).join(', '),
                        hour: t.hour.from.localeCompare('00:00') === 0 && t.hour.to.localeCompare('00:00') === 0
                            ? ' Круглосуточно'
                            : `${t.hour.from} - ${t.hour.to}`,
                        break: t.break.from.localeCompare('00:00') === 0 && t.break.to.localeCompare('00:00') === 0
                            ? ' без перерыва'
                            : `перерыв ${t.break.from} - ${t.break.to}`,
                    };
                })
                : '', type: _data_pickup_points_mock__WEBPACK_IMPORTED_MODULE_3__.pointsTypes.find(p => {
                if (p.value === el.type)
                    return p.label;
            }), isMain: el.isMain === 'Y' ? 'Основной склад по городу' : '', isMainInCity: el.isMainInCity === 'Y' ? 'Основной склад в Казахстане' : '', city: this.cities.find(el => el.id === el.cityId) });
    }
};
PickupPointsComponent.ctorParameters = () => [
    { type: _services__WEBPACK_IMPORTED_MODULE_2__.ModalsService },
    { type: _services__WEBPACK_IMPORTED_MODULE_2__.PickupPointsService }
];
PickupPointsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_10__.Component)({
        selector: 'j-pickup-points',
        template: _pickup_points_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_pickup_points_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PickupPointsComponent);



/***/ }),

/***/ 1874:
/*!******************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/schedule/schedule.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScheduleComponent": () => (/* binding */ ScheduleComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _schedule_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.component.html?ngResource */ 80556);
/* harmony import */ var _schedule_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule.component.scss?ngResource */ 22911);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let ScheduleComponent = class ScheduleComponent {
    constructor() { }
    ngOnInit() {
    }
};
ScheduleComponent.ctorParameters = () => [];
ScheduleComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-jmart-schedule',
        template: _schedule_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_schedule_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], ScheduleComponent);



/***/ }),

/***/ 90784:
/*!************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/users/users.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UsersComponent": () => (/* binding */ UsersComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _users_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./users.component.html?ngResource */ 57121);
/* harmony import */ var _users_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./users.component.scss?ngResource */ 46889);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let UsersComponent = class UsersComponent {
    constructor() { }
    ngOnInit() {
    }
};
UsersComponent.ctorParameters = () => [];
UsersComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-jmart-users',
        template: _users_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_users_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], UsersComponent);



/***/ }),

/***/ 89607:
/*!**********************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/data/delivery-mock.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deliveryModes": () => (/* binding */ deliveryModes),
/* harmony export */   "estimatedType": () => (/* binding */ estimatedType),
/* harmony export */   "deliveryCity": () => (/* binding */ deliveryCity),
/* harmony export */   "deliveryIntercity": () => (/* binding */ deliveryIntercity)
/* harmony export */ });
const deliveryModes = [
    {
        value: 'jpost',
        label: 'JPost'
    },
    {
        value: 'own',
        label: ' Своя',
    }
];
const estimatedType = [
    {
        value: true,
        label: 'В день заказа, при заказе',
    },
    {
        value: false,
        label: 'На следующий день',
    }
];
const deliveryCity = [
    {
        id: 12,
        isCity: true,
        isJpost: false,
        direction: {
            from: {
                cityId: 1,
                title: '​​Нур-Султан'
            },
        },
        attributes: {
            prices: [
                {
                    from: 1000,
                    to: 10000,
                    deliveryPrice: 1000
                },
                {
                    from: 10000,
                    to: 0,
                    deliveryPrice: 0
                }
            ],
            workingTime: [
                {
                    days: [
                        {
                            id: 0,
                            day: 'Пн',
                            name: 'Пн.',
                        },
                        {
                            id: 1,
                            day: 'Вт',
                            name: 'Вт.'
                        },
                        {
                            id: 2,
                            day: 'Ср',
                            name: 'Ср.'
                        },
                        {
                            id: 3,
                            day: 'Чт',
                            name: 'Чт.',
                        },
                        {
                            id: 4,
                            day: 'Пт',
                            name: 'Пт.',
                        },
                    ],
                    hour: {
                        from: '15:00',
                        to: '22:00'
                    },
                },
                {
                    days: [
                        {
                            id: 5,
                            day: 'Сб',
                            name: 'Сб.',
                        },
                        {
                            id: 6,
                            day: 'Вн',
                            name: 'Вн.',
                        },
                    ],
                    hour: {
                        from: '00:00',
                        to: '23:59'
                    },
                },
            ],
            estimatedTime: '13:00',
            isToday: false,
        }
    },
    {
        id: 13,
        isJpost: false,
        isCity: true,
        direction: {
            from: {
                cityId: 2,
                title: 'Алматы'
            },
        },
        attributes: {
            prices: [
                {
                    from: 500,
                    to: 10000,
                    deliveryPrice: 1000
                },
                {
                    from: 10000,
                    to: 0,
                    deliveryPrice: 0
                }
            ],
            workingTime: [
                {
                    days: [
                        {
                            id: 0,
                            day: 'Пн',
                            name: 'Пн.',
                        },
                        {
                            id: 1,
                            day: 'Вт',
                            name: 'Вт.',
                        },
                        {
                            id: 2,
                            day: 'Ср',
                            name: 'Ср.',
                        },
                        {
                            id: 3,
                            day: 'Чт',
                            name: 'Чт.',
                        },
                        {
                            id: 4,
                            day: 'Пт',
                            name: 'Пт.',
                        },
                    ],
                    hour: {
                        from: '15:00',
                        to: '22:00'
                    },
                },
                {
                    days: [
                        {
                            id: 5,
                            day: 'Сб',
                            name: 'Сб.',
                        },
                        {
                            id: 6,
                            day: 'Вн',
                            name: 'Вн.',
                        },
                    ],
                    hour: {
                        from: '00:00',
                        to: '23:59'
                    },
                },
            ],
            estimatedTime: '13:00',
            isToday: true,
        }
    }
];
const deliveryIntercity = [];


/***/ }),

/***/ 47623:
/*!*************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/data/information-mock.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "responsiblePersons": () => (/* binding */ responsiblePersons)
/* harmony export */ });
const responsiblePersons = [
    {
        id: 0,
        title: 'Вопросы доставки',
        persons: [
            {
                id: 1,
                lastName: 'Хованская',
                firstName: 'Антонида',
                patronymic: 'Филипповна',
                emails: ['AntonidaHovanskaya96@gmail.com', 'AHovanskaya96@gmail.com'],
                phones: ['7023483123', '7023483100']
            },
            {
                id: 2,
                lastName: 'Яковлев',
                firstName: 'Милий',
                patronymic: 'Аркадьевич',
                emails: ['ivlad1982@gmail.com', 'miliy@hotmail.com'],
                phones: ['7053343248']
            },
        ]
    },
    {
        id: 1,
        title: 'Обновление остатков',
        persons: [
            {
                id: 3,
                lastName: 'Изофатова',
                firstName: 'Мстислава',
                patronymic: 'Виталиевна',
                emails: ['MstislavaIzofatova215@mail.ru'],
                phones: ['7025094556']
            },
            {
                id: 4,
                lastName: 'Журавлёв',
                firstName: 'Никанор',
                patronymic: 'Кириллович',
                emails: ['NikanorZhuravlev@gmail.com'],
                phones: ['7052396184']
            },
        ]
    },
    {
        id: 2,
        title: 'Жалобы и отзывы клиентов',
        persons: [
            {
                id: 5,
                lastName: 'Ибрагимова',
                firstName: 'Алия',
                patronymic: 'Шаяхметова',
                emails: ['alya_shayachmetova@gmail.com'],
                phones: ['7008188540']
            }
        ]
    },
    {
        id: 3,
        title: 'Бухгалтерские вопросы',
        persons: [
            {
                id: 6,
                lastName: 'Алишеров',
                firstName: 'Аскар',
                patronymic: 'Куатович',
                emails: ['askarbragim1982@gmail.com'],
                phones: ['7023758534']
            },
            {
                id: 7,
                lastName: 'Владимировна',
                firstName: 'Александра',
                patronymic: 'Войчук',
                emails: ['a_voychuk1982@gmail.com'],
                phones: ['7703343248']
            },
        ]
    },
];


/***/ }),

/***/ 4229:
/*!***************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/data/pickup-points-mock.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pointsTypes": () => (/* binding */ pointsTypes),
/* harmony export */   "cities": () => (/* binding */ cities)
/* harmony export */ });
const pointsTypes = [
    {
        value: 'shop',
        label: 'Магазин'
    },
    {
        value: 'warehouse',
        label: 'Склад'
    }
];
const cities = [
    {
        cityId: 0,
        cityName: 'Алматы'
    },
    {
        cityId: 1,
        cityName: 'Нур-Султан'
    },
    {
        cityId: 2,
        cityName: 'Шымкент'
    },
    {
        cityId: 3,
        cityName: 'Караганда'
    },
    {
        cityId: 4,
        cityName: 'Костанай'
    },
    {
        cityId: 5,
        cityName: 'Актобе'
    },
    {
        cityId: 6,
        cityName: 'Атырау'
    },
    {
        cityId: 7,
        cityName: 'Актау'
    },
    {
        cityId: 8,
        cityName: 'Усть-Каменогорск'
    },
    {
        cityId: 9,
        cityName: 'Павлодар'
    },
    {
        cityId: 10,
        cityName: 'Тараз'
    },
    {
        cityId: 11,
        cityName: 'Петропавловск'
    },
    {
        cityId: 12,
        cityName: 'Кокшетау'
    },
    {
        cityId: 13,
        cityName: 'Уральск'
    },
    {
        cityId: 14,
        cityName: 'Кызылорда'
    },
    {
        cityId: 15,
        cityName: 'Семей'
    },
    {
        cityId: 16,
        cityName: 'Талдыкорган'
    }
];


/***/ }),

/***/ 96180:
/*!***********************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component.ts ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryModeToggleComponent": () => (/* binding */ DeliveryModeToggleComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_mode_toggle_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-mode-toggle.component.html?ngResource */ 3174);
/* harmony import */ var _delivery_mode_toggle_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-mode-toggle.component.scss?ngResource */ 5793);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 90587);





let DeliveryModeToggleComponent = class DeliveryModeToggleComponent {
    constructor() {
        this.control = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormControl();
        this.mods = [
            {
                value: true,
                label: 'Доставка JPost',
            },
            {
                value: false,
                label: 'Своя доставка',
            },
        ];
    }
    ngOnInit() {
        // this.selectedMode = this.mods[0];
        this.control.setValue(this.mods[1].value);
    }
    setMod({ value }) {
        this.control.setValue(value);
    }
};
DeliveryModeToggleComponent.ctorParameters = () => [];
DeliveryModeToggleComponent.propDecorators = {
    control: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Input }]
};
DeliveryModeToggleComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-delivery-mode-toggle',
        template: _delivery_mode_toggle_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_mode_toggle_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryModeToggleComponent);



/***/ }),

/***/ 71542:
/*!****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/create-delivery-modal.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateDeliveryModalComponent": () => (/* binding */ CreateDeliveryModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _create_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-delivery-modal.component.html?ngResource */ 34272);
/* harmony import */ var _create_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-delivery-modal.component.scss?ngResource */ 45072);
/* harmony import */ var _analytics_services_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @analytics/services/manager */ 46155);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 32425);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 80823);
/* harmony import */ var _components_j_tole_work_regime_classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/j-tole-work-regime/classes/working-time-mapper.class */ 34327);
/* harmony import */ var _data_delivery_mock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data/delivery-mock */ 89607);
/* harmony import */ var _services_delivery_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/delivery.service */ 69942);
/* harmony import */ var _utils_getRuDays__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/getRuDays */ 49134);














let CreateDeliveryModalComponent = class CreateDeliveryModalComponent {
    constructor(modal, deliveryService, fb, router, analytics) {
        this.modal = modal;
        this.deliveryService = deliveryService;
        this.fb = fb;
        this.router = router;
        this.analytics = analytics;
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_dictionary',
            centered: true,
        };
        this.editDelivery = null;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subscription();
        this.isSubmitted = false;
        this.isCancel = false;
        this.deliveryModes = _data_delivery_mock__WEBPACK_IMPORTED_MODULE_4__.deliveryModes;
        this.estimatedType = _data_delivery_mock__WEBPACK_IMPORTED_MODULE_4__.estimatedType;
        this.formPricesLink = null;
        this.editedIndex = -1;
        this.workingTime = new _components_j_tole_work_regime_classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_3__.WorkingTimeMapper();
        this.editDeliveryId = null;
        this.accidentTimeToggle = false;
        this.citiesAndRegionsCache = [];
        this.citiesAndRegions = {};
        this.getEstimatedDaysSuffix = _utils_getRuDays__WEBPACK_IMPORTED_MODULE_6__.getRuDays;
    }
    ngOnInit() {
        this.form = this.fb.group({
            isJpost: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl(false, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
            direction: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
                from: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl({ cityName: '' }, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
            }),
            prices: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormArray([]),
            deliveryEstimatedDay: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
        });
        this.isInterCity
            ? this.onInterCityFormEstablish()
            : this.onCityFormEstablish();
        this.deliveryService
            .getCitiesAndRegion()
            .subscribe((citiesAndRegions) => {
            this.citiesAndRegionsCache = citiesAndRegions;
            Object.keys(this.form.get('direction').controls).forEach((fieldName) => {
                this.setDefaultDirectionsOptions(fieldName);
            });
        });
        this.addPrice();
        this.addPrice(true);
        this.formPricesLink = this.form.get('prices').controls;
        const firstPriceFromField = this.formPricesLink[0].controls.from;
        firstPriceFromField.setValue('0');
        firstPriceFromField.disable();
        if (this.editDelivery) {
            this.onEdit();
        }
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    setDefaultDirectionsOptions(fieldName) {
        const regionsCount = 15;
        this.citiesAndRegions[fieldName] = this.citiesAndRegionsCache.slice(0, regionsCount);
    }
    onInterCityFormEstablish() {
        const directions = this.form.get('direction');
        directions.addControl('to', new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl({ cityName: '' }));
        directions.setValue({
            from: { title: '', value: null },
            to: { title: '', value: null },
        });
        Object.keys(directions.controls).forEach((fieldName) => {
            const field = directions.get(fieldName);
            field.valueChanges
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.debounceTime)(200))
                .subscribe((option) => {
                if (!option.value) {
                    this.citiesAndRegions[fieldName] =
                        this.citiesAndRegionsCache.filter(({ title }) => title.toLowerCase().indexOf(option.title.toLowerCase()) > -1);
                }
                else {
                    this.setDefaultDirectionsOptions(fieldName);
                }
                if (option.title === '') {
                    this.setDefaultDirectionsOptions(fieldName);
                }
                this.excludeSelectedCityDirections();
            });
        });
    }
    onCityFormEstablish() {
        this.form.get('deliveryEstimatedDay').disable();
        this.form.addControl('isToday', new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl(true, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required));
        this.form.addControl('workingTime', new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
            isDayAndNight: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
            hour: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
                from: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
                to: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required),
            }),
        }));
        this.form.addControl('estimatedTime', new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl('1300', _angular_forms__WEBPACK_IMPORTED_MODULE_8__.Validators.required));
        const workingTimeSub = this.form
            .get('workingTime.isDayAndNight')
            .valueChanges.subscribe((value) => {
            const action = value ? 'disable' : 'enable';
            const hourGroup = this.form.get('workingTime.hour');
            Object.keys(hourGroup.controls).forEach((key) => hourGroup.controls[key][action]());
        });
        this.subscription.add(workingTimeSub);
        const isTodaySub = this.form
            .get('isToday')
            .valueChanges.subscribe((value) => {
            const action = value ? 'enable' : 'disable';
            this.form.get('estimatedTime')[action]();
        });
        this.subscription.add(isTodaySub);
    }
    setAccidentTimeToggle(value) {
        this.accidentTimeToggle = value;
        const deliveryEstimatedDay = this.form.get('deliveryEstimatedDay');
        const estimatedTime = this.form.get('estimatedTime');
        const isToday = this.form.get('isToday');
        const [dayAction, timeAction, dayEffect,] = value
            ? ['enable', 'disable', () => { }]
            : ['disable', 'enable', () => deliveryEstimatedDay.setValue('')];
        deliveryEstimatedDay[dayAction]();
        isToday[timeAction]();
        estimatedTime[timeAction]();
        dayEffect();
        isToday.setValue(false);
    }
    excludeSelectedCityDirections() {
        const selectedCityDirections = Object.values(this.form.get('direction').controls)
            .filter(({ value: { value } }) => value && value.type === 3)
            .map(({ value: { title } }) => title);
        this.citiesAndRegions = Object.entries(this.citiesAndRegions).reduce((acc, [fieldName, directions]) => {
            acc[fieldName] = directions.filter(({ title }) => !selectedCityDirections.includes(title));
            return acc;
        }, {});
    }
    close() {
        this.modal.dismiss();
    }
    setMode(mode) {
        this.selectedMode = mode;
    }
    get isModeOwn() {
        return !this.form.get('isJpost').value;
    }
    get isInterCity() {
        return this.router.url.indexOf('intercity') > -1;
    }
    addPrice(canBeFree = false) {
        const isDeliveryTypeCheckbox = canBeFree ? '0' : '';
        const prices = this.form.get('prices');
        const price = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormGroup({
            from: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl(''),
            to: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl(isDeliveryTypeCheckbox),
            deliveryPrice: new _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormControl(isDeliveryTypeCheckbox),
        });
        let index;
        if (prices.length <= 1) {
            prices.push(price);
            index = prices.length;
        }
        else {
            index = prices.length;
            prices.insert(index - 1, price);
            const nextPrice = prices.at(index);
            price.get('from').setValue(nextPrice.get('from').value);
            nextPrice.get('from').setValue('0');
        }
        if (!canBeFree) {
            const priceSub = price.get('to').valueChanges.subscribe((value) => {
                prices.at(index).get('from').setValue(value);
            });
            this.subscription.add(priceSub);
        }
    }
    removePrice(index) {
        const prices = this.form.get('prices');
        prices
            .at(index + 1)
            .get('from')
            .setValue(prices.at(index - 1).get('to').value);
        this.form.get('prices').removeAt(index);
    }
    // get disabeEstimatedTime() {
    //   console.log(this.form.get('isToday').value !== 'today')
    //   return this.form.get('isToday').value !== 'today';
    // }
    get formTitle() {
        const formTitleKey = this.editedIndex === -1 ? 'ADD' : 'EDIT';
        return `JMART.SETTINGS.DELIVERY.${formTitleKey}`;
    }
    get cityError() {
        return this.form.get('city').errors;
    }
    onSave() {
        const { isJpost, direction: rawDirection, prices, isToday, estimatedTime, deliveryEstimatedDay, } = this.form.getRawValue();
        const isCity = !this.isInterCity;
        const mapDirection = this.isInterCity
            ? ({ value }) => value
            : (city) => (Object.assign(Object.assign({}, city), { id: city.cityId || city.id, type: city.type }));
        const direction = Object.entries(rawDirection).reduce((acc, [key, value]) => {
            acc[key] = mapDirection(value);
            return acc;
        }, {});
        const delivery = Object.assign(Object.assign({}, (this.editDeliveryId && {
            id: this.editDeliveryId,
        })), { isCity,
            isJpost,
            direction, attributes: null });
        if (!isJpost) {
            delivery.attributes = Object.assign(Object.assign({ prices: prices.map((price) => {
                    Object.keys(price).forEach((key) => {
                        const value = price[key];
                        price[key] =
                            typeof price[key] === 'number'
                                ? value
                                : parseInt(value.replace(/ /g, ''));
                    });
                    return price;
                }), workingTime: this.workingTime.getExternalState() }, (estimatedTime &&
                isToday && {
                estimatedTime: estimatedTime.match(/.{1,2}/g).join(':'),
            })), { isToday: isToday || false, deliveryEstimatedDay: deliveryEstimatedDay || (isToday ? 0 : 1) });
        }
        const [action, args] = this.editDelivery
            ? ['editDelivery', [delivery, this.editDeliveryId]]
            : ['addDelivery', [delivery]];
        if (action === 'addDelivery') {
            this.analytics.logEvent('JMartDeliveryAdd_Save_Click', {
                version: 1,
                region: this.deliveryService.selectedDelivery,
                type: isJpost ? 'jpost' : 'client',
            });
        }
        this.deliveryService[action](...args);
        this.close();
    }
    onEdit() {
        this.editDeliveryId = this.editDelivery.delivery.id;
        const { isJpost, direction: { from, to }, attributes: { isToday, estimatedTime, workingTime, prices, deliveryEstimatedDay, }, } = this.editDelivery.delivery;
        const direction = this.isInterCity
            ? {
                from: { title: from.title, value: from },
                to: { title: to.title, value: to },
            }
            : {
                from,
            };
        const form = Object.assign({ isJpost,
            isToday,
            direction }, (!isJpost && Object.assign(Object.assign(Object.assign({}, (estimatedTime && {
            estimatedTime: estimatedTime.split(':').join(''),
        })), { workingTime: {
                hour: {
                    to: workingTime[0].hour.to,
                    from: workingTime[0].hour.from,
                },
                isDayAndNight: [
                    { key: 'to', value: '23:59' },
                    { key: 'from', value: '00:00' },
                ].every(({ key, value }) => workingTime[0].hour[key] === value),
            }, prices }), (deliveryEstimatedDay && { deliveryEstimatedDay }))));
        if (!isJpost) {
            const pricesDiff = prices.length - this.form.get('prices').length;
            if (pricesDiff > 0) {
                for (let i = 0; i < pricesDiff; i++) {
                    this.addPrice();
                }
            }
            if (workingTime) {
                this.workingTime = new _components_j_tole_work_regime_classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_3__.WorkingTimeMapper(workingTime);
            }
        }
        // this.form.setValue(form);
        this.form.patchValue(form);
        setTimeout(() => {
            if ((parseInt(this.editDelivery.delivery.attributes.deliveryEstimatedDay) > 1)) {
                this.setAccidentTimeToggle(true);
            }
            this.form.get('isJpost').setValue(isJpost);
        }, 0);
    }
};
CreateDeliveryModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbActiveModal },
    { type: _services_delivery_service__WEBPACK_IMPORTED_MODULE_5__.DeliveryService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormBuilder },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__.Router },
    { type: _analytics_services_manager__WEBPACK_IMPORTED_MODULE_2__.AnalyticsManagerAbstract }
];
CreateDeliveryModalComponent.propDecorators = {
    editDelivery: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_12__.Input }]
};
CreateDeliveryModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_13__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_12__.Component)({
        selector: 'j-create-deivery-modal',
        template: _create_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_create_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], CreateDeliveryModalComponent);



/***/ }),

/***/ 15632:
/*!***********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-modal/delivery-modal.component.ts ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryModalComponent": () => (/* binding */ DeliveryModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-modal.component.html?ngResource */ 92805);
/* harmony import */ var _delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-modal.component.scss?ngResource */ 63089);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/data/delivery-mock */ 89607);
/* harmony import */ var _jmart_cabinet_modules_settings_services_delivery_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/services/delivery.service */ 69942);








let DeliveryModalComponent = class DeliveryModalComponent {
    constructor(ngbActiveModal, ngbModalService, fb, deliveryService) {
        this.ngbActiveModal = ngbActiveModal;
        this.ngbModalService = ngbModalService;
        this.fb = fb;
        this.deliveryService = deliveryService;
        this.isSubmitted = false;
        this.isCancel = false;
        this.translatePrefix = 'JMART.SETTINGS.DELIVERY';
        this.deliveryModes = _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__.deliveryModes;
        this.estimatedType = _jmart_cabinet_modules_settings_data_delivery_mock__WEBPACK_IMPORTED_MODULE_2__.estimatedType;
        this.editedIndex = -1;
    }
    ngOnInit() {
        this.getCities();
        /* Form initialization */
        this.form = this.fb.group({
            city: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            deliveryMode: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('jpost', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            estimatedType: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('today', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
        });
    }
    save() { }
    remove() { }
    cancel() {
        this.ngbActiveModal.dismiss();
    }
    get formTitle() {
        return this.editedIndex === -1 ? this.mapTranslate('ADD') : this.mapTranslate('EDIT');
    }
    getCities() {
        const cities = this.deliveryService.getCities();
        // this.cities = cities;
        // this.cityNames = cities.map((city) => city.cityName);
    }
    get cityError() {
        return this.form.get('city').errors;
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    selectedCity(city) {
        this.form.get('city').setValue(city);
    }
};
DeliveryModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__.NgbActiveModal },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__.NgbModal },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder },
    { type: _jmart_cabinet_modules_settings_services_delivery_service__WEBPACK_IMPORTED_MODULE_3__.DeliveryService }
];
DeliveryModalComponent.propDecorators = {
    mode: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }]
};
DeliveryModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-delivery-modal',
        template: _delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryModalComponent);



/***/ }),

/***/ 80871:
/*!*************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-remove-modal/delivery-remove-modal.component.ts ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeliveryRemoveModalComponent": () => (/* binding */ DeliveryRemoveModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _delivery_remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delivery-remove-modal.component.html?ngResource */ 72449);
/* harmony import */ var _delivery_remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delivery-remove-modal.component.scss?ngResource */ 8018);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




let DeliveryRemoveModalComponent = class DeliveryRemoveModalComponent {
    constructor() { }
    ngOnInit() {
    }
};
DeliveryRemoveModalComponent.ctorParameters = () => [];
DeliveryRemoveModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
        selector: 'j-delivery-remove-modal',
        template: _delivery_remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_delivery_remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], DeliveryRemoveModalComponent);



/***/ }),

/***/ 94185:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/set-delivery-modal/set-delivery-modal.component.ts ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetDeliveryModalComponent": () => (/* binding */ SetDeliveryModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _set_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set-delivery-modal.component.html?ngResource */ 68559);
/* harmony import */ var _set_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set-delivery-modal.component.scss?ngResource */ 69315);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _jmart_cabinet_modules_settings_models_delivery_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/models/delivery.model */ 48873);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../delivery-modal/delivery-modal.component */ 15632);







let SetDeliveryModalComponent = class SetDeliveryModalComponent {
    constructor(modal, ngbModalService) {
        this.modal = modal;
        this.ngbModalService = ngbModalService;
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_dictionary',
            centered: true
        };
    }
    ngOnInit() { }
    close() {
        this.modal.dismiss();
    }
    setJpost() {
        const modalRef = this.ngbModalService.open(_delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_3__.DeliveryModalComponent, this.modalSmParams);
        modalRef.componentInstance.mode = _jmart_cabinet_modules_settings_models_delivery_model__WEBPACK_IMPORTED_MODULE_2__.DELIVERY_MODE.JPOST;
        this.modal.dismiss();
    }
    setOwnDelivery() {
        const modalRef = this.ngbModalService.open(_delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_3__.DeliveryModalComponent, this.modalSmParams);
        modalRef.componentInstance.mode = _jmart_cabinet_modules_settings_models_delivery_model__WEBPACK_IMPORTED_MODULE_2__.DELIVERY_MODE.OWN;
        this.modal.dismiss();
    }
};
SetDeliveryModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbActiveModal },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__.NgbModal }
];
SetDeliveryModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-set-delivery-modal',
        template: _set_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_set_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SetDeliveryModalComponent);



/***/ }),

/***/ 9419:
/*!****************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/index.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SETTINGS_MODALS": () => (/* binding */ SETTINGS_MODALS),
/* harmony export */   "LogoModalComponent": () => (/* reexport safe */ _information_logo_modal_logo_modal_component__WEBPACK_IMPORTED_MODULE_0__.LogoModalComponent),
/* harmony export */   "AddEditModalComponent": () => (/* reexport safe */ _information_add_edit_modal_add_edit_modal_component__WEBPACK_IMPORTED_MODULE_1__.AddEditModalComponent),
/* harmony export */   "RemoveModalComponent": () => (/* reexport safe */ _information_remove_modal_remove_modal_component__WEBPACK_IMPORTED_MODULE_2__.RemoveModalComponent),
/* harmony export */   "PickupPointsModalComponent": () => (/* reexport safe */ _point_pickup_points_modal_pickup_points_modal_component__WEBPACK_IMPORTED_MODULE_3__.PickupPointsModalComponent),
/* harmony export */   "NoticeModalComponent": () => (/* reexport safe */ _point_notice_modal_notice_modal_component__WEBPACK_IMPORTED_MODULE_5__.NoticeModalComponent),
/* harmony export */   "SetDeliveryModalComponent": () => (/* reexport safe */ _delivery_set_delivery_modal_set_delivery_modal_component__WEBPACK_IMPORTED_MODULE_6__.SetDeliveryModalComponent),
/* harmony export */   "DeliveryModalComponent": () => (/* reexport safe */ _delivery_delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_7__.DeliveryModalComponent),
/* harmony export */   "DeliveryRemoveModalComponent": () => (/* reexport safe */ _delivery_delivery_remove_modal_delivery_remove_modal_component__WEBPACK_IMPORTED_MODULE_8__.DeliveryRemoveModalComponent)
/* harmony export */ });
/* harmony import */ var _information_logo_modal_logo_modal_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information/logo-modal/logo-modal.component */ 32524);
/* harmony import */ var _information_add_edit_modal_add_edit_modal_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information/add-edit-modal/add-edit-modal.component */ 52784);
/* harmony import */ var _information_remove_modal_remove_modal_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./information/remove-modal/remove-modal.component */ 47350);
/* harmony import */ var _point_pickup_points_modal_pickup_points_modal_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point/pickup-points-modal/pickup-points-modal.component */ 49131);
/* harmony import */ var _point_points_remove_modal_points_remove_modal_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point/points-remove-modal/points-remove-modal.component */ 24187);
/* harmony import */ var _point_notice_modal_notice_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./point/notice-modal/notice-modal.component */ 69242);
/* harmony import */ var _delivery_set_delivery_modal_set_delivery_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./delivery/set-delivery-modal/set-delivery-modal.component */ 94185);
/* harmony import */ var _delivery_delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./delivery/delivery-modal/delivery-modal.component */ 15632);
/* harmony import */ var _delivery_delivery_remove_modal_delivery_remove_modal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./delivery/delivery-remove-modal/delivery-remove-modal.component */ 80871);









const SETTINGS_MODALS = [
    _information_logo_modal_logo_modal_component__WEBPACK_IMPORTED_MODULE_0__.LogoModalComponent,
    _information_add_edit_modal_add_edit_modal_component__WEBPACK_IMPORTED_MODULE_1__.AddEditModalComponent,
    _information_remove_modal_remove_modal_component__WEBPACK_IMPORTED_MODULE_2__.RemoveModalComponent,
    _point_pickup_points_modal_pickup_points_modal_component__WEBPACK_IMPORTED_MODULE_3__.PickupPointsModalComponent,
    _point_points_remove_modal_points_remove_modal_component__WEBPACK_IMPORTED_MODULE_4__.PointsRemoveModalComponent,
    _point_notice_modal_notice_modal_component__WEBPACK_IMPORTED_MODULE_5__.NoticeModalComponent,
    _delivery_set_delivery_modal_set_delivery_modal_component__WEBPACK_IMPORTED_MODULE_6__.SetDeliveryModalComponent,
    _delivery_delivery_modal_delivery_modal_component__WEBPACK_IMPORTED_MODULE_7__.DeliveryModalComponent,
    _delivery_delivery_remove_modal_delivery_remove_modal_component__WEBPACK_IMPORTED_MODULE_8__.DeliveryRemoveModalComponent,
];











/***/ }),

/***/ 52784:
/*!**************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/add-edit-modal/add-edit-modal.component.ts ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddEditModalComponent": () => (/* binding */ AddEditModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _add_edit_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-edit-modal.component.html?ngResource */ 64060);
/* harmony import */ var _add_edit_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-edit-modal.component.scss?ngResource */ 73533);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _services_modals_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/modals.service */ 85735);
/* harmony import */ var _services_information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/information/responsible-persons/responsible-persons.service */ 92016);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);








let AddEditModalComponent = class AddEditModalComponent {
    constructor(modal, resPersonsService, modalsService, fb) {
        this.modal = modal;
        this.resPersonsService = resPersonsService;
        this.modalsService = modalsService;
        this.fb = fb;
        this.isSubmitted = false;
        this.limit = 4;
        this.editedIndex = -1;
        /* Form initialization */
        this.form = this.fb.group({
            lastName: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            firstName: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required),
            patronymic: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(''),
            emails: this.fb.array([
                this.fb.group({
                    email: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.email])
                })
            ]),
            phones: this.fb.array([
                this.fb.group({
                    phone: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
                })
            ])
        });
    }
    ngOnInit() {
        /* Filling in a form */
        if (this.info) {
            this.editedIndex = 1;
            this.form.patchValue({
                lastName: this.info.lastName,
                firstName: this.info.firstName,
                patronymic: this.info.patronymic,
            });
            this.info.emails.forEach((el, index) => {
                if (index > 0)
                    this.addEmail();
                this.emails().at(index).get('email').patchValue(el);
            });
            this.info.phones.forEach((el, index) => {
                if (index > 0)
                    this.addPhone();
                this.phones().at(index).get('phone').patchValue(el);
            });
        }
    }
    get formTitle() {
        return this.editedIndex === -1 ? 'JMART.SETTINGS.INFORMATION.ADD_RESP_PERSON' : 'JMART.SETTINGS.INFORMATION.EDIT_RESP_PERSON';
    }
    get lastNameError() {
        return this.form.get('lastName').errors;
    }
    get fistNameError() {
        return this.form.get('firstName').errors;
    }
    /* Phones */
    phones() {
        return this.form.get('phones');
    }
    newPhone() {
        return this.fb.group({
            phone: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required)
        });
    }
    addPhone() {
        if (this.phones().length > this.limit) {
            return;
        }
        this.phones().push(this.newPhone());
    }
    removePhone(i) {
        this.phones().removeAt(i);
    }
    phoneError(i) {
        // @ts-ignore
        return this.form.get('phones').controls[i].controls.phone.errors;
    }
    /* Emails */
    emails() {
        return this.form.get('emails');
    }
    newEmail() {
        return this.fb.group({
            email: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl('', [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.email])
        });
    }
    addEmail() {
        if (this.emails().length > this.limit) {
            return;
        }
        this.emails().push(this.newEmail());
    }
    removeEmail(i) {
        this.emails().removeAt(i);
    }
    emailError(i) {
        // @ts-ignore
        return this.form.get('emails').controls[i].controls.email.errors;
    }
    /*Add person*/
    addPerson() {
        this.isSubmitted = true;
        if (this.form.invalid) {
            return;
        }
        if (this.editedIndex === -1) {
            const person = {
                id: this.blockId,
                persons: [
                    {
                        lastName: this.form.value.lastName,
                        firstName: this.form.value.firstName,
                        patronymic: this.form.value.patronymic,
                        emails: this.form.value.emails.map(el => el.email),
                        phones: this.form.value.phones.map(el => el.phone)
                    }
                ]
            };
            this.resPersonsService.create(person);
        }
        else {
            const person = {
                id: this.blockId,
                persons: [
                    {
                        id: this.info.id,
                        lastName: this.form.value.lastName,
                        firstName: this.form.value.firstName,
                        patronymic: this.form.value.patronymic,
                        emails: this.form.value.emails.map(el => el.email),
                        phones: this.form.value.phones.map(el => el.phone)
                    }
                ]
            };
            this.resPersonsService.edit(person);
        }
        this.cancel();
    }
    removePerson() {
        this.modalsService.removePersonModal(this.blockId, this.info.id);
        this.cancel();
    }
    formReset() {
        this.form.get('lastName').reset();
        this.form.get('firstName').reset();
        this.form.get('patronymic').reset();
        (this.form.controls['emails']).reset();
        (this.form.controls['phones']).reset();
    }
    cancel() {
        this.formReset();
        this.editedIndex = -1;
        this.modal.dismiss();
    }
};
AddEditModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__.NgbActiveModal },
    { type: _services_information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_3__.ResponsiblePersonsService },
    { type: _services_modals_service__WEBPACK_IMPORTED_MODULE_2__.ModalsService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder }
];
AddEditModalComponent.propDecorators = {
    blockId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }],
    info: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Input }]
};
AddEditModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'j-jmart-settings-add-modal',
        template: _add_edit_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_add_edit_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], AddEditModalComponent);



/***/ }),

/***/ 32524:
/*!******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/logo-modal/logo-modal.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogoModalComponent": () => (/* binding */ LogoModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _logo_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logo-modal.component.html?ngResource */ 33882);
/* harmony import */ var _logo_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logo-modal.component.scss?ngResource */ 65016);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _services_modals_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/modals.service */ 85735);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-notifier */ 50449);







let LogoModalComponent = class LogoModalComponent {
    constructor(modal, modalService, notifier) {
        this.modal = modal;
        this.modalService = modalService;
        this.notifier = notifier;
        this.reader = new FileReader();
        this.fileInput = document.querySelector('#fileInput');
    }
    ngOnInit() {
        if (this.smallLogo) {
            this.largeLogo = this.smallLogo;
        }
        else {
            this.largeLogo = '';
        }
    }
    ngOnDestroy() {
        this.largeLogo = '';
    }
    uploadFile(event) {
        if (event.target.files && event.target.files[0]) {
            this.file = event.target.files[0];
            const type = this.file.type;
            if (type.match('image.png') || type.match('image.jpg') || type.match('image.jpeg') || type.match('image.svg')) {
                this.reader.onload = e => this.largeLogo = this.reader.result.toString();
                this.reader.readAsDataURL(this.file);
            }
            else {
                this.notifier.show({
                    type: 'warning',
                    message: 'Формат файла должен быть .jpeg, .jpg, .png, .svg'
                });
                this.file = null;
            }
        }
    }
    saveFile() {
        this.modalService.changeUploadedLogo(this.file);
        this.closeModal();
    }
    removeFile() {
        this.closeModal();
        this.file = null;
        this.modalService.changeUploadedLogo();
    }
    dismissModal(error = null, imageSrc = '') {
        this.modal.dismiss({ error, imageSrc });
        this.largeLogo = '';
    }
    closeModal() {
        this.largeLogo = '';
        this.modal.close();
    }
};
LogoModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _services_modals_service__WEBPACK_IMPORTED_MODULE_2__.ModalsService },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_4__.NotifierService }
];
LogoModalComponent.propDecorators = {
    smallLogo: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input }]
};
LogoModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-jmart-settings-logo-modal',
        template: _logo_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
        styles: [_logo_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], LogoModalComponent);



/***/ }),

/***/ 47350:
/*!**********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/remove-modal/remove-modal.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoveModalComponent": () => (/* binding */ RemoveModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-modal.component.html?ngResource */ 46730);
/* harmony import */ var _remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-modal.component.scss?ngResource */ 90957);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _services_information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/information/responsible-persons/responsible-persons.service */ 92016);






let RemoveModalComponent = class RemoveModalComponent {
    constructor(modal, resPersonsService) {
        this.modal = modal;
        this.resPersonsService = resPersonsService;
    }
    ngOnInit() {
    }
    remove() {
        this.resPersonsService.remove(this.blockId, this.id);
        this.modal.dismiss();
    }
    cancel() {
        this.modal.dismiss();
    }
};
RemoveModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _services_information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_2__.ResponsiblePersonsService }
];
RemoveModalComponent.propDecorators = {
    blockId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }],
    id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
RemoveModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-remove-modal',
        template: _remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], RemoveModalComponent);



/***/ }),

/***/ 69242:
/*!****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/notice-modal/notice-modal.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NoticeModalComponent": () => (/* binding */ NoticeModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _notice_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./notice-modal.component.html?ngResource */ 91725);
/* harmony import */ var _notice_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./notice-modal.component.scss?ngResource */ 82057);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _jmart_cabinet_modules_settings_services_modals_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/services/modals.service */ 85735);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);






let NoticeModalComponent = class NoticeModalComponent {
    constructor(modal, modalsService) {
        this.modal = modal;
        this.modalsService = modalsService;
    }
    ngOnInit() {
    }
    close() {
        localStorage.removeItem('form');
        this.modal.dismiss();
    }
    cancel() {
        this.modal.dismiss();
        this.modalsService.pickupPointsModal();
    }
};
NoticeModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _jmart_cabinet_modules_settings_services_modals_service__WEBPACK_IMPORTED_MODULE_2__.ModalsService }
];
NoticeModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'j-notice-modal',
        template: _notice_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_notice_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], NoticeModalComponent);



/***/ }),

/***/ 49131:
/*!******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/pickup-points-modal/pickup-points-modal.component.ts ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PickupPointsModalComponent": () => (/* binding */ PickupPointsModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _pickup_points_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pickup-points-modal.component.html?ngResource */ 20245);
/* harmony import */ var _pickup_points_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickup-points-modal.component.scss?ngResource */ 84780);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _data_pickup_points_mock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../data/pickup-points-mock */ 4229);
/* harmony import */ var _services_pickup_points_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/pickup-points.service */ 97952);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _points_remove_modal_points_remove_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../points-remove-modal/points-remove-modal.component */ 24187);
/* harmony import */ var _jmart_cabinet_modules_settings_components_j_tole_work_regime_classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/components/j-tole-work-regime/classes/working-time-mapper.class */ 34327);











let PickupPointsModalComponent = class PickupPointsModalComponent {
    constructor(ngbActiveModal, ngbModalService, fb, pointService, companyService) {
        this.ngbActiveModal = ngbActiveModal;
        this.ngbModalService = ngbModalService;
        this.fb = fb;
        this.pointService = pointService;
        this.companyService = companyService;
        this.isSubmitted = false;
        this.isCancel = false;
        this.isSave = false;
        this.translatePrefix = 'JMART.SETTINGS.PICKUPPOINTS';
        this.typePointList = _data_pickup_points_mock__WEBPACK_IMPORTED_MODULE_2__.pointsTypes;
        this.editedIndex = -1;
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_dictionary',
            centered: true
        };
        this.workingTime = new _jmart_cabinet_modules_settings_components_j_tole_work_regime_classes_working_time_mapper_class__WEBPACK_IMPORTED_MODULE_6__.WorkingTimeMapper();
        /* Form initialization */
        this.form = this.fb.group({
            status: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('A', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            companyStoreId: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            city: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            pickupAddress: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            iban: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl(''),
            type: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('shop', _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.required),
            isMain: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl(''),
            isMainInCity: new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl('')
        });
        this.form.get('city').valueChanges.subscribe(val => {
            if (val)
                this.form.get('pickupAddress').enable();
        });
    }
    ngOnInit() {
        /*Form draft pre-Save*/
        const draft = sessionStorage.getItem('form');
        /* Filling in a form */
        if (this.point) {
            this.editedIndex = 1;
            const form = this.point;
            this.form.patchValue({
                companyStoreId: form.companyStoreId,
                status: form.status,
                name: form.name,
                city: form.city.name,
                pickupAddress: form.pickupAddress,
                iban: form.iban,
                type: form.type.value,
                isMain: form.isMain,
                isMainInCity: form.isMainInCity,
            });
        }
        else {
            if (draft) {
                const form = JSON.parse(draft);
                this.form.patchValue({
                    companyStoreId: form.companyStoreId,
                    status: form.status,
                    name: form.name,
                    city: form.city.name,
                    pickupAddress: form.pickupAddress,
                    iban: form.iban,
                    type: form.type,
                    isMain: form.isMain,
                    isMainInCity: form.isMainInCity,
                });
            }
        }
    }
    ngOnDestroy() {
        if (this.editedIndex === -1) {
            sessionStorage.setItem('form', JSON.stringify(this.form.value));
            if (this.isCancel || this.isSave) {
                sessionStorage.removeItem('form');
            }
        }
    }
    test() {
        console.log('asd');
        console.log(this.form.get('city').value);
    }
    save() {
        this.isSave = true;
        this.isSubmitted = true;
        if (this.form.invalid) {
            return;
        }
        if (this.editedIndex === -1) {
            const point = {
                status: 'A',
                companyStoreId: this.form.value.companyStoreId,
                name: this.form.value.name,
                cityId: this.form.get('city').value.cityId,
                pickupAddress: this.form.value.pickupAddress,
                latitude: 43.3444,
                longitude: 23.445,
                // workingTime: null,
                type: this.form.value.type,
                isMain: this.form.value.isMain ? 'Y' : 'N',
                isMainInCity: this.form.value.isMainInCity ? 'Y' : 'N',
                iban: this.form.value.iban,
                workingTime: this.workingTime.getExternalState(),
            };
            this.pointService.addPoint(point).subscribe((res) => {
                this.pointService.onPointsChanged.next({
                    action: 'add',
                    point: res.data
                });
            });
        }
        else {
            const point = {
                status: this.form.value.status,
                companyStoreId: this.form.value.companyStoreId,
                name: this.form.value.name,
                cityId: this.form.get('city').value.cityId,
                pickupAddress: this.form.value.pickupAddress,
                latitude: 43.3444,
                longitude: 23.445,
                // workingTime: null,
                type: this.form.value.type,
                isMain: this.form.value.isMain ? 'Y' : 'N',
                isMainInCity: this.form.value.isMainInCity ? 'Y' : 'N',
                iban: this.form.value.iban ? this.form.value.iban : '',
                workingTime: this.workingTime.getExternalState(),
            };
            this.pointService.edit(point, this.point.storeLocationId).subscribe((res) => {
                this.pointService.onPointsChanged.next({
                    id: this.point.storeLocationId,
                    action: 'edit',
                    point: res.data
                });
            });
        }
        this.cancel();
    }
    remove() {
        const modalRef = this.ngbModalService.open(_points_remove_modal_points_remove_modal_component__WEBPACK_IMPORTED_MODULE_5__.PointsRemoveModalComponent, this.modalSmParams);
        modalRef.componentInstance.storeLocationId = this.point.storeLocationId;
        this.cancel();
    }
    cancel() {
        this.isCancel = true;
        this.ngbActiveModal.dismiss();
    }
    get status() {
        return this.form.get('status').value.includes('A');
    }
    get formTitle() {
        return this.editedIndex === -1 ? this.mapTranslate('ADD') : this.mapTranslate('EDIT');
    }
    get idPointError() {
        return this.form.get('companyStoreId').errors;
    }
    get titleError() {
        return this.form.get('name').errors;
    }
    get cityError() {
        return this.form.get('city').errors;
    }
    get addressError() {
        return this.form.get('pickupAddress').errors;
    }
    get ibanError() {
        return this.form.get('iban').errors;
    }
    mapTranslate(key) {
        return `${this.translatePrefix}.${key}`;
    }
    selectedCity(city) {
        this.form.get('city').setValue(city);
    }
    changeStatus(val) {
        let statusValue = val.target.value === 'true' ? 'A' : 'D';
        this.form.get('status').setValue(statusValue);
    }
};
PickupPointsModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__.NgbActiveModal },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__.NgbModal },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormBuilder },
    { type: _services_pickup_points_service__WEBPACK_IMPORTED_MODULE_3__.PickupPointsService },
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_4__.CompanyService }
];
PickupPointsModalComponent.propDecorators = {
    point: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_9__.Input }]
};
PickupPointsModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
        selector: 'j-pickup-points-modal',
        template: _pickup_points_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_pickup_points_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PickupPointsModalComponent);



/***/ }),

/***/ 24187:
/*!******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/points-remove-modal/points-remove-modal.component.ts ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointsRemoveModalComponent": () => (/* binding */ PointsRemoveModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _points_remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points-remove-modal.component.html?ngResource */ 71859);
/* harmony import */ var _points_remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points-remove-modal.component.scss?ngResource */ 34298);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _jmart_cabinet_modules_settings_services_pickup_points_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jmart-cabinet/modules/settings/services/pickup-points.service */ 97952);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);






let PointsRemoveModalComponent = class PointsRemoveModalComponent {
    constructor(modal, pointService) {
        this.modal = modal;
        this.pointService = pointService;
    }
    ngOnInit() {
    }
    remove() {
        this.pointService.remove(this.storeLocationId).subscribe(() => {
            this.pointService.onPointsChanged.next({
                id: this.storeLocationId,
                action: 'delete'
            });
            this.modal.dismiss();
        }, err => {
            // handle error
        });
    }
    cancel() {
        this.modal.dismiss();
    }
};
PointsRemoveModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _jmart_cabinet_modules_settings_services_pickup_points_service__WEBPACK_IMPORTED_MODULE_2__.PickupPointsService }
];
PointsRemoveModalComponent.propDecorators = {
    storeLocationId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
PointsRemoveModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-points-remove-modal',
        template: _points_remove_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_points_remove_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], PointsRemoveModalComponent);



/***/ }),

/***/ 45286:
/*!****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/remove-delivery-modal/remove-delivery-modal.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RemoveDeliveryModalComponent": () => (/* binding */ RemoveDeliveryModalComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _remove_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-delivery-modal.component.html?ngResource */ 62203);
/* harmony import */ var _remove_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-delivery-modal.component.scss?ngResource */ 41037);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _services_delivery_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/delivery.service */ 69942);






let RemoveDeliveryModalComponent = class RemoveDeliveryModalComponent {
    constructor(modal, deliveryService) {
        this.modal = modal;
        this.deliveryService = deliveryService;
    }
    close() {
        this.modal.dismiss();
    }
    remove() {
        this.deliveryService.removeDelivery(this.deliveryId, this.modal);
    }
};
RemoveDeliveryModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbActiveModal },
    { type: _services_delivery_service__WEBPACK_IMPORTED_MODULE_2__.DeliveryService }
];
RemoveDeliveryModalComponent.propDecorators = {
    deliveryId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Input }]
};
RemoveDeliveryModalComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-remove-delivery-modal',
        template: _remove_delivery_modal_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_remove_delivery_modal_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], RemoveDeliveryModalComponent);



/***/ }),

/***/ 48873:
/*!*************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/models/delivery.model.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DELIVERY_CATEGORY": () => (/* binding */ DELIVERY_CATEGORY),
/* harmony export */   "DELIVERY_MODE": () => (/* binding */ DELIVERY_MODE)
/* harmony export */ });
var DELIVERY_CATEGORY;
(function (DELIVERY_CATEGORY) {
    DELIVERY_CATEGORY["BY_CITY"] = "BY_CITY";
    DELIVERY_CATEGORY["BY_INTERCITY"] = "BY_INTERCITY";
})(DELIVERY_CATEGORY || (DELIVERY_CATEGORY = {}));
var DELIVERY_MODE;
(function (DELIVERY_MODE) {
    DELIVERY_MODE["OWN"] = "own";
    DELIVERY_MODE["JPOST"] = "jpost";
})(DELIVERY_MODE || (DELIVERY_MODE = {}));
;


/***/ }),

/***/ 40636:
/*!****************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/models/index.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FILTER_POINT_STATUS": () => (/* reexport safe */ _pickup_points_model__WEBPACK_IMPORTED_MODULE_1__.FILTER_POINT_STATUS),
/* harmony export */   "POINT_TYPE": () => (/* reexport safe */ _pickup_points_model__WEBPACK_IMPORTED_MODULE_1__.POINT_TYPE),
/* harmony export */   "WAREHOUSE_TYPE": () => (/* reexport safe */ _pickup_points_model__WEBPACK_IMPORTED_MODULE_1__.WAREHOUSE_TYPE)
/* harmony export */ });
/* harmony import */ var _information_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./information.model */ 43868);
/* harmony import */ var _pickup_points_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickup-points.model */ 96140);




/***/ }),

/***/ 43868:
/*!****************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/models/information.model.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 96140:
/*!******************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/models/pickup-points.model.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FILTER_POINT_STATUS": () => (/* binding */ FILTER_POINT_STATUS),
/* harmony export */   "POINT_TYPE": () => (/* binding */ POINT_TYPE),
/* harmony export */   "WAREHOUSE_TYPE": () => (/* binding */ WAREHOUSE_TYPE)
/* harmony export */ });
var FILTER_POINT_STATUS;
(function (FILTER_POINT_STATUS) {
    FILTER_POINT_STATUS["ALL"] = "all";
    FILTER_POINT_STATUS["SHOP"] = "shop";
    FILTER_POINT_STATUS["WAREHOUSE"] = "warehouse";
    FILTER_POINT_STATUS["MAIN_WAREHOUSE"] = "mainWarehouse";
    FILTER_POINT_STATUS["COUNTRY_WAREHOUSE"] = "countryWarehouse";
})(FILTER_POINT_STATUS || (FILTER_POINT_STATUS = {}));
var POINT_TYPE;
(function (POINT_TYPE) {
    POINT_TYPE["SHOP"] = "shop";
    POINT_TYPE["WAREHOUSE"] = "warehouse";
})(POINT_TYPE || (POINT_TYPE = {}));
var WAREHOUSE_TYPE;
(function (WAREHOUSE_TYPE) {
    WAREHOUSE_TYPE["DEFAULT"] = "none";
    WAREHOUSE_TYPE["MAIN_WAREHOUSE"] = "mainWarehouse";
    WAREHOUSE_TYPE["COUNTRY_WAREHOUSE"] = "countryWarehouse";
})(WAREHOUSE_TYPE || (WAREHOUSE_TYPE = {}));


/***/ }),

/***/ 82647:
/*!***************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/pipes/filterPoints.pipe.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FilterPointsPipe": () => (/* binding */ FilterPointsPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let FilterPointsPipe = class FilterPointsPipe {
    transform(points, search = '') {
        if (!search.trim()) {
            return points;
        }
        return points.filter(point => {
            return point.companyStoreId.toLowerCase().includes(search.toLowerCase()) ||
                point.city.name.toLowerCase().includes(search.toLowerCase()) ||
                point.pickupAddress.toLowerCase().includes(search.toLowerCase());
        });
    }
};
FilterPointsPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'filterPoint'
    })
], FilterPointsPipe);



/***/ }),

/***/ 98249:
/*!******************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/pipes/maskPrefixPhone.pipe.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaskPrefixPhonePipe": () => (/* binding */ MaskPrefixPhonePipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let MaskPrefixPhonePipe = class MaskPrefixPhonePipe {
    transform(value) {
        if (value.length === 10) {
            return '+7' + ' ('
                + value.slice(0, 3) + ') '
                + value.slice(3, 6) + '-'
                + value.slice(6, 8) + '-'
                + value.slice(8, 10);
        }
    }
};
MaskPrefixPhonePipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'maskPrefixPhone'
    })
], MaskPrefixPhonePipe);



/***/ }),

/***/ 86567:
/*!**********************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/pipes/number-space-format.pipe.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumberSpaceFormatPipe": () => (/* binding */ NumberSpaceFormatPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


let NumberSpaceFormatPipe = class NumberSpaceFormatPipe {
    transform(value, ...args) {
        return String(value).replace(/(?!^)(?=(?:\d{3})+$)/g, ' ');
    }
};
NumberSpaceFormatPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Pipe)({
        name: 'numberSpaceFormat'
    })
], NumberSpaceFormatPipe);



/***/ }),

/***/ 74211:
/*!******************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/services/index.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModalsService": () => (/* reexport safe */ _modals_service__WEBPACK_IMPORTED_MODULE_0__.ModalsService),
/* harmony export */   "ResponsiblePersonsService": () => (/* reexport safe */ _information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_1__.ResponsiblePersonsService),
/* harmony export */   "PickupPointsService": () => (/* reexport safe */ _pickup_points_service__WEBPACK_IMPORTED_MODULE_2__.PickupPointsService)
/* harmony export */ });
/* harmony import */ var _modals_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals.service */ 85735);
/* harmony import */ var _information_responsible_persons_responsible_persons_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./information/responsible-persons/responsible-persons.service */ 92016);
/* harmony import */ var _pickup_points_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pickup-points.service */ 97952);





/***/ }),

/***/ 92070:
/*!*************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/services/information/responsible-persons/responsible-persons.abstract.ts ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResponsiblePersonsAbstract": () => (/* binding */ ResponsiblePersonsAbstract)
/* harmony export */ });
class ResponsiblePersonsAbstract {
}


/***/ }),

/***/ 92016:
/*!************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/services/information/responsible-persons/responsible-persons.service.ts ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResponsiblePersonsService": () => (/* binding */ ResponsiblePersonsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _responsible_persons_abstract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./responsible-persons.abstract */ 92070);
/* harmony import */ var _data_information_mock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../data/information-mock */ 47623);




let ResponsiblePersonsService = class ResponsiblePersonsService extends _responsible_persons_abstract__WEBPACK_IMPORTED_MODULE_0__.ResponsiblePersonsAbstract {
    constructor() {
        super();
        this.rPersons = _data_information_mock__WEBPACK_IMPORTED_MODULE_1__.responsiblePersons;
    }
    get() {
        return this.rPersons;
    }
    create(person) {
        this.rPersons.map(block => {
            if (block.id === person.id) {
                block.persons.push(person.persons[0]);
            }
        });
    }
    edit(person) {
        let objIndex;
        this.rPersons.map(block => {
            if (block.id === person.id) {
                objIndex = block.persons.findIndex(p => p.id === person.persons[0].id);
                block.persons[objIndex].lastName = person.persons[0].lastName;
                block.persons[objIndex].firstName = person.persons[0].firstName;
                block.persons[objIndex].patronymic = person.persons[0].patronymic;
                block.persons[objIndex].emails = person.persons[0].emails;
                block.persons[objIndex].phones = person.persons[0].phones;
            }
        });
    }
    remove(blockId, id) {
        let objIndex;
        this.rPersons.map(block => {
            if (block.id === blockId) {
                objIndex = block.persons.findIndex(p => p.id === id);
                if (objIndex > -1) {
                    block.persons.splice(objIndex, 1);
                }
            }
        });
    }
};
ResponsiblePersonsService.ctorParameters = () => [];
ResponsiblePersonsService = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({
        providedIn: 'root'
    })
], ResponsiblePersonsService);



/***/ }),

/***/ 85735:
/*!***************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/services/modals.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModalsService": () => (/* binding */ ModalsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 3191);
/* harmony import */ var _modals_information_remove_modal_remove_modal_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modals/information/remove-modal/remove-modal.component */ 47350);
/* harmony import */ var _modals_point_pickup_points_modal_pickup_points_modal_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modals/point/pickup-points-modal/pickup-points-modal.component */ 49131);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 92218);






let ModalsService = class ModalsService {
    constructor(ngbModalService) {
        this.ngbModalService = ngbModalService;
        this.uploadedLogo$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.modalSmParams = {
            backdropClass: 'backdrop_light',
            windowClass: 'modal_light modal_dictionary',
            centered: true
        };
    }
    changeUploadedLogo(file) {
        if (file) {
            this.uploadedLogo$.next(file);
        }
        else {
            this.uploadedLogo$.next(null);
        }
    }
    addLogoModal(modal, smallLogo) {
        const modalRef = this.ngbModalService.open(modal, this.modalSmParams);
        modalRef.componentInstance.smallLogo = smallLogo;
    }
    addEditPersonModal(modal, blockId, info) {
        const modalRef = this.ngbModalService.open(modal, this.modalSmParams);
        modalRef.componentInstance.blockId = blockId;
        modalRef.componentInstance.info = info;
    }
    removePersonModal(blockId, id) {
        const modalRef = this.ngbModalService.open(_modals_information_remove_modal_remove_modal_component__WEBPACK_IMPORTED_MODULE_0__.RemoveModalComponent, this.modalSmParams);
        modalRef.componentInstance.blockId = blockId;
        modalRef.componentInstance.id = id;
    }
    pickupPointsModal(point) {
        const modalRef = this.ngbModalService.open(_modals_point_pickup_points_modal_pickup_points_modal_component__WEBPACK_IMPORTED_MODULE_1__.PickupPointsModalComponent, this.modalSmParams);
        modalRef.componentInstance.point = point;
    }
};
ModalsService.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbModal }
];
ModalsService = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)({
        providedIn: 'root'
    })
], ModalsService);



/***/ }),

/***/ 97952:
/*!**********************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/services/pickup-points.service.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PickupPointsService": () => (/* binding */ PickupPointsService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 92218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 84505);
/* harmony import */ var _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/pickup-points.model */ 96140);
/* harmony import */ var _company_company_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @company/company.service */ 26164);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 86942);







let PickupPointsService = class PickupPointsService {
    constructor(companyService, http, baseUrl) {
        this.companyService = companyService;
        this.http = http;
        this.baseUrl = baseUrl;
        this.onPointsChanged = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
        this.STATUSES = [
            {
                label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.ALL',
                value: _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__.FILTER_POINT_STATUS.ALL,
                count: 0,
                classList: 'badge-primary',
                isSelected: true,
                isDisabled: false,
            },
            {
                label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.SHOP',
                value: _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__.FILTER_POINT_STATUS.SHOP,
                count: 0,
                classList: 'badge-primary',
                isSelected: false,
                isDisabled: false,
            },
            {
                label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.WAREHOUSE',
                value: _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__.FILTER_POINT_STATUS.WAREHOUSE,
                count: 0,
                classList: 'badge-light',
                isSelected: false,
                isDisabled: false,
            },
            {
                label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.MAIN_WAREHOUSE',
                value: _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__.FILTER_POINT_STATUS.MAIN_WAREHOUSE,
                count: 0,
                classList: 'badge-primary',
                isSelected: false,
                isDisabled: false,
            },
            {
                label: 'JMART.SETTINGS.PICKUPPOINTS.LISTS.COUNTRY_WAREHOUSE',
                value: _models_pickup_points_model__WEBPACK_IMPORTED_MODULE_0__.FILTER_POINT_STATUS.COUNTRY_WAREHOUSE,
                count: 0,
                classList: 'badge-light',
                isSelected: false,
                isDisabled: false,
            }
        ];
        this.statuses$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(this.STATUSES);
    }
    getStatuses() {
        return this.statuses$;
    }
    getCities() {
        const url = `${this.baseUrl}/gw/dictionary/v1/cities`;
        return this.http.get(url)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(res => res.data));
    }
    getPoints() {
        const url = `${this.baseUrl}/gw/company/v2/my/store-location`;
        return this.http.get(url)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(res => {
            return res.data.data;
        }));
    }
    addPoint(point) {
        const url = `${this.baseUrl}/gw/company/v2/my/store-location`;
        return this.http.post(url, point);
    }
    edit(point, storeLocationId) {
        const url = `${this.baseUrl}/gw/company/v2/my/store-location/${storeLocationId}`;
        return this.http.put(url, point);
    }
    remove(storeLocationId) {
        const url = `${this.baseUrl}/gw/company/v2/my/store-location/${storeLocationId}`;
        return this.http.delete(url);
    }
};
PickupPointsService.ctorParameters = () => [
    { type: _company_company_service__WEBPACK_IMPORTED_MODULE_1__.CompanyService },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__.HttpClient },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_6__.Inject, args: ['JMART_CABINET_BASE_URL',] }] }
];
PickupPointsService = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injectable)({
        providedIn: 'root'
    })
], PickupPointsService);



/***/ }),

/***/ 94291:
/*!***************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/settings-routing.module.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsRoutingModule": () => (/* binding */ SettingsRoutingModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _settings_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.component */ 63180);
/* harmony import */ var _containers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./containers */ 89866);
/* harmony import */ var _models_delivery_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models/delivery.model */ 48873);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components */ 10813);
/* harmony import */ var _jmart_cabinet_components_jmart_cabinet_layout_jmart_cabinet_layout_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @jmart-cabinet/components/jmart-cabinet-layout/jmart-cabinet-layout.component */ 18232);








const routes = [
    {
        path: '',
        component: _jmart_cabinet_components_jmart_cabinet_layout_jmart_cabinet_layout_component__WEBPACK_IMPORTED_MODULE_4__.JmartCabinetLayoutComponent,
        children: [
            {
                path: '',
                component: _settings_component__WEBPACK_IMPORTED_MODULE_0__.SettingsComponent,
                data: {
                    title: 'SETTINGS.TITLE',
                },
                children: [
                    // {
                    //   path: 'information',
                    //   component: InformationComponent,
                    // },
                    // {
                    //   path: 'pickup-points',
                    //   component: PickupPointsComponent
                    // },
                    {
                        path: 'delivery',
                        component: _containers__WEBPACK_IMPORTED_MODULE_1__.DeliveryComponent,
                        children: [
                            {
                                path: 'city',
                                component: _components__WEBPACK_IMPORTED_MODULE_3__.DeliveryListComponent,
                                data: {
                                    category: _models_delivery_model__WEBPACK_IMPORTED_MODULE_2__.DELIVERY_CATEGORY.BY_CITY,
                                }
                            },
                            {
                                path: 'intercity',
                                component: _components__WEBPACK_IMPORTED_MODULE_3__.DeliveryListComponent,
                                data: {
                                    category: _models_delivery_model__WEBPACK_IMPORTED_MODULE_2__.DELIVERY_CATEGORY.BY_INTERCITY,
                                }
                            },
                            {
                                path: '**',
                                redirectTo: 'city',
                            },
                        ]
                    },
                    {
                        path: 'schedule',
                        component: _containers__WEBPACK_IMPORTED_MODULE_1__.ScheduleComponent
                    },
                    {
                        path: 'users',
                        component: _containers__WEBPACK_IMPORTED_MODULE_1__.UsersComponent
                    },
                    {
                        path: '**',
                        redirectTo: 'delivery',
                    },
                ],
            },
        ],
    },
];
let SettingsRoutingModule = class SettingsRoutingModule {
};
SettingsRoutingModule = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.NgModule)({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_7__.RouterModule.forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_7__.RouterModule],
    })
], SettingsRoutingModule);



/***/ }),

/***/ 63180:
/*!**********************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/settings.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsComponent": () => (/* binding */ SettingsComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _settings_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.component.html?ngResource */ 26404);
/* harmony import */ var _settings_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.component.scss?ngResource */ 2162);
/* harmony import */ var _analytics_services_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @analytics/services/manager */ 46155);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);





let SettingsComponent = class SettingsComponent {
    constructor(analytics) {
        this.analytics = analytics;
    }
    ngOnInit() {
        this.analytics.logEvent('JMartDelivery_Start', { version: 1 });
    }
};
SettingsComponent.ctorParameters = () => [
    { type: _analytics_services_manager__WEBPACK_IMPORTED_MODULE_2__.AnalyticsManagerAbstract }
];
SettingsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
        selector: 'j-jmart-settings',
        template: _settings_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
        styles: [_settings_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__]
    })
], SettingsComponent);



/***/ }),

/***/ 10083:
/*!*******************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/settings.module.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsModule": () => (/* binding */ SettingsModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/shared.module */ 44466);
/* harmony import */ var _settings_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.component */ 63180);
/* harmony import */ var _settings_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings-routing.module */ 94291);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components */ 10813);
/* harmony import */ var _containers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./containers */ 89866);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modals */ 9419);
/* harmony import */ var ngx_file_drop__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ngx-file-drop */ 50157);
/* harmony import */ var _pipes_maskPrefixPhone_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pipes/maskPrefixPhone.pipe */ 98249);
/* harmony import */ var _components_j_table_j_table_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/j-table/j-table.component */ 15573);
/* harmony import */ var _components_j_table_get_template_directive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/j-table/get-template.directive */ 53677);
/* harmony import */ var _components_select_city_select_city_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/select-city/select-city.component */ 50551);
/* harmony import */ var _containers_forms_create_delivery_form_create_delivery_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./containers/forms/create-delivery.form/create-delivery.component */ 13145);
/* harmony import */ var _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/checkbox/checkbox.component */ 37373);
/* harmony import */ var _components_delivery_price_delivery_price_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/delivery-price/delivery-price.component */ 31763);
/* harmony import */ var _components_j_tole_work_regime_j_tole_work_regime__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/j-tole-work-regime/j-tole-work-regime */ 82047);
/* harmony import */ var _modals_remove_delivery_modal_remove_delivery_modal_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modals/remove-delivery-modal/remove-delivery-modal.component */ 45286);
/* harmony import */ var _pipes_filterPoints_pipe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pipes/filterPoints.pipe */ 82647);
/* harmony import */ var _jmart_cabinet_components_input_autocomplete_input_autocomplete_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @jmart-cabinet/components/input-autocomplete/input-autocomplete.component */ 7114);
/* harmony import */ var _pipes_number_space_format_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pipes/number-space-format.pipe */ 86567);
























let SettingsModule = class SettingsModule {
};
SettingsModule = (0,tslib__WEBPACK_IMPORTED_MODULE_18__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_19__.NgModule)({
        declarations: [
            _settings_component__WEBPACK_IMPORTED_MODULE_1__.SettingsComponent,
            _containers__WEBPACK_IMPORTED_MODULE_4__.SETTINGS_CONTAINERS,
            _components__WEBPACK_IMPORTED_MODULE_3__.SETTINGS_COMPONENTS,
            _modals__WEBPACK_IMPORTED_MODULE_5__.SETTINGS_MODALS,
            _pipes_maskPrefixPhone_pipe__WEBPACK_IMPORTED_MODULE_6__.MaskPrefixPhonePipe,
            _pipes_filterPoints_pipe__WEBPACK_IMPORTED_MODULE_15__.FilterPointsPipe,
            _pipes_number_space_format_pipe__WEBPACK_IMPORTED_MODULE_17__.NumberSpaceFormatPipe,
            _components_j_table_j_table_component__WEBPACK_IMPORTED_MODULE_7__.JTableComponent,
            _components_j_table_get_template_directive__WEBPACK_IMPORTED_MODULE_8__.GetTemplateDirective,
            _components_select_city_select_city_component__WEBPACK_IMPORTED_MODULE_9__.SelectCityComponent,
            _containers_forms_create_delivery_form_create_delivery_component__WEBPACK_IMPORTED_MODULE_10__.CreateDeliveryFormComponent,
            _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_11__.CheckboxComponent,
            _components_delivery_price_delivery_price_component__WEBPACK_IMPORTED_MODULE_12__.DeliveryPriceComponent,
            _components_j_tole_work_regime_j_tole_work_regime__WEBPACK_IMPORTED_MODULE_13__.JToleWorkRegimeComponent,
            _modals_remove_delivery_modal_remove_delivery_modal_component__WEBPACK_IMPORTED_MODULE_14__.RemoveDeliveryModalComponent,
            _jmart_cabinet_components_input_autocomplete_input_autocomplete_component__WEBPACK_IMPORTED_MODULE_16__.InputAutocompleteComponent,
        ],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_20__.CommonModule, _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule, _settings_routing_module__WEBPACK_IMPORTED_MODULE_2__.SettingsRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_21__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_21__.ReactiveFormsModule, ngx_file_drop__WEBPACK_IMPORTED_MODULE_22__.NgxFileDropModule],
        exports: [_containers__WEBPACK_IMPORTED_MODULE_4__.SETTINGS_CONTAINERS],
        providers: [
            _pipes_number_space_format_pipe__WEBPACK_IMPORTED_MODULE_17__.NumberSpaceFormatPipe,
        ]
    })
], SettingsModule);



/***/ }),

/***/ 49134:
/*!*******************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/utils/getRuDays.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRuDays": () => (/* binding */ getRuDays)
/* harmony export */ });
const getRuDays = (value, returnValue = false) => {
    const daysCount = parseInt(value);
    const n1 = Math.abs(daysCount) % 100;
    const n2 = n1 % 10;
    if (n1 > 10 && n1 < 20) {
        return ' дней';
    }
    if (n2 > 1 && n2 < 5) {
        return ' дня';
    }
    if (n2 == 1) {
        return ' день';
    }
    return ' дней';
};


/***/ }),

/***/ 45681:
/*!**********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/components/input-autocomplete/input-autocomplete.component.scss?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

module.exports = ".input-autocomplete__options {\n  position: absolute;\n  z-index: 1000000;\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n}\n.input-autocomplete__options .list-group-item {\n  cursor: pointer;\n}\n.input-autocomplete__options .list-group-item:hover {\n  background: #f6f7f8;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 31744:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/checkbox/checkbox.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = ".custom-checkbox label:before {\n  border: 2px solid #D6DADF;\n  border-radius: 4px;\n}\n.custom-checkbox input[type=checkbox]:checked + label:before {\n  border-color: #ef5630;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 92325:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-list/delivery-list.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-list__search {\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n  background-color: #f6f7f8;\n  padding: 1rem 1rem;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGl2ZXJ5LWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSw2R0FBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7QUFERiIsImZpbGUiOiJkZWxpdmVyeS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuLmRlbGl2ZXJ5LWxpc3RfX3NlYXJjaCB7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYigwIDAgMCAvIDQlKSwgMHB4IDBweCAycHggcmdiKDAgMCAwIC8gNiUpLCAwcHggNHB4IDhweCByZ2IoMCAwIDAgLyA0JSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbTtcbn1cbiJdfQ== */";

/***/ }),

/***/ 60522:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-price/delivery-price.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-price__amount-input {\n  width: 30%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGl2ZXJ5LXByaWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksVUFBQTtBQUFSIiwiZmlsZSI6ImRlbGl2ZXJ5LXByaWNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbGl2ZXJ5LXByaWNlIHtcbiAgICAmX19hbW91bnQtaW5wdXQge1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgIH1cbn0iXX0= */";

/***/ }),

/***/ 33201:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-table/delivery-table.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-table__column-header {\n  font-size: 12px;\n  color: #666c72;\n}\n.delivery-table--label {\n  font-size: 14px;\n}\n.delivery-table__empty-cell {\n  color: #b7bec5;\n  font-size: 1.25rem;\n}\n.edit-btn {\n  cursor: pointer;\n}\n.table {\n  background-color: #ffffff;\n  border-radius: 0 0 12px 12px;\n}\n.table__header {\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  color: #666c72;\n  border-bottom: 1px solid rgba(183, 190, 197, 0.5);\n}\n.table__header-item {\n  padding: 1rem;\n  margin: 0;\n  text-align: start;\n}\n.table__body {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(183, 190, 197, 0.5);\n}\n.table__body-item {\n  padding: 1rem;\n  margin: 0;\n  text-align: start;\n  font-size: 0.875rem;\n  line-height: 1.125rem;\n  color: rgba(26, 28, 31, 0.95);\n}\n.table__body:last-child {\n  border-radius: 0 0 12px 12px;\n  border-bottom: 1px solid transparent;\n}\n.working-time:not(:last-child) {\n  margin-bottom: 12px;\n}\n.working-days {\n  display: block;\n  font-weight: 500;\n}\n.working-hours {\n  display: block;\n  font-size: 0.75rem;\n  color: rgba(102, 108, 114, 0.95);\n}\n.price,\n.estimated-type {\n  color: #1A1C1F;\n  opacity: 0.95;\n  font-weight: 500;\n}\n.range,\n.estimated-time {\n  color: #666C72;\n  opacity: 0.95;\n  font-size: 0.75rem;\n}\n.estimated {\n  display: block;\n}\n.edit-btn svg {\n  fill: #B7BEC5;\n}\n.edit-btn:hover svg {\n  fill: #EF5630;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 43755:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-logo/information-logo.component.scss?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = ".logo {\n  width: 56px;\n  height: 56px;\n  background: #fff;\n  border: 2px dashed #d6dadf;\n  border-radius: 8px;\n  color: #b7bec5;\n  position: relative;\n}\n\n.has-logo {\n  border: 1px solid #d6dadf;\n  border-radius: 8px;\n}\n\n.has-not-logo {\n  border: 2px dashed #d6dadf;\n  border-radius: 8px;\n  color: #b7bec5;\n}\n\n.has-not-logo:hover {\n  cursor: pointer;\n  color: transparent;\n  background-image: url('camera.svg');\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n}\n\n.logo-img {\n  width: 54px;\n  height: 54px;\n  border-radius: 8px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 25761:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-main/information-main.component.scss?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = ".main {\n  margin-bottom: 40px;\n}\n.main__title {\n  line-height: 30px;\n}\n.main__subtitle {\n  font-size: 14px;\n  line-height: 18px;\n  color: #666c72;\n}\n.left-col {\n  padding: 0 24px 0 15px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZm9ybWF0aW9uLW1haW4uY29tcG9uZW50LnNjc3MiLCIuLi8uLi8uLi8uLi8uLi8uLi9zY3NzL192YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLG1CQUFBO0FBREY7QUFHRTtFQUNFLGlCQUFBO0FBREo7QUFJRTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNDQ087QURIWDtBQU1BO0VBQ0Usc0JBQUE7QUFIRiIsImZpbGUiOiJpbmZvcm1hdGlvbi1tYWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuLm1haW4ge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuXG4gICZfX3RpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgfVxuXG4gICZfX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgY29sb3I6ICRncmF5LTYwMDtcbiAgfVxufVxuXG4ubGVmdC1jb2wge1xuICBwYWRkaW5nOiAwIDI0cHggMCAxNXB4O1xufVxuIiwiLy8gVmFyaWFibGVzXHJcbi8vXHJcbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxyXG4vLyBjb25zaXN0ZW50IG5hbWluZy4gRXg6ICRuYXYtbGluay1kaXNhYmxlZC1jb2xvciBhbmQgJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14cy5cclxuXHJcbi8vIENvbG9yIHN5c3RlbVxyXG5cclxuJHdoaXRlOiAjZmZmO1xyXG4kZ3JheS0xMDA6ICNmYWY3Zjc7XHJcbiRncmF5LTIwMDogI2Y2ZjdmODtcclxuJGdyYXktMzAwOiAjZWNlZWYxO1xyXG4kZ3JheS00MDA6ICNkNmRhZGY7XHJcbiRncmF5LTUwMDogI2I3YmVjNTtcclxuJGdyYXktNjAwOiAjNjY2YzcyO1xyXG4kZ3JheS03MDA6ICM0NzRiNTI7XHJcbiRncmF5LTgwMDogI2U5ZWNmMTtcclxuJGdyYXktOTAwOiAjZGJkZmUyO1xyXG4kZ3JheS0xMDAwOiAjODI4MjgyO1xyXG4kYmxhY2s6ICMxYTFjMWY7XHJcblxyXG4kZ3JheXM6ICgpO1xyXG4kZ3JheXM6IG1hcC1tZXJnZShcclxuICAoXHJcbiAgICAnMTAwJzogJGdyYXktMTAwLFxyXG4gICAgJzIwMCc6ICRncmF5LTIwMCxcclxuICAgICczMDAnOiAkZ3JheS0zMDAsXHJcbiAgICAnNDAwJzogJGdyYXktNDAwLFxyXG4gICAgJzUwMCc6ICRncmF5LTUwMCxcclxuICAgICc2MDAnOiAkZ3JheS02MDAsXHJcbiAgICAnNzAwJzogJGdyYXktNzAwLFxyXG4gICAgJzgwMCc6ICRncmF5LTgwMCxcclxuICApLFxyXG4gICRncmF5c1xyXG4pO1xyXG5cclxuJGJsdWU6ICMyMDQxNzc7XHJcbiRibHVlLWxpZ2h0OiAjMTU4NmJiO1xyXG4kYmx1ZS13aGl0ZTogI2Y1ZjlmZDtcclxuJG9yYW5nZTogI2VmNTYzMDtcclxuJG9yYW5nZS1kYXJrOiAjZDQzZTE5O1xyXG4kb3JhbmdlLWxpZ2h0OiAjZjdhYjk4O1xyXG4keWVsbG93OiAjZWY4ZjAwO1xyXG4kZ3JlZW46ICMyMzlhNTQ7XHJcbiRncmVlbi1saWdodDogIzc0YmE3MjtcclxuJHJlZDogI2ZmMDAwMDtcclxuJHJlZC1saWdodDogI2ZmZWZlZjtcclxuXHJcbiRncmF5OiAkZ3JheS01MDA7XHJcbiRncmF5LWRhcms6ICRncmF5LTYwMDtcclxuJGdyYXktbGlnaHQ6ICRncmF5LTQwMDtcclxuXHJcbiRjb2xvcnM6ICgpO1xyXG4kY29sb3JzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJ2JsdWUnOiAkYmx1ZSxcclxuICAgICdibHVlLWxpZ2h0JzogJGJsdWUtbGlnaHQsXHJcbiAgICAnYmx1ZS13aGl0ZSc6ICRibHVlLXdoaXRlLFxyXG4gICAgJ29yYW5nZSc6ICRvcmFuZ2UsXHJcbiAgICAnb3JhbmdlLWRhcmsnOiAkb3JhbmdlLWRhcmssXHJcbiAgICAnb3JhbmdlLWxpZ2h0JzogJG9yYW5nZS1saWdodCxcclxuICAgICd5ZWxsb3cnOiAkeWVsbG93LFxyXG4gICAgJ2dyZWVuJzogJGdyZWVuLFxyXG4gICAgJ2dyZWVuLWxpZ2h0JzogJGdyZWVuLWxpZ2h0LFxyXG4gICAgJ3JlZCc6ICRyZWQsXHJcbiAgICAncmVkLWxpZ2h0JzogJHJlZC1saWdodCxcclxuICAgICdibGFjayc6ICRibGFjayxcclxuICAgICdibGFjay1saWdodCc6ICRncmF5LTcwMCxcclxuICAgICdncmF5JzogJGdyYXktNTAwLFxyXG4gICAgJ2dyYXktZGFyayc6ICRncmF5LTYwMCxcclxuICAgICdncmF5LWxpZ2h0JzogJGdyYXktNDAwLFxyXG4gICksXHJcbiAgJGNvbG9yc1xyXG4pO1xyXG5cclxuJHByaW1hcnk6ICRvcmFuZ2U7XHJcbiRzZWNvbmRhcnk6ICRibHVlO1xyXG4kc3VjY2VzczogJGdyZWVuO1xyXG4kaW5mbzogJGJsdWUtbGlnaHQ7XHJcbiR3YXJuaW5nOiAkeWVsbG93O1xyXG4kZGFuZ2VyOiAkcmVkO1xyXG4kbGlnaHQ6ICRncmF5LTUwMDtcclxuJGRhcms6ICRibGFjaztcclxuXHJcbiR0aGVtZS1jb2xvcnM6ICgpO1xyXG4kdGhlbWUtY29sb3JzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcclxuICAgICdzZWNvbmRhcnknOiAkc2Vjb25kYXJ5LFxyXG4gICAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAgICdpbmZvJzogJGluZm8sXHJcbiAgICAnd2FybmluZyc6ICR3YXJuaW5nLFxyXG4gICAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgICAnbGlnaHQnOiAkbGlnaHQsXHJcbiAgICAnZGFyayc6ICRkYXJrLFxyXG4gICAgJ3doaXRlJzogJHdoaXRlLFxyXG4gICksXHJcbiAgJHRoZW1lLWNvbG9yc1xyXG4pO1xyXG5cclxuLy8gJHRleHQtY29sb3JzOiAoKTtcclxuLy8gJHRleHQtY29sb3JzOiBtYXAtbWVyZ2UoXHJcbi8vICAgKFxyXG4vLyAgICAgJ2RlZmF1bHQnOiAkYmxhY2ssXHJcbi8vICAgICAnbG93LWNvbnRyYXN0JzogJGdyYXktNjAwLFxyXG4vLyAgICAgJ2luZm8nOiAkZ3JheS01MDAsXHJcbi8vICAgICAnZXJyb3InOiAkcmVkLFxyXG4vLyAgICAgJ2xpbmsnOiAkYmx1ZSxcclxuLy8gICAgICdiYWxhbmNlJzogJGdyZWVuLFxyXG4vLyAgICAgJ2JhbGFuY2UtY29pbnMnOiAkZ3JlZW4tbGlnaHQsXHJcbi8vICAgKSxcclxuLy8gICAkdGV4dC1jb2xvcnNcclxuLy8gKTtcclxuXHJcbi8vIFNwYWNpbmdcclxuLy9cclxuLy8gQ29udHJvbCB0aGUgZGVmYXVsdCBzdHlsaW5nIG9mIG1vc3QgQm9vdHN0cmFwIGVsZW1lbnRzIGJ5IG1vZGlmeWluZyB0aGVzZVxyXG4vLyB2YXJpYWJsZXMuIE1vc3RseSBmb2N1c2VkIG9uIHNwYWNpbmcuXHJcbi8vIFlvdSBjYW4gYWRkIG1vcmUgZW50cmllcyB0byB0aGUgJHNwYWNlcnMgbWFwLCBzaG91bGQgeW91IG5lZWQgbW9yZSB2YXJpYXRpb24uXHJcblxyXG4kc3BhY2VyOiAxcmVtO1xyXG4kc3BhY2VyczogKCk7XHJcbiRzcGFjZXJzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgMDogMCxcclxuICAgIC8vIDBweFxyXG4gICAgMTogJHNwYWNlciAqIDAuMjUsXHJcbiAgICAvLyA0cHggeHhzLFxyXG4gICAgMjogJHNwYWNlciAqIDAuNSxcclxuICAgIC8vIDhweCB4cyxcclxuICAgIDM6ICRzcGFjZXIsXHJcbiAgICAvLyAxNnB4IHNtXHJcbiAgICA0OiAkc3BhY2VyICogMS41LFxyXG4gICAgLy8gMjRweCBtZCxcclxuICAgIDU6ICRzcGFjZXIgKiAyLFxyXG4gICAgLy8gMzJweCBsZyxcclxuICAgIDY6ICRzcGFjZXIgKiAyLjUsXHJcbiAgICAvLyA0MHB4IHhsLFxyXG4gICAgNzogJHNwYWNlciAqIDMuNSxcclxuICAgIC8vIDU2cHggeHhsXHJcbiAgICA4OiAkc3BhY2VyICogNCxcclxuICAgIC8vIDY0cHggeHhsXHJcbiAgKSxcclxuICAkc3BhY2Vyc1xyXG4pO1xyXG5cclxuLy8gQm9keVxyXG4vL1xyXG4vLyBTZXR0aW5ncyBmb3IgdGhlIGA8Ym9keT5gIGVsZW1lbnQuXHJcblxyXG4kYm9keS1iZzogJHdoaXRlO1xyXG4kYm9keS1jb2xvcjogJGRhcms7XHJcblxyXG4vLyBMaW5rc1xyXG4vL1xyXG4vLyBTdHlsZSBhbmNob3IgZWxlbWVudHMuXHJcblxyXG4kbGluay1jb2xvcjogdGhlbWUtY29sb3IoJ3ByaW1hcnknKTtcclxuJGxpbmstZGVjb3JhdGlvbjogbm9uZTtcclxuJGxpbmstaG92ZXItY29sb3I6ICRvcmFuZ2UtZGFyaztcclxuJGxpbmstaG92ZXItZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbi8vIFBhcmFncmFwaHNcclxuLy9cclxuLy8gU3R5bGUgcCBlbGVtZW50LlxyXG5cclxuJHBhcmFncmFwaC1tYXJnaW4tYm90dG9tOiAxcmVtO1xyXG5cclxuLy8gR3JpZCBicmVha3BvaW50c1xyXG4vL1xyXG4vLyBEZWZpbmUgdGhlIG1pbmltdW0gZGltZW5zaW9ucyBhdCB3aGljaCB5b3VyIGxheW91dCB3aWxsIGNoYW5nZSxcclxuLy8gYWRhcHRpbmcgdG8gZGlmZmVyZW50IHNjcmVlbiBzaXplcywgZm9yIHVzZSBpbiBtZWRpYSBxdWVyaWVzLlxyXG5cclxuJGdyaWQtYnJlYWtwb2ludHM6IChcclxuICB4czogMCxcclxuICBzbTogNjcwcHgsXHJcbiAgbWQ6IDk2MHB4LFxyXG4gIGxnOiAxMjgwcHgsXHJcbiAgeGw6IDE5MjBweCxcclxuKTtcclxuXHJcbi8vIEdyaWQgY29udGFpbmVyc1xyXG4vL1xyXG4vLyBEZWZpbmUgdGhlIG1heGltdW0gd2lkdGggb2YgYC5jb250YWluZXJgIGZvciBkaWZmZXJlbnQgc2NyZWVuIHNpemVzLlxyXG5cclxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXHJcbiAgc206IDU0MHB4LFxyXG4gIG1kOiA3MjBweCxcclxuICBsZzogOTYwcHgsXHJcbiAgeGw6IDEyODBweCxcclxuKTtcclxuXHJcbi8vIEdyaWQgY29sdW1uc1xyXG4vL1xyXG4vLyBTZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIGFuZCBzcGVjaWZ5IHRoZSB3aWR0aCBvZiB0aGUgZ3V0dGVycy5cclxuXHJcbiRncmlkLWNvbHVtbnM6IDEyO1xyXG4kZ3JpZC1ndXR0ZXItd2lkdGg6IDMwcHg7XHJcbiRncmlkLXJvdy1jb2x1bW5zOiA2O1xyXG5cclxuLy8gQ29tcG9uZW50c1xyXG4vL1xyXG4vLyBEZWZpbmUgY29tbW9uIHBhZGRpbmcgYW5kIGJvcmRlciByYWRpdXMgc2l6ZXMgYW5kIG1vcmUuXHJcblxyXG4kbGluZS1oZWlnaHQtbGc6IDEuNTtcclxuJGxpbmUtaGVpZ2h0LXNtOiAxLjU7XHJcblxyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRib3JkZXItY29sb3I6ICRncmF5LTMwMDtcclxuXHJcbiRib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiRib3JkZXItcmFkaXVzLW1kOiByZW15KDEyKTtcclxuJGJvcmRlci1yYWRpdXMtbGc6IDIuNXJlbTtcclxuJGJvcmRlci1yYWRpdXMtc206IDAuMnJlbTtcclxuXHJcbi8vIEwwXHJcbiRib3gtc2hhZG93LXhzOiAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4vLyBMMVxyXG4kYm94LXNoYWRvdy1zbTogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDBweCAycHggcmdiYSgwLCAwLCAwLCAwLjA2KSxcclxuICAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG4vLyBMMlxyXG4kYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjA0KSxcclxuICAwcHggMTBweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7XHJcbi8vIEwzXHJcbiRib3gtc2hhZG93LWxnOiAwcHggMTRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XHJcbi8vIEw0XHJcbiRib3gtc2hhZG93LXhsOiAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDQpLFxyXG4gIDBweCAxNnB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDI0cHggMzJweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICR3aGl0ZTtcclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6IHRoZW1lLWNvbG9yKCdwcmltYXJ5Jyk7XHJcblxyXG4kdHJhbnNpdGlvbi1iYXNlOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcclxuJHRyYW5zaXRpb24tZmFkZTogb3BhY2l0eSAwLjE1cyBsaW5lYXI7XHJcbiR0cmFuc2l0aW9uLWNvbGxhcHNlOiBoZWlnaHQgMC4zNXMgZWFzZTtcclxuJHRyYW5zaXRpb24tbWF4LWhlaWdodDogYWxsIDAuNnMgZWFzZTtcclxuXHJcbi8vIFR5cG9ncmFwaHlcclxuLy9cclxuLy8gRm9udCwgbGluZS1oZWlnaHQsIGFuZCBjb2xvciBmb3IgYm9keSB0ZXh0LCBoZWFkaW5ncywgYW5kIG1vcmUuXHJcblxyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiRmb250LWZhbWlseS1tb25vc3BhY2U6IFNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcyxcclxuICAnTGliZXJhdGlvbiBNb25vJywgJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlICFkZWZhdWx0O1xyXG4kZm9udC1mYW1pbHktYmFzZTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XHJcblxyXG4kZm9udC1zaXplLWJhc2U6IDFyZW07IC8vIDE2cHhcclxuJGZvbnQtc2l6ZS1sZzogJGZvbnQtc2l6ZS1iYXNlICogMS4yNSAhZGVmYXVsdDsgLy8gMjBweFxyXG4kZm9udC1zaXplLXNtOiAkZm9udC1zaXplLWJhc2UgKiAwLjg3NSAhZGVmYXVsdDsgLy8gMTRweFxyXG4kZm9udC1zaXplLXhzOiByZW15KDEyKTtcclxuXHJcbiRmb250LXdlaWdodC1saWdodGVyOiBsaWdodGVyO1xyXG4kZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcclxuJGZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwO1xyXG4kZm9udC13ZWlnaHQtYm9sZDogNTAwO1xyXG4kZm9udC13ZWlnaHQtYm9sZGVyOiBib2xkZXI7XHJcblxyXG4kZm9udC13ZWlnaHQtYmFzZTogJGZvbnQtd2VpZ2h0LW5vcm1hbDtcclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNTtcclxuXHJcbiRoMS1mb250LXNpemU6IHJlbXkoMzApO1xyXG4kaDItZm9udC1zaXplOiByZW15KDI2KTtcclxuJGgzLWZvbnQtc2l6ZTogcmVteSgyNCk7XHJcbiRoNC1mb250LXNpemU6IHJlbXkoMjIpO1xyXG4kaDUtZm9udC1zaXplOiByZW15KDIwKTtcclxuJGg2LWZvbnQtc2l6ZTogcmVteSgxOCk7XHJcblxyXG4kaDEtZm9udC1zaXplczogKFxyXG4gIHhzOiAzMHB4LFxyXG4gIHNtOiAzNnB4LFxyXG4gIG1kOiA0OHB4LFxyXG4gIGxnOiA0OHB4LFxyXG4gIHhsOiA2MHB4LFxyXG4pO1xyXG5cclxuLy8gaDIgc2l6ZXNcclxuJGgyLWZvbnQtc2l6ZXM6IChcclxuICB4czogMjZweCxcclxuICBzbTogMzBweCxcclxuICBtZDogNDBweCxcclxuICBsZzogNDRweCxcclxuICB4bDogNTRweCxcclxuKTtcclxuXHJcbi8vIGgzIHNpemVzXHJcbiRoMy1mb250LXNpemVzOiAoXHJcbiAgeHM6IDI0cHgsXHJcbiAgc206IDI2cHgsXHJcbiAgbWQ6IDMycHgsXHJcbiAgbGc6IDM2cHgsXHJcbiAgeGw6IDQ0cHgsXHJcbik7XHJcblxyXG4vLyBoNCBzaXplc1xyXG4kaDQtZm9udC1zaXplczogKFxyXG4gIHhzOiAyMnB4LFxyXG4gIHNtOiAyNHB4LFxyXG4gIG1kOiAyNHB4LFxyXG4gIGxnOiAyOHB4LFxyXG4gIHhsOiAyOHB4LFxyXG4pO1xyXG5cclxuLy8gaDUgc2l6ZXNcclxuJGg1LWZvbnQtc2l6ZXM6IChcclxuICB4czogMjBweCxcclxuICBzbTogMjJweCxcclxuICBtZDogMjJweCxcclxuICBsZzogMjRweCxcclxuICB4bDogMjRweCxcclxuKTtcclxuXHJcbi8vIGg2IHNpemVzXHJcbiRoNi1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE4cHgsXHJcbiAgc206IDE4cHgsXHJcbiAgbWQ6IDE4cHgsXHJcbiAgbGc6IDIwcHgsXHJcbiAgeGw6IDIwcHgsXHJcbik7XHJcblxyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAvIDIgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1mb250LWZhbWlseTogbnVsbDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA1MDA7XHJcbiRoZWFkaW5ncy1mb250LXdlaWdodC1saWdodDogNDAwO1xyXG4kaGVhZGluZ3MtbGluZS1oZWlnaHQ6IDEuNTtcclxuJGhlYWRpbmdzLWNvbG9yOiBudWxsO1xyXG5cclxuJHAwLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTZweCxcclxuICBzbTogMTZweCxcclxuICBtZDogMTZweCxcclxuICBsZzogMTZweCxcclxuICB4bDogMTZweCxcclxuKTtcclxuXHJcbiRwMS1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE2cHgsXHJcbiAgc206IDE2cHgsXHJcbiAgbWQ6IDE4cHgsXHJcbiAgbGc6IDE4cHgsXHJcbiAgeGw6IDE4cHgsXHJcbik7XHJcblxyXG4kcDItZm9udC1zaXplczogKFxyXG4gIHhzOiAxNHB4LFxyXG4gIHNtOiAxNHB4LFxyXG4gIG1kOiAxNnB4LFxyXG4gIGxnOiAxNnB4LFxyXG4gIHhsOiAxNnB4LFxyXG4pO1xyXG5cclxuJHAzLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTJweCxcclxuICBzbTogMTJweCxcclxuICBtZDogMTRweCxcclxuICBsZzogMTRweCxcclxuICB4bDogMTRweCxcclxuKTtcclxuXHJcbiRwNC1mb250LXNpemVzOiAoXHJcbiAgeHM6IDEwcHgsXHJcbiAgc206IDEwcHgsXHJcbiAgbWQ6IDEycHgsXHJcbiAgbGc6IDEycHgsXHJcbiAgeGw6IDEycHgsXHJcbik7XHJcblxyXG4kc21hbGwtZm9udC1zaXplOiAkZm9udC1zaXplLXhzO1xyXG5cclxuJHRleHQtbXV0ZWQ6ICRncmF5LTYwMDtcclxuXHJcbi8vICRibG9ja3F1b3RlLXNtYWxsLWNvbG9yOiAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGJsb2NrcXVvdGUtc21hbGwtZm9udC1zaXplOiAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGJsb2NrcXVvdGUtZm9udC1zaXplOiAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS4yNSAhZGVmYXVsdDtcclxuXHJcbi8vICRoci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRoci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkbWFyay1wYWRkaW5nOiAgICAgICAgICAgICAgICAuMmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGR0LWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAka2JkLWJveC1zaGFkb3c6ICAgICAgICAgICAgICBpbnNldCAwIC0uMXJlbSAwIHJnYmEoJGJsYWNrLCAuMjUpICFkZWZhdWx0O1xyXG4vLyAkbmVzdGVkLWtiZC1mb250LXdlaWdodDogICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWlubGluZS1wYWRkaW5nOiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG1hcmstYmc6ICAgICAgICAgICAgICAgICAgICAgI2ZjZjhlMyAhZGVmYXVsdDtcclxuXHJcbi8vICRoci1tYXJnaW4teTogICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBUYWJsZXNcclxuLy8gLy9cclxuLy8gLy8gQ3VzdG9taXplcyB0aGUgYC50YWJsZWAgY29tcG9uZW50IHdpdGggYmFzaWMgdmFsdWVzLCBlYWNoIHVzZWQgYWNyb3NzIGFsbCB0YWJsZSB2YXJpYXRpb25zLlxyXG5cclxuLy8gJHRhYmxlLWNlbGwtcGFkZGluZzogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtY2VsbC1wYWRkaW5nLXNtOiAgICAgICAuM3JlbSAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1jb2xvcjogICAgICAgICAgICAgICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYmc6ICAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYWNjZW50LWJnOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJHRhYmxlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtaG92ZXItYmc6ICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1hY3RpdmUtYmc6ICAgICAgICAgICAgICR0YWJsZS1ob3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ib3JkZXItY29sb3I6ICAgICAgICAgICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtaGVhZC1iZzogICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1oZWFkLWNvbG9yOiAgICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1kYXJrLWNvbG9yOiAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYmc6ICAgICAgICAgICAgICAgJGdyYXktODAwICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1hY2NlbnQtYmc6ICAgICAgICByZ2JhKCR3aGl0ZSwgLjA1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstaG92ZXItY29sb3I6ICAgICAgJHRhYmxlLWRhcmstY29sb3IgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWhvdmVyLWJnOiAgICAgICAgIHJnYmEoJHdoaXRlLCAuMDc1KSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYm9yZGVyLWNvbG9yOiAgICAgbGlnaHRlbigkdGFibGUtZGFyay1iZywgNy41JSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtc3RyaXBlZC1vcmRlcjogICAgICAgICBvZGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtY2FwdGlvbi1jb2xvcjogICAgICAgICAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuXHJcbi8vICR0YWJsZS1iZy1sZXZlbDogICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYm9yZGVyLWxldmVsOiAgICAgICAgICAtNiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEJ1dHRvbnMgKyBGb3Jtc1xyXG4vLyAvL1xyXG4vLyAvLyBTaGFyZWQgdmFyaWFibGVzIHRoYXQgYXJlIHJlYXNzaWduZWQgdG8gYCRpbnB1dC1gIGFuZCBgJGJ0bi1gIHNwZWNpZmljIHZhcmlhYmxlcy5cclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15OiAxcmVtO1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteDogMS43NXJlbTtcclxuJGlucHV0LWJ0bi1mb250LWZhbWlseTogbnVsbDtcclxuJGlucHV0LWJ0bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS41O1xyXG5cclxuJGlucHV0LWJ0bi1mb2N1cy13aWR0aDogcmVteSgxKTtcclxuJGlucHV0LWJ0bi1mb2N1cy1jb2xvcjogJHByaW1hcnk7XHJcbiRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjI1cmVtO1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogMS4ycmVtO1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc207XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LWxnOiAyLjVyZW07XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAkZm9udC1zaXplLWJhc2U7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQ7XHJcblxyXG4kaW5wdXQtYnRuLWJvcmRlci13aWR0aDogJGJvcmRlci13aWR0aDtcclxuXHJcbi8vIEJ1dHRvbnNcclxuLy9cclxuLy8gRm9yIGVhY2ggb2YgQm9vdHN0cmFwJ3MgYnV0dG9ucywgZGVmaW5lIHRleHQsIGJhY2tncm91bmQsIGFuZCBib3JkZXIgY29sb3IuXHJcblxyXG4kYnRuLXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRidG4tcGFkZGluZy14OiAkaW5wdXQtYnRuLXBhZGRpbmcteDtcclxuJGJ0bi1mb250LWZhbWlseTogJGlucHV0LWJ0bi1mb250LWZhbWlseTtcclxuJGJ0bi1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplO1xyXG4kYnRuLWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0O1xyXG4kYnRuLXdoaXRlLXNwYWNlOiBudWxsOyAvLyBTZXQgdG8gYG5vd3JhcGAgdG8gcHJldmVudCB0ZXh0IHdyYXBwaW5nXHJcblxyXG4kYnRuLXBhZGRpbmcteS1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXktc207XHJcbiRidG4tcGFkZGluZy14LXNtOiAkaW5wdXQtYnRuLXBhZGRpbmcteC1zbTtcclxuJGJ0bi1mb250LXNpemUtc206ICRpbnB1dC1idG4tZm9udC1zaXplLXNtO1xyXG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtO1xyXG5cclxuJGJ0bi1wYWRkaW5nLXktbGc6ICRpbnB1dC1idG4tcGFkZGluZy15LWxnO1xyXG4kYnRuLXBhZGRpbmcteC1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc7XHJcbiRidG4tZm9udC1zaXplLWxnOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZztcclxuJGJ0bi1saW5lLWhlaWdodC1sZzogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZztcclxuXHJcbiRidG4tYm9yZGVyLXdpZHRoOiAkaW5wdXQtYnRuLWJvcmRlci13aWR0aDtcclxuXHJcbiRidG4tZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1ub3JtYWw7XHJcbiRidG4tYm94LXNoYWRvdzogbm9uZTtcclxuJGJ0bi1mb2N1cy13aWR0aDogJGlucHV0LWJ0bi1mb2N1cy13aWR0aDtcclxuJGJ0bi1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c7XHJcbiRidG4tZGlzYWJsZWQtb3BhY2l0eTogMC41O1xyXG4kYnRuLWFjdGl2ZS1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuLy8gJGJ0bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJGJ0bi1ibG9jay1zcGFjaW5nLXk6ICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBBbGxvd3MgZm9yIGN1c3RvbWl6aW5nIGJ1dHRvbiByYWRpdXMgaW5kZXBlbmRlbnRseSBmcm9tIGdsb2JhbCBib3JkZXIgcmFkaXVzXHJcbiRidG4tYm9yZGVyLXJhZGl1czogMTJweDtcclxuJGJ0bi1ib3JkZXItcmFkaXVzLWxnOiAxMnB4O1xyXG4kYnRuLWJvcmRlci1yYWRpdXMtc206IDhweDtcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tYmFzZTtcclxuXHJcbi8vIC8vIEZvcm1zXHJcblxyXG4vLyAkbGFiZWwtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteTtcclxuJGlucHV0LXBhZGRpbmcteDogcmVteSgyMCk7XHJcbiRpbnB1dC1mb250LWZhbWlseTogJGlucHV0LWJ0bi1mb250LWZhbWlseTtcclxuJGlucHV0LWZvbnQtc2l6ZTogJGlucHV0LWJ0bi1mb250LXNpemU7XHJcbiRpbnB1dC1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJhc2U7XHJcbiRpbnB1dC1saW5lLWhlaWdodDogJGlucHV0LWJ0bi1saW5lLWhlaWdodDtcclxuXHJcbi8vICRpbnB1dC1wYWRkaW5nLXktc206ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LXBhZGRpbmcteC1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtZm9udC1zaXplLXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1saW5lLWhlaWdodC1zbTogICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LXBhZGRpbmcteS1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy15LWxnICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtcGFkZGluZy14LWxnOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1mb250LXNpemUtbGc6ICRpbnB1dC1idG4tZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtbGluZS1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1iZzogJHdoaXRlO1xyXG4kaW5wdXQtZGlzYWJsZWQtYmc6ICRncmF5LTIwMDtcclxuXHJcbiRpbnB1dC1jb2xvcjogJGRhcms7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6ICRncmF5LTQwMDtcclxuJGlucHV0LWJvcmRlci13aWR0aDogJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg7XHJcbiRpbnB1dC1ib3gtc2hhZG93OiBub25lO1xyXG5cclxuJGlucHV0LWJvcmRlci1yYWRpdXM6IDhweDtcclxuJGlucHV0LWJvcmRlci1yYWRpdXMtbGc6ICRpbnB1dC1ib3JkZXItcmFkaXVzO1xyXG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1zbTogJGlucHV0LWJvcmRlci1yYWRpdXM7XHJcblxyXG4kaW5wdXQtZm9jdXMtYmc6ICR3aGl0ZTtcclxuJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjogJHByaW1hcnk7XHJcbiRpbnB1dC1mb2N1cy1jb2xvcjogJGlucHV0LWNvbG9yO1xyXG4kaW5wdXQtZm9jdXMtd2lkdGg6ICRpbnB1dC1idG4tZm9jdXMtd2lkdGg7XHJcbiRpbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c7XHJcblxyXG4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICRncmF5LTYwMDtcclxuJGlucHV0LXBsYWludGV4dC1jb2xvcjogJGJvZHktY29sb3I7XHJcblxyXG4vLyAkaW5wdXQtaGVpZ2h0LWJvcmRlcjogICAgICAgICAgICAgICAgICAgJGlucHV0LWJvcmRlci13aWR0aCAqIDIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyOiAgICAgICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIDFlbSwgJGlucHV0LXBhZGRpbmcteSAqIDIpICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyLWhhbGY6ICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIC41ZW0sICRpbnB1dC1wYWRkaW5nLXkpICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LWlubmVyLXF1YXJ0ZXI6ICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodCAqIC4yNWVtLCAkaW5wdXQtcGFkZGluZy15IC8gMikgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtaGVpZ2h0OiA1NnB4O1xyXG4vLyAkaW5wdXQtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAgICAgICAgYWRkKCRpbnB1dC1saW5lLWhlaWdodC1zbSAqIDFlbSwgYWRkKCRpbnB1dC1wYWRkaW5nLXktc20gKiAyLCAkaW5wdXQtaGVpZ2h0LWJvcmRlciwgZmFsc2UpKSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1sZzogICAgICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQtbGcgKiAxZW0sIGFkZCgkaW5wdXQtcGFkZGluZy15LWxnICogMiwgJGlucHV0LWhlaWdodC1ib3JkZXIsIGZhbHNlKSkgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tYmFzZTtcclxuXHJcbi8vICRmb3JtLXRleHQtbWFyZ2luLXRvcDogICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS1jaGVjay1pbnB1dC1ndXR0ZXI6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXk6ICAgICAgICAgICAgIC4zcmVtICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1jaGVjay1pbnB1dC1tYXJnaW4teDogICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tY2hlY2staW5saW5lLW1hcmdpbi14OiAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5saW5lLWlucHV0LW1hcmdpbi14OiAgICAgIC4zMTI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tZ3JpZC1ndXR0ZXItd2lkdGg6ICAgICAgICAgICAgICAgIDEwcHggIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWdyb3VwLW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWNvbG9yOiAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWJnOiAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWZvcm1zLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWd1dHRlcjogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtc3BhY2VyLXg6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWN1cnNvcjogICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemU6ICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1iZzogICAgICAgICAgICRpbnB1dC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmctc2l6ZTogICAgICA1MCUgNTAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJveC1zaGFkb3c6ICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLWNvbG9yOiAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoOiAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWxhYmVsLWNvbG9yOiAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWRpc2FibGVkLWJnOiAgICAgICAgICAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1sYWJlbC1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcjogICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWRpc2FibGVkLWJnOiAgcmdiYSh0aGVtZS1jb2xvcihcInByaW1hcnlcIiksIC41KSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJveC1zaGFkb3c6ICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1mb2N1cy1ib3gtc2hhZG93OiAgICAgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZm9jdXMtYm9yZGVyLWNvbG9yOiAgICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWFjdGl2ZS1jb2xvcjogICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYmc6ICAgICAgICAgICAgbGlnaHRlbigkY29tcG9uZW50LWFjdGl2ZS1iZywgMzUlKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm94LXNoYWRvdzogICAgbm9uZSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBmaWxsPScjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcn0nIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNmwyLjk3NCAyLjk5TDggMi4xOTN6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1iZzogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWNvbG9yOiAgICAgICAgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pY29uLWluZGV0ZXJtaW5hdGU6ICAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc0JyB2aWV3Qm94PScwIDAgNCA0Jz48cGF0aCBzdHJva2U9JyN7JGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1jb2xvcn0nIGQ9J00wIDJoNCcvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1ib3gtc2hhZG93OiAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYm9yZGVyLWNvbG9yOiAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAgNTAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhZGlvLWluZGljYXRvci1pY29uLWNoZWNrZWQ6ICAgICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzMnIGZpbGw9JyN7JGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tc3dpdGNoLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSAqIDEuNzUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tc3dpdGNoLWluZGljYXRvci1ib3JkZXItcmFkaXVzOiAgICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSAvIDIgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tc3dpdGNoLWluZGljYXRvci1zaXplOiAgICAgICAgICAgICAgICAgIHN1YnRyYWN0KCRjdXN0b20tY29udHJvbC1pbmRpY2F0b3Itc2l6ZSwgJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3JkZXItd2lkdGggKiA0KSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteTogJGlucHV0LXBhZGRpbmcteTtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14OiAxLjI1cmVtO1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LWZhbWlseTogJGlucHV0LWZvbnQtZmFtaWx5ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemU6ICRpbnB1dC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodDogJGlucHV0LWhlaWdodDtcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmc6IDEuMjVyZW07IC8vIEV4dHJhIHBhZGRpbmcgdG8gYWNjb3VudCBmb3IgdGhlIHByZXNlbmNlIG9mIHRoZSBiYWNrZ3JvdW5kLWltYWdlIGJhc2VkIGluZGljYXRvclxyXG4kY3VzdG9tLXNlbGVjdC1mb250LXdlaWdodDogJGlucHV0LWZvbnQtd2VpZ2h0ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1saW5lLWhlaWdodDogJGlucHV0LWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1jb2xvcjogJGlucHV0LWNvbG9yICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1kaXNhYmxlZC1iZzogJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1iZy1zaXplOiA4cHggMTBweCAhZGVmYXVsdDsgLy8gSW4gcGl4ZWxzIGJlY2F1c2UgaW1hZ2UgZGltZW5zaW9uc1xyXG4kY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRncmF5LTgwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzUnIHZpZXdCb3g9JzAgMCA0IDUnPjxwYXRoIGZpbGw9JyN7JGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmFja2dyb3VuZDogZXNjYXBlLXN2ZygkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3IpIG5vLXJlcGVhdCByaWdodFxyXG4gICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCBjZW50ZXIgLyAkY3VzdG9tLXNlbGVjdC1iZy1zaXplICFkZWZhdWx0OyAvLyBVc2VkIHNvIHdlIGNhbiBoYXZlIG11bHRpcGxlIGJhY2tncm91bmQgZWxlbWVudHMgKGUuZy4sIGFycm93IGFuZCBmZWVkYmFjayBpY29uKVxyXG5cclxuJGN1c3RvbS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXJpZ2h0OiBhZGQoXHJcbiAgMWVtICogMC43NSxcclxuICAoMiAqICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteSAqIDAuNzUpICsgJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14ICtcclxuICAgICRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nXHJcbikgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tcG9zaXRpb246IGNlbnRlciByaWdodFxyXG4gICgkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggKyAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZykgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tc2l6ZTogJGlucHV0LWhlaWdodC1pbm5lci1oYWxmXHJcbiAgJGlucHV0LWhlaWdodC1pbm5lci1oYWxmICFkZWZhdWx0O1xyXG5cclxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLXdpZHRoOiAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItY29sb3I6ICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kY3VzdG9tLXNlbGVjdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgkYmxhY2ssIDAuMDc1KSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJvcmRlci1jb2xvcjogJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjtcclxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtd2lkdGg6ICRpbnB1dC1mb2N1cy13aWR0aCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteS1zbTogJGlucHV0LXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LXNtOiAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemUtc206ICRpbnB1dC1mb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodC1zbTogJGlucHV0LWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteS1sZzogJGlucHV0LXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14LWxnOiAkaW5wdXQtcGFkZGluZy14LWxnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mb250LXNpemUtbGc6ICRpbnB1dC1mb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWhlaWdodC1sZzogJGlucHV0LWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2std2lkdGg6ICAgICAgICAgIDEwMCUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2staGVpZ2h0OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWN1cnNvcjogICAgICAgICBwb2ludGVyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJnOiAgICAgICAgICAgICAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stYm9yZGVyLXJhZGl1czogIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogICAgIGluc2V0IDAgLjI1cmVtIC4yNXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi13aWR0aDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgJGN1c3RvbS1yYW5nZS10aHVtYi13aWR0aCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1iZzogICAgICAgICAgICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm9yZGVyOiAgICAgICAgICAgICAgICAgIDAgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm9yZGVyLXJhZGl1czogICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgLjFyZW0gLjI1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogICAgICAgIDAgMCAwIDFweCAkYm9keS1iZywgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdy13aWR0aDogICRpbnB1dC1mb2N1cy13aWR0aCAhZGVmYXVsdDsgLy8gRm9yIGZvY3VzIGJveCBzaGFkb3cgaXNzdWUgaW4gSUUvRWRnZVxyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWFjdGl2ZS1iZzogICAgICAgICAgICAgICBsaWdodGVuKCRjb21wb25lbnQtYWN0aXZlLWJnLCAzNSUpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWRpc2FibGVkLWJnOiAgICAgICAgICAgICAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWZpbGUtaGVpZ2h0OiAgICAgICAgICAgICAgICAkaW5wdXQtaGVpZ2h0ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtaGVpZ2h0LWlubmVyOiAgICAgICAgICAkaW5wdXQtaGVpZ2h0LWlubmVyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9jdXMtYm9yZGVyLWNvbG9yOiAgICAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9jdXMtYm94LXNoYWRvdzogICAgICAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWRpc2FibGVkLWJnOiAgICAgICAgICAgJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1maWxlLXBhZGRpbmcteTogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLXBhZGRpbmcteDogICAgICAgICAgICAgJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgJGlucHV0LWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9udC1mYW1pbHk6ICAgICAgICAgICAkaW5wdXQtZm9udC1mYW1pbHkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1mb250LXdlaWdodDogICAgICAgICAgICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWNvbG9yOiAgICAgICAgICAgICAgICAgJGlucHV0LWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYmc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItd2lkdGg6ICAgICAgICAgICRpbnB1dC1ib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItY29sb3I6ICAgICAgICAgICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1ib3JkZXItcmFkaXVzOiAgICAgICAgICRpbnB1dC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm94LXNoYWRvdzogICAgICAgICAgICAkaW5wdXQtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJ1dHRvbi1jb2xvcjogICAgICAgICAgJGN1c3RvbS1maWxlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYnV0dG9uLWJnOiAgICAgICAgICAgICAkaW5wdXQtZ3JvdXAtYWRkb24tYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS10ZXh0OiAoXHJcbi8vICAgZW46IFwiQnJvd3NlXCJcclxuLy8gKSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gJGZvcm0tZmVlZGJhY2stbWFyZ2luLXRvcDogICAgICAgICAgJGZvcm0tdGV4dC1tYXJnaW4tdG9wICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1mb250LXNpemU6ICAgICAgICAgICAkc21hbGwtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvcjogICAgICAgICB0aGVtZS1jb2xvcihcInN1Y2Nlc3NcIikgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3I6ICAgICAgIHRoZW1lLWNvbG9yKFwiZGFuZ2VyXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZC1jb2xvcjogICAgJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQ6ICAgICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZmlsbD0nI3skZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkLWNvbG9yfScgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yOiAgJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkOiAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3J9JyB2aWV3Qm94PScwIDAgMTIgMTInPjxjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLz48cGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLz48Y2lyY2xlIGN4PSc2JyBjeT0nOC4yJyByPScuNicgZmlsbD0nI3skZm9ybS1mZWVkYmFjay1pY29uLWludmFsaWQtY29sb3J9JyBzdHJva2U9J25vbmUnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9ybS12YWxpZGF0aW9uLXN0YXRlczogKCkgIWRlZmF1bHQ7XHJcbi8vIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XHJcbi8vICRmb3JtLXZhbGlkYXRpb24tc3RhdGVzOiBtYXAtbWVyZ2UoXHJcbi8vICAgKFxyXG4vLyAgICAgXCJ2YWxpZFwiOiAoXHJcbi8vICAgICAgIFwiY29sb3JcIjogJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3IsXHJcbi8vICAgICAgIFwiaWNvblwiOiAkZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkXHJcbi8vICAgICApLFxyXG4vLyAgICAgXCJpbnZhbGlkXCI6IChcclxuLy8gICAgICAgXCJjb2xvclwiOiAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yLFxyXG4vLyAgICAgICBcImljb25cIjogJGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkXHJcbi8vICAgICApLFxyXG4vLyAgICksXHJcbi8vICAgJGZvcm0tdmFsaWRhdGlvbi1zdGF0ZXNcclxuLy8gKTtcclxuXHJcbi8vIC8vIFotaW5kZXggbWFzdGVyIGxpc3RcclxuLy8gLy9cclxuLy8gLy8gV2FybmluZzogQXZvaWQgY3VzdG9taXppbmcgdGhlc2UgdmFsdWVzLiBUaGV5J3JlIHVzZWQgZm9yIGEgYmlyZCdzIGV5ZSB2aWV3XHJcbi8vIC8vIG9mIGNvbXBvbmVudHMgZGVwZW5kZW50IG9uIHRoZSB6LWF4aXMgYW5kIGFyZSBkZXNpZ25lZCB0byBhbGwgd29yayB0b2dldGhlci5cclxuXHJcbi8vICR6aW5kZXgtZHJvcGRvd246ICAgICAgICAgICAgICAgICAgIDEwMDAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtc3RpY2t5OiAgICAgICAgICAgICAgICAgICAgIDEwMjAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtZml4ZWQ6ICAgICAgICAgICAgICAgICAgICAgIDEwMzAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWwtYmFja2Ryb3A6ICAgICAgICAgICAgIDEwNDAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWw6ICAgICAgICAgICAgICAgICAgICAgIDEwNTAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtcG9wb3ZlcjogICAgICAgICAgICAgICAgICAgIDEwNjAgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtdG9vbHRpcDogICAgICAgICAgICAgICAgICAgIDEwNzAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBOYXZzXHJcblxyXG4vLyAkbmF2LWxpbmstcGFkZGluZy15OiAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdi10YWJzLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAgJGdyYXktMjAwICRncmF5LTIwMCAkbmF2LXRhYnMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtY29sb3I6ICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDAgJGdyYXktMzAwICRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXYtcGlsbHMtYm9yZGVyLXJhZGl1czogICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkbmF2LXBpbGxzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2LWRpdmlkZXItY29sb3I6ICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRuYXYtZGl2aWRlci1tYXJnaW4teTogICAgICAgICAgICAgICRzcGFjZXIgLyAyICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTmF2YmFyXHJcblxyXG4vLyAkbmF2YmFyLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAgJHNwYWNlciAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbmF2LWxpbmstcGFkZGluZy14OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1icmFuZC1mb250LXNpemU6ICAgICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gLy8gQ29tcHV0ZSB0aGUgbmF2YmFyLWJyYW5kIHBhZGRpbmcteSBzbyB0aGUgbmF2YmFyLWJyYW5kIHdpbGwgaGF2ZSB0aGUgc2FtZSBoZWlnaHQgYXMgbmF2YmFyLXRleHQgYW5kIG5hdi1saW5rXHJcbi8vICRuYXYtbGluay1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlICsgJG5hdi1saW5rLXBhZGRpbmcteSAqIDIgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItYnJhbmQtaGVpZ2h0OiAgICAgICAgICAgICAgICRuYXZiYXItYnJhbmQtZm9udC1zaXplICogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItYnJhbmQtcGFkZGluZy15OiAgICAgICAgICAgICgkbmF2LWxpbmstaGVpZ2h0IC0gJG5hdmJhci1icmFuZC1oZWlnaHQpIC8gMiAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXk6ICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLXBhZGRpbmcteDogICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXRvZ2dsZXItZm9udC1zaXplOiAgICAgICAgICAkZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLXRvZ2dsZXItYm9yZGVyLXJhZGl1czogICAgICAkYnRuLWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWRhcmstY29sb3I6ICAgICAgICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjUpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICAgICAgICAgICByZ2JhKCR3aGl0ZSwgLjc1KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstZGlzYWJsZWQtY29sb3I6ICAgICAgICByZ2JhKCR3aGl0ZSwgLjI1KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRvZ2dsZXItaWNvbi1iZzogICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMzAnIGhlaWdodD0nMzAnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PHBhdGggc3Ryb2tlPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBzdHJva2Utd2lkdGg9JzInIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWRhcmstdG9nZ2xlci1ib3JkZXItY29sb3I6ICByZ2JhKCR3aGl0ZSwgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1saWdodC1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC41KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogICAgICAgICAgcmdiYSgkYmxhY2ssIC43KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICAgICAgICAgcmdiYSgkYmxhY2ssIC45KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogICAgICAgcmdiYSgkYmxhY2ssIC4zKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC10b2dnbGVyLWljb24tYmc6ICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMzAnIGhlaWdodD0nMzAnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PHBhdGggc3Ryb2tlPScjeyRuYXZiYXItbGlnaHQtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbGlnaHQtdGhlbWUtY29sb3I6ICAgICAgICAgICAgICAgICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWxpZ2h0LWJyYW5kLWhvdmVyLWNvbG9yOiAgICAgICAgICAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRoZW1lLWNvbG9yOiAgICAgICAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWJyYW5kLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vIERyb3Bkb3duc1xyXG4vL1xyXG4vLyBEcm9wZG93biBtZW51IGNvbnRhaW5lciBhbmQgY29udGVudHMuXHJcblxyXG4kZHJvcGRvd24tbWluLXdpZHRoOiAxMHJlbTtcclxuJGRyb3Bkb3duLXBhZGRpbmcteTogMC41cmVtO1xyXG4kZHJvcGRvd24tc3BhY2VyOiAwLjEyNXJlbTtcclxuJGRyb3Bkb3duLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kZHJvcGRvd24tY29sb3I6ICRib2R5LWNvbG9yO1xyXG4kZHJvcGRvd24tYmc6ICR3aGl0ZTtcclxuJGRyb3Bkb3duLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMTUpO1xyXG4kZHJvcGRvd24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRkcm9wZG93bi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcbiRkcm9wZG93bi1pbm5lci1ib3JkZXItcmFkaXVzOiBzdWJ0cmFjdChcclxuICAkZHJvcGRvd24tYm9yZGVyLXJhZGl1cyxcclxuICAkZHJvcGRvd24tYm9yZGVyLXdpZHRoXHJcbik7XHJcbiRkcm9wZG93bi1kaXZpZGVyLWJnOiAkZ3JheS0yMDA7XHJcbiRkcm9wZG93bi1kaXZpZGVyLW1hcmdpbi15OiAkbmF2LWRpdmlkZXItbWFyZ2luLXk7XHJcbiRkcm9wZG93bi1ib3gtc2hhZG93OiAwIDAuNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAwLjE3NSk7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGdyYXktMjAwO1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogZGFya2VuKCRncmF5LTIwMCwgNSUpO1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1iZzogJGdyYXktMTAwO1xyXG5cclxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvcjtcclxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWJnOiAkY29tcG9uZW50LWFjdGl2ZS1iZztcclxuXHJcbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAkZ3JheS02MDA7XHJcblxyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXk6IDAuMjVyZW07XHJcbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteDogMS41cmVtO1xyXG5cclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJGdyYXktNjAwO1xyXG5cclxuLy8gLy8gUGFnaW5hdGlvblxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjZyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteDogMC43NXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LXNtOiAwLjI1cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtc206IDAuNXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAwLjc1cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6IDEuNXJlbTtcclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEuMjU7XHJcblxyXG4kcGFnaW5hdGlvbi1jb2xvcjogJGdyYXktNjAwO1xyXG4kcGFnaW5hdGlvbi1iZzogJHdoaXRlO1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcbiRwYWdpbmF0aW9uLWJvcmRlci1jb2xvcjogJGdyYXktODAwO1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtYm94LXNoYWRvdzogbm9uZTtcclxuJHBhZ2luYXRpb24tZm9jdXMtb3V0bGluZTogMDtcclxuXHJcbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAkbGluay1ob3Zlci1jb2xvcjtcclxuJHBhZ2luYXRpb24taG92ZXItYmc6ICRncmF5LTIwMDtcclxuJHBhZ2luYXRpb24taG92ZXItYm9yZGVyLWNvbG9yOiAkZ3JheS04MDA7XHJcblxyXG4kcGFnaW5hdGlvbi1hY3RpdmUtY29sb3I6ICRncmF5LTYwMDtcclxuJHBhZ2luYXRpb24tYWN0aXZlLWJnOiAkZ3JheS04MDA7XHJcbiRwYWdpbmF0aW9uLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRncmF5LTgwMDtcclxuXHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAkd2hpdGU7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJvcmRlci1jb2xvcjogJGdyYXktMzAwO1xyXG5cclxuLy8gLy8gSnVtYm90cm9uXHJcblxyXG4vLyAkanVtYm90cm9uLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAycmVtICFkZWZhdWx0O1xyXG4vLyAkanVtYm90cm9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG4vLyAkanVtYm90cm9uLWJnOiAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDYXJkc1xyXG5cclxuLy8gJGNhcmQtc3BhY2VyLXk6ICAgICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1zcGFjZXIteDogICAgICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xMjUpICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1pbm5lci1ib3JkZXItcmFkaXVzOiAgICAgICAgICBzdWJ0cmFjdCgkY2FyZC1ib3JkZXItcmFkaXVzLCAkY2FyZC1ib3JkZXItd2lkdGgpICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jYXAtYmc6ICAgICAgICAgICAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjAzKSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY2FwLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcmQtaW1nLW92ZXJsYXktcGFkZGluZzogICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWdyb3VwLW1hcmdpbjogICAgICAgICAgICAgICAgICRncmlkLWd1dHRlci13aWR0aCAvIDIgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWRlY2stbWFyZ2luOiAgICAgICAgICAgICAgICAgICRjYXJkLWdyb3VwLW1hcmdpbiAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWNvbHVtbnMtY291bnQ6ICAgICAgICAgICAgICAgIDMgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbHVtbnMtZ2FwOiAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbHVtbnMtbWFyZ2luOiAgICAgICAgICAgICAgICRjYXJkLXNwYWNlci15ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVG9vbHRpcHNcclxuXHJcbi8vICR0b29sdGlwLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICRmb250LXNpemUtc20gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLW1heC13aWR0aDogICAgICAgICAgICAgICAgIDIwMHB4ICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICRibGFjayAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLW9wYWNpdHk6ICAgICAgICAgICAgICAgICAgIC45ICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLXBhZGRpbmcteDogICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1tYXJnaW46ICAgICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xyXG5cclxuLy8gJHRvb2x0aXAtYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgLjhyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWFycm93LWhlaWdodDogICAgICAgICAgICAgIC40cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkdG9vbHRpcC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZvcm0gdG9vbHRpcHMgbXVzdCBjb21lIGFmdGVyIHJlZ3VsYXIgdG9vbHRpcHNcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1wYWRkaW5nLXk6ICAgICAkdG9vbHRpcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtcGFkZGluZy14OiAgICAgJHRvb2x0aXAtcGFkZGluZy14ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLWZvbnQtc2l6ZTogICAgICR0b29sdGlwLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1saW5lLWhlaWdodDogICAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1vcGFjaXR5OiAgICAgICAkdG9vbHRpcC1vcGFjaXR5ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLWJvcmRlci1yYWRpdXM6ICR0b29sdGlwLWJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBQb3BvdmVyc1xyXG5cclxuJHBvcG92ZXItZm9udC1zaXplOiAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1tYXgtd2lkdGg6IDI0NnB4ICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDA7XHJcbiRwb3BvdmVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1pbm5lci1ib3JkZXItcmFkaXVzOiBzdWJ0cmFjdChcclxuICAkcG9wb3Zlci1ib3JkZXItcmFkaXVzLFxyXG4gICRwb3BvdmVyLWJvcmRlci13aWR0aFxyXG4pICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy14bCAhZGVmYXVsdDtcclxuXHJcbi8vICRwb3BvdmVyLWhlYWRlci1iZzogICAgICAgICAgICAgICAgIGRhcmtlbigkcG9wb3Zlci1iZywgMyUpICFkZWZhdWx0O1xyXG4vLyAkcG9wb3Zlci1oZWFkZXItY29sb3I6ICAgICAgICAgICAgICAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXk6IDAuNzVyZW07XHJcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXg6IDFyZW07XHJcblxyXG4vLyAkcG9wb3Zlci1ib2R5LWNvbG9yOiAgICAgICAgICAgICAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6ICRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXk7XHJcbiRwb3BvdmVyLWJvZHktcGFkZGluZy14OiAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy14O1xyXG5cclxuLy8gJHBvcG92ZXItYXJyb3ctd2lkdGg6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJHBvcG92ZXItYXJyb3ctaGVpZ2h0OiAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRwb3BvdmVyLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICRwb3BvdmVyLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJHBvcG92ZXItYXJyb3ctb3V0ZXItY29sb3I6ICAgICAgICAgZmFkZS1pbigkcG9wb3Zlci1ib3JkZXItY29sb3IsIC4wNSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBUb2FzdHNcclxuXHJcbi8vICR0b2FzdC1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAgIDM1MHB4ICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgLjg3NXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJhY2tncm91bmQtY29sb3I6ICAgICAgICAgICAgcmdiYSgkd2hpdGUsIC44NSkgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgIDFweCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgICAgMCAuMjVyZW0gLjc1cmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdG9hc3QtaGVhZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1oZWFkZXItYmFja2dyb3VuZC1jb2xvcjogICAgIHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtaGVhZGVyLWJvcmRlci1jb2xvcjogICAgICAgICByZ2JhKDAsIDAsIDAsIC4wNSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBCYWRnZXNcclxuXHJcbiRiYWRnZS1mb250LXNpemU6IHJlbXkoMTIpO1xyXG4kYmFkZ2UtZm9udC13ZWlnaHQ6IDUwMDtcclxuLy8gJGJhZGdlLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgMC4yNWVtICFkZWZhdWx0O1xyXG4kYmFkZ2UtcGFkZGluZy14OiAwLjVyZW07XHJcbiRiYWRnZS1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1tZDtcclxuXHJcbi8vICRiYWRnZS10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgICRidG4tdHJhbnNpdGlvbiAhZGVmYXVsdDtcclxuLy8gJGJhZGdlLWZvY3VzLXdpZHRoOiAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRiYWRnZS1waWxsLXBhZGRpbmcteDogICAgICAgICAgICAgIC42ZW0gIWRlZmF1bHQ7XHJcbi8vIC8vIFVzZSBhIGhpZ2hlciB0aGFuIG5vcm1hbCB2YWx1ZSB0byBlbnN1cmUgY29tcGxldGVseSByb3VuZGVkIGVkZ2VzIHdoZW5cclxuLy8gLy8gY3VzdG9taXppbmcgcGFkZGluZyBvciBmb250LXNpemUgb24gbGFiZWxzLlxyXG4vLyAkYmFkZ2UtcGlsbC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAxMHJlbSAhZGVmYXVsdDtcclxuXHJcbi8vIE1vZGFsc1xyXG5cclxuLy8gUGFkZGluZyBhcHBsaWVkIHRvIHRoZSBtb2RhbCBib2R5XHJcbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAwLjc1cmVtO1xyXG5cclxuLy8gTWFyZ2luIGJldHdlZW4gZWxlbWVudHMgaW4gZm9vdGVyLCBtdXN0IGJlIGxvd2VyIHRoYW4gb3IgZXF1YWwgdG8gMiAqICRtb2RhbC1pbm5lci1wYWRkaW5nXHJcbi8vICRtb2RhbC1mb290ZXItbWFyZ2luLWJldHdlZW46ICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJG1vZGFsLWRpYWxvZy1tYXJnaW46ICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1kaWFsb2ctbWFyZ2luLXktc20tdXA6ICAgICAgIDEuNzVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kbW9kYWwtdGl0bGUtbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1iYXNlO1xyXG5cclxuJG1vZGFsLWNvbnRlbnQtY29sb3I6IG51bGw7XHJcbiRtb2RhbC1jb250ZW50LWJnOiAkd2hpdGU7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMDtcclxuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiRtb2RhbC1jb250ZW50LWlubmVyLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiBub25lO1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAkYm9yZGVyLXJhZGl1cztcclxuXHJcbiRtb2RhbC1iYWNrZHJvcC1iZzogJGJsYWNrO1xyXG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogMC43O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1mb290ZXItYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuJG1vZGFsLWhlYWRlci1ib3JkZXItd2lkdGg6IDA7XHJcbiRtb2RhbC1mb290ZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteTogMC43NXJlbTtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg6IDEuNXJlbTtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteDtcclxuXHJcbi8vICRtb2RhbC14bDogICAgICAgICAgICAgICAgICAgICAgICAgIDExNDBweCAhZGVmYXVsdDtcclxuJG1vZGFsLWxnOiAxMDQ0cHg7XHJcbi8vICRtb2RhbC1tZDogICAgICAgICAgICAgICAgICAgICAgICAgIDUwMHB4ICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc206ICAgICAgICAgICAgICAgICAgICAgICAgICAzMDBweCAhZGVmYXVsdDtcclxuXHJcbi8vICRtb2RhbC1mYWRlLXRyYW5zZm9ybTogICAgICAgICAgICAgIHRyYW5zbGF0ZSgwLCAtNTBweCkgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1zaG93LXRyYW5zZm9ybTogICAgICAgICAgICAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAuM3MgZWFzZS1vdXQgIWRlZmF1bHQ7XHJcbi8vICRtb2RhbC1zY2FsZS10cmFuc2Zvcm06ICAgICAgICAgICAgIHNjYWxlKDEuMDIpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQWxlcnRzXHJcbi8vIC8vXHJcbi8vIC8vIERlZmluZSBhbGVydCBjb2xvcnMsIGJvcmRlciByYWRpdXMsIGFuZCBwYWRkaW5nLlxyXG5cclxuLy8gJGFsZXJ0LXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtbWFyZ2luLWJvdHRvbTogICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWxpbmstZm9udC13ZWlnaHQ6ICAgICAgICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkYWxlcnQtYmctbGV2ZWw6ICAgICAgICAgICAgICAgICAgICAtMTAgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1ib3JkZXItbGV2ZWw6ICAgICAgICAgICAgICAgIC05ICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtY29sb3ItbGV2ZWw6ICAgICAgICAgICAgICAgICA2ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUHJvZ3Jlc3MgYmFyc1xyXG5cclxuLy8gJHByb2dyZXNzLWhlaWdodDogICAgICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogLjc1ICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmc6ICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYm94LXNoYWRvdzogICAgICAgICAgICAgICBpbnNldCAwIC4xcmVtIC4xcmVtIHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItY29sb3I6ICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci1iZzogICAgICAgICAgICAgICAgICAgdGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLWFuaW1hdGlvbi10aW1pbmc6ICAgICAxcyBsaW5lYXIgaW5maW5pdGUgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItdHJhbnNpdGlvbjogICAgICAgICAgIHdpZHRoIC42cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTGlzdCBncm91cFxyXG5cclxuLy8gJGxpc3QtZ3JvdXAtY29sb3I6ICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYmc6ICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1ib3JkZXItY29sb3I6ICAgICAgICAgICByZ2JhKCRibGFjaywgLjEyNSkgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJvcmRlci13aWR0aDogMHB4O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuXHJcbi8vICRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy15OiAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXg6ICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWhvdmVyLWJnOiAgICAgICAgICAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGl2ZS1iZzogICAgICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3RpdmUtYm9yZGVyLWNvbG9yOiAgICAkbGlzdC1ncm91cC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1kaXNhYmxlZC1jb2xvcjogICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWRpc2FibGVkLWJnOiAgICAgICAgICAgICRsaXN0LWdyb3VwLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWNvbG9yOiAgICAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICAgICAkbGlzdC1ncm91cC1hY3Rpb24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWNvbG9yOiAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gSW1hZ2UgdGh1bWJuYWlsc1xyXG5cclxuLy8gJHRodW1ibmFpbC1wYWRkaW5nOiAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJnOiAgICAgICAgICAgICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkdGh1bWJuYWlsLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAuMDc1KSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEZpZ3VyZXNcclxuXHJcbi8vICRmaWd1cmUtY2FwdGlvbi1mb250LXNpemU6ICAgICAgICAgIDkwJSAhZGVmYXVsdDtcclxuLy8gJGZpZ3VyZS1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQnJlYWRjcnVtYnNcclxuXHJcbi8vICRicmVhZGNydW1iLWZvbnQtc2l6ZTogICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLXBhZGRpbmcteDogICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWl0ZW0tcGFkZGluZzogICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItbWFyZ2luLWJvdHRvbTogICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLWJnOiAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvcjogICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWRpdmlkZXI6ICAgICAgICAgICAgICAgIHF1b3RlKFwiL1wiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ2Fyb3VzZWxcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLXdpZHRoOiAgICAgICAgICAgICAxNSUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLW9wYWNpdHk6ICAgICAgICAgICAuNSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtaG92ZXItb3BhY2l0eTogICAgIC45ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC10cmFuc2l0aW9uOiAgICAgICAgb3BhY2l0eSAuMTVzIGVhc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXdpZHRoOiAgICAgICAgICAgMzBweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1oZWlnaHQ6ICAgICAgICAgIDNweCAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWluZGljYXRvci1oaXQtYXJlYS1oZWlnaHQ6IDEwcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3Itc3BhY2VyOiAgICAgICAgICAzcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItdHJhbnNpdGlvbjogICAgICBvcGFjaXR5IC42cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWNhcHRpb24td2lkdGg6ICAgICAgICAgICAgIDcwJSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNhcHRpb24tY29sb3I6ICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6ICAgICAgICAyMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNUw0LjI1IDRsMi41LTIuNUw1LjI1IDB6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6ICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPScjeyRjYXJvdXNlbC1jb250cm9sLWNvbG9yfScgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZD0nTTIuNzUgMGwtMS41IDEuNUwzLjc1IDRsLTIuNSAyLjVMMi43NSA4bDQtNC00LTR6Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLXRyYW5zaXRpb24tZHVyYXRpb246ICAgICAgIC42cyAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgIHRyYW5zZm9ybSAkY2Fyb3VzZWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLWluLW91dCAhZGVmYXVsdDsgLy8gRGVmaW5lIHRyYW5zZm9ybSB0cmFuc2l0aW9uIGZpcnN0IGlmIHVzaW5nIG11bHRpcGxlIHRyYW5zaXRpb25zIChlLmcuLCBgdHJhbnNmb3JtIDJzIGVhc2UsIG9wYWNpdHkgLjVzIGVhc2Utb3V0YClcclxuXHJcbi8vIC8vIFNwaW5uZXJzXHJcblxyXG4vLyAkc3Bpbm5lci13aWR0aDogICAgICAgICAycmVtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1oZWlnaHQ6ICAgICAgICAkc3Bpbm5lci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItYm9yZGVyLXdpZHRoOiAgLjI1ZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkc3Bpbm5lci13aWR0aC1zbTogICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWhlaWdodC1zbTogICAgICAgJHNwaW5uZXItd2lkdGgtc20gIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWJvcmRlci13aWR0aC1zbTogLjJlbSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENsb3NlXHJcblxyXG4vLyAkY2xvc2UtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAxLjUgIWRlZmF1bHQ7XHJcbi8vICRjbG9zZS1mb250LXdlaWdodDogICAgICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAkYmxhY2sgIWRlZmF1bHQ7XHJcbi8vICRjbG9zZS10ZXh0LXNoYWRvdzogICAgICAgICAgICAgICAgIDAgMXB4IDAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ29kZVxyXG5cclxuLy8gJGNvZGUtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgODcuNSUgIWRlZmF1bHQ7XHJcbi8vICRjb2RlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICRwaW5rICFkZWZhdWx0O1xyXG5cclxuLy8gJGtiZC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgICAgLjJyZW0gIWRlZmF1bHQ7XHJcbi8vICRrYmQtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgIC40cmVtICFkZWZhdWx0O1xyXG4vLyAka2JkLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgICAkY29kZS1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRrYmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGtiZC1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gJHByZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkcHJlLXNjcm9sbGFibGUtbWF4LWhlaWdodDogICAgICAgICAzNDBweCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFV0aWxpdGllc1xyXG5cclxuLy8gJGRpc3BsYXlzOiBub25lLCBpbmxpbmUsIGlubGluZS1ibG9jaywgYmxvY2ssIHRhYmxlLCB0YWJsZS1yb3csIHRhYmxlLWNlbGwsIGZsZXgsIGlubGluZS1mbGV4ICFkZWZhdWx0O1xyXG4vLyAkb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4gIWRlZmF1bHQ7XHJcbi8vICRwb3NpdGlvbnM6IHN0YXRpYywgcmVsYXRpdmUsIGFic29sdXRlLCBmaXhlZCwgc3RpY2t5ICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUHJpbnRpbmdcclxuXHJcbi8vICRwcmludC1wYWdlLXNpemU6ICAgICAgICAgICAgICAgICAgIGEzICFkZWZhdWx0O1xyXG4vLyAkcHJpbnQtYm9keS1taW4td2lkdGg6ICAgICAgICAgICAgICBtYXAtZ2V0KCRncmlkLWJyZWFrcG9pbnRzLCBcImxnXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gSnlzYW4gVmFyaWFibGVzXHJcblxyXG5AZnVuY3Rpb24gc3BhY2UoJHNpemUpIHtcclxuICBAcmV0dXJuIG1hcC1nZXQoJG1hcDogJHNwYWNlcnMsICRrZXk6ICRzaXplKTtcclxufVxyXG5cclxuJGhlYWRlci1oZWlnaHQ6IDYycHg7XHJcbiRoZWFkZXItaGVpZ2h0LW1kOiAxMDBweDtcclxuJGhlYWRlci13aWR0aDogMjgwcHg7XHJcblxyXG4kYnRuLW1pbi13aWR0aDogMTY0cHg7XHJcblxyXG4vLyBKLWlucHV0XHJcbiRqLWlucHV0LWZvbnQtc2l6ZTogMXJlbTtcclxuJGotaW5wdXQtZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS1iYXNlO1xyXG4kai1pbnB1dC1mb250LXN0eWxlOiBub3JtYWw7XHJcbiRqLWlucHV0LWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYmFzZTtcclxuXHJcbiRqLWlucHV0LWxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4kai1pbnB1dC1wYWRkaW5nLXk6IDE3LjVweDtcclxuJGotaW5wdXQtcGFkZGluZy14OiAyMHB4O1xyXG5cclxuJGotaW5wdXQtYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRqLWlucHV0LWJvcmRlci1yYWRpdXM6IDhweDtcclxuJGotaW5wdXQtYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuXHJcbiRqLWlucHV0LWJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuJGotaW5wdXQtbGFiZWwtY29sb3I6ICRncmF5LWRhcms7XHJcbiRqLWlucHV0LWJvcmRlci1jb2xvcjogJGdyYXktbGlnaHQ7XHJcbiRqLWlucHV0LXRleHQtY29sb3I6ICRibGFjaztcclxuJGotaW5wdXQtbWFzay1jb2xvcjogJGdyYXk7XHJcbiRqLWlucHV0LWljb24tY29sb3I6ICRvcmFuZ2U7XHJcbiRqLWlucHV0LWhlbHBlci1jb2xvcjogJGdyYXktZGFyaztcclxuXHJcbiRqLWlucHV0LWJvcmRlci1jb2xvci0tYWN0aXZlOiAkcHJpbWFyeTtcclxuJGotaW5wdXQtbGFiZWwtY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcbiRqLWlucHV0LXRleHQtY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yLS1lcnJvcjogJHJlZC1saWdodDtcclxuJGotaW5wdXQtaGVscGVyLWNvbG9yLS1lcnJvcjogJHJlZDtcclxuJGotaW5wdXQtYm9yZGVyLWNvbG9yLS1lcnJvcjogJHJlZDtcclxuXHJcbiRqLWlucHV0LWJhY2tncm91bmQtY29sb3ItLWRpc2FibGVkOiAkaW5wdXQtZGlzYWJsZWQtYmc7IC8vIGZyb20gZmlnbWEgcHJpbWl0aXZlcyBzaG91bGQgYmUgZ3JheS0yMDBcclxuXHJcbiRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLXRvcDogJGotaW5wdXQtcGFkZGluZy15ICsgJGotaW5wdXQtYm9yZGVyLXdpZHRoO1xyXG4kai1pbnB1dC1sYWJlbC1wb3NpdGlvbi10b3AtYWN0aXZlOiAxMHB4O1xyXG4kai1pbnB1dC1saW5rLXBvc2l0aW9uLXRvcDogMTZweDtcclxuJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tbGVmdDogJGotaW5wdXQtcGFkZGluZy14ICsgJGotaW5wdXQtYm9yZGVyLXdpZHRoO1xyXG4kai1pbnB1dC1sYWJlbC1saW5lLWhlaWdodDogJGotaW5wdXQtbGluZS1oZWlnaHQ7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG5cclxuJGotaW5wdXQtcGFkZGluZy10b3A6IDI3cHg7XHJcbiRqLWlucHV0LXBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4kai1pbnB1dC1tYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4kai1pbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogJGdyYXk7XHJcbiRqLWlucHV0LXBsYWNlaG9sZGVyLXBvc2l0aW9uOiAkai1pbnB1dC1wYWRkaW5nLXRvcCArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtY2hhci1sZW5ndGg6IDguOTlweDtcclxuXHJcbiRqLWlucHV0LWJ1dHRvbi1wb3NpdGlvbjogMjBweDtcclxuJGotaW5wdXQtc2hhZG93LXBvc2l0aW9uOiAkai1pbnB1dC1sYWJlbC1wb3NpdGlvbi1sZWZ0O1xyXG5cclxuJGotaW5wdXQtbGFiZWwtei1pbmRleDogMDtcclxuJGotaW5wdXQtc2hhZG93LXotaW5kZXg6IDE7XHJcbiRqLWlucHV0LXotaW5kZXg6IDI7XHJcbiRqLWlucHV0LWxpbmstei1pbmRleDogMztcclxuJGotaW5wdXQtYnV0dG9uLXotaW5kZXg6IDQ7XHJcblxyXG4kYm94LXNoYWRvdy10by10b3AtbGc6IDAgLTFyZW0gM3JlbSByZ2JhKCRibGFjaywgMC4xNzUpO1xyXG5cclxuJGVuYWJsZS1wb2ludGVyLWN1cnNvci1mb3ItYnV0dG9uczogdHJ1ZTtcclxuIl19 */";

/***/ }),

/***/ 85063:
/*!***************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-person/information-person.component.scss?ngResource ***!
  \***************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".persons-info__btn :hover {\n  cursor: pointer;\n}\n\n.edit-btn svg {\n  fill: #B7BEC5;\n}\n\n.edit-btn:hover svg {\n  fill: #EF5630;\n}\n\n.remove-btn svg {\n  fill: #B7BEC5;\n}\n\n.remove-btn:hover svg {\n  fill: #EF5630;\n}\n\n.section-border {\n  border-bottom: 1px solid #d6dadf;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZm9ybWF0aW9uLXBlcnNvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJRTtFQUNFLGVBQUE7QUFISjs7QUFPQTtFQUNFLGFBQUE7QUFKRjs7QUFPQTtFQUNFLGFBQUE7QUFKRjs7QUFPQTtFQUNFLGFBQUE7QUFKRjs7QUFPQTtFQUNFLGFBQUE7QUFKRjs7QUFPQTtFQUNFLGdDQUFBO0FBSkYiLCJmaWxlIjoiaW5mb3JtYXRpb24tcGVyc29uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInNoYXJlZFwiO1xuXG4ucGVyc29ucy1pbmZvIHtcblxuICAmX19idG4gOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLmVkaXQtYnRuIHN2ZyB7XG4gIGZpbGw6ICNCN0JFQzU7XG59XG5cbi5lZGl0LWJ0bjpob3ZlciBzdmcge1xuICBmaWxsOiAjRUY1NjMwO1xufVxuXG4ucmVtb3ZlLWJ0biBzdmcge1xuICBmaWxsOiAjQjdCRUM1O1xufVxuXG4ucmVtb3ZlLWJ0bjpob3ZlciBzdmcge1xuICBmaWxsOiAjRUY1NjMwO1xufVxuXG4uc2VjdGlvbi1ib3JkZXIge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyYXktNDAwO1xufVxuIl19 */";

/***/ }),

/***/ 13766:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-persons/information-persons.component.scss?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".persons__title {\n  line-height: 30px;\n}\n.persons__subtitle {\n  font-size: 14px;\n  line-height: 18px;\n  color: #666c72;\n  margin-bottom: 27px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 75107:
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-res-persons/information-res-persons.component.scss?ngResource ***!
  \*************************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".persons-wrap {\n  background-color: #fff;\n  border-radius: 8px;\n  border: none;\n}\n\n.persons-header {\n  border-bottom: 1px solid #d6dadf;\n}\n\n.persons-header h6 {\n  margin: 0;\n  padding: 1rem;\n  font-size: 20px;\n  line-height: 20px;\n}\n\n.persons-header__add {\n  cursor: pointer;\n  padding: 1rem;\n  background-color: #fff;\n  border: none;\n  border-radius: 8px;\n}\n\n.persons-header__img {\n  margin-right: 10px;\n  border-radius: 3px;\n}\n\n.persons-header__img-text {\n  color: #ef5630;\n  line-height: 24px;\n}\n\n.persons-noinfo {\n  color: #666c72;\n  font-size: 14px;\n  line-height: 18px;\n  padding: 25px 0;\n  margin: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 71474:
/*!*****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-table/j-table.component.scss?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

module.exports = ".j-table {\n  border-radius: 0 0 12px 12px;\n  background: #fff;\n}\n.j-table tbody tr {\n  border-top: 1px solid rgba(183, 190, 197, 0.5);\n}\n.j-table tbody td {\n  vertical-align: middle;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 80878:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/j-tole-work-regime.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "::ng-deep .work-day__item .j-dropdown-input__item {\n  background: transparent !important;\n}\n\n.work-day__checkbox {\n  background: transparent !important;\n}\n\n.add-workRegimes__button {\n  color: #ef5630;\n}\n\n.add-workRegimes__button:disabled {\n  color: #b7bec5;\n}\n\n.delete-workRegimes__button {\n  margin-right: -1.5em;\n}\n\n.form-field-title {\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 25px;\n  color: #1a1c1f;\n  margin-top: 10px;\n  display: inline-block;\n}\n\nul {\n  margin-left: 0;\n  padding-left: 0;\n  width: 100%;\n}\n\n.work-day__item {\n  flex-grow: 1;\n}\n\nli {\n  list-style-type: none;\n}\n\n.custom-control-input {\n  bottom: 1rem;\n}\n\n.custom-checkbox .custom-control-input:disabled ~ .custom-control-label::after {\n  background-color: #D6DADF;\n  border-radius: 4px;\n}\n\n.custom-control-label::before {\n  border: 2px solid #d6dadf;\n  box-sizing: border-box;\n  border-radius: 4px;\n}\n\n.selected-days :not(:first-child) {\n  padding-left: 0.3em;\n}\n\n.custom-control-label::after {\n  border: none;\n  box-sizing: border-box;\n  border-radius: 4px;\n}\n\n.without-break-checkbox {\n  flex-basis: 10em;\n}\n\n.divider {\n  height: 2px;\n  width: 1.2em;\n  background: #C4C4C4;\n  margin-top: 2em;\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n}\n\n.custom-control {\n  flex-basis: 14em !important;\n}\n\n::ng-deep .j-dropdown-input__body {\n  border: none !important;\n  background: #FFFFFF !important;\n  box-shadow: 0px 14px 16px rgba(0, 0, 0, 0.05) !important;\n  border-radius: 0px 0px 8px 8px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImotdG9sZS13b3JrLXJlZ2ltZS5zY3NzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc2Nzcy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDRSxrQ0FBQTtBQUZGOztBQUtBO0VBQ0Usa0NBQUE7QUFGRjs7QUFLQTtFQUNFLGNDMEJPO0FENUJUOztBQUdFO0VBQ0UsY0NGTztBRENYOztBQUtBO0VBQ0Usb0JBQUE7QUFGRjs7QUFLQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0NSTTtFRFNOLGdCQUFBO0VBQ0EscUJBQUE7QUFGRjs7QUFLQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtBQUZGOztBQUtBO0VBQ0UsWUFBQTtBQUZGOztBQUtBO0VBQ0UscUJBQUE7QUFGRjs7QUFLQTtFQUNFLFlBQUE7QUFGRjs7QUFLQTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFGRjs7QUFLQTtFQUNFLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUZGOztBQUtBO0VBQ0UsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLFlBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0FBRkY7O0FBS0E7RUFDRSxnQkFBQTtBQUZGOztBQUtBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSwyQkFBQTtBQUZGOztBQUtBO0VBQ0UsdUJBQUE7RUFDQSw4QkFBQTtFQUNBLHdEQUFBO0VBQ0EseUNBQUE7QUFGRiIsImZpbGUiOiJqLXRvbGUtd29yay1yZWdpbWUuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG5cblxuOjpuZy1kZWVwIC53b3JrLWRheV9faXRlbSAuai1kcm9wZG93bi1pbnB1dF9faXRlbSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG59XG5cbi53b3JrLWRheV9fY2hlY2tib3gge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufVxuXG4uYWRkLXdvcmtSZWdpbWVzX19idXR0b24ge1xuICBjb2xvcjogJG9yYW5nZTtcbiAgJjpkaXNhYmxlZCB7XG4gICAgY29sb3I6ICRncmF5LTUwMFxuICB9XG59XG5cbi5kZWxldGUtd29ya1JlZ2ltZXNfX2J1dHRvbiB7XG4gIG1hcmdpbi1yaWdodDogLTEuNWVtO1xufVxuXG4uZm9ybS1maWVsZC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gIGNvbG9yOiAkYmxhY2s7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxudWwge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLndvcmstZGF5X19pdGVtIHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG5saSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuLmN1c3RvbS1jb250cm9sLWlucHV0IHtcbiAgYm90dG9tOiAxcmVtO1xufVxuXG4uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDZEQURGO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlIHtcbiAgYm9yZGVyOiAycHggc29saWQgJGdyYXktNDAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi5zZWxlY3RlZC1kYXlzIDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIHBhZGRpbmctbGVmdDogMC4zZW07XG59XG5cbi5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXIge1xuICBib3JkZXI6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxuLndpdGhvdXQtYnJlYWstY2hlY2tib3gge1xuICBmbGV4LWJhc2lzOiAxMGVtO1xufVxuXG4uZGl2aWRlciB7XG4gIGhlaWdodDogMnB4O1xuICB3aWR0aDogMS4yZW07XG4gIGJhY2tncm91bmQ6ICNDNEM0QzQ7O1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cblxuLmN1c3RvbS1jb250cm9sIHtcbiAgZmxleC1iYXNpczogMTRlbSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmotZHJvcGRvd24taW5wdXRfX2JvZHkge1xuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRiAhaW1wb3J0YW50O1xuICBib3gtc2hhZG93OiAwcHggMTRweCAxNnB4IHJnYigwIDAgMCAvIDUlKSAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiAwcHggMHB4IDhweCA4cHggIWltcG9ydGFudDtcbn1cbiIsIi8vIFZhcmlhYmxlc1xyXG4vL1xyXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3JcclxuLy8gY29uc2lzdGVudCBuYW1pbmcuIEV4OiAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3IgYW5kICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMuXHJcblxyXG4vLyBDb2xvciBzeXN0ZW1cclxuXHJcbiR3aGl0ZTogI2ZmZjtcclxuJGdyYXktMTAwOiAjZmFmN2Y3O1xyXG4kZ3JheS0yMDA6ICNmNmY3Zjg7XHJcbiRncmF5LTMwMDogI2VjZWVmMTtcclxuJGdyYXktNDAwOiAjZDZkYWRmO1xyXG4kZ3JheS01MDA6ICNiN2JlYzU7XHJcbiRncmF5LTYwMDogIzY2NmM3MjtcclxuJGdyYXktNzAwOiAjNDc0YjUyO1xyXG4kZ3JheS04MDA6ICNlOWVjZjE7XHJcbiRncmF5LTkwMDogI2RiZGZlMjtcclxuJGdyYXktMTAwMDogIzgyODI4MjtcclxuJGJsYWNrOiAjMWExYzFmO1xyXG5cclxuJGdyYXlzOiAoKTtcclxuJGdyYXlzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJzEwMCc6ICRncmF5LTEwMCxcclxuICAgICcyMDAnOiAkZ3JheS0yMDAsXHJcbiAgICAnMzAwJzogJGdyYXktMzAwLFxyXG4gICAgJzQwMCc6ICRncmF5LTQwMCxcclxuICAgICc1MDAnOiAkZ3JheS01MDAsXHJcbiAgICAnNjAwJzogJGdyYXktNjAwLFxyXG4gICAgJzcwMCc6ICRncmF5LTcwMCxcclxuICAgICc4MDAnOiAkZ3JheS04MDAsXHJcbiAgKSxcclxuICAkZ3JheXNcclxuKTtcclxuXHJcbiRibHVlOiAjMjA0MTc3O1xyXG4kYmx1ZS1saWdodDogIzE1ODZiYjtcclxuJGJsdWUtd2hpdGU6ICNmNWY5ZmQ7XHJcbiRvcmFuZ2U6ICNlZjU2MzA7XHJcbiRvcmFuZ2UtZGFyazogI2Q0M2UxOTtcclxuJG9yYW5nZS1saWdodDogI2Y3YWI5ODtcclxuJHllbGxvdzogI2VmOGYwMDtcclxuJGdyZWVuOiAjMjM5YTU0O1xyXG4kZ3JlZW4tbGlnaHQ6ICM3NGJhNzI7XHJcbiRyZWQ6ICNmZjAwMDA7XHJcbiRyZWQtbGlnaHQ6ICNmZmVmZWY7XHJcblxyXG4kZ3JheTogJGdyYXktNTAwO1xyXG4kZ3JheS1kYXJrOiAkZ3JheS02MDA7XHJcbiRncmF5LWxpZ2h0OiAkZ3JheS00MDA7XHJcblxyXG4kY29sb3JzOiAoKTtcclxuJGNvbG9yczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgICdibHVlJzogJGJsdWUsXHJcbiAgICAnYmx1ZS1saWdodCc6ICRibHVlLWxpZ2h0LFxyXG4gICAgJ2JsdWUtd2hpdGUnOiAkYmx1ZS13aGl0ZSxcclxuICAgICdvcmFuZ2UnOiAkb3JhbmdlLFxyXG4gICAgJ29yYW5nZS1kYXJrJzogJG9yYW5nZS1kYXJrLFxyXG4gICAgJ29yYW5nZS1saWdodCc6ICRvcmFuZ2UtbGlnaHQsXHJcbiAgICAneWVsbG93JzogJHllbGxvdyxcclxuICAgICdncmVlbic6ICRncmVlbixcclxuICAgICdncmVlbi1saWdodCc6ICRncmVlbi1saWdodCxcclxuICAgICdyZWQnOiAkcmVkLFxyXG4gICAgJ3JlZC1saWdodCc6ICRyZWQtbGlnaHQsXHJcbiAgICAnYmxhY2snOiAkYmxhY2ssXHJcbiAgICAnYmxhY2stbGlnaHQnOiAkZ3JheS03MDAsXHJcbiAgICAnZ3JheSc6ICRncmF5LTUwMCxcclxuICAgICdncmF5LWRhcmsnOiAkZ3JheS02MDAsXHJcbiAgICAnZ3JheS1saWdodCc6ICRncmF5LTQwMCxcclxuICApLFxyXG4gICRjb2xvcnNcclxuKTtcclxuXHJcbiRwcmltYXJ5OiAkb3JhbmdlO1xyXG4kc2Vjb25kYXJ5OiAkYmx1ZTtcclxuJHN1Y2Nlc3M6ICRncmVlbjtcclxuJGluZm86ICRibHVlLWxpZ2h0O1xyXG4kd2FybmluZzogJHllbGxvdztcclxuJGRhbmdlcjogJHJlZDtcclxuJGxpZ2h0OiAkZ3JheS01MDA7XHJcbiRkYXJrOiAkYmxhY2s7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAoKTtcclxuJHRoZW1lLWNvbG9yczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcclxuICAgICdzdWNjZXNzJzogJHN1Y2Nlc3MsXHJcbiAgICAnaW5mbyc6ICRpbmZvLFxyXG4gICAgJ3dhcm5pbmcnOiAkd2FybmluZyxcclxuICAgICdkYW5nZXInOiAkZGFuZ2VyLFxyXG4gICAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICAgJ2RhcmsnOiAkZGFyayxcclxuICAgICd3aGl0ZSc6ICR3aGl0ZSxcclxuICApLFxyXG4gICR0aGVtZS1jb2xvcnNcclxuKTtcclxuXHJcbi8vICR0ZXh0LWNvbG9yczogKCk7XHJcbi8vICR0ZXh0LWNvbG9yczogbWFwLW1lcmdlKFxyXG4vLyAgIChcclxuLy8gICAgICdkZWZhdWx0JzogJGJsYWNrLFxyXG4vLyAgICAgJ2xvdy1jb250cmFzdCc6ICRncmF5LTYwMCxcclxuLy8gICAgICdpbmZvJzogJGdyYXktNTAwLFxyXG4vLyAgICAgJ2Vycm9yJzogJHJlZCxcclxuLy8gICAgICdsaW5rJzogJGJsdWUsXHJcbi8vICAgICAnYmFsYW5jZSc6ICRncmVlbixcclxuLy8gICAgICdiYWxhbmNlLWNvaW5zJzogJGdyZWVuLWxpZ2h0LFxyXG4vLyAgICksXHJcbi8vICAgJHRleHQtY29sb3JzXHJcbi8vICk7XHJcblxyXG4vLyBTcGFjaW5nXHJcbi8vXHJcbi8vIENvbnRyb2wgdGhlIGRlZmF1bHQgc3R5bGluZyBvZiBtb3N0IEJvb3RzdHJhcCBlbGVtZW50cyBieSBtb2RpZnlpbmcgdGhlc2VcclxuLy8gdmFyaWFibGVzLiBNb3N0bHkgZm9jdXNlZCBvbiBzcGFjaW5nLlxyXG4vLyBZb3UgY2FuIGFkZCBtb3JlIGVudHJpZXMgdG8gdGhlICRzcGFjZXJzIG1hcCwgc2hvdWxkIHlvdSBuZWVkIG1vcmUgdmFyaWF0aW9uLlxyXG5cclxuJHNwYWNlcjogMXJlbTtcclxuJHNwYWNlcnM6ICgpO1xyXG4kc3BhY2VyczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgIDA6IDAsXHJcbiAgICAvLyAwcHhcclxuICAgIDE6ICRzcGFjZXIgKiAwLjI1LFxyXG4gICAgLy8gNHB4IHh4cyxcclxuICAgIDI6ICRzcGFjZXIgKiAwLjUsXHJcbiAgICAvLyA4cHggeHMsXHJcbiAgICAzOiAkc3BhY2VyLFxyXG4gICAgLy8gMTZweCBzbVxyXG4gICAgNDogJHNwYWNlciAqIDEuNSxcclxuICAgIC8vIDI0cHggbWQsXHJcbiAgICA1OiAkc3BhY2VyICogMixcclxuICAgIC8vIDMycHggbGcsXHJcbiAgICA2OiAkc3BhY2VyICogMi41LFxyXG4gICAgLy8gNDBweCB4bCxcclxuICAgIDc6ICRzcGFjZXIgKiAzLjUsXHJcbiAgICAvLyA1NnB4IHh4bFxyXG4gICAgODogJHNwYWNlciAqIDQsXHJcbiAgICAvLyA2NHB4IHh4bFxyXG4gICksXHJcbiAgJHNwYWNlcnNcclxuKTtcclxuXHJcbi8vIEJvZHlcclxuLy9cclxuLy8gU2V0dGluZ3MgZm9yIHRoZSBgPGJvZHk+YCBlbGVtZW50LlxyXG5cclxuJGJvZHktYmc6ICR3aGl0ZTtcclxuJGJvZHktY29sb3I6ICRkYXJrO1xyXG5cclxuLy8gTGlua3NcclxuLy9cclxuLy8gU3R5bGUgYW5jaG9yIGVsZW1lbnRzLlxyXG5cclxuJGxpbmstY29sb3I6IHRoZW1lLWNvbG9yKCdwcmltYXJ5Jyk7XHJcbiRsaW5rLWRlY29yYXRpb246IG5vbmU7XHJcbiRsaW5rLWhvdmVyLWNvbG9yOiAkb3JhbmdlLWRhcms7XHJcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4vLyBQYXJhZ3JhcGhzXHJcbi8vXHJcbi8vIFN0eWxlIHAgZWxlbWVudC5cclxuXHJcbiRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuXHJcbi8vIEdyaWQgYnJlYWtwb2ludHNcclxuLy9cclxuLy8gRGVmaW5lIHRoZSBtaW5pbXVtIGRpbWVuc2lvbnMgYXQgd2hpY2ggeW91ciBsYXlvdXQgd2lsbCBjaGFuZ2UsXHJcbi8vIGFkYXB0aW5nIHRvIGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMsIGZvciB1c2UgaW4gbWVkaWEgcXVlcmllcy5cclxuXHJcbiRncmlkLWJyZWFrcG9pbnRzOiAoXHJcbiAgeHM6IDAsXHJcbiAgc206IDY3MHB4LFxyXG4gIG1kOiA5NjBweCxcclxuICBsZzogMTI4MHB4LFxyXG4gIHhsOiAxOTIwcHgsXHJcbik7XHJcblxyXG4vLyBHcmlkIGNvbnRhaW5lcnNcclxuLy9cclxuLy8gRGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGAuY29udGFpbmVyYCBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy5cclxuXHJcbiRjb250YWluZXItbWF4LXdpZHRoczogKFxyXG4gIHNtOiA1NDBweCxcclxuICBtZDogNzIwcHgsXHJcbiAgbGc6IDk2MHB4LFxyXG4gIHhsOiAxMjgwcHgsXHJcbik7XHJcblxyXG4vLyBHcmlkIGNvbHVtbnNcclxuLy9cclxuLy8gU2V0IHRoZSBudW1iZXIgb2YgY29sdW1ucyBhbmQgc3BlY2lmeSB0aGUgd2lkdGggb2YgdGhlIGd1dHRlcnMuXHJcblxyXG4kZ3JpZC1jb2x1bW5zOiAxMjtcclxuJGdyaWQtZ3V0dGVyLXdpZHRoOiAzMHB4O1xyXG4kZ3JpZC1yb3ctY29sdW1uczogNjtcclxuXHJcbi8vIENvbXBvbmVudHNcclxuLy9cclxuLy8gRGVmaW5lIGNvbW1vbiBwYWRkaW5nIGFuZCBib3JkZXIgcmFkaXVzIHNpemVzIGFuZCBtb3JlLlxyXG5cclxuJGxpbmUtaGVpZ2h0LWxnOiAxLjU7XHJcbiRsaW5lLWhlaWdodC1zbTogMS41O1xyXG5cclxuJGJvcmRlci13aWR0aDogMXB4O1xyXG4kYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDA7XHJcblxyXG4kYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4kYm9yZGVyLXJhZGl1cy1tZDogcmVteSgxMik7XHJcbiRib3JkZXItcmFkaXVzLWxnOiAyLjVyZW07XHJcbiRib3JkZXItcmFkaXVzLXNtOiAwLjJyZW07XHJcblxyXG4vLyBMMFxyXG4kYm94LXNoYWRvdy14czogMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuLy8gTDFcclxuJGJveC1zaGFkb3ctc206IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNiksXHJcbiAgMHB4IDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA0KTtcclxuLy8gTDJcclxuJGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4wNCksXHJcbiAgMHB4IDEwcHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG4vLyBMM1xyXG4kYm94LXNoYWRvdy1sZzogMHB4IDE0cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4vLyBMNFxyXG4kYm94LXNoYWRvdy14bDogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA0KSxcclxuICAwcHggMTZweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAyNHB4IDMycHggcmdiYSgwLCAwLCAwLCAwLjA0KTtcclxuXHJcbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGU7XHJcbiRjb21wb25lbnQtYWN0aXZlLWJnOiB0aGVtZS1jb2xvcigncHJpbWFyeScpO1xyXG5cclxuJHRyYW5zaXRpb24tYmFzZTogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XHJcbiR0cmFuc2l0aW9uLWZhZGU6IG9wYWNpdHkgMC4xNXMgbGluZWFyO1xyXG4kdHJhbnNpdGlvbi1jb2xsYXBzZTogaGVpZ2h0IDAuMzVzIGVhc2U7XHJcbiR0cmFuc2l0aW9uLW1heC1oZWlnaHQ6IGFsbCAwLjZzIGVhc2U7XHJcblxyXG4vLyBUeXBvZ3JhcGh5XHJcbi8vXHJcbi8vIEZvbnQsIGxpbmUtaGVpZ2h0LCBhbmQgY29sb3IgZm9yIGJvZHkgdGV4dCwgaGVhZGluZ3MsIGFuZCBtb3JlLlxyXG5cclxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiBTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsXHJcbiAgJ0xpYmVyYXRpb24gTW9ubycsICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZSAhZGVmYXVsdDtcclxuJGZvbnQtZmFtaWx5LWJhc2U6ICRmb250LWZhbWlseS1zYW5zLXNlcmlmO1xyXG5cclxuJGZvbnQtc2l6ZS1iYXNlOiAxcmVtOyAvLyAxNnB4XHJcbiRmb250LXNpemUtbGc6ICRmb250LXNpemUtYmFzZSAqIDEuMjUgIWRlZmF1bHQ7IC8vIDIwcHhcclxuJGZvbnQtc2l6ZS1zbTogJGZvbnQtc2l6ZS1iYXNlICogMC44NzUgIWRlZmF1bHQ7IC8vIDE0cHhcclxuJGZvbnQtc2l6ZS14czogcmVteSgxMik7XHJcblxyXG4kZm9udC13ZWlnaHQtbGlnaHRlcjogbGlnaHRlcjtcclxuJGZvbnQtd2VpZ2h0LWxpZ2h0OiAzMDA7XHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMDtcclxuJGZvbnQtd2VpZ2h0LWJvbGQ6IDUwMDtcclxuJGZvbnQtd2VpZ2h0LWJvbGRlcjogYm9sZGVyO1xyXG5cclxuJGZvbnQtd2VpZ2h0LWJhc2U6ICRmb250LXdlaWdodC1ub3JtYWw7XHJcbiRsaW5lLWhlaWdodC1iYXNlOiAxLjU7XHJcblxyXG4kaDEtZm9udC1zaXplOiByZW15KDMwKTtcclxuJGgyLWZvbnQtc2l6ZTogcmVteSgyNik7XHJcbiRoMy1mb250LXNpemU6IHJlbXkoMjQpO1xyXG4kaDQtZm9udC1zaXplOiByZW15KDIyKTtcclxuJGg1LWZvbnQtc2l6ZTogcmVteSgyMCk7XHJcbiRoNi1mb250LXNpemU6IHJlbXkoMTgpO1xyXG5cclxuJGgxLWZvbnQtc2l6ZXM6IChcclxuICB4czogMzBweCxcclxuICBzbTogMzZweCxcclxuICBtZDogNDhweCxcclxuICBsZzogNDhweCxcclxuICB4bDogNjBweCxcclxuKTtcclxuXHJcbi8vIGgyIHNpemVzXHJcbiRoMi1mb250LXNpemVzOiAoXHJcbiAgeHM6IDI2cHgsXHJcbiAgc206IDMwcHgsXHJcbiAgbWQ6IDQwcHgsXHJcbiAgbGc6IDQ0cHgsXHJcbiAgeGw6IDU0cHgsXHJcbik7XHJcblxyXG4vLyBoMyBzaXplc1xyXG4kaDMtZm9udC1zaXplczogKFxyXG4gIHhzOiAyNHB4LFxyXG4gIHNtOiAyNnB4LFxyXG4gIG1kOiAzMnB4LFxyXG4gIGxnOiAzNnB4LFxyXG4gIHhsOiA0NHB4LFxyXG4pO1xyXG5cclxuLy8gaDQgc2l6ZXNcclxuJGg0LWZvbnQtc2l6ZXM6IChcclxuICB4czogMjJweCxcclxuICBzbTogMjRweCxcclxuICBtZDogMjRweCxcclxuICBsZzogMjhweCxcclxuICB4bDogMjhweCxcclxuKTtcclxuXHJcbi8vIGg1IHNpemVzXHJcbiRoNS1mb250LXNpemVzOiAoXHJcbiAgeHM6IDIwcHgsXHJcbiAgc206IDIycHgsXHJcbiAgbWQ6IDIycHgsXHJcbiAgbGc6IDI0cHgsXHJcbiAgeGw6IDI0cHgsXHJcbik7XHJcblxyXG4vLyBoNiBzaXplc1xyXG4kaDYtZm9udC1zaXplczogKFxyXG4gIHhzOiAxOHB4LFxyXG4gIHNtOiAxOHB4LFxyXG4gIG1kOiAxOHB4LFxyXG4gIGxnOiAyMHB4LFxyXG4gIHhsOiAyMHB4LFxyXG4pO1xyXG5cclxuJGhlYWRpbmdzLW1hcmdpbi1ib3R0b206ICRzcGFjZXIgLyAyICFkZWZhdWx0O1xyXG4kaGVhZGluZ3MtZm9udC1mYW1pbHk6IG51bGw7XHJcbiRoZWFkaW5ncy1mb250LXdlaWdodDogNTAwO1xyXG4kaGVhZGluZ3MtZm9udC13ZWlnaHQtbGlnaHQ6IDQwMDtcclxuJGhlYWRpbmdzLWxpbmUtaGVpZ2h0OiAxLjU7XHJcbiRoZWFkaW5ncy1jb2xvcjogbnVsbDtcclxuXHJcbiRwMC1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE2cHgsXHJcbiAgc206IDE2cHgsXHJcbiAgbWQ6IDE2cHgsXHJcbiAgbGc6IDE2cHgsXHJcbiAgeGw6IDE2cHgsXHJcbik7XHJcblxyXG4kcDEtZm9udC1zaXplczogKFxyXG4gIHhzOiAxNnB4LFxyXG4gIHNtOiAxNnB4LFxyXG4gIG1kOiAxOHB4LFxyXG4gIGxnOiAxOHB4LFxyXG4gIHhsOiAxOHB4LFxyXG4pO1xyXG5cclxuJHAyLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTRweCxcclxuICBzbTogMTRweCxcclxuICBtZDogMTZweCxcclxuICBsZzogMTZweCxcclxuICB4bDogMTZweCxcclxuKTtcclxuXHJcbiRwMy1mb250LXNpemVzOiAoXHJcbiAgeHM6IDEycHgsXHJcbiAgc206IDEycHgsXHJcbiAgbWQ6IDE0cHgsXHJcbiAgbGc6IDE0cHgsXHJcbiAgeGw6IDE0cHgsXHJcbik7XHJcblxyXG4kcDQtZm9udC1zaXplczogKFxyXG4gIHhzOiAxMHB4LFxyXG4gIHNtOiAxMHB4LFxyXG4gIG1kOiAxMnB4LFxyXG4gIGxnOiAxMnB4LFxyXG4gIHhsOiAxMnB4LFxyXG4pO1xyXG5cclxuJHNtYWxsLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS14cztcclxuXHJcbiR0ZXh0LW11dGVkOiAkZ3JheS02MDA7XHJcblxyXG4vLyAkYmxvY2txdW90ZS1zbWFsbC1jb2xvcjogICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRibG9ja3F1b3RlLXNtYWxsLWZvbnQtc2l6ZTogICRzbWFsbC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRibG9ja3F1b3RlLWZvbnQtc2l6ZTogICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuMjUgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaHItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkaHItYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJG1hcmstcGFkZGluZzogICAgICAgICAgICAgICAgLjJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRkdC1mb250LXdlaWdodDogICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG5cclxuLy8gJGtiZC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgaW5zZXQgMCAtLjFyZW0gMCByZ2JhKCRibGFjaywgLjI1KSAhZGVmYXVsdDtcclxuLy8gJG5lc3RlZC1rYmQtZm9udC13ZWlnaHQ6ICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1pbmxpbmUtcGFkZGluZzogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRtYXJrLWJnOiAgICAgICAgICAgICAgICAgICAgICNmY2Y4ZTMgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaHItbWFyZ2luLXk6ICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVGFibGVzXHJcbi8vIC8vXHJcbi8vIC8vIEN1c3RvbWl6ZXMgdGhlIGAudGFibGVgIGNvbXBvbmVudCB3aXRoIGJhc2ljIHZhbHVlcywgZWFjaCB1c2VkIGFjcm9zcyBhbGwgdGFibGUgdmFyaWF0aW9ucy5cclxuXHJcbi8vICR0YWJsZS1jZWxsLXBhZGRpbmc6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWNlbGwtcGFkZGluZy1zbTogICAgICAgLjNyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtY29sb3I6ICAgICAgICAgICAgICAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWJnOiAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWFjY2VudC1iZzogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wNSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ob3Zlci1jb2xvcjogICAgICAgICAgICR0YWJsZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWhvdmVyLWJnOiAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYWN0aXZlLWJnOiAgICAgICAgICAgICAkdGFibGUtaG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtYm9yZGVyLXdpZHRoOiAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWhlYWQtYmc6ICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtaGVhZC1jb2xvcjogICAgICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtZGFyay1jb2xvcjogICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWJnOiAgICAgICAgICAgICAgICRncmF5LTgwMCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYWNjZW50LWJnOiAgICAgICAgcmdiYSgkd2hpdGUsIC4wNSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICR0YWJsZS1kYXJrLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1ob3Zlci1iZzogICAgICAgICByZ2JhKCR3aGl0ZSwgLjA3NSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWJvcmRlci1jb2xvcjogICAgIGxpZ2h0ZW4oJHRhYmxlLWRhcmstYmcsIDcuNSUpICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLXN0cmlwZWQtb3JkZXI6ICAgICAgICAgb2RkICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWNhcHRpb24tY29sb3I6ICAgICAgICAgJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtYmctbGV2ZWw6ICAgICAgICAgICAgICAtOSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWJvcmRlci1sZXZlbDogICAgICAgICAgLTYgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBCdXR0b25zICsgRm9ybXNcclxuLy8gLy9cclxuLy8gLy8gU2hhcmVkIHZhcmlhYmxlcyB0aGF0IGFyZSByZWFzc2lnbmVkIHRvIGAkaW5wdXQtYCBhbmQgYCRidG4tYCBzcGVjaWZpYyB2YXJpYWJsZXMuXHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMXJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXg6IDEuNzVyZW07XHJcbiRpbnB1dC1idG4tZm9udC1mYW1pbHk6IG51bGw7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQ6IDEuNTtcclxuXHJcbiRpbnB1dC1idG4tZm9jdXMtd2lkdGg6IHJlbXkoMSk7XHJcbiRpbnB1dC1idG4tZm9jdXMtY29sb3I6ICRwcmltYXJ5O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1zbTogMC4yNXJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDEuMnJlbTtcclxuJGlucHV0LWJ0bi1mb250LXNpemUtc206ICRmb250LXNpemUtYmFzZTtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbTogJGxpbmUtaGVpZ2h0LXNtO1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktbGc6ICRpbnB1dC1idG4tcGFkZGluZy15O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogMi41cmVtO1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZzogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0O1xyXG5cclxuJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcblxyXG4vLyBCdXR0b25zXHJcbi8vXHJcbi8vIEZvciBlYWNoIG9mIEJvb3RzdHJhcCdzIGJ1dHRvbnMsIGRlZmluZSB0ZXh0LCBiYWNrZ3JvdW5kLCBhbmQgYm9yZGVyIGNvbG9yLlxyXG5cclxuJGJ0bi1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15O1xyXG4kYnRuLXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXg7XHJcbiRidG4tZm9udC1mYW1pbHk6ICRpbnB1dC1idG4tZm9udC1mYW1pbHk7XHJcbiRidG4tZm9udC1zaXplOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZTtcclxuJGJ0bi1saW5lLWhlaWdodDogJGlucHV0LWJ0bi1saW5lLWhlaWdodDtcclxuJGJ0bi13aGl0ZS1zcGFjZTogbnVsbDsgLy8gU2V0IHRvIGBub3dyYXBgIHRvIHByZXZlbnQgdGV4dCB3cmFwcGluZ1xyXG5cclxuJGJ0bi1wYWRkaW5nLXktc206ICRpbnB1dC1idG4tcGFkZGluZy15LXNtO1xyXG4kYnRuLXBhZGRpbmcteC1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXgtc207XHJcbiRidG4tZm9udC1zaXplLXNtOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbTtcclxuJGJ0bi1saW5lLWhlaWdodC1zbTogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbTtcclxuXHJcbiRidG4tcGFkZGluZy15LWxnOiAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZztcclxuJGJ0bi1wYWRkaW5nLXgtbGc6ICRpbnB1dC1idG4tcGFkZGluZy14LWxnO1xyXG4kYnRuLWZvbnQtc2l6ZS1sZzogJGlucHV0LWJ0bi1mb250LXNpemUtbGc7XHJcbiRidG4tbGluZS1oZWlnaHQtbGc6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc7XHJcblxyXG4kYnRuLWJvcmRlci13aWR0aDogJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg7XHJcblxyXG4kYnRuLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsO1xyXG4kYnRuLWJveC1zaGFkb3c6IG5vbmU7XHJcbiRidG4tZm9jdXMtd2lkdGg6ICRpbnB1dC1idG4tZm9jdXMtd2lkdGg7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93O1xyXG4kYnRuLWRpc2FibGVkLW9wYWNpdHk6IDAuNTtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbi8vICRidG4tbGluay1kaXNhYmxlZC1jb2xvcjogICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRidG4tYmxvY2stc3BhY2luZy15OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQWxsb3dzIGZvciBjdXN0b21pemluZyBidXR0b24gcmFkaXVzIGluZGVwZW5kZW50bHkgZnJvbSBnbG9iYWwgYm9yZGVyIHJhZGl1c1xyXG4kYnRuLWJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiRidG4tYm9yZGVyLXJhZGl1cy1sZzogMTJweDtcclxuJGJ0bi1ib3JkZXItcmFkaXVzLXNtOiA4cHg7XHJcblxyXG4kYnRuLXRyYW5zaXRpb246ICR0cmFuc2l0aW9uLWJhc2U7XHJcblxyXG4vLyAvLyBGb3Jtc1xyXG5cclxuLy8gJGxhYmVsLW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRpbnB1dC1wYWRkaW5nLXg6IHJlbXkoMjApO1xyXG4kaW5wdXQtZm9udC1mYW1pbHk6ICRpbnB1dC1idG4tZm9udC1mYW1pbHk7XHJcbiRpbnB1dC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplO1xyXG4kaW5wdXQtZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1iYXNlO1xyXG4kaW5wdXQtbGluZS1oZWlnaHQ6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQ7XHJcblxyXG4vLyAkaW5wdXQtcGFkZGluZy15LXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1wYWRkaW5nLXgtc206ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtbGluZS1oZWlnaHQtc206ICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbi8vICRpbnB1dC1wYWRkaW5nLXktbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcclxuLy8gJGlucHV0LXBhZGRpbmcteC1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LWxnICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplLWxnOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYmc6ICR3aGl0ZTtcclxuJGlucHV0LWRpc2FibGVkLWJnOiAkZ3JheS0yMDA7XHJcblxyXG4kaW5wdXQtY29sb3I6ICRkYXJrO1xyXG4kaW5wdXQtYm9yZGVyLWNvbG9yOiAkZ3JheS00MDA7XHJcbiRpbnB1dC1ib3JkZXItd2lkdGg6ICRpbnB1dC1idG4tYm9yZGVyLXdpZHRoO1xyXG4kaW5wdXQtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRpbnB1dC1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiRpbnB1dC1ib3JkZXItcmFkaXVzLWxnOiAkaW5wdXQtYm9yZGVyLXJhZGl1cztcclxuJGlucHV0LWJvcmRlci1yYWRpdXMtc206ICRpbnB1dC1ib3JkZXItcmFkaXVzO1xyXG5cclxuJGlucHV0LWZvY3VzLWJnOiAkd2hpdGU7XHJcbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3I6ICRwcmltYXJ5O1xyXG4kaW5wdXQtZm9jdXMtY29sb3I6ICRpbnB1dC1jb2xvcjtcclxuJGlucHV0LWZvY3VzLXdpZHRoOiAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoO1xyXG4kaW5wdXQtZm9jdXMtYm94LXNoYWRvdzogJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93O1xyXG5cclxuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRpbnB1dC1wbGFpbnRleHQtY29sb3I6ICRib2R5LWNvbG9yO1xyXG5cclxuLy8gJGlucHV0LWhlaWdodC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICRpbnB1dC1ib3JkZXItd2lkdGggKiAyICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LWhlaWdodC1pbm5lcjogICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAxZW0sICRpbnB1dC1wYWRkaW5nLXkgKiAyKSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1pbm5lci1oYWxmOiAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAuNWVtLCAkaW5wdXQtcGFkZGluZy15KSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1pbm5lci1xdWFydGVyOiAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAuMjVlbSwgJGlucHV0LXBhZGRpbmcteSAvIDIpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhlaWdodDogNTZweDtcclxuLy8gJGlucHV0LWhlaWdodC1zbTogICAgICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQtc20gKiAxZW0sIGFkZCgkaW5wdXQtcGFkZGluZy15LXNtICogMiwgJGlucHV0LWhlaWdodC1ib3JkZXIsIGZhbHNlKSkgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0LWxnICogMWVtLCBhZGQoJGlucHV0LXBhZGRpbmcteS1sZyAqIDIsICRpbnB1dC1oZWlnaHQtYm9yZGVyLCBmYWxzZSkpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXRyYW5zaXRpb246ICR0cmFuc2l0aW9uLWJhc2U7XHJcblxyXG4vLyAkZm9ybS10ZXh0LW1hcmdpbi10b3A6ICAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tY2hlY2staW5wdXQtZ3V0dGVyOiAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWNoZWNrLWlucHV0LW1hcmdpbi15OiAgICAgICAgICAgICAuM3JlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXg6ICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWNoZWNrLWlubGluZS1tYXJnaW4teDogICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWNoZWNrLWlubGluZS1pbnB1dC1tYXJnaW4teDogICAgICAuMzEyNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWdyaWQtZ3V0dGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxMHB4ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1ncm91cC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1jb2xvcjogICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1iZzogICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1ib3JkZXItY29sb3I6ICAgICAgICAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1mb3Jtcy10cmFuc2l0aW9uOiAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1ndXR0ZXI6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLXNwYWNlci14OiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1jdXJzb3I6ICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplOiAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmc6ICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJnLXNpemU6ICAgICAgNTAlIDUwJSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3gtc2hhZG93OiAgICRpbnB1dC1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci13aWR0aDogJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1sYWJlbC1jb2xvcjogICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1kaXNhYmxlZC1iZzogICAgICAgICAgJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtbGFiZWwtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3I6ICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1kaXNhYmxlZC1iZzogIHJnYmEodGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpLCAuNSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1ib3gtc2hhZG93OiAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1ib3JkZXItY29sb3I6ICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZm9jdXMtYm94LXNoYWRvdzogICAgICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWZvY3VzLWJvcmRlci1jb2xvcjogICAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtY29sb3I6ICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDM1JSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJveC1zaGFkb3c6ICAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJvcmRlci1jb2xvcjogICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWljb24tY2hlY2tlZDogICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZmlsbD0nI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3J9JyBkPSdNNi41NjQuNzVsLTMuNTkgMy42MTItMS41MzgtMS41NUwwIDQuMjZsMi45NzQgMi45OUw4IDIuMTkzeicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1jb2xvcjogICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1pbmRldGVybWluYXRlOiAgICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzQnIGhlaWdodD0nNCcgdmlld0JveD0nMCAwIDQgNCc+PHBhdGggc3Ryb2tlPScjeyRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtY29sb3J9JyBkPSdNMCAyaDQnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYm94LXNoYWRvdzogICBub25lICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFkaW8taW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIDUwJSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9Jy00IC00IDggOCc+PGNpcmNsZSByPSczJyBmaWxsPScjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcn0nLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXN3aXRjaC13aWR0aDogICAgICAgICAgICAgICAgICAgICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgKiAxLjc1ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXN3aXRjaC1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgLyAyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXN3aXRjaC1pbmRpY2F0b3Itc2l6ZTogICAgICAgICAgICAgICAgICBzdWJ0cmFjdCgkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUsICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoICogNCkgIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXk6ICRpbnB1dC1wYWRkaW5nLXk7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteDogMS4yNXJlbTtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1mYW1pbHk6ICRpbnB1dC1mb250LWZhbWlseSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplOiAkaW5wdXQtZm9udC1zaXplICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQ6ICRpbnB1dC1oZWlnaHQ7XHJcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAxLjI1cmVtOyAvLyBFeHRyYSBwYWRkaW5nIHRvIGFjY291bnQgZm9yIHRoZSBwcmVzZW5jZSBvZiB0aGUgYmFja2dyb3VuZC1pbWFnZSBiYXNlZCBpbmRpY2F0b3JcclxuJGN1c3RvbS1zZWxlY3QtZm9udC13ZWlnaHQ6ICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtbGluZS1oZWlnaHQ6ICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtY29sb3I6ICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtY29sb3I6ICRncmF5LTYwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmc6ICRpbnB1dC1iZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmctc2l6ZTogOHB4IDEwcHggIWRlZmF1bHQ7IC8vIEluIHBpeGVscyBiZWNhdXNlIGltYWdlIGRpbWVuc2lvbnNcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yOiAkZ3JheS04MDAgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc1JyB2aWV3Qm94PScwIDAgNCA1Jz48cGF0aCBmaWxsPScjeyRjdXN0b20tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIGQ9J00yIDBMMCAyaDR6bTAgNUwwIDNoNHonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJhY2tncm91bmQ6IGVzY2FwZS1zdmcoJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yKSBuby1yZXBlYXQgcmlnaHRcclxuICAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggY2VudGVyIC8gJGN1c3RvbS1zZWxlY3QtYmctc2l6ZSAhZGVmYXVsdDsgLy8gVXNlZCBzbyB3ZSBjYW4gaGF2ZSBtdWx0aXBsZSBiYWNrZ3JvdW5kIGVsZW1lbnRzIChlLmcuLCBhcnJvdyBhbmQgZmVlZGJhY2sgaWNvbilcclxuXHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1yaWdodDogYWRkKFxyXG4gIDFlbSAqIDAuNzUsXHJcbiAgKDIgKiAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXkgKiAwLjc1KSArICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCArXHJcbiAgICAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZ1xyXG4pICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHRcclxuICAoJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14ICsgJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcpICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXNpemU6ICRpbnB1dC1oZWlnaHQtaW5uZXItaGFsZlxyXG4gICRpbnB1dC1oZWlnaHQtaW5uZXItaGFsZiAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LWJvcmRlci13aWR0aDogJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJGN1c3RvbS1zZWxlY3QtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAwLjA3NSkgIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1mb2N1cy1ib3JkZXItY29sb3I6ICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3I7XHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLXdpZHRoOiAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktc206ICRpbnB1dC1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteC1zbTogJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplLXNtOiAkaW5wdXQtZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQtc206ICRpbnB1dC1oZWlnaHQtc20gIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktbGc6ICRpbnB1dC1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteC1sZzogJGlucHV0LXBhZGRpbmcteC1sZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplLWxnOiAkaW5wdXQtZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQtbGc6ICRpbnB1dC1oZWlnaHQtbGcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLXdpZHRoOiAgICAgICAgICAxMDAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWhlaWdodDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1jdXJzb3I6ICAgICAgICAgcG9pbnRlciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1iZzogICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJvcmRlci1yYWRpdXM6ICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJveC1zaGFkb3c6ICAgICBpbnNldCAwIC4yNXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGg6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItaGVpZ2h0OiAgICAgICAgICAgICAgICAgICRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYmc6ICAgICAgICAgICAgICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlcjogICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAwIC4xcmVtIC4yNXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgICAwIDAgMCAxcHggJGJvZHktYmcsICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3ctd2lkdGg6ICAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7IC8vIEZvciBmb2N1cyBib3ggc2hhZG93IGlzc3VlIGluIElFL0VkZ2VcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgbGlnaHRlbigkY29tcG9uZW50LWFjdGl2ZS1iZywgMzUlKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogICAgICAgICAgICAgJGdyYXktNTAwICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1maWxlLWhlaWdodDogICAgICAgICAgICAgICAgJGlucHV0LWhlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWhlaWdodC1pbm5lcjogICAgICAgICAgJGlucHV0LWhlaWdodC1pbm5lciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvY3VzLWJvcmRlci1jb2xvcjogICAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1kaXNhYmxlZC1iZzogICAgICAgICAgICRpbnB1dC1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tZmlsZS1wYWRkaW5nLXk6ICAgICAgICAgICAgICRpbnB1dC1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1wYWRkaW5nLXg6ICAgICAgICAgICAgICRpbnB1dC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1saW5lLWhlaWdodDogICAgICAgICAgICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvbnQtZmFtaWx5OiAgICAgICAgICAgJGlucHV0LWZvbnQtZmFtaWx5ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9udC13ZWlnaHQ6ICAgICAgICAgICAkaW5wdXQtZm9udC13ZWlnaHQgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1jb2xvcjogICAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJnOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLXdpZHRoOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLXJhZGl1czogICAgICAgICAkaW5wdXQtYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJveC1zaGFkb3c6ICAgICAgICAgICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1idXR0b24tY29sb3I6ICAgICAgICAgICRjdXN0b20tZmlsZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJ1dHRvbi1iZzogICAgICAgICAgICAgJGlucHV0LWdyb3VwLWFkZG9uLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtdGV4dDogKFxyXG4vLyAgIGVuOiBcIkJyb3dzZVwiXHJcbi8vICkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGb3JtIHZhbGlkYXRpb25cclxuXHJcbi8vICRmb3JtLWZlZWRiYWNrLW1hcmdpbi10b3A6ICAgICAgICAgICRmb3JtLXRleHQtbWFyZ2luLXRvcCAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stZm9udC1zaXplOiAgICAgICAgICAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3I6ICAgICAgICAgdGhlbWUtY29sb3IoXCJzdWNjZXNzXCIpICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yOiAgICAgICB0aGVtZS1jb2xvcihcImRhbmdlclwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQtY29sb3I6ICAgICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkOiAgICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGZpbGw9JyN7JGZvcm0tZmVlZGJhY2staWNvbi12YWxpZC1jb2xvcn0nIGQ9J00yLjMgNi43M0wuNiA0LjUzYy0uNC0xLjA0LjQ2LTEuNCAxLjEtLjhsMS4xIDEuNCAzLjQtMy44Yy42LS42MyAxLjYtLjI3IDEuMi43bC00IDQuNmMtLjQzLjUtLjguNC0xLjEuMXonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZC1jb2xvcjogICRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZDogICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yfScgdmlld0JveD0nMCAwIDEyIDEyJz48Y2lyY2xlIGN4PSc2JyBjeT0nNicgcj0nNC41Jy8+PHBhdGggc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgZD0nTTUuOCAzLjZoLjRMNiA2LjV6Jy8+PGNpcmNsZSBjeD0nNicgY3k9JzguMicgcj0nLjYnIGZpbGw9JyN7JGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yfScgc3Ryb2tlPSdub25lJy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tdmFsaWRhdGlvbi1zdGF0ZXM6ICgpICFkZWZhdWx0O1xyXG4vLyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxyXG4vLyAkZm9ybS12YWxpZGF0aW9uLXN0YXRlczogbWFwLW1lcmdlKFxyXG4vLyAgIChcclxuLy8gICAgIFwidmFsaWRcIjogKFxyXG4vLyAgICAgICBcImNvbG9yXCI6ICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yLFxyXG4vLyAgICAgICBcImljb25cIjogJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZFxyXG4vLyAgICAgKSxcclxuLy8gICAgIFwiaW52YWxpZFwiOiAoXHJcbi8vICAgICAgIFwiY29sb3JcIjogJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcixcclxuLy8gICAgICAgXCJpY29uXCI6ICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZFxyXG4vLyAgICAgKSxcclxuLy8gICApLFxyXG4vLyAgICRmb3JtLXZhbGlkYXRpb24tc3RhdGVzXHJcbi8vICk7XHJcblxyXG4vLyAvLyBaLWluZGV4IG1hc3RlciBsaXN0XHJcbi8vIC8vXHJcbi8vIC8vIFdhcm5pbmc6IEF2b2lkIGN1c3RvbWl6aW5nIHRoZXNlIHZhbHVlcy4gVGhleSdyZSB1c2VkIGZvciBhIGJpcmQncyBleWUgdmlld1xyXG4vLyAvLyBvZiBjb21wb25lbnRzIGRlcGVuZGVudCBvbiB0aGUgei1heGlzIGFuZCBhcmUgZGVzaWduZWQgdG8gYWxsIHdvcmsgdG9nZXRoZXIuXHJcblxyXG4vLyAkemluZGV4LWRyb3Bkb3duOiAgICAgICAgICAgICAgICAgICAxMDAwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXN0aWNreTogICAgICAgICAgICAgICAgICAgICAxMDIwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LWZpeGVkOiAgICAgICAgICAgICAgICAgICAgICAxMDMwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LW1vZGFsLWJhY2tkcm9wOiAgICAgICAgICAgICAxMDQwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LW1vZGFsOiAgICAgICAgICAgICAgICAgICAgICAxMDUwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXBvcG92ZXI6ICAgICAgICAgICAgICAgICAgICAxMDYwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXRvb2x0aXA6ICAgICAgICAgICAgICAgICAgICAxMDcwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTmF2c1xyXG5cclxuLy8gJG5hdi1saW5rLXBhZGRpbmcteTogICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXYtbGluay1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXYtbGluay1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXYtdGFicy1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWJvcmRlci13aWR0aDogICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWhvdmVyLWJvcmRlci1jb2xvcjogICRncmF5LTIwMCAkZ3JheS0yMDAgJG5hdi10YWJzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstYWN0aXZlLWJvcmRlci1jb2xvcjogJGdyYXktMzAwICRncmF5LTMwMCAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2LXBpbGxzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJG5hdi1waWxscy1saW5rLWFjdGl2ZS1jb2xvcjogICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXYtcGlsbHMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdi1kaXZpZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LWRpdmlkZXItbWFyZ2luLXk6ICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIE5hdmJhclxyXG5cclxuLy8gJG5hdmJhci1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgJHNwYWNlciAvIDIgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLW5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItYnJhbmQtZm9udC1zaXplOiAgICAgICAgICAgICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbi8vIC8vIENvbXB1dGUgdGhlIG5hdmJhci1icmFuZCBwYWRkaW5nLXkgc28gdGhlIG5hdmJhci1icmFuZCB3aWxsIGhhdmUgdGhlIHNhbWUgaGVpZ2h0IGFzIG5hdmJhci10ZXh0IGFuZCBuYXYtbGlua1xyXG4vLyAkbmF2LWxpbmstaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAkbGluZS1oZWlnaHQtYmFzZSArICRuYXYtbGluay1wYWRkaW5nLXkgKiAyICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWJyYW5kLWhlaWdodDogICAgICAgICAgICAgICAkbmF2YmFyLWJyYW5kLWZvbnQtc2l6ZSAqICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWJyYW5kLXBhZGRpbmcteTogICAgICAgICAgICAoJG5hdi1saW5rLWhlaWdodCAtICRuYXZiYXItYnJhbmQtaGVpZ2h0KSAvIDIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLWZvbnQtc2l6ZTogICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLWJvcmRlci1yYWRpdXM6ICAgICAgJGJ0bi1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1kYXJrLWNvbG9yOiAgICAgICAgICAgICAgICAgcmdiYSgkd2hpdGUsIC41KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgkd2hpdGUsIC43NSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiAgICAgICAgcmdiYSgkd2hpdGUsIC4yNSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay10b2dnbGVyLWljb24tYmc6ICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzMwJyBoZWlnaHQ9JzMwJyB2aWV3Qm94PScwIDAgMzAgMzAnPjxwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWRhcmstY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRvZ2dsZXItYm9yZGVyLWNvbG9yOiAgcmdiYSgkd2hpdGUsIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbGlnaHQtY29sb3I6ICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNykgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAgICAgICAgIHJnYmEoJGJsYWNrLCAuOSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6ICAgICAgIHJnYmEoJGJsYWNrLCAuMykgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtdG9nZ2xlci1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzMwJyBoZWlnaHQ9JzMwJyB2aWV3Qm94PScwIDAgMzAgMzAnPjxwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWxpZ2h0LWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIHN0cm9rZS13aWR0aD0nMicgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtdG9nZ2xlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWxpZ2h0LXRoZW1lLWNvbG9yOiAgICAgICAgICAgICAgICAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay10aGVtZS1jb2xvcjogICAgICAgICAgICAgICAgICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyBEcm9wZG93bnNcclxuLy9cclxuLy8gRHJvcGRvd24gbWVudSBjb250YWluZXIgYW5kIGNvbnRlbnRzLlxyXG5cclxuJGRyb3Bkb3duLW1pbi13aWR0aDogMTByZW07XHJcbiRkcm9wZG93bi1wYWRkaW5nLXk6IDAuNXJlbTtcclxuJGRyb3Bkb3duLXNwYWNlcjogMC4xMjVyZW07XHJcbiRkcm9wZG93bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcclxuJGRyb3Bkb3duLWNvbG9yOiAkYm9keS1jb2xvcjtcclxuJGRyb3Bkb3duLWJnOiAkd2hpdGU7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjE1KTtcclxuJGRyb3Bkb3duLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoO1xyXG4kZHJvcGRvd24taW5uZXItYm9yZGVyLXJhZGl1czogc3VidHJhY3QoXHJcbiAgJGRyb3Bkb3duLWJvcmRlci1yYWRpdXMsXHJcbiAgJGRyb3Bkb3duLWJvcmRlci13aWR0aFxyXG4pO1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGdyYXktMjAwO1xyXG4kZHJvcGRvd24tZGl2aWRlci1tYXJnaW4teTogJG5hdi1kaXZpZGVyLW1hcmdpbi15O1xyXG4kZHJvcGRvd24tYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSByZ2JhKCRibGFjaywgMC4xNzUpO1xyXG5cclxuJGRyb3Bkb3duLWxpbmstY29sb3I6ICRncmF5LTIwMDtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItY29sb3I6IGRhcmtlbigkZ3JheS0yMDAsIDUlKTtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICRncmF5LTEwMDtcclxuXHJcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3I7XHJcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1iZzogJGNvbXBvbmVudC1hY3RpdmUtYmc7XHJcblxyXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwO1xyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjI1cmVtO1xyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6IDEuNXJlbTtcclxuXHJcbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICRncmF5LTYwMDtcclxuXHJcbi8vIC8vIFBhZ2luYXRpb25cclxuXHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteTogMC42cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXg6IDAuNzVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogMC4yNXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAwLjVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1sZzogMC43NXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LWxnOiAxLjVyZW07XHJcbiRwYWdpbmF0aW9uLWxpbmUtaGVpZ2h0OiAxLjI1O1xyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRncmF5LTYwMDtcclxuJHBhZ2luYXRpb24tYmc6ICR3aGl0ZTtcclxuJHBhZ2luYXRpb24tYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoO1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRncmF5LTgwMDtcclxuXHJcbiRwYWdpbmF0aW9uLWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcbiRwYWdpbmF0aW9uLWZvY3VzLW91dGxpbmU6IDA7XHJcblxyXG4kcGFnaW5hdGlvbi1ob3Zlci1jb2xvcjogJGxpbmstaG92ZXItY29sb3I7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJnOiAkZ3JheS0yMDA7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogJGdyYXktODAwO1xyXG5cclxuJHBhZ2luYXRpb24tYWN0aXZlLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRwYWdpbmF0aW9uLWFjdGl2ZS1iZzogJGdyYXktODAwO1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkZ3JheS04MDA7XHJcblxyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwO1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogJHdoaXRlO1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXItY29sb3I6ICRncmF5LTMwMDtcclxuXHJcbi8vIC8vIEp1bWJvdHJvblxyXG5cclxuLy8gJGp1bWJvdHJvbi1wYWRkaW5nOiAgICAgICAgICAgICAgICAgMnJlbSAhZGVmYXVsdDtcclxuLy8gJGp1bWJvdHJvbi1jb2xvcjogICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGp1bWJvdHJvbi1iZzogICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ2FyZHNcclxuXHJcbi8vICRjYXJkLXNwYWNlci15OiAgICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtc3BhY2VyLXg6ICAgICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtaW5uZXItYm9yZGVyLXJhZGl1czogICAgICAgICAgc3VidHJhY3QoJGNhcmQtYm9yZGVyLXJhZGl1cywgJGNhcmQtYm9yZGVyLXdpZHRoKSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY2FwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wMykgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNhcC1jb2xvcjogICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWhlaWdodDogICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWltZy1vdmVybGF5LXBhZGRpbmc6ICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2FyZC1ncm91cC1tYXJnaW46ICAgICAgICAgICAgICAgICAkZ3JpZC1ndXR0ZXItd2lkdGggLyAyICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1kZWNrLW1hcmdpbjogICAgICAgICAgICAgICAgICAkY2FyZC1ncm91cC1tYXJnaW4gIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2FyZC1jb2x1bW5zLWNvdW50OiAgICAgICAgICAgICAgICAzICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jb2x1bW5zLWdhcDogICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jb2x1bW5zLW1hcmdpbjogICAgICAgICAgICAgICAkY2FyZC1zcGFjZXIteSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFRvb2x0aXBzXHJcblxyXG4vLyAkdG9vbHRpcC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAyMDBweCAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1iZzogICAgICAgICAgICAgICAgICAgICAgICAkYmxhY2sgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1vcGFjaXR5OiAgICAgICAgICAgICAgICAgICAuOSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtbWFyZ2luOiAgICAgICAgICAgICAgICAgICAgMCAhZGVmYXVsdDtcclxuXHJcbi8vICR0b29sdGlwLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgIC44cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1hcnJvdy1oZWlnaHQ6ICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYXJyb3ctY29sb3I6ICAgICAgICAgICAgICAgJHRvb2x0aXAtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGb3JtIHRvb2x0aXBzIG11c3QgY29tZSBhZnRlciByZWd1bGFyIHRvb2x0aXBzXHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtcGFkZGluZy15OiAgICAgJHRvb2x0aXAtcGFkZGluZy15ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLXBhZGRpbmcteDogICAgICR0b29sdGlwLXBhZGRpbmcteCAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1mb250LXNpemU6ICAgICAkdG9vbHRpcC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtbGluZS1oZWlnaHQ6ICAgJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtb3BhY2l0eTogICAgICAgJHRvb2x0aXAtb3BhY2l0eSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAkdG9vbHRpcC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUG9wb3ZlcnNcclxuXHJcbiRwb3BvdmVyLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItbWF4LXdpZHRoOiAyNDZweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kcG9wb3Zlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcclxuJHBvcG92ZXItaW5uZXItYm9yZGVyLXJhZGl1czogc3VidHJhY3QoXHJcbiAgJHBvcG92ZXItYm9yZGVyLXJhZGl1cyxcclxuICAkcG9wb3Zlci1ib3JkZXItd2lkdGhcclxuKSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cteGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkcG9wb3Zlci1oZWFkZXItYmc6ICAgICAgICAgICAgICAgICBkYXJrZW4oJHBvcG92ZXItYmcsIDMlKSAhZGVmYXVsdDtcclxuLy8gJHBvcG92ZXItaGVhZGVyLWNvbG9yOiAgICAgICAgICAgICAgJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy15OiAwLjc1cmVtO1xyXG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy14OiAxcmVtO1xyXG5cclxuLy8gJHBvcG92ZXItYm9keS1jb2xvcjogICAgICAgICAgICAgICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJvZHktcGFkZGluZy15OiAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy15O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDtcclxuXHJcbi8vICRwb3BvdmVyLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRwb3BvdmVyLWFycm93LWhlaWdodDogICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkcG9wb3Zlci1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAgICAgICAgIGZhZGUtaW4oJHBvcG92ZXItYm9yZGVyLWNvbG9yLCAuMDUpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVG9hc3RzXHJcblxyXG4vLyAkdG9hc3QtbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgICAzNTBweCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgIC44NzVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiAgICAgICAgICAgIHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxcHggIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgIHJnYmEoMCwgMCwgMCwgLjEpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgICAgIDAgLjI1cmVtIC43NXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJHRvYXN0LWhlYWRlci1jb2xvcjogICAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtaGVhZGVyLWJhY2tncm91bmQtY29sb3I6ICAgICByZ2JhKCR3aGl0ZSwgLjg1KSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWhlYWRlci1ib3JkZXItY29sb3I6ICAgICAgICAgcmdiYSgwLCAwLCAwLCAuMDUpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQmFkZ2VzXHJcblxyXG4kYmFkZ2UtZm9udC1zaXplOiByZW15KDEyKTtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA1MDA7XHJcbi8vICRiYWRnZS1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIDAuMjVlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMC41cmVtO1xyXG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbWQ7XHJcblxyXG4vLyAkYmFkZ2UtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgICAkYnRuLXRyYW5zaXRpb24gIWRlZmF1bHQ7XHJcbi8vICRiYWRnZS1mb2N1cy13aWR0aDogICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9jdXMtd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkYmFkZ2UtcGlsbC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAuNmVtICFkZWZhdWx0O1xyXG4vLyAvLyBVc2UgYSBoaWdoZXIgdGhhbiBub3JtYWwgdmFsdWUgdG8gZW5zdXJlIGNvbXBsZXRlbHkgcm91bmRlZCBlZGdlcyB3aGVuXHJcbi8vIC8vIGN1c3RvbWl6aW5nIHBhZGRpbmcgb3IgZm9udC1zaXplIG9uIGxhYmVscy5cclxuLy8gJGJhZGdlLXBpbGwtYm9yZGVyLXJhZGl1czogICAgICAgICAgMTByZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyBNb2RhbHNcclxuXHJcbi8vIFBhZGRpbmcgYXBwbGllZCB0byB0aGUgbW9kYWwgYm9keVxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogMC43NXJlbTtcclxuXHJcbi8vIE1hcmdpbiBiZXR3ZWVuIGVsZW1lbnRzIGluIGZvb3RlciwgbXVzdCBiZSBsb3dlciB0aGFuIG9yIGVxdWFsIHRvIDIgKiAkbW9kYWwtaW5uZXItcGFkZGluZ1xyXG4vLyAkbW9kYWwtZm9vdGVyLW1hcmdpbi1iZXR3ZWVuOiAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRtb2RhbC1kaWFsb2ctbWFyZ2luOiAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtZGlhbG9nLW1hcmdpbi15LXNtLXVwOiAgICAgICAxLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLXRpdGxlLWxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtYmFzZTtcclxuXHJcbiRtb2RhbC1jb250ZW50LWNvbG9yOiBudWxsO1xyXG4kbW9kYWwtY29udGVudC1iZzogJHdoaXRlO1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItd2lkdGg6IDA7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kbW9kYWwtY29udGVudC1pbm5lci1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14czogbm9uZTtcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy1zbS11cDogJGJvcmRlci1yYWRpdXM7XHJcblxyXG4kbW9kYWwtYmFja2Ryb3AtYmc6ICRibGFjaztcclxuJG1vZGFsLWJhY2tkcm9wLW9wYWNpdHk6IDAuNztcclxuJG1vZGFsLWhlYWRlci1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kbW9kYWwtZm9vdGVyLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1oZWFkZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kbW9kYWwtZm9vdGVyLWJvcmRlci13aWR0aDogMDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6IDAuNzVyZW07XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZy14OiAxLjVyZW07XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg7XHJcblxyXG4vLyAkbW9kYWwteGw6ICAgICAgICAgICAgICAgICAgICAgICAgICAxMTQwcHggIWRlZmF1bHQ7XHJcbiRtb2RhbC1sZzogMTA0NHB4O1xyXG4vLyAkbW9kYWwtbWQ6ICAgICAgICAgICAgICAgICAgICAgICAgICA1MDBweCAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLXNtOiAgICAgICAgICAgICAgICAgICAgICAgICAgMzAwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAkbW9kYWwtZmFkZS10cmFuc2Zvcm06ICAgICAgICAgICAgICB0cmFuc2xhdGUoMCwgLTUwcHgpICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc2hvdy10cmFuc2Zvcm06ICAgICAgICAgICAgICBub25lICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0ICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc2NhbGUtdHJhbnNmb3JtOiAgICAgICAgICAgICBzY2FsZSgxLjAyKSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEFsZXJ0c1xyXG4vLyAvL1xyXG4vLyAvLyBEZWZpbmUgYWxlcnQgY29sb3JzLCBib3JkZXIgcmFkaXVzLCBhbmQgcGFkZGluZy5cclxuXHJcbi8vICRhbGVydC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1saW5rLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJGFsZXJ0LWJnLWxldmVsOiAgICAgICAgICAgICAgICAgICAgLTEwICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLWxldmVsOiAgICAgICAgICAgICAgICAtOSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWNvbG9yLWxldmVsOiAgICAgICAgICAgICAgICAgNiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFByb2dyZXNzIGJhcnNcclxuXHJcbi8vICRwcm9ncmVzcy1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIC43NSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgaW5zZXQgMCAuMXJlbSAuMXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLWNvbG9yOiAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItYmc6ICAgICAgICAgICAgICAgICAgIHRoZW1lLWNvbG9yKFwicHJpbWFyeVwiKSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci1hbmltYXRpb24tdGltaW5nOiAgICAgMXMgbGluZWFyIGluZmluaXRlICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLXRyYW5zaXRpb246ICAgICAgICAgICB3aWR0aCAuNnMgZWFzZSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIExpc3QgZ3JvdXBcclxuXHJcbi8vICRsaXN0LWdyb3VwLWNvbG9yOiAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWJnOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xMjUpICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItd2lkdGg6IDBweDtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1ob3Zlci1iZzogICAgICAgICAgICAgICAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3RpdmUtYmc6ICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aXZlLWJvcmRlci1jb2xvcjogICAgJGxpc3QtZ3JvdXAtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1kaXNhYmxlZC1iZzogICAgICAgICAgICAkbGlzdC1ncm91cC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvcjogICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWhvdmVyLWNvbG9yOiAgICAgJGxpc3QtZ3JvdXAtYWN0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1jb2xvcjogICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtYmc6ICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEltYWdlIHRodW1ibmFpbHNcclxuXHJcbi8vICR0aHVtYm5haWwtcGFkZGluZzogICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1iZzogICAgICAgICAgICAgICAgICAgICAgJGJvZHktYmcgIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgMXB4IDJweCByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGaWd1cmVzXHJcblxyXG4vLyAkZmlndXJlLWNhcHRpb24tZm9udC1zaXplOiAgICAgICAgICA5MCUgIWRlZmF1bHQ7XHJcbi8vICRmaWd1cmUtY2FwdGlvbi1jb2xvcjogICAgICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEJyZWFkY3J1bWJzXHJcblxyXG4vLyAkYnJlYWRjcnVtYi1mb250LXNpemU6ICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItcGFkZGluZy15OiAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1wYWRkaW5nLXg6ICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmc6ICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLW1hcmdpbi1ib3R0b206ICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1iZzogICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1kaXZpZGVyOiAgICAgICAgICAgICAgICBxdW90ZShcIi9cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENhcm91c2VsXHJcblxyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1jb2xvcjogICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC13aWR0aDogICAgICAgICAgICAgMTUlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1vcGFjaXR5OiAgICAgICAgICAgLjUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6ICAgICAuOSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtdHJhbnNpdGlvbjogICAgICAgIG9wYWNpdHkgLjE1cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWluZGljYXRvci13aWR0aDogICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItaGVpZ2h0OiAgICAgICAgICAzcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItaGl0LWFyZWEtaGVpZ2h0OiAxMHB4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXNwYWNlcjogICAgICAgICAgM3B4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLWFjdGl2ZS1iZzogICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXRyYW5zaXRpb246ICAgICAgb3BhY2l0eSAuNnMgZWFzZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jYXB0aW9uLXdpZHRoOiAgICAgICAgICAgICA3MCUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1pY29uLXdpZHRoOiAgICAgICAgMjBweCAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbi1iZzogICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBkPSdNNS4yNSAwbC00IDQgNCA0IDEuNS0xLjVMNC4yNSA0bDIuNS0yLjVMNS4yNSAweicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtbmV4dC1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGQ9J00yLjc1IDBsLTEuNSAxLjVMMy43NSA0bC0yLjUgMi41TDIuNzUgOGw0LTQtNC00eicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC10cmFuc2l0aW9uLWR1cmF0aW9uOiAgICAgICAuNnMgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gJGNhcm91c2VsLXRyYW5zaXRpb24tZHVyYXRpb24gZWFzZS1pbi1vdXQgIWRlZmF1bHQ7IC8vIERlZmluZSB0cmFuc2Zvcm0gdHJhbnNpdGlvbiBmaXJzdCBpZiB1c2luZyBtdWx0aXBsZSB0cmFuc2l0aW9ucyAoZS5nLiwgYHRyYW5zZm9ybSAycyBlYXNlLCBvcGFjaXR5IC41cyBlYXNlLW91dGApXHJcblxyXG4vLyAvLyBTcGlubmVyc1xyXG5cclxuLy8gJHNwaW5uZXItd2lkdGg6ICAgICAgICAgMnJlbSAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItaGVpZ2h0OiAgICAgICAgJHNwaW5uZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWJvcmRlci13aWR0aDogIC4yNWVtICFkZWZhdWx0O1xyXG5cclxuLy8gJHNwaW5uZXItd2lkdGgtc206ICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1oZWlnaHQtc206ICAgICAgICRzcGlubmVyLXdpZHRoLXNtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1ib3JkZXItd2lkdGgtc206IC4yZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDbG9zZVxyXG5cclxuLy8gJGNsb3NlLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS41ICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuLy8gJGNsb3NlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtdGV4dC1zaGFkb3c6ICAgICAgICAgICAgICAgICAwIDFweCAwICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENvZGVcclxuXHJcbi8vICRjb2RlLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgIDg3LjUlICFkZWZhdWx0O1xyXG4vLyAkY29kZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAkcGluayAhZGVmYXVsdDtcclxuXHJcbi8vICRrYmQtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAgIC4ycmVtICFkZWZhdWx0O1xyXG4vLyAka2JkLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcclxuLy8gJGtiZC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICAgJGNvZGUtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAka2JkLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRrYmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRwcmUtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJHByZS1zY3JvbGxhYmxlLW1heC1oZWlnaHQ6ICAgICAgICAgMzQwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBVdGlsaXRpZXNcclxuXHJcbi8vICRkaXNwbGF5czogbm9uZSwgaW5saW5lLCBpbmxpbmUtYmxvY2ssIGJsb2NrLCB0YWJsZSwgdGFibGUtcm93LCB0YWJsZS1jZWxsLCBmbGV4LCBpbmxpbmUtZmxleCAhZGVmYXVsdDtcclxuLy8gJG92ZXJmbG93czogYXV0bywgaGlkZGVuICFkZWZhdWx0O1xyXG4vLyAkcG9zaXRpb25zOiBzdGF0aWMsIHJlbGF0aXZlLCBhYnNvbHV0ZSwgZml4ZWQsIHN0aWNreSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFByaW50aW5nXHJcblxyXG4vLyAkcHJpbnQtcGFnZS1zaXplOiAgICAgICAgICAgICAgICAgICBhMyAhZGVmYXVsdDtcclxuLy8gJHByaW50LWJvZHktbWluLXdpZHRoOiAgICAgICAgICAgICAgbWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywgXCJsZ1wiKSAhZGVmYXVsdDtcclxuXHJcbi8vIEp5c2FuIFZhcmlhYmxlc1xyXG5cclxuQGZ1bmN0aW9uIHNwYWNlKCRzaXplKSB7XHJcbiAgQHJldHVybiBtYXAtZ2V0KCRtYXA6ICRzcGFjZXJzLCAka2V5OiAkc2l6ZSk7XHJcbn1cclxuXHJcbiRoZWFkZXItaGVpZ2h0OiA2MnB4O1xyXG4kaGVhZGVyLWhlaWdodC1tZDogMTAwcHg7XHJcbiRoZWFkZXItd2lkdGg6IDI4MHB4O1xyXG5cclxuJGJ0bi1taW4td2lkdGg6IDE2NHB4O1xyXG5cclxuLy8gSi1pbnB1dFxyXG4kai1pbnB1dC1mb250LXNpemU6IDFyZW07XHJcbiRqLWlucHV0LWZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktYmFzZTtcclxuJGotaW5wdXQtZm9udC1zdHlsZTogbm9ybWFsO1xyXG4kai1pbnB1dC1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJhc2U7XHJcblxyXG4kai1pbnB1dC1saW5lLWhlaWdodDogMjBweDtcclxuJGotaW5wdXQtcGFkZGluZy15OiAxNy41cHg7XHJcbiRqLWlucHV0LXBhZGRpbmcteDogMjBweDtcclxuXHJcbiRqLWlucHV0LWJvcmRlci13aWR0aDogMXB4O1xyXG4kai1pbnB1dC1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiRqLWlucHV0LWJvcmRlci1zdHlsZTogc29saWQ7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG4kai1pbnB1dC1ib3JkZXItY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4kai1pbnB1dC10ZXh0LWNvbG9yOiAkYmxhY2s7XHJcbiRqLWlucHV0LW1hc2stY29sb3I6ICRncmF5O1xyXG4kai1pbnB1dC1pY29uLWNvbG9yOiAkb3JhbmdlO1xyXG4kai1pbnB1dC1oZWxwZXItY29sb3I6ICRncmF5LWRhcms7XHJcblxyXG4kai1pbnB1dC1ib3JkZXItY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yLS1hY3RpdmU6ICRwcmltYXJ5O1xyXG4kai1pbnB1dC10ZXh0LWNvbG9yLS1hY3RpdmU6ICRwcmltYXJ5O1xyXG5cclxuJGotaW5wdXQtYmFja2dyb3VuZC1jb2xvci0tZXJyb3I6ICRyZWQtbGlnaHQ7XHJcbiRqLWlucHV0LWhlbHBlci1jb2xvci0tZXJyb3I6ICRyZWQ7XHJcbiRqLWlucHV0LWJvcmRlci1jb2xvci0tZXJyb3I6ICRyZWQ7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yLS1kaXNhYmxlZDogJGlucHV0LWRpc2FibGVkLWJnOyAvLyBmcm9tIGZpZ21hIHByaW1pdGl2ZXMgc2hvdWxkIGJlIGdyYXktMjAwXHJcblxyXG4kai1pbnB1dC1sYWJlbC1wb3NpdGlvbi10b3A6ICRqLWlucHV0LXBhZGRpbmcteSArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tdG9wLWFjdGl2ZTogMTBweDtcclxuJGotaW5wdXQtbGluay1wb3NpdGlvbi10b3A6IDE2cHg7XHJcbiRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLWxlZnQ6ICRqLWlucHV0LXBhZGRpbmcteCArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtbGFiZWwtbGluZS1oZWlnaHQ6ICRqLWlucHV0LWxpbmUtaGVpZ2h0O1xyXG4kai1pbnB1dC1sYWJlbC1jb2xvcjogJGdyYXktZGFyaztcclxuXHJcbiRqLWlucHV0LXBhZGRpbmctdG9wOiAyN3B4O1xyXG4kai1pbnB1dC1wYWRkaW5nLWJvdHRvbTogMTBweDtcclxuJGotaW5wdXQtbWFyZ2luLWJvdHRvbTogMTZweDtcclxuJGotaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICRncmF5O1xyXG4kai1pbnB1dC1wbGFjZWhvbGRlci1wb3NpdGlvbjogJGotaW5wdXQtcGFkZGluZy10b3AgKyAkai1pbnB1dC1ib3JkZXItd2lkdGg7XHJcbiRqLWlucHV0LWNoYXItbGVuZ3RoOiA4Ljk5cHg7XHJcblxyXG4kai1pbnB1dC1idXR0b24tcG9zaXRpb246IDIwcHg7XHJcbiRqLWlucHV0LXNoYWRvdy1wb3NpdGlvbjogJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tbGVmdDtcclxuXHJcbiRqLWlucHV0LWxhYmVsLXotaW5kZXg6IDA7XHJcbiRqLWlucHV0LXNoYWRvdy16LWluZGV4OiAxO1xyXG4kai1pbnB1dC16LWluZGV4OiAyO1xyXG4kai1pbnB1dC1saW5rLXotaW5kZXg6IDM7XHJcbiRqLWlucHV0LWJ1dHRvbi16LWluZGV4OiA0O1xyXG5cclxuJGJveC1zaGFkb3ctdG8tdG9wLWxnOiAwIC0xcmVtIDNyZW0gcmdiYSgkYmxhY2ssIDAuMTc1KTtcclxuXHJcbiRlbmFibGUtcG9pbnRlci1jdXJzb3ItZm9yLWJ1dHRvbnM6IHRydWU7XHJcbiJdfQ== */";

/***/ }),

/***/ 3138:
/*!*****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/no-data/no-data.component.scss?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

module.exports = ".points-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  border-radius: 0 0 12px 12px;\n  height: 300px;\n}\n.points-empty__img {\n  width: 140px;\n  height: 140px;\n}\n.points-empty__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: #666c72;\n  white-space: pre-wrap;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 80767:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-info/points-info.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2ludHMtaW5mby5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 38145:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-status/points-status.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "#ck-button {\n  margin-right: 8px;\n  background-color: #FFFFFF;\n  border-radius: 8px;\n  border: 1px solid #D0D0D0;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 0px 1px rgba(0, 0, 0, 0.04);\n  display: inline-block;\n}\n\n#ck-button label {\n  margin-bottom: 0;\n}\n\n#ck-button label span {\n  text-align: center;\n  padding: 8px 20px;\n  display: block;\n}\n\n#ck-button label input {\n  position: absolute;\n  top: -20px;\n}\n\n#ck-button input:checked + span {\n  background-color: #474B52;\n  color: #ffffff;\n  border-radius: 8px;\n  box-shadow: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvaW50cy1zdGF0dXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLDZHQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBQ0YiLCJmaWxlIjoicG9pbnRzLXN0YXR1cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjay1idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjRDBEMEQwO1xuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwcHggMHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDYpLCAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbiNjay1idXR0b24gbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4jY2stYnV0dG9uIGxhYmVsIHNwYW4ge1xuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGRpc3BsYXk6YmxvY2s7XG59XG5cbiNjay1idXR0b24gbGFiZWwgaW5wdXQge1xuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgdG9wOi0yMHB4O1xufVxuXG4jY2stYnV0dG9uIGlucHV0OmNoZWNrZWQgKyBzcGFuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ3NEI1MjtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cbiJdfQ== */";

/***/ }),

/***/ 22430:
/*!***************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-table/points-table.component.scss?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

module.exports = ".table {\n  background-color: #ffffff;\n  border-radius: 0 0 12px 12px;\n}\n\n.table__header {\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: #666c72;\n  border-bottom: 1px solid rgba(183, 190, 197, 0.5);\n}\n\n.table__header-item {\n  padding: 1rem;\n  margin: 0;\n  text-align: start;\n}\n\n.table__body {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(183, 190, 197, 0.5);\n}\n\n.table__body-item {\n  padding: 1rem;\n  margin: 0;\n  text-align: start;\n  font-size: 0.875rem;\n  line-height: 1.125rem;\n  color: rgba(26, 28, 31, 0.95);\n}\n\n.table__body:last-child {\n  border-radius: 0 0 12px 12px;\n  border-bottom: 1px solid transparent;\n}\n\n.working-time:not(:last-child) {\n  margin-bottom: 12px;\n}\n\n.working-days {\n  display: block;\n  font-weight: 500;\n}\n\n.working-hours {\n  display: block;\n  font-size: 0.75rem;\n  color: rgba(102, 108, 114, 0.95);\n}\n\n.edit-btn svg {\n  fill: #B7BEC5;\n}\n\n.edit-btn:hover svg {\n  fill: #EF5630;\n}\n\n.store-id {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 70912:
/*!***************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/radio-button/radio-button.component.scss?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyYWRpby1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 59318:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/select-city/select-city.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWxlY3QtY2l0eS5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 1416:
/*!***********************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/tabs/tabs.component.scss?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

module.exports = ".tabs {\n  display: flex;\n  border-bottom: 1px solid #eceef1;\n}\n\n.tabs__link {\n  color: #666c72;\n  padding: 1rem 0;\n  display: block;\n  border-bottom: 2px solid transparent;\n  bottom: -1.5px;\n  position: relative;\n}\n\n.tabs__link_active {\n  color: #1a1c1f;\n  font-weight: 500;\n  border-bottom-color: #ef5630;\n}\n\n.tabs__link + .tabs__link {\n  margin-left: 40px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 16840:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/delivery/delivery.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery {\n  display: block;\n  padding-top: 60px;\n}\n\n.delivery__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  height: 70px;\n  box-sizing: border-box;\n  overflow: hidden;\n  background: #fff;\n  padding: 1rem 1.5rem 0 1.5rem;\n  border-radius: 0.5rem 0.5rem 0 0;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n}\n\n.delivery__header-btn {\n  cursor: pointer;\n  padding: 1rem;\n  background-color: #fff;\n  border: none;\n  border-radius: 8px;\n}\n\n.delivery__header-icon {\n  border-radius: 3px;\n}\n\n.delivery__header-btn-text {\n  color: #d43e19;\n}\n\n.tabs {\n  display: flex;\n  border-bottom: 1px solid #eceef1;\n  height: 56px;\n  box-sizing: border-box;\n}\n\n.tabs__link {\n  color: #666c72;\n  padding: 1rem 0;\n  display: block;\n  border-bottom: 2px solid transparent;\n  position: relative;\n}\n\n.tabs__link_active {\n  color: #1a1c1f;\n  font-weight: 500;\n  border-bottom-color: #ef5630;\n}\n\n.tabs__link + .tabs__link {\n  margin-left: 40px;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 96168:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/forms/create-delivery.form/create-delivery.component.scss?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-modal__header {\n  margin-bottom: 1.5rem;\n}\n.delivery-modal__header-title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n}\n.delivery-type {\n  margin-bottom: 0.75rem;\n}\n/* Input */\n.input-icons span {\n  position: absolute;\n}\n.input-icons {\n  width: 100%;\n  margin-bottom: 10px;\n}\n.icon {\n  padding: 10px;\n  min-width: 40px;\n}\n.input-field {\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n.workingTime-input-dash-after {\n  position: relative;\n}\n.workingTime-input-dash-after:after {\n  content: \"\";\n  background: #C4C4C4;\n  width: 10px;\n  height: 2px;\n  display: block;\n  position: absolute;\n  right: -21px;\n  top: 38%;\n}\n.text {\n  font-size: 16px;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 82432:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/information/information.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = ".information {\n  padding: 40px 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsZUFBQTtBQURGIiwiZmlsZSI6ImluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuLmluZm9ybWF0aW9uIHtcbiAgcGFkZGluZzogNDBweCAwO1xufVxuIl19 */";

/***/ }),

/***/ 39520:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/pickup-points/pickup-points.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = ".points {\n  display: block;\n  padding-top: 60px;\n}\n\n.points__header {\n  border-radius: 0.5rem 0.5rem 0 0;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.04);\n}\n\n.points__subheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 56px;\n  overflow: hidden;\n  background: #fff;\n  padding: 0 1rem 0 1rem;\n  border-radius: 0.5rem 0.5rem 0 0;\n}\n\n.points__subheader-title {\n  font-size: 1.25rem;\n  line-height: 1.25rem;\n}\n\n.points__subheader-btn {\n  cursor: pointer;\n  padding: 1rem;\n  background-color: #fff;\n  border: none;\n  border-radius: 8px;\n}\n\n.points__subheader-icon {\n  border-radius: 3px;\n}\n\n.points__subheader-btn-text {\n  color: #d43e19;\n}\n\n.points__filter {\n  border-radius: 0.5rem 0.5rem 0 0;\n  background-color: #f6f7f8;\n  padding: 1rem 1rem;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpY2t1cC1wb2ludHMuY29tcG9uZW50LnNjc3MiLCIuLi8uLi8uLi8uLi8uLi8uLi9zY3NzL192YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtBQURGOztBQUlBO0VBQ0UsZ0NBQUE7RUFDQSw2R0FBQTtBQURGOztBQUlBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0NBQUE7QUFERjs7QUFHRTtFQUNFLGtCQUFBO0VBQ0Esb0JBQUE7QUFESjs7QUFJRTtFQUNFLGVBQUE7RUFDQSxhQUFBO0VBQ0Esc0JDdkJJO0VEd0JKLFlBQUE7RUFDQSxrQkN3ZWtCO0FEMWV0Qjs7QUFLRTtFQUNFLGtCQUFBO0FBSEo7O0FBTUU7RUFDRSxjQ0RVO0FESGQ7O0FBUUE7RUFDRSxnQ0FBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7QUFMRiIsImZpbGUiOiJwaWNrdXAtcG9pbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuLnBvaW50cyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXRvcDogNjBweDtcbn1cblxuLnBvaW50c19faGVhZGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtIDAuNXJlbSAwIDA7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYigwIDAgMCAvIDQlKSwgMHB4IDBweCAycHggcmdiKDAgMCAwIC8gNiUpLCAwcHggNHB4IDhweCByZ2IoMCAwIDAgLyA0JSk7XG59XG5cbi5wb2ludHNfX3N1YmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA1NnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjVyZW0gMC41cmVtIDAgMDtcblxuICAmLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjVyZW07XG4gIH1cblxuICAmLWJ0biB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHBhZGRpbmc6IHNwYWNlKDMpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogJGlucHV0LWJvcmRlci1yYWRpdXM7XG4gIH1cblxuICAmLWljb24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgfVxuXG4gICYtYnRuLXRleHQge1xuICAgIGNvbG9yOiAkb3JhbmdlLWRhcms7XG4gIH1cbn1cblxuLnBvaW50c19fZmlsdGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtIDAuNXJlbSAwIDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbTtcbn1cbiIsIi8vIFZhcmlhYmxlc1xyXG4vL1xyXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3JcclxuLy8gY29uc2lzdGVudCBuYW1pbmcuIEV4OiAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3IgYW5kICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMuXHJcblxyXG4vLyBDb2xvciBzeXN0ZW1cclxuXHJcbiR3aGl0ZTogI2ZmZjtcclxuJGdyYXktMTAwOiAjZmFmN2Y3O1xyXG4kZ3JheS0yMDA6ICNmNmY3Zjg7XHJcbiRncmF5LTMwMDogI2VjZWVmMTtcclxuJGdyYXktNDAwOiAjZDZkYWRmO1xyXG4kZ3JheS01MDA6ICNiN2JlYzU7XHJcbiRncmF5LTYwMDogIzY2NmM3MjtcclxuJGdyYXktNzAwOiAjNDc0YjUyO1xyXG4kZ3JheS04MDA6ICNlOWVjZjE7XHJcbiRncmF5LTkwMDogI2RiZGZlMjtcclxuJGdyYXktMTAwMDogIzgyODI4MjtcclxuJGJsYWNrOiAjMWExYzFmO1xyXG5cclxuJGdyYXlzOiAoKTtcclxuJGdyYXlzOiBtYXAtbWVyZ2UoXHJcbiAgKFxyXG4gICAgJzEwMCc6ICRncmF5LTEwMCxcclxuICAgICcyMDAnOiAkZ3JheS0yMDAsXHJcbiAgICAnMzAwJzogJGdyYXktMzAwLFxyXG4gICAgJzQwMCc6ICRncmF5LTQwMCxcclxuICAgICc1MDAnOiAkZ3JheS01MDAsXHJcbiAgICAnNjAwJzogJGdyYXktNjAwLFxyXG4gICAgJzcwMCc6ICRncmF5LTcwMCxcclxuICAgICc4MDAnOiAkZ3JheS04MDAsXHJcbiAgKSxcclxuICAkZ3JheXNcclxuKTtcclxuXHJcbiRibHVlOiAjMjA0MTc3O1xyXG4kYmx1ZS1saWdodDogIzE1ODZiYjtcclxuJGJsdWUtd2hpdGU6ICNmNWY5ZmQ7XHJcbiRvcmFuZ2U6ICNlZjU2MzA7XHJcbiRvcmFuZ2UtZGFyazogI2Q0M2UxOTtcclxuJG9yYW5nZS1saWdodDogI2Y3YWI5ODtcclxuJHllbGxvdzogI2VmOGYwMDtcclxuJGdyZWVuOiAjMjM5YTU0O1xyXG4kZ3JlZW4tbGlnaHQ6ICM3NGJhNzI7XHJcbiRyZWQ6ICNmZjAwMDA7XHJcbiRyZWQtbGlnaHQ6ICNmZmVmZWY7XHJcblxyXG4kZ3JheTogJGdyYXktNTAwO1xyXG4kZ3JheS1kYXJrOiAkZ3JheS02MDA7XHJcbiRncmF5LWxpZ2h0OiAkZ3JheS00MDA7XHJcblxyXG4kY29sb3JzOiAoKTtcclxuJGNvbG9yczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgICdibHVlJzogJGJsdWUsXHJcbiAgICAnYmx1ZS1saWdodCc6ICRibHVlLWxpZ2h0LFxyXG4gICAgJ2JsdWUtd2hpdGUnOiAkYmx1ZS13aGl0ZSxcclxuICAgICdvcmFuZ2UnOiAkb3JhbmdlLFxyXG4gICAgJ29yYW5nZS1kYXJrJzogJG9yYW5nZS1kYXJrLFxyXG4gICAgJ29yYW5nZS1saWdodCc6ICRvcmFuZ2UtbGlnaHQsXHJcbiAgICAneWVsbG93JzogJHllbGxvdyxcclxuICAgICdncmVlbic6ICRncmVlbixcclxuICAgICdncmVlbi1saWdodCc6ICRncmVlbi1saWdodCxcclxuICAgICdyZWQnOiAkcmVkLFxyXG4gICAgJ3JlZC1saWdodCc6ICRyZWQtbGlnaHQsXHJcbiAgICAnYmxhY2snOiAkYmxhY2ssXHJcbiAgICAnYmxhY2stbGlnaHQnOiAkZ3JheS03MDAsXHJcbiAgICAnZ3JheSc6ICRncmF5LTUwMCxcclxuICAgICdncmF5LWRhcmsnOiAkZ3JheS02MDAsXHJcbiAgICAnZ3JheS1saWdodCc6ICRncmF5LTQwMCxcclxuICApLFxyXG4gICRjb2xvcnNcclxuKTtcclxuXHJcbiRwcmltYXJ5OiAkb3JhbmdlO1xyXG4kc2Vjb25kYXJ5OiAkYmx1ZTtcclxuJHN1Y2Nlc3M6ICRncmVlbjtcclxuJGluZm86ICRibHVlLWxpZ2h0O1xyXG4kd2FybmluZzogJHllbGxvdztcclxuJGRhbmdlcjogJHJlZDtcclxuJGxpZ2h0OiAkZ3JheS01MDA7XHJcbiRkYXJrOiAkYmxhY2s7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAoKTtcclxuJHRoZW1lLWNvbG9yczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcclxuICAgICdzdWNjZXNzJzogJHN1Y2Nlc3MsXHJcbiAgICAnaW5mbyc6ICRpbmZvLFxyXG4gICAgJ3dhcm5pbmcnOiAkd2FybmluZyxcclxuICAgICdkYW5nZXInOiAkZGFuZ2VyLFxyXG4gICAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICAgJ2RhcmsnOiAkZGFyayxcclxuICAgICd3aGl0ZSc6ICR3aGl0ZSxcclxuICApLFxyXG4gICR0aGVtZS1jb2xvcnNcclxuKTtcclxuXHJcbi8vICR0ZXh0LWNvbG9yczogKCk7XHJcbi8vICR0ZXh0LWNvbG9yczogbWFwLW1lcmdlKFxyXG4vLyAgIChcclxuLy8gICAgICdkZWZhdWx0JzogJGJsYWNrLFxyXG4vLyAgICAgJ2xvdy1jb250cmFzdCc6ICRncmF5LTYwMCxcclxuLy8gICAgICdpbmZvJzogJGdyYXktNTAwLFxyXG4vLyAgICAgJ2Vycm9yJzogJHJlZCxcclxuLy8gICAgICdsaW5rJzogJGJsdWUsXHJcbi8vICAgICAnYmFsYW5jZSc6ICRncmVlbixcclxuLy8gICAgICdiYWxhbmNlLWNvaW5zJzogJGdyZWVuLWxpZ2h0LFxyXG4vLyAgICksXHJcbi8vICAgJHRleHQtY29sb3JzXHJcbi8vICk7XHJcblxyXG4vLyBTcGFjaW5nXHJcbi8vXHJcbi8vIENvbnRyb2wgdGhlIGRlZmF1bHQgc3R5bGluZyBvZiBtb3N0IEJvb3RzdHJhcCBlbGVtZW50cyBieSBtb2RpZnlpbmcgdGhlc2VcclxuLy8gdmFyaWFibGVzLiBNb3N0bHkgZm9jdXNlZCBvbiBzcGFjaW5nLlxyXG4vLyBZb3UgY2FuIGFkZCBtb3JlIGVudHJpZXMgdG8gdGhlICRzcGFjZXJzIG1hcCwgc2hvdWxkIHlvdSBuZWVkIG1vcmUgdmFyaWF0aW9uLlxyXG5cclxuJHNwYWNlcjogMXJlbTtcclxuJHNwYWNlcnM6ICgpO1xyXG4kc3BhY2VyczogbWFwLW1lcmdlKFxyXG4gIChcclxuICAgIDA6IDAsXHJcbiAgICAvLyAwcHhcclxuICAgIDE6ICRzcGFjZXIgKiAwLjI1LFxyXG4gICAgLy8gNHB4IHh4cyxcclxuICAgIDI6ICRzcGFjZXIgKiAwLjUsXHJcbiAgICAvLyA4cHggeHMsXHJcbiAgICAzOiAkc3BhY2VyLFxyXG4gICAgLy8gMTZweCBzbVxyXG4gICAgNDogJHNwYWNlciAqIDEuNSxcclxuICAgIC8vIDI0cHggbWQsXHJcbiAgICA1OiAkc3BhY2VyICogMixcclxuICAgIC8vIDMycHggbGcsXHJcbiAgICA2OiAkc3BhY2VyICogMi41LFxyXG4gICAgLy8gNDBweCB4bCxcclxuICAgIDc6ICRzcGFjZXIgKiAzLjUsXHJcbiAgICAvLyA1NnB4IHh4bFxyXG4gICAgODogJHNwYWNlciAqIDQsXHJcbiAgICAvLyA2NHB4IHh4bFxyXG4gICksXHJcbiAgJHNwYWNlcnNcclxuKTtcclxuXHJcbi8vIEJvZHlcclxuLy9cclxuLy8gU2V0dGluZ3MgZm9yIHRoZSBgPGJvZHk+YCBlbGVtZW50LlxyXG5cclxuJGJvZHktYmc6ICR3aGl0ZTtcclxuJGJvZHktY29sb3I6ICRkYXJrO1xyXG5cclxuLy8gTGlua3NcclxuLy9cclxuLy8gU3R5bGUgYW5jaG9yIGVsZW1lbnRzLlxyXG5cclxuJGxpbmstY29sb3I6IHRoZW1lLWNvbG9yKCdwcmltYXJ5Jyk7XHJcbiRsaW5rLWRlY29yYXRpb246IG5vbmU7XHJcbiRsaW5rLWhvdmVyLWNvbG9yOiAkb3JhbmdlLWRhcms7XHJcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4vLyBQYXJhZ3JhcGhzXHJcbi8vXHJcbi8vIFN0eWxlIHAgZWxlbWVudC5cclxuXHJcbiRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuXHJcbi8vIEdyaWQgYnJlYWtwb2ludHNcclxuLy9cclxuLy8gRGVmaW5lIHRoZSBtaW5pbXVtIGRpbWVuc2lvbnMgYXQgd2hpY2ggeW91ciBsYXlvdXQgd2lsbCBjaGFuZ2UsXHJcbi8vIGFkYXB0aW5nIHRvIGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMsIGZvciB1c2UgaW4gbWVkaWEgcXVlcmllcy5cclxuXHJcbiRncmlkLWJyZWFrcG9pbnRzOiAoXHJcbiAgeHM6IDAsXHJcbiAgc206IDY3MHB4LFxyXG4gIG1kOiA5NjBweCxcclxuICBsZzogMTI4MHB4LFxyXG4gIHhsOiAxOTIwcHgsXHJcbik7XHJcblxyXG4vLyBHcmlkIGNvbnRhaW5lcnNcclxuLy9cclxuLy8gRGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGAuY29udGFpbmVyYCBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy5cclxuXHJcbiRjb250YWluZXItbWF4LXdpZHRoczogKFxyXG4gIHNtOiA1NDBweCxcclxuICBtZDogNzIwcHgsXHJcbiAgbGc6IDk2MHB4LFxyXG4gIHhsOiAxMjgwcHgsXHJcbik7XHJcblxyXG4vLyBHcmlkIGNvbHVtbnNcclxuLy9cclxuLy8gU2V0IHRoZSBudW1iZXIgb2YgY29sdW1ucyBhbmQgc3BlY2lmeSB0aGUgd2lkdGggb2YgdGhlIGd1dHRlcnMuXHJcblxyXG4kZ3JpZC1jb2x1bW5zOiAxMjtcclxuJGdyaWQtZ3V0dGVyLXdpZHRoOiAzMHB4O1xyXG4kZ3JpZC1yb3ctY29sdW1uczogNjtcclxuXHJcbi8vIENvbXBvbmVudHNcclxuLy9cclxuLy8gRGVmaW5lIGNvbW1vbiBwYWRkaW5nIGFuZCBib3JkZXIgcmFkaXVzIHNpemVzIGFuZCBtb3JlLlxyXG5cclxuJGxpbmUtaGVpZ2h0LWxnOiAxLjU7XHJcbiRsaW5lLWhlaWdodC1zbTogMS41O1xyXG5cclxuJGJvcmRlci13aWR0aDogMXB4O1xyXG4kYm9yZGVyLWNvbG9yOiAkZ3JheS0zMDA7XHJcblxyXG4kYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4kYm9yZGVyLXJhZGl1cy1tZDogcmVteSgxMik7XHJcbiRib3JkZXItcmFkaXVzLWxnOiAyLjVyZW07XHJcbiRib3JkZXItcmFkaXVzLXNtOiAwLjJyZW07XHJcblxyXG4vLyBMMFxyXG4kYm94LXNoYWRvdy14czogMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxuLy8gTDFcclxuJGJveC1zaGFkb3ctc206IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNiksXHJcbiAgMHB4IDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA0KTtcclxuLy8gTDJcclxuJGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4wNCksXHJcbiAgMHB4IDEwcHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xyXG4vLyBMM1xyXG4kYm94LXNoYWRvdy1sZzogMHB4IDE0cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4vLyBMNFxyXG4kYm94LXNoYWRvdy14bDogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMHB4IDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA0KSxcclxuICAwcHggMTZweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDBweCAyNHB4IDMycHggcmdiYSgwLCAwLCAwLCAwLjA0KTtcclxuXHJcbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGU7XHJcbiRjb21wb25lbnQtYWN0aXZlLWJnOiB0aGVtZS1jb2xvcigncHJpbWFyeScpO1xyXG5cclxuJHRyYW5zaXRpb24tYmFzZTogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XHJcbiR0cmFuc2l0aW9uLWZhZGU6IG9wYWNpdHkgMC4xNXMgbGluZWFyO1xyXG4kdHJhbnNpdGlvbi1jb2xsYXBzZTogaGVpZ2h0IDAuMzVzIGVhc2U7XHJcbiR0cmFuc2l0aW9uLW1heC1oZWlnaHQ6IGFsbCAwLjZzIGVhc2U7XHJcblxyXG4vLyBUeXBvZ3JhcGh5XHJcbi8vXHJcbi8vIEZvbnQsIGxpbmUtaGVpZ2h0LCBhbmQgY29sb3IgZm9yIGJvZHkgdGV4dCwgaGVhZGluZ3MsIGFuZCBtb3JlLlxyXG5cclxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiBTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsXHJcbiAgJ0xpYmVyYXRpb24gTW9ubycsICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZSAhZGVmYXVsdDtcclxuJGZvbnQtZmFtaWx5LWJhc2U6ICRmb250LWZhbWlseS1zYW5zLXNlcmlmO1xyXG5cclxuJGZvbnQtc2l6ZS1iYXNlOiAxcmVtOyAvLyAxNnB4XHJcbiRmb250LXNpemUtbGc6ICRmb250LXNpemUtYmFzZSAqIDEuMjUgIWRlZmF1bHQ7IC8vIDIwcHhcclxuJGZvbnQtc2l6ZS1zbTogJGZvbnQtc2l6ZS1iYXNlICogMC44NzUgIWRlZmF1bHQ7IC8vIDE0cHhcclxuJGZvbnQtc2l6ZS14czogcmVteSgxMik7XHJcblxyXG4kZm9udC13ZWlnaHQtbGlnaHRlcjogbGlnaHRlcjtcclxuJGZvbnQtd2VpZ2h0LWxpZ2h0OiAzMDA7XHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMDtcclxuJGZvbnQtd2VpZ2h0LWJvbGQ6IDUwMDtcclxuJGZvbnQtd2VpZ2h0LWJvbGRlcjogYm9sZGVyO1xyXG5cclxuJGZvbnQtd2VpZ2h0LWJhc2U6ICRmb250LXdlaWdodC1ub3JtYWw7XHJcbiRsaW5lLWhlaWdodC1iYXNlOiAxLjU7XHJcblxyXG4kaDEtZm9udC1zaXplOiByZW15KDMwKTtcclxuJGgyLWZvbnQtc2l6ZTogcmVteSgyNik7XHJcbiRoMy1mb250LXNpemU6IHJlbXkoMjQpO1xyXG4kaDQtZm9udC1zaXplOiByZW15KDIyKTtcclxuJGg1LWZvbnQtc2l6ZTogcmVteSgyMCk7XHJcbiRoNi1mb250LXNpemU6IHJlbXkoMTgpO1xyXG5cclxuJGgxLWZvbnQtc2l6ZXM6IChcclxuICB4czogMzBweCxcclxuICBzbTogMzZweCxcclxuICBtZDogNDhweCxcclxuICBsZzogNDhweCxcclxuICB4bDogNjBweCxcclxuKTtcclxuXHJcbi8vIGgyIHNpemVzXHJcbiRoMi1mb250LXNpemVzOiAoXHJcbiAgeHM6IDI2cHgsXHJcbiAgc206IDMwcHgsXHJcbiAgbWQ6IDQwcHgsXHJcbiAgbGc6IDQ0cHgsXHJcbiAgeGw6IDU0cHgsXHJcbik7XHJcblxyXG4vLyBoMyBzaXplc1xyXG4kaDMtZm9udC1zaXplczogKFxyXG4gIHhzOiAyNHB4LFxyXG4gIHNtOiAyNnB4LFxyXG4gIG1kOiAzMnB4LFxyXG4gIGxnOiAzNnB4LFxyXG4gIHhsOiA0NHB4LFxyXG4pO1xyXG5cclxuLy8gaDQgc2l6ZXNcclxuJGg0LWZvbnQtc2l6ZXM6IChcclxuICB4czogMjJweCxcclxuICBzbTogMjRweCxcclxuICBtZDogMjRweCxcclxuICBsZzogMjhweCxcclxuICB4bDogMjhweCxcclxuKTtcclxuXHJcbi8vIGg1IHNpemVzXHJcbiRoNS1mb250LXNpemVzOiAoXHJcbiAgeHM6IDIwcHgsXHJcbiAgc206IDIycHgsXHJcbiAgbWQ6IDIycHgsXHJcbiAgbGc6IDI0cHgsXHJcbiAgeGw6IDI0cHgsXHJcbik7XHJcblxyXG4vLyBoNiBzaXplc1xyXG4kaDYtZm9udC1zaXplczogKFxyXG4gIHhzOiAxOHB4LFxyXG4gIHNtOiAxOHB4LFxyXG4gIG1kOiAxOHB4LFxyXG4gIGxnOiAyMHB4LFxyXG4gIHhsOiAyMHB4LFxyXG4pO1xyXG5cclxuJGhlYWRpbmdzLW1hcmdpbi1ib3R0b206ICRzcGFjZXIgLyAyICFkZWZhdWx0O1xyXG4kaGVhZGluZ3MtZm9udC1mYW1pbHk6IG51bGw7XHJcbiRoZWFkaW5ncy1mb250LXdlaWdodDogNTAwO1xyXG4kaGVhZGluZ3MtZm9udC13ZWlnaHQtbGlnaHQ6IDQwMDtcclxuJGhlYWRpbmdzLWxpbmUtaGVpZ2h0OiAxLjU7XHJcbiRoZWFkaW5ncy1jb2xvcjogbnVsbDtcclxuXHJcbiRwMC1mb250LXNpemVzOiAoXHJcbiAgeHM6IDE2cHgsXHJcbiAgc206IDE2cHgsXHJcbiAgbWQ6IDE2cHgsXHJcbiAgbGc6IDE2cHgsXHJcbiAgeGw6IDE2cHgsXHJcbik7XHJcblxyXG4kcDEtZm9udC1zaXplczogKFxyXG4gIHhzOiAxNnB4LFxyXG4gIHNtOiAxNnB4LFxyXG4gIG1kOiAxOHB4LFxyXG4gIGxnOiAxOHB4LFxyXG4gIHhsOiAxOHB4LFxyXG4pO1xyXG5cclxuJHAyLWZvbnQtc2l6ZXM6IChcclxuICB4czogMTRweCxcclxuICBzbTogMTRweCxcclxuICBtZDogMTZweCxcclxuICBsZzogMTZweCxcclxuICB4bDogMTZweCxcclxuKTtcclxuXHJcbiRwMy1mb250LXNpemVzOiAoXHJcbiAgeHM6IDEycHgsXHJcbiAgc206IDEycHgsXHJcbiAgbWQ6IDE0cHgsXHJcbiAgbGc6IDE0cHgsXHJcbiAgeGw6IDE0cHgsXHJcbik7XHJcblxyXG4kcDQtZm9udC1zaXplczogKFxyXG4gIHhzOiAxMHB4LFxyXG4gIHNtOiAxMHB4LFxyXG4gIG1kOiAxMnB4LFxyXG4gIGxnOiAxMnB4LFxyXG4gIHhsOiAxMnB4LFxyXG4pO1xyXG5cclxuJHNtYWxsLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS14cztcclxuXHJcbiR0ZXh0LW11dGVkOiAkZ3JheS02MDA7XHJcblxyXG4vLyAkYmxvY2txdW90ZS1zbWFsbC1jb2xvcjogICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbi8vICRibG9ja3F1b3RlLXNtYWxsLWZvbnQtc2l6ZTogICRzbWFsbC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRibG9ja3F1b3RlLWZvbnQtc2l6ZTogICAgICAgICRmb250LXNpemUtYmFzZSAqIDEuMjUgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaHItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkaHItYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJG1hcmstcGFkZGluZzogICAgICAgICAgICAgICAgLjJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRkdC1mb250LXdlaWdodDogICAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG5cclxuLy8gJGtiZC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgaW5zZXQgMCAtLjFyZW0gMCByZ2JhKCRibGFjaywgLjI1KSAhZGVmYXVsdDtcclxuLy8gJG5lc3RlZC1rYmQtZm9udC13ZWlnaHQ6ICAgICAgJGZvbnQtd2VpZ2h0LWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1pbmxpbmUtcGFkZGluZzogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRtYXJrLWJnOiAgICAgICAgICAgICAgICAgICAgICNmY2Y4ZTMgIWRlZmF1bHQ7XHJcblxyXG4vLyAkaHItbWFyZ2luLXk6ICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVGFibGVzXHJcbi8vIC8vXHJcbi8vIC8vIEN1c3RvbWl6ZXMgdGhlIGAudGFibGVgIGNvbXBvbmVudCB3aXRoIGJhc2ljIHZhbHVlcywgZWFjaCB1c2VkIGFjcm9zcyBhbGwgdGFibGUgdmFyaWF0aW9ucy5cclxuXHJcbi8vICR0YWJsZS1jZWxsLXBhZGRpbmc6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWNlbGwtcGFkZGluZy1zbTogICAgICAgLjNyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtY29sb3I6ICAgICAgICAgICAgICAgICAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWJnOiAgICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWFjY2VudC1iZzogICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wNSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1ob3Zlci1jb2xvcjogICAgICAgICAgICR0YWJsZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWhvdmVyLWJnOiAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wNzUpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYWN0aXZlLWJnOiAgICAgICAgICAgICAkdGFibGUtaG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtYm9yZGVyLXdpZHRoOiAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWhlYWQtYmc6ICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtaGVhZC1jb2xvcjogICAgICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtZGFyay1jb2xvcjogICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWJnOiAgICAgICAgICAgICAgICRncmF5LTgwMCAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWRhcmstYWNjZW50LWJnOiAgICAgICAgcmdiYSgkd2hpdGUsIC4wNSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICR0YWJsZS1kYXJrLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtZGFyay1ob3Zlci1iZzogICAgICAgICByZ2JhKCR3aGl0ZSwgLjA3NSkgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1kYXJrLWJvcmRlci1jb2xvcjogICAgIGxpZ2h0ZW4oJHRhYmxlLWRhcmstYmcsIDcuNSUpICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLXN0cmlwZWQtb3JkZXI6ICAgICAgICAgb2RkICFkZWZhdWx0O1xyXG5cclxuLy8gJHRhYmxlLWNhcHRpb24tY29sb3I6ICAgICAgICAgJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAkdGFibGUtYmctbGV2ZWw6ICAgICAgICAgICAgICAtOSAhZGVmYXVsdDtcclxuLy8gJHRhYmxlLWJvcmRlci1sZXZlbDogICAgICAgICAgLTYgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBCdXR0b25zICsgRm9ybXNcclxuLy8gLy9cclxuLy8gLy8gU2hhcmVkIHZhcmlhYmxlcyB0aGF0IGFyZSByZWFzc2lnbmVkIHRvIGAkaW5wdXQtYCBhbmQgYCRidG4tYCBzcGVjaWZpYyB2YXJpYWJsZXMuXHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMXJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXg6IDEuNzVyZW07XHJcbiRpbnB1dC1idG4tZm9udC1mYW1pbHk6IG51bGw7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQ6IDEuNTtcclxuXHJcbiRpbnB1dC1idG4tZm9jdXMtd2lkdGg6IHJlbXkoMSk7XHJcbiRpbnB1dC1idG4tZm9jdXMtY29sb3I6ICRwcmltYXJ5O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1zbTogMC4yNXJlbTtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDEuMnJlbTtcclxuJGlucHV0LWJ0bi1mb250LXNpemUtc206ICRmb250LXNpemUtYmFzZTtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbTogJGxpbmUtaGVpZ2h0LXNtO1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktbGc6ICRpbnB1dC1idG4tcGFkZGluZy15O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogMi41cmVtO1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZzogJGZvbnQtc2l6ZS1iYXNlO1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0O1xyXG5cclxuJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGg7XHJcblxyXG4vLyBCdXR0b25zXHJcbi8vXHJcbi8vIEZvciBlYWNoIG9mIEJvb3RzdHJhcCdzIGJ1dHRvbnMsIGRlZmluZSB0ZXh0LCBiYWNrZ3JvdW5kLCBhbmQgYm9yZGVyIGNvbG9yLlxyXG5cclxuJGJ0bi1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15O1xyXG4kYnRuLXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXg7XHJcbiRidG4tZm9udC1mYW1pbHk6ICRpbnB1dC1idG4tZm9udC1mYW1pbHk7XHJcbiRidG4tZm9udC1zaXplOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZTtcclxuJGJ0bi1saW5lLWhlaWdodDogJGlucHV0LWJ0bi1saW5lLWhlaWdodDtcclxuJGJ0bi13aGl0ZS1zcGFjZTogbnVsbDsgLy8gU2V0IHRvIGBub3dyYXBgIHRvIHByZXZlbnQgdGV4dCB3cmFwcGluZ1xyXG5cclxuJGJ0bi1wYWRkaW5nLXktc206ICRpbnB1dC1idG4tcGFkZGluZy15LXNtO1xyXG4kYnRuLXBhZGRpbmcteC1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXgtc207XHJcbiRidG4tZm9udC1zaXplLXNtOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbTtcclxuJGJ0bi1saW5lLWhlaWdodC1zbTogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbTtcclxuXHJcbiRidG4tcGFkZGluZy15LWxnOiAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZztcclxuJGJ0bi1wYWRkaW5nLXgtbGc6ICRpbnB1dC1idG4tcGFkZGluZy14LWxnO1xyXG4kYnRuLWZvbnQtc2l6ZS1sZzogJGlucHV0LWJ0bi1mb250LXNpemUtbGc7XHJcbiRidG4tbGluZS1oZWlnaHQtbGc6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc7XHJcblxyXG4kYnRuLWJvcmRlci13aWR0aDogJGlucHV0LWJ0bi1ib3JkZXItd2lkdGg7XHJcblxyXG4kYnRuLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsO1xyXG4kYnRuLWJveC1zaGFkb3c6IG5vbmU7XHJcbiRidG4tZm9jdXMtd2lkdGg6ICRpbnB1dC1idG4tZm9jdXMtd2lkdGg7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93O1xyXG4kYnRuLWRpc2FibGVkLW9wYWNpdHk6IDAuNTtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbi8vICRidG4tbGluay1kaXNhYmxlZC1jb2xvcjogICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRidG4tYmxvY2stc3BhY2luZy15OiAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQWxsb3dzIGZvciBjdXN0b21pemluZyBidXR0b24gcmFkaXVzIGluZGVwZW5kZW50bHkgZnJvbSBnbG9iYWwgYm9yZGVyIHJhZGl1c1xyXG4kYnRuLWJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiRidG4tYm9yZGVyLXJhZGl1cy1sZzogMTJweDtcclxuJGJ0bi1ib3JkZXItcmFkaXVzLXNtOiA4cHg7XHJcblxyXG4kYnRuLXRyYW5zaXRpb246ICR0cmFuc2l0aW9uLWJhc2U7XHJcblxyXG4vLyAvLyBGb3Jtc1xyXG5cclxuLy8gJGxhYmVsLW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XHJcbiRpbnB1dC1wYWRkaW5nLXg6IHJlbXkoMjApO1xyXG4kaW5wdXQtZm9udC1mYW1pbHk6ICRpbnB1dC1idG4tZm9udC1mYW1pbHk7XHJcbiRpbnB1dC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplO1xyXG4kaW5wdXQtZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1iYXNlO1xyXG4kaW5wdXQtbGluZS1oZWlnaHQ6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQ7XHJcblxyXG4vLyAkaW5wdXQtcGFkZGluZy15LXNtOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1wYWRkaW5nLXgtc206ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyAkaW5wdXQtbGluZS1oZWlnaHQtc206ICAgICAgICAgICAgICAgICAgJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbi8vICRpbnB1dC1wYWRkaW5nLXktbGc6ICAgICAgICAgICAgICAgICAgICAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcclxuLy8gJGlucHV0LXBhZGRpbmcteC1sZzogICAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tcGFkZGluZy14LWxnICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplLWxnOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICAgICAgICAgICRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYmc6ICR3aGl0ZTtcclxuJGlucHV0LWRpc2FibGVkLWJnOiAkZ3JheS0yMDA7XHJcblxyXG4kaW5wdXQtY29sb3I6ICRkYXJrO1xyXG4kaW5wdXQtYm9yZGVyLWNvbG9yOiAkZ3JheS00MDA7XHJcbiRpbnB1dC1ib3JkZXItd2lkdGg6ICRpbnB1dC1idG4tYm9yZGVyLXdpZHRoO1xyXG4kaW5wdXQtYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiRpbnB1dC1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiRpbnB1dC1ib3JkZXItcmFkaXVzLWxnOiAkaW5wdXQtYm9yZGVyLXJhZGl1cztcclxuJGlucHV0LWJvcmRlci1yYWRpdXMtc206ICRpbnB1dC1ib3JkZXItcmFkaXVzO1xyXG5cclxuJGlucHV0LWZvY3VzLWJnOiAkd2hpdGU7XHJcbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3I6ICRwcmltYXJ5O1xyXG4kaW5wdXQtZm9jdXMtY29sb3I6ICRpbnB1dC1jb2xvcjtcclxuJGlucHV0LWZvY3VzLXdpZHRoOiAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoO1xyXG4kaW5wdXQtZm9jdXMtYm94LXNoYWRvdzogJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93O1xyXG5cclxuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRpbnB1dC1wbGFpbnRleHQtY29sb3I6ICRib2R5LWNvbG9yO1xyXG5cclxuLy8gJGlucHV0LWhlaWdodC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICRpbnB1dC1ib3JkZXItd2lkdGggKiAyICFkZWZhdWx0O1xyXG5cclxuLy8gJGlucHV0LWhlaWdodC1pbm5lcjogICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAxZW0sICRpbnB1dC1wYWRkaW5nLXkgKiAyKSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1pbm5lci1oYWxmOiAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAuNWVtLCAkaW5wdXQtcGFkZGluZy15KSAhZGVmYXVsdDtcclxuLy8gJGlucHV0LWhlaWdodC1pbm5lci1xdWFydGVyOiAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQgKiAuMjVlbSwgJGlucHV0LXBhZGRpbmcteSAvIDIpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhlaWdodDogNTZweDtcclxuLy8gJGlucHV0LWhlaWdodC1zbTogICAgICAgICAgICAgICAgICAgICAgIGFkZCgkaW5wdXQtbGluZS1oZWlnaHQtc20gKiAxZW0sIGFkZCgkaW5wdXQtcGFkZGluZy15LXNtICogMiwgJGlucHV0LWhlaWdodC1ib3JkZXIsIGZhbHNlKSkgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICAgICAgICBhZGQoJGlucHV0LWxpbmUtaGVpZ2h0LWxnICogMWVtLCBhZGQoJGlucHV0LXBhZGRpbmcteS1sZyAqIDIsICRpbnB1dC1oZWlnaHQtYm9yZGVyLCBmYWxzZSkpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXRyYW5zaXRpb246ICR0cmFuc2l0aW9uLWJhc2U7XHJcblxyXG4vLyAkZm9ybS10ZXh0LW1hcmdpbi10b3A6ICAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tY2hlY2staW5wdXQtZ3V0dGVyOiAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWNoZWNrLWlucHV0LW1hcmdpbi15OiAgICAgICAgICAgICAuM3JlbSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tY2hlY2staW5wdXQtbWFyZ2luLXg6ICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWNoZWNrLWlubGluZS1tYXJnaW4teDogICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWNoZWNrLWlubGluZS1pbnB1dC1tYXJnaW4teDogICAgICAuMzEyNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWdyaWQtZ3V0dGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxMHB4ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1ncm91cC1tYXJnaW4tYm90dG9tOiAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1jb2xvcjogICAgICAgICAgICAgICAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1iZzogICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRpbnB1dC1ncm91cC1hZGRvbi1ib3JkZXItY29sb3I6ICAgICAgICAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1mb3Jtcy10cmFuc2l0aW9uOiAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1ndXR0ZXI6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLXNwYWNlci14OiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1jdXJzb3I6ICAgICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1zaXplOiAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYmc6ICAgICAgICAgICAkaW5wdXQtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJnLXNpemU6ICAgICAgNTAlIDUwJSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1ib3gtc2hhZG93OiAgICRpbnB1dC1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWJvcmRlci13aWR0aDogJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1sYWJlbC1jb2xvcjogICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1kaXNhYmxlZC1iZzogICAgICAgICAgJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtbGFiZWwtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3I6ICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1jaGVja2VkLWJnOiAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1kaXNhYmxlZC1iZzogIHJnYmEodGhlbWUtY29sb3IoXCJwcmltYXJ5XCIpLCAuNSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1ib3gtc2hhZG93OiAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1ib3JkZXItY29sb3I6ICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItZm9jdXMtYm94LXNoYWRvdzogICAgICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWZvY3VzLWJvcmRlci1jb2xvcjogICAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jb250cm9sLWluZGljYXRvci1hY3RpdmUtY29sb3I6ICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAgICAgIGxpZ2h0ZW4oJGNvbXBvbmVudC1hY3RpdmUtYmcsIDM1JSkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJveC1zaGFkb3c6ICAgIG5vbmUgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJvcmRlci1jb2xvcjogICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWljb24tY2hlY2tlZDogICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCc+PHBhdGggZmlsbD0nI3skY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLWNoZWNrZWQtY29sb3J9JyBkPSdNNi41NjQuNzVsLTMuNTkgMy42MTItMS41MzgtMS41NUwwIDQuMjZsMi45NzQgMi45OUw4IDIuMTkzeicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYmc6ICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1jb2xvcjogICAgICAgICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaWNvbi1pbmRldGVybWluYXRlOiAgICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzQnIGhlaWdodD0nNCcgdmlld0JveD0nMCAwIDQgNCc+PHBhdGggc3Ryb2tlPScjeyRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtY29sb3J9JyBkPSdNMCAyaDQnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tY2hlY2tib3gtaW5kaWNhdG9yLWluZGV0ZXJtaW5hdGUtYm94LXNoYWRvdzogICBub25lICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWNoZWNrYm94LWluZGljYXRvci1pbmRldGVybWluYXRlLWJvcmRlci1jb2xvcjogJGN1c3RvbS1jaGVja2JveC1pbmRpY2F0b3ItaW5kZXRlcm1pbmF0ZS1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFkaW8taW5kaWNhdG9yLWJvcmRlci1yYWRpdXM6ICAgICAgICAgIDUwJSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYWRpby1pbmRpY2F0b3ItaWNvbi1jaGVja2VkOiAgICAgICAgICAgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9Jy00IC00IDggOCc+PGNpcmNsZSByPSczJyBmaWxsPScjeyRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItY2hlY2tlZC1jb2xvcn0nLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXN3aXRjaC13aWR0aDogICAgICAgICAgICAgICAgICAgICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgKiAxLjc1ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXN3aXRjaC1pbmRpY2F0b3ItYm9yZGVyLXJhZGl1czogICAgICAgICAkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUgLyAyICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXN3aXRjaC1pbmRpY2F0b3Itc2l6ZTogICAgICAgICAgICAgICAgICBzdWJ0cmFjdCgkY3VzdG9tLWNvbnRyb2wtaW5kaWNhdG9yLXNpemUsICRjdXN0b20tY29udHJvbC1pbmRpY2F0b3ItYm9yZGVyLXdpZHRoICogNCkgIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXk6ICRpbnB1dC1wYWRkaW5nLXk7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteDogMS4yNXJlbTtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1mYW1pbHk6ICRpbnB1dC1mb250LWZhbWlseSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplOiAkaW5wdXQtZm9udC1zaXplICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQ6ICRpbnB1dC1oZWlnaHQ7XHJcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAxLjI1cmVtOyAvLyBFeHRyYSBwYWRkaW5nIHRvIGFjY291bnQgZm9yIHRoZSBwcmVzZW5jZSBvZiB0aGUgYmFja2dyb3VuZC1pbWFnZSBiYXNlZCBpbmRpY2F0b3JcclxuJGN1c3RvbS1zZWxlY3QtZm9udC13ZWlnaHQ6ICRpbnB1dC1mb250LXdlaWdodCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtbGluZS1oZWlnaHQ6ICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtY29sb3I6ICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtY29sb3I6ICRncmF5LTYwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmc6ICRpbnB1dC1iZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZGlzYWJsZWQtYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYmctc2l6ZTogOHB4IDEwcHggIWRlZmF1bHQ7IC8vIEluIHBpeGVscyBiZWNhdXNlIGltYWdlIGRpbWVuc2lvbnNcclxuJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yOiAkZ3JheS04MDAgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc1JyB2aWV3Qm94PScwIDAgNCA1Jz48cGF0aCBmaWxsPScjeyRjdXN0b20tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIGQ9J00yIDBMMCAyaDR6bTAgNUwwIDNoNHonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWJhY2tncm91bmQ6IGVzY2FwZS1zdmcoJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yKSBuby1yZXBlYXQgcmlnaHRcclxuICAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXggY2VudGVyIC8gJGN1c3RvbS1zZWxlY3QtYmctc2l6ZSAhZGVmYXVsdDsgLy8gVXNlZCBzbyB3ZSBjYW4gaGF2ZSBtdWx0aXBsZSBiYWNrZ3JvdW5kIGVsZW1lbnRzIChlLmcuLCBhcnJvdyBhbmQgZmVlZGJhY2sgaWNvbilcclxuXHJcbiRjdXN0b20tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1yaWdodDogYWRkKFxyXG4gIDFlbSAqIDAuNzUsXHJcbiAgKDIgKiAkY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXkgKiAwLjc1KSArICRjdXN0b20tc2VsZWN0LXBhZGRpbmcteCArXHJcbiAgICAkY3VzdG9tLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZ1xyXG4pICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHRcclxuICAoJGN1c3RvbS1zZWxlY3QtcGFkZGluZy14ICsgJGN1c3RvbS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcpICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1mZWVkYmFjay1pY29uLXNpemU6ICRpbnB1dC1oZWlnaHQtaW5uZXItaGFsZlxyXG4gICRpbnB1dC1oZWlnaHQtaW5uZXItaGFsZiAhZGVmYXVsdDtcclxuXHJcbiRjdXN0b20tc2VsZWN0LWJvcmRlci13aWR0aDogJGlucHV0LWJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJGN1c3RvbS1zZWxlY3QtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAwLjA3NSkgIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1mb2N1cy1ib3JkZXItY29sb3I6ICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3I7XHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLXdpZHRoOiAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktc206ICRpbnB1dC1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteC1zbTogJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplLXNtOiAkaW5wdXQtZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQtc206ICRpbnB1dC1oZWlnaHQtc20gIWRlZmF1bHQ7XHJcblxyXG4kY3VzdG9tLXNlbGVjdC1wYWRkaW5nLXktbGc6ICRpbnB1dC1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRjdXN0b20tc2VsZWN0LXBhZGRpbmcteC1sZzogJGlucHV0LXBhZGRpbmcteC1sZyAhZGVmYXVsdDtcclxuJGN1c3RvbS1zZWxlY3QtZm9udC1zaXplLWxnOiAkaW5wdXQtZm9udC1zaXplLWxnICFkZWZhdWx0O1xyXG4kY3VzdG9tLXNlbGVjdC1oZWlnaHQtbGc6ICRpbnB1dC1oZWlnaHQtbGcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLXdpZHRoOiAgICAgICAgICAxMDAlICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWhlaWdodDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1jdXJzb3I6ICAgICAgICAgcG9pbnRlciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10cmFjay1iZzogICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJvcmRlci1yYWRpdXM6ICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRyYWNrLWJveC1zaGFkb3c6ICAgICBpbnNldCAwIC4yNXJlbSAuMjVyZW0gcmdiYSgkYmxhY2ssIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGg6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItaGVpZ2h0OiAgICAgICAgICAgICAgICAgICRjdXN0b20tcmFuZ2UtdGh1bWItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tcmFuZ2UtdGh1bWItYmc6ICAgICAgICAgICAgICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlcjogICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAwIC4xcmVtIC4yNXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgICAwIDAgMCAxcHggJGJvZHktYmcsICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3ctd2lkdGg6ICAkaW5wdXQtZm9jdXMtd2lkdGggIWRlZmF1bHQ7IC8vIEZvciBmb2N1cyBib3ggc2hhZG93IGlzc3VlIGluIElFL0VkZ2VcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgbGlnaHRlbigkY29tcG9uZW50LWFjdGl2ZS1iZywgMzUlKSAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogICAgICAgICAgICAgJGdyYXktNTAwICFkZWZhdWx0O1xyXG5cclxuLy8gJGN1c3RvbS1maWxlLWhlaWdodDogICAgICAgICAgICAgICAgJGlucHV0LWhlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWhlaWdodC1pbm5lcjogICAgICAgICAgJGlucHV0LWhlaWdodC1pbm5lciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvY3VzLWJvcmRlci1jb2xvcjogICAgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvY3VzLWJveC1zaGFkb3c6ICAgICAgJGlucHV0LWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1kaXNhYmxlZC1iZzogICAgICAgICAgICRpbnB1dC1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRjdXN0b20tZmlsZS1wYWRkaW5nLXk6ICAgICAgICAgICAgICRpbnB1dC1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1wYWRkaW5nLXg6ICAgICAgICAgICAgICRpbnB1dC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1saW5lLWhlaWdodDogICAgICAgICAgICRpbnB1dC1saW5lLWhlaWdodCAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWZvbnQtZmFtaWx5OiAgICAgICAgICAgJGlucHV0LWZvbnQtZmFtaWx5ICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtZm9udC13ZWlnaHQ6ICAgICAgICAgICAkaW5wdXQtZm9udC13ZWlnaHQgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1jb2xvcjogICAgICAgICAgICAgICAgICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJnOiAgICAgICAgICAgICAgICAgICAgJGlucHV0LWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLXdpZHRoOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtYm9yZGVyLXJhZGl1czogICAgICAgICAkaW5wdXQtYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJveC1zaGFkb3c6ICAgICAgICAgICAgJGlucHV0LWJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcbi8vICRjdXN0b20tZmlsZS1idXR0b24tY29sb3I6ICAgICAgICAgICRjdXN0b20tZmlsZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJGN1c3RvbS1maWxlLWJ1dHRvbi1iZzogICAgICAgICAgICAgJGlucHV0LWdyb3VwLWFkZG9uLWJnICFkZWZhdWx0O1xyXG4vLyAkY3VzdG9tLWZpbGUtdGV4dDogKFxyXG4vLyAgIGVuOiBcIkJyb3dzZVwiXHJcbi8vICkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGb3JtIHZhbGlkYXRpb25cclxuXHJcbi8vICRmb3JtLWZlZWRiYWNrLW1hcmdpbi10b3A6ICAgICAgICAgICRmb3JtLXRleHQtbWFyZ2luLXRvcCAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stZm9udC1zaXplOiAgICAgICAgICAgJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdmFsaWQtY29sb3I6ICAgICAgICAgdGhlbWUtY29sb3IoXCJzdWNjZXNzXCIpICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yOiAgICAgICB0aGVtZS1jb2xvcihcImRhbmdlclwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24tdmFsaWQtY29sb3I6ICAgICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay1pY29uLXZhbGlkOiAgICAgICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGZpbGw9JyN7JGZvcm0tZmVlZGJhY2staWNvbi12YWxpZC1jb2xvcn0nIGQ9J00yLjMgNi43M0wuNiA0LjUzYy0uNC0xLjA0LjQ2LTEuNCAxLjEtLjhsMS4xIDEuNCAzLjQtMy44Yy42LS42MyAxLjYtLjI3IDEuMi43bC00IDQuNmMtLjQzLjUtLjguNC0xLjEuMXonLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZC1jb2xvcjogICRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZDogICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yfScgdmlld0JveD0nMCAwIDEyIDEyJz48Y2lyY2xlIGN4PSc2JyBjeT0nNicgcj0nNC41Jy8+PHBhdGggc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgZD0nTTUuOCAzLjZoLjRMNiA2LjV6Jy8+PGNpcmNsZSBjeD0nNicgY3k9JzguMicgcj0nLjYnIGZpbGw9JyN7JGZvcm0tZmVlZGJhY2staWNvbi1pbnZhbGlkLWNvbG9yfScgc3Ryb2tlPSdub25lJy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvcm0tdmFsaWRhdGlvbi1zdGF0ZXM6ICgpICFkZWZhdWx0O1xyXG4vLyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxyXG4vLyAkZm9ybS12YWxpZGF0aW9uLXN0YXRlczogbWFwLW1lcmdlKFxyXG4vLyAgIChcclxuLy8gICAgIFwidmFsaWRcIjogKFxyXG4vLyAgICAgICBcImNvbG9yXCI6ICRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yLFxyXG4vLyAgICAgICBcImljb25cIjogJGZvcm0tZmVlZGJhY2staWNvbi12YWxpZFxyXG4vLyAgICAgKSxcclxuLy8gICAgIFwiaW52YWxpZFwiOiAoXHJcbi8vICAgICAgIFwiY29sb3JcIjogJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcixcclxuLy8gICAgICAgXCJpY29uXCI6ICRmb3JtLWZlZWRiYWNrLWljb24taW52YWxpZFxyXG4vLyAgICAgKSxcclxuLy8gICApLFxyXG4vLyAgICRmb3JtLXZhbGlkYXRpb24tc3RhdGVzXHJcbi8vICk7XHJcblxyXG4vLyAvLyBaLWluZGV4IG1hc3RlciBsaXN0XHJcbi8vIC8vXHJcbi8vIC8vIFdhcm5pbmc6IEF2b2lkIGN1c3RvbWl6aW5nIHRoZXNlIHZhbHVlcy4gVGhleSdyZSB1c2VkIGZvciBhIGJpcmQncyBleWUgdmlld1xyXG4vLyAvLyBvZiBjb21wb25lbnRzIGRlcGVuZGVudCBvbiB0aGUgei1heGlzIGFuZCBhcmUgZGVzaWduZWQgdG8gYWxsIHdvcmsgdG9nZXRoZXIuXHJcblxyXG4vLyAkemluZGV4LWRyb3Bkb3duOiAgICAgICAgICAgICAgICAgICAxMDAwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXN0aWNreTogICAgICAgICAgICAgICAgICAgICAxMDIwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LWZpeGVkOiAgICAgICAgICAgICAgICAgICAgICAxMDMwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LW1vZGFsLWJhY2tkcm9wOiAgICAgICAgICAgICAxMDQwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LW1vZGFsOiAgICAgICAgICAgICAgICAgICAgICAxMDUwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXBvcG92ZXI6ICAgICAgICAgICAgICAgICAgICAxMDYwICFkZWZhdWx0O1xyXG4vLyAkemluZGV4LXRvb2x0aXA6ICAgICAgICAgICAgICAgICAgICAxMDcwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gTmF2c1xyXG5cclxuLy8gJG5hdi1saW5rLXBhZGRpbmcteTogICAgICAgICAgICAgICAgLjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXYtbGluay1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXYtbGluay1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXYtdGFicy1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWJvcmRlci13aWR0aDogICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRuYXYtdGFicy1saW5rLWhvdmVyLWJvcmRlci1jb2xvcjogICRncmF5LTIwMCAkZ3JheS0yMDAgJG5hdi10YWJzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAgJGdyYXktNzAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICAkYm9keS1iZyAhZGVmYXVsdDtcclxuLy8gJG5hdi10YWJzLWxpbmstYWN0aXZlLWJvcmRlci1jb2xvcjogJGdyYXktMzAwICRncmF5LTMwMCAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2LXBpbGxzLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJG5hdi1waWxscy1saW5rLWFjdGl2ZS1jb2xvcjogICAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXYtcGlsbHMtbGluay1hY3RpdmUtYmc6ICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdi1kaXZpZGVyLWNvbG9yOiAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkbmF2LWRpdmlkZXItbWFyZ2luLXk6ICAgICAgICAgICAgICAkc3BhY2VyIC8gMiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIE5hdmJhclxyXG5cclxuLy8gJG5hdmJhci1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgJHNwYWNlciAvIDIgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICRzcGFjZXIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLW5hdi1saW5rLXBhZGRpbmcteDogICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItYnJhbmQtZm9udC1zaXplOiAgICAgICAgICAgICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbi8vIC8vIENvbXB1dGUgdGhlIG5hdmJhci1icmFuZCBwYWRkaW5nLXkgc28gdGhlIG5hdmJhci1icmFuZCB3aWxsIGhhdmUgdGhlIHNhbWUgaGVpZ2h0IGFzIG5hdmJhci10ZXh0IGFuZCBuYXYtbGlua1xyXG4vLyAkbmF2LWxpbmstaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAkZm9udC1zaXplLWJhc2UgKiAkbGluZS1oZWlnaHQtYmFzZSArICRuYXYtbGluay1wYWRkaW5nLXkgKiAyICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWJyYW5kLWhlaWdodDogICAgICAgICAgICAgICAkbmF2YmFyLWJyYW5kLWZvbnQtc2l6ZSAqICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xyXG4vLyAkbmF2YmFyLWJyYW5kLXBhZGRpbmcteTogICAgICAgICAgICAoJG5hdi1saW5rLWhlaWdodCAtICRuYXZiYXItYnJhbmQtaGVpZ2h0KSAvIDIgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6ICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLWZvbnQtc2l6ZTogICAgICAgICAgJGZvbnQtc2l6ZS1sZyAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci10b2dnbGVyLWJvcmRlci1yYWRpdXM6ICAgICAgJGJ0bi1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gJG5hdmJhci1kYXJrLWNvbG9yOiAgICAgICAgICAgICAgICAgcmdiYSgkd2hpdGUsIC41KSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgkd2hpdGUsIC43NSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiAgICAgICAgcmdiYSgkd2hpdGUsIC4yNSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay10b2dnbGVyLWljb24tYmc6ICAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzMwJyBoZWlnaHQ9JzMwJyB2aWV3Qm94PScwIDAgMzAgMzAnPjxwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWRhcmstY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1kYXJrLXRvZ2dsZXItYm9yZGVyLWNvbG9yOiAgcmdiYSgkd2hpdGUsIC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICRuYXZiYXItbGlnaHQtY29sb3I6ICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNykgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAgICAgICAgIHJnYmEoJGJsYWNrLCAuOSkgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6ICAgICAgIHJnYmEoJGJsYWNrLCAuMykgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtdG9nZ2xlci1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzMwJyBoZWlnaHQ9JzMwJyB2aWV3Qm94PScwIDAgMzAgMzAnPjxwYXRoIHN0cm9rZT0nI3skbmF2YmFyLWxpZ2h0LWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIHN0cm9rZS13aWR0aD0nMicgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItbGlnaHQtdG9nZ2xlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAuMSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkbmF2YmFyLWxpZ2h0LXRoZW1lLWNvbG9yOiAgICAgICAgICAgICAgICAkbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuLy8gJG5hdmJhci1saWdodC1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay10aGVtZS1jb2xvcjogICAgICAgICAgICAgICAgICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRuYXZiYXItZGFyay1icmFuZC1ob3Zlci1jb2xvcjogICAgICAgICAgICRuYXZiYXItZGFyay1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyBEcm9wZG93bnNcclxuLy9cclxuLy8gRHJvcGRvd24gbWVudSBjb250YWluZXIgYW5kIGNvbnRlbnRzLlxyXG5cclxuJGRyb3Bkb3duLW1pbi13aWR0aDogMTByZW07XHJcbiRkcm9wZG93bi1wYWRkaW5nLXk6IDAuNXJlbTtcclxuJGRyb3Bkb3duLXNwYWNlcjogMC4xMjVyZW07XHJcbiRkcm9wZG93bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcclxuJGRyb3Bkb3duLWNvbG9yOiAkYm9keS1jb2xvcjtcclxuJGRyb3Bkb3duLWJnOiAkd2hpdGU7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjE1KTtcclxuJGRyb3Bkb3duLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoO1xyXG4kZHJvcGRvd24taW5uZXItYm9yZGVyLXJhZGl1czogc3VidHJhY3QoXHJcbiAgJGRyb3Bkb3duLWJvcmRlci1yYWRpdXMsXHJcbiAgJGRyb3Bkb3duLWJvcmRlci13aWR0aFxyXG4pO1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGdyYXktMjAwO1xyXG4kZHJvcGRvd24tZGl2aWRlci1tYXJnaW4teTogJG5hdi1kaXZpZGVyLW1hcmdpbi15O1xyXG4kZHJvcGRvd24tYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSByZ2JhKCRibGFjaywgMC4xNzUpO1xyXG5cclxuJGRyb3Bkb3duLWxpbmstY29sb3I6ICRncmF5LTIwMDtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItY29sb3I6IGRhcmtlbigkZ3JheS0yMDAsIDUlKTtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICRncmF5LTEwMDtcclxuXHJcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3I7XHJcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1iZzogJGNvbXBvbmVudC1hY3RpdmUtYmc7XHJcblxyXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwO1xyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjI1cmVtO1xyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6IDEuNXJlbTtcclxuXHJcbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICRncmF5LTYwMDtcclxuXHJcbi8vIC8vIFBhZ2luYXRpb25cclxuXHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteTogMC42cmVtO1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXg6IDAuNzVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogMC4yNXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAwLjVyZW07XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1sZzogMC43NXJlbTtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LWxnOiAxLjVyZW07XHJcbiRwYWdpbmF0aW9uLWxpbmUtaGVpZ2h0OiAxLjI1O1xyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRncmF5LTYwMDtcclxuJHBhZ2luYXRpb24tYmc6ICR3aGl0ZTtcclxuJHBhZ2luYXRpb24tYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoO1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRncmF5LTgwMDtcclxuXHJcbiRwYWdpbmF0aW9uLWZvY3VzLWJveC1zaGFkb3c6IG5vbmU7XHJcbiRwYWdpbmF0aW9uLWZvY3VzLW91dGxpbmU6IDA7XHJcblxyXG4kcGFnaW5hdGlvbi1ob3Zlci1jb2xvcjogJGxpbmstaG92ZXItY29sb3I7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJnOiAkZ3JheS0yMDA7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogJGdyYXktODAwO1xyXG5cclxuJHBhZ2luYXRpb24tYWN0aXZlLWNvbG9yOiAkZ3JheS02MDA7XHJcbiRwYWdpbmF0aW9uLWFjdGl2ZS1iZzogJGdyYXktODAwO1xyXG4kcGFnaW5hdGlvbi1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkZ3JheS04MDA7XHJcblxyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogJGdyYXktNjAwO1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogJHdoaXRlO1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXItY29sb3I6ICRncmF5LTMwMDtcclxuXHJcbi8vIC8vIEp1bWJvdHJvblxyXG5cclxuLy8gJGp1bWJvdHJvbi1wYWRkaW5nOiAgICAgICAgICAgICAgICAgMnJlbSAhZGVmYXVsdDtcclxuLy8gJGp1bWJvdHJvbi1jb2xvcjogICAgICAgICAgICAgICAgICAgbnVsbCAhZGVmYXVsdDtcclxuLy8gJGp1bWJvdHJvbi1iZzogICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQ2FyZHNcclxuXHJcbi8vICRjYXJkLXNwYWNlci15OiAgICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtc3BhY2VyLXg6ICAgICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAgJGJvcmRlci13aWR0aCAhZGVmYXVsdDtcclxuLy8gJGNhcmQtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuMTI1KSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtaW5uZXItYm9yZGVyLXJhZGl1czogICAgICAgICAgc3VidHJhY3QoJGNhcmQtYm9yZGVyLXJhZGl1cywgJGNhcmQtYm9yZGVyLXdpZHRoKSAhZGVmYXVsdDtcclxuLy8gJGNhcmQtY2FwLWJnOiAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4wMykgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNhcC1jb2xvcjogICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWhlaWdodDogICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRjYXJkLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJkLWltZy1vdmVybGF5LXBhZGRpbmc6ICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2FyZC1ncm91cC1tYXJnaW46ICAgICAgICAgICAgICAgICAkZ3JpZC1ndXR0ZXItd2lkdGggLyAyICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1kZWNrLW1hcmdpbjogICAgICAgICAgICAgICAgICAkY2FyZC1ncm91cC1tYXJnaW4gIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2FyZC1jb2x1bW5zLWNvdW50OiAgICAgICAgICAgICAgICAzICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jb2x1bW5zLWdhcDogICAgICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkY2FyZC1jb2x1bW5zLW1hcmdpbjogICAgICAgICAgICAgICAkY2FyZC1zcGFjZXIteSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFRvb2x0aXBzXHJcblxyXG4vLyAkdG9vbHRpcC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1tYXgtd2lkdGg6ICAgICAgICAgICAgICAgICAyMDBweCAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1iZzogICAgICAgICAgICAgICAgICAgICAgICAkYmxhY2sgIWRlZmF1bHQ7XHJcbi8vICR0b29sdGlwLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1vcGFjaXR5OiAgICAgICAgICAgICAgICAgICAuOSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgLjI1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtbWFyZ2luOiAgICAgICAgICAgICAgICAgICAgMCAhZGVmYXVsdDtcclxuXHJcbi8vICR0b29sdGlwLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgIC44cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9vbHRpcC1hcnJvdy1oZWlnaHQ6ICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcclxuLy8gJHRvb2x0aXAtYXJyb3ctY29sb3I6ICAgICAgICAgICAgICAgJHRvb2x0aXAtYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGb3JtIHRvb2x0aXBzIG11c3QgY29tZSBhZnRlciByZWd1bGFyIHRvb2x0aXBzXHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtcGFkZGluZy15OiAgICAgJHRvb2x0aXAtcGFkZGluZy15ICFkZWZhdWx0O1xyXG4vLyAkZm9ybS1mZWVkYmFjay10b29sdGlwLXBhZGRpbmcteDogICAgICR0b29sdGlwLXBhZGRpbmcteCAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1mb250LXNpemU6ICAgICAkdG9vbHRpcC1mb250LXNpemUgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtbGluZS1oZWlnaHQ6ICAgJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcbi8vICRmb3JtLWZlZWRiYWNrLXRvb2x0aXAtb3BhY2l0eTogICAgICAgJHRvb2x0aXAtb3BhY2l0eSAhZGVmYXVsdDtcclxuLy8gJGZvcm0tZmVlZGJhY2stdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAkdG9vbHRpcC1ib3JkZXItcmFkaXVzICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gUG9wb3ZlcnNcclxuXHJcbiRwb3BvdmVyLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItbWF4LXdpZHRoOiAyNDZweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kcG9wb3Zlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcclxuJHBvcG92ZXItaW5uZXItYm9yZGVyLXJhZGl1czogc3VidHJhY3QoXHJcbiAgJHBvcG92ZXItYm9yZGVyLXJhZGl1cyxcclxuICAkcG9wb3Zlci1ib3JkZXItd2lkdGhcclxuKSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cteGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAkcG9wb3Zlci1oZWFkZXItYmc6ICAgICAgICAgICAgICAgICBkYXJrZW4oJHBvcG92ZXItYmcsIDMlKSAhZGVmYXVsdDtcclxuLy8gJHBvcG92ZXItaGVhZGVyLWNvbG9yOiAgICAgICAgICAgICAgJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy15OiAwLjc1cmVtO1xyXG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy14OiAxcmVtO1xyXG5cclxuLy8gJHBvcG92ZXItYm9keS1jb2xvcjogICAgICAgICAgICAgICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJvZHktcGFkZGluZy15OiAkcG9wb3Zlci1oZWFkZXItcGFkZGluZy15O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDtcclxuXHJcbi8vICRwb3BvdmVyLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRwb3BvdmVyLWFycm93LWhlaWdodDogICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkcG9wb3Zlci1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAgICAgICAgIGZhZGUtaW4oJHBvcG92ZXItYm9yZGVyLWNvbG9yLCAuMDUpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gVG9hc3RzXHJcblxyXG4vLyAkdG9hc3QtbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgICAzNTBweCAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgIC44NzVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiAgICAgICAgICAgIHJnYmEoJHdoaXRlLCAuODUpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAxcHggIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgIHJnYmEoMCwgMCwgMCwgLjEpICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAuMjVyZW0gIWRlZmF1bHQ7XHJcbi8vICR0b2FzdC1ib3gtc2hhZG93OiAgICAgICAgICAgICAgICAgIDAgLjI1cmVtIC43NXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG5cclxuLy8gJHRvYXN0LWhlYWRlci1jb2xvcjogICAgICAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkdG9hc3QtaGVhZGVyLWJhY2tncm91bmQtY29sb3I6ICAgICByZ2JhKCR3aGl0ZSwgLjg1KSAhZGVmYXVsdDtcclxuLy8gJHRvYXN0LWhlYWRlci1ib3JkZXItY29sb3I6ICAgICAgICAgcmdiYSgwLCAwLCAwLCAuMDUpICFkZWZhdWx0O1xyXG5cclxuLy8gLy8gQmFkZ2VzXHJcblxyXG4kYmFkZ2UtZm9udC1zaXplOiByZW15KDEyKTtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA1MDA7XHJcbi8vICRiYWRnZS1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIDAuMjVlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMC41cmVtO1xyXG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbWQ7XHJcblxyXG4vLyAkYmFkZ2UtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgICAkYnRuLXRyYW5zaXRpb24gIWRlZmF1bHQ7XHJcbi8vICRiYWRnZS1mb2N1cy13aWR0aDogICAgICAgICAgICAgICAgICRpbnB1dC1idG4tZm9jdXMtd2lkdGggIWRlZmF1bHQ7XHJcblxyXG4vLyAkYmFkZ2UtcGlsbC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAuNmVtICFkZWZhdWx0O1xyXG4vLyAvLyBVc2UgYSBoaWdoZXIgdGhhbiBub3JtYWwgdmFsdWUgdG8gZW5zdXJlIGNvbXBsZXRlbHkgcm91bmRlZCBlZGdlcyB3aGVuXHJcbi8vIC8vIGN1c3RvbWl6aW5nIHBhZGRpbmcgb3IgZm9udC1zaXplIG9uIGxhYmVscy5cclxuLy8gJGJhZGdlLXBpbGwtYm9yZGVyLXJhZGl1czogICAgICAgICAgMTByZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyBNb2RhbHNcclxuXHJcbi8vIFBhZGRpbmcgYXBwbGllZCB0byB0aGUgbW9kYWwgYm9keVxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogMC43NXJlbTtcclxuXHJcbi8vIE1hcmdpbiBiZXR3ZWVuIGVsZW1lbnRzIGluIGZvb3RlciwgbXVzdCBiZSBsb3dlciB0aGFuIG9yIGVxdWFsIHRvIDIgKiAkbW9kYWwtaW5uZXItcGFkZGluZ1xyXG4vLyAkbW9kYWwtZm9vdGVyLW1hcmdpbi1iZXR3ZWVuOiAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRtb2RhbC1kaWFsb2ctbWFyZ2luOiAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtZGlhbG9nLW1hcmdpbi15LXNtLXVwOiAgICAgICAxLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLXRpdGxlLWxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtYmFzZTtcclxuXHJcbiRtb2RhbC1jb250ZW50LWNvbG9yOiBudWxsO1xyXG4kbW9kYWwtY29udGVudC1iZzogJHdoaXRlO1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItd2lkdGg6IDA7XHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4kbW9kYWwtY29udGVudC1pbm5lci1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14czogbm9uZTtcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy1zbS11cDogJGJvcmRlci1yYWRpdXM7XHJcblxyXG4kbW9kYWwtYmFja2Ryb3AtYmc6ICRibGFjaztcclxuJG1vZGFsLWJhY2tkcm9wLW9wYWNpdHk6IDAuNztcclxuJG1vZGFsLWhlYWRlci1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kbW9kYWwtZm9vdGVyLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRtb2RhbC1oZWFkZXItYm9yZGVyLXdpZHRoOiAwO1xyXG4kbW9kYWwtZm9vdGVyLWJvcmRlci13aWR0aDogMDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6IDAuNzVyZW07XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZy14OiAxLjVyZW07XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg7XHJcblxyXG4vLyAkbW9kYWwteGw6ICAgICAgICAgICAgICAgICAgICAgICAgICAxMTQwcHggIWRlZmF1bHQ7XHJcbiRtb2RhbC1sZzogMTA0NHB4O1xyXG4vLyAkbW9kYWwtbWQ6ICAgICAgICAgICAgICAgICAgICAgICAgICA1MDBweCAhZGVmYXVsdDtcclxuLy8gJG1vZGFsLXNtOiAgICAgICAgICAgICAgICAgICAgICAgICAgMzAwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAkbW9kYWwtZmFkZS10cmFuc2Zvcm06ICAgICAgICAgICAgICB0cmFuc2xhdGUoMCwgLTUwcHgpICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc2hvdy10cmFuc2Zvcm06ICAgICAgICAgICAgICBub25lICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0ICFkZWZhdWx0O1xyXG4vLyAkbW9kYWwtc2NhbGUtdHJhbnNmb3JtOiAgICAgICAgICAgICBzY2FsZSgxLjAyKSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEFsZXJ0c1xyXG4vLyAvL1xyXG4vLyAvLyBEZWZpbmUgYWxlcnQgY29sb3JzLCBib3JkZXIgcmFkaXVzLCBhbmQgcGFkZGluZy5cclxuXHJcbi8vICRhbGVydC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LW1hcmdpbi1ib3R0b206ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICRhbGVydC1saW5rLWZvbnQtd2VpZ2h0OiAgICAgICAgICAgICRmb250LXdlaWdodC1ib2xkICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICAgICAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xyXG5cclxuLy8gJGFsZXJ0LWJnLWxldmVsOiAgICAgICAgICAgICAgICAgICAgLTEwICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLWxldmVsOiAgICAgICAgICAgICAgICAtOSAhZGVmYXVsdDtcclxuLy8gJGFsZXJ0LWNvbG9yLWxldmVsOiAgICAgICAgICAgICAgICAgNiAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFByb2dyZXNzIGJhcnNcclxuXHJcbi8vICRwcm9ncmVzcy1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1mb250LXNpemU6ICAgICAgICAgICAgICAgICRmb250LXNpemUtYmFzZSAqIC43NSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMjAwICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYm9yZGVyLXJhZGl1czogICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJveC1zaGFkb3c6ICAgICAgICAgICAgICAgaW5zZXQgMCAuMXJlbSAuMXJlbSByZ2JhKCRibGFjaywgLjEpICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLWNvbG9yOiAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRwcm9ncmVzcy1iYXItYmc6ICAgICAgICAgICAgICAgICAgIHRoZW1lLWNvbG9yKFwicHJpbWFyeVwiKSAhZGVmYXVsdDtcclxuLy8gJHByb2dyZXNzLWJhci1hbmltYXRpb24tdGltaW5nOiAgICAgMXMgbGluZWFyIGluZmluaXRlICFkZWZhdWx0O1xyXG4vLyAkcHJvZ3Jlc3MtYmFyLXRyYW5zaXRpb246ICAgICAgICAgICB3aWR0aCAuNnMgZWFzZSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIExpc3QgZ3JvdXBcclxuXHJcbi8vICRsaXN0LWdyb3VwLWNvbG9yOiAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWJnOiAgICAgICAgICAgICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgkYmxhY2ssIC4xMjUpICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItd2lkdGg6IDBweDtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkbGlzdC1ncm91cC1ob3Zlci1iZzogICAgICAgICAgICAgICAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1hY3RpdmUtYmc6ICAgICAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aXZlLWJvcmRlci1jb2xvcjogICAgJGxpc3QtZ3JvdXAtYWN0aXZlLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkbGlzdC1ncm91cC1kaXNhYmxlZC1iZzogICAgICAgICAgICAkbGlzdC1ncm91cC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvcjogICAgICAgICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWhvdmVyLWNvbG9yOiAgICAgJGxpc3QtZ3JvdXAtYWN0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1jb2xvcjogICAgJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbi8vICRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtYmc6ICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEltYWdlIHRodW1ibmFpbHNcclxuXHJcbi8vICR0aHVtYm5haWwtcGFkZGluZzogICAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1iZzogICAgICAgICAgICAgICAgICAgICAgJGJvZHktYmcgIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAgICAgICAgICAgICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICRncmF5LTMwMCAhZGVmYXVsdDtcclxuLy8gJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XHJcbi8vICR0aHVtYm5haWwtYm94LXNoYWRvdzogICAgICAgICAgICAgIDAgMXB4IDJweCByZ2JhKCRibGFjaywgLjA3NSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBGaWd1cmVzXHJcblxyXG4vLyAkZmlndXJlLWNhcHRpb24tZm9udC1zaXplOiAgICAgICAgICA5MCUgIWRlZmF1bHQ7XHJcbi8vICRmaWd1cmUtY2FwdGlvbi1jb2xvcjogICAgICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIEJyZWFkY3J1bWJzXHJcblxyXG4vLyAkYnJlYWRjcnVtYi1mb250LXNpemU6ICAgICAgICAgICAgICBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gJGJyZWFkY3J1bWItcGFkZGluZy15OiAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1wYWRkaW5nLXg6ICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmc6ICAgICAgICAgICAuNXJlbSAhZGVmYXVsdDtcclxuXHJcbi8vICRicmVhZGNydW1iLW1hcmdpbi1ib3R0b206ICAgICAgICAgIDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1iZzogICAgICAgICAgICAgICAgICAgICAkZ3JheS0yMDAgIWRlZmF1bHQ7XHJcbi8vICRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICAgICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuLy8gJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGdyYXktNjAwICFkZWZhdWx0O1xyXG4vLyAkYnJlYWRjcnVtYi1kaXZpZGVyOiAgICAgICAgICAgICAgICBxdW90ZShcIi9cIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAkYnJlYWRjcnVtYi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENhcm91c2VsXHJcblxyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1jb2xvcjogICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC13aWR0aDogICAgICAgICAgICAgMTUlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1vcGFjaXR5OiAgICAgICAgICAgLjUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6ICAgICAuOSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtdHJhbnNpdGlvbjogICAgICAgIG9wYWNpdHkgLjE1cyBlYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gJGNhcm91c2VsLWluZGljYXRvci13aWR0aDogICAgICAgICAgIDMwcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItaGVpZ2h0OiAgICAgICAgICAzcHggIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1pbmRpY2F0b3ItaGl0LWFyZWEtaGVpZ2h0OiAxMHB4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXNwYWNlcjogICAgICAgICAgM3B4ICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLWFjdGl2ZS1iZzogICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4vLyAkY2Fyb3VzZWwtaW5kaWNhdG9yLXRyYW5zaXRpb246ICAgICAgb3BhY2l0eSAuNnMgZWFzZSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jYXB0aW9uLXdpZHRoOiAgICAgICAgICAgICA3MCUgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAkY2Fyb3VzZWwtY29udHJvbC1pY29uLXdpZHRoOiAgICAgICAgMjBweCAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbi1iZzogICAgICB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4Jz48cGF0aCBkPSdNNS4yNSAwbC00IDQgNCA0IDEuNS0xLjVMNC4yNSA0bDIuNS0yLjVMNS4yNSAweicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuLy8gJGNhcm91c2VsLWNvbnRyb2wtbmV4dC1pY29uLWJnOiAgICAgIHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn0nIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnPjxwYXRoIGQ9J00yLjc1IDBsLTEuNSAxLjVMMy43NSA0bC0yLjUgMi41TDIuNzUgOGw0LTQtNC00eicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICRjYXJvdXNlbC10cmFuc2l0aW9uLWR1cmF0aW9uOiAgICAgICAuNnMgIWRlZmF1bHQ7XHJcbi8vICRjYXJvdXNlbC10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gJGNhcm91c2VsLXRyYW5zaXRpb24tZHVyYXRpb24gZWFzZS1pbi1vdXQgIWRlZmF1bHQ7IC8vIERlZmluZSB0cmFuc2Zvcm0gdHJhbnNpdGlvbiBmaXJzdCBpZiB1c2luZyBtdWx0aXBsZSB0cmFuc2l0aW9ucyAoZS5nLiwgYHRyYW5zZm9ybSAycyBlYXNlLCBvcGFjaXR5IC41cyBlYXNlLW91dGApXHJcblxyXG4vLyAvLyBTcGlubmVyc1xyXG5cclxuLy8gJHNwaW5uZXItd2lkdGg6ICAgICAgICAgMnJlbSAhZGVmYXVsdDtcclxuLy8gJHNwaW5uZXItaGVpZ2h0OiAgICAgICAgJHNwaW5uZXItd2lkdGggIWRlZmF1bHQ7XHJcbi8vICRzcGlubmVyLWJvcmRlci13aWR0aDogIC4yNWVtICFkZWZhdWx0O1xyXG5cclxuLy8gJHNwaW5uZXItd2lkdGgtc206ICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1oZWlnaHQtc206ICAgICAgICRzcGlubmVyLXdpZHRoLXNtICFkZWZhdWx0O1xyXG4vLyAkc3Bpbm5lci1ib3JkZXItd2lkdGgtc206IC4yZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBDbG9zZVxyXG5cclxuLy8gJGNsb3NlLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1iYXNlICogMS41ICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtZm9udC13ZWlnaHQ6ICAgICAgICAgICAgICAgICAkZm9udC13ZWlnaHQtYm9sZCAhZGVmYXVsdDtcclxuLy8gJGNsb3NlLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgJGJsYWNrICFkZWZhdWx0O1xyXG4vLyAkY2xvc2UtdGV4dC1zaGFkb3c6ICAgICAgICAgICAgICAgICAwIDFweCAwICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIENvZGVcclxuXHJcbi8vICRjb2RlLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgIDg3LjUlICFkZWZhdWx0O1xyXG4vLyAkY29kZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAkcGluayAhZGVmYXVsdDtcclxuXHJcbi8vICRrYmQtcGFkZGluZy15OiAgICAgICAgICAgICAgICAgICAgIC4ycmVtICFkZWZhdWx0O1xyXG4vLyAka2JkLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgICAuNHJlbSAhZGVmYXVsdDtcclxuLy8gJGtiZC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICAgJGNvZGUtZm9udC1zaXplICFkZWZhdWx0O1xyXG4vLyAka2JkLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbi8vICRrYmQtYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbi8vICRwcmUtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuLy8gJHByZS1zY3JvbGxhYmxlLW1heC1oZWlnaHQ6ICAgICAgICAgMzQwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAvLyBVdGlsaXRpZXNcclxuXHJcbi8vICRkaXNwbGF5czogbm9uZSwgaW5saW5lLCBpbmxpbmUtYmxvY2ssIGJsb2NrLCB0YWJsZSwgdGFibGUtcm93LCB0YWJsZS1jZWxsLCBmbGV4LCBpbmxpbmUtZmxleCAhZGVmYXVsdDtcclxuLy8gJG92ZXJmbG93czogYXV0bywgaGlkZGVuICFkZWZhdWx0O1xyXG4vLyAkcG9zaXRpb25zOiBzdGF0aWMsIHJlbGF0aXZlLCBhYnNvbHV0ZSwgZml4ZWQsIHN0aWNreSAhZGVmYXVsdDtcclxuXHJcbi8vIC8vIFByaW50aW5nXHJcblxyXG4vLyAkcHJpbnQtcGFnZS1zaXplOiAgICAgICAgICAgICAgICAgICBhMyAhZGVmYXVsdDtcclxuLy8gJHByaW50LWJvZHktbWluLXdpZHRoOiAgICAgICAgICAgICAgbWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywgXCJsZ1wiKSAhZGVmYXVsdDtcclxuXHJcbi8vIEp5c2FuIFZhcmlhYmxlc1xyXG5cclxuQGZ1bmN0aW9uIHNwYWNlKCRzaXplKSB7XHJcbiAgQHJldHVybiBtYXAtZ2V0KCRtYXA6ICRzcGFjZXJzLCAka2V5OiAkc2l6ZSk7XHJcbn1cclxuXHJcbiRoZWFkZXItaGVpZ2h0OiA2MnB4O1xyXG4kaGVhZGVyLWhlaWdodC1tZDogMTAwcHg7XHJcbiRoZWFkZXItd2lkdGg6IDI4MHB4O1xyXG5cclxuJGJ0bi1taW4td2lkdGg6IDE2NHB4O1xyXG5cclxuLy8gSi1pbnB1dFxyXG4kai1pbnB1dC1mb250LXNpemU6IDFyZW07XHJcbiRqLWlucHV0LWZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktYmFzZTtcclxuJGotaW5wdXQtZm9udC1zdHlsZTogbm9ybWFsO1xyXG4kai1pbnB1dC1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJhc2U7XHJcblxyXG4kai1pbnB1dC1saW5lLWhlaWdodDogMjBweDtcclxuJGotaW5wdXQtcGFkZGluZy15OiAxNy41cHg7XHJcbiRqLWlucHV0LXBhZGRpbmcteDogMjBweDtcclxuXHJcbiRqLWlucHV0LWJvcmRlci13aWR0aDogMXB4O1xyXG4kai1pbnB1dC1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiRqLWlucHV0LWJvcmRlci1zdHlsZTogc29saWQ7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG4kai1pbnB1dC1ib3JkZXItY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4kai1pbnB1dC10ZXh0LWNvbG9yOiAkYmxhY2s7XHJcbiRqLWlucHV0LW1hc2stY29sb3I6ICRncmF5O1xyXG4kai1pbnB1dC1pY29uLWNvbG9yOiAkb3JhbmdlO1xyXG4kai1pbnB1dC1oZWxwZXItY29sb3I6ICRncmF5LWRhcms7XHJcblxyXG4kai1pbnB1dC1ib3JkZXItY29sb3ItLWFjdGl2ZTogJHByaW1hcnk7XHJcbiRqLWlucHV0LWxhYmVsLWNvbG9yLS1hY3RpdmU6ICRwcmltYXJ5O1xyXG4kai1pbnB1dC10ZXh0LWNvbG9yLS1hY3RpdmU6ICRwcmltYXJ5O1xyXG5cclxuJGotaW5wdXQtYmFja2dyb3VuZC1jb2xvci0tZXJyb3I6ICRyZWQtbGlnaHQ7XHJcbiRqLWlucHV0LWhlbHBlci1jb2xvci0tZXJyb3I6ICRyZWQ7XHJcbiRqLWlucHV0LWJvcmRlci1jb2xvci0tZXJyb3I6ICRyZWQ7XHJcblxyXG4kai1pbnB1dC1iYWNrZ3JvdW5kLWNvbG9yLS1kaXNhYmxlZDogJGlucHV0LWRpc2FibGVkLWJnOyAvLyBmcm9tIGZpZ21hIHByaW1pdGl2ZXMgc2hvdWxkIGJlIGdyYXktMjAwXHJcblxyXG4kai1pbnB1dC1sYWJlbC1wb3NpdGlvbi10b3A6ICRqLWlucHV0LXBhZGRpbmcteSArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tdG9wLWFjdGl2ZTogMTBweDtcclxuJGotaW5wdXQtbGluay1wb3NpdGlvbi10b3A6IDE2cHg7XHJcbiRqLWlucHV0LWxhYmVsLXBvc2l0aW9uLWxlZnQ6ICRqLWlucHV0LXBhZGRpbmcteCArICRqLWlucHV0LWJvcmRlci13aWR0aDtcclxuJGotaW5wdXQtbGFiZWwtbGluZS1oZWlnaHQ6ICRqLWlucHV0LWxpbmUtaGVpZ2h0O1xyXG4kai1pbnB1dC1sYWJlbC1jb2xvcjogJGdyYXktZGFyaztcclxuXHJcbiRqLWlucHV0LXBhZGRpbmctdG9wOiAyN3B4O1xyXG4kai1pbnB1dC1wYWRkaW5nLWJvdHRvbTogMTBweDtcclxuJGotaW5wdXQtbWFyZ2luLWJvdHRvbTogMTZweDtcclxuJGotaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICRncmF5O1xyXG4kai1pbnB1dC1wbGFjZWhvbGRlci1wb3NpdGlvbjogJGotaW5wdXQtcGFkZGluZy10b3AgKyAkai1pbnB1dC1ib3JkZXItd2lkdGg7XHJcbiRqLWlucHV0LWNoYXItbGVuZ3RoOiA4Ljk5cHg7XHJcblxyXG4kai1pbnB1dC1idXR0b24tcG9zaXRpb246IDIwcHg7XHJcbiRqLWlucHV0LXNoYWRvdy1wb3NpdGlvbjogJGotaW5wdXQtbGFiZWwtcG9zaXRpb24tbGVmdDtcclxuXHJcbiRqLWlucHV0LWxhYmVsLXotaW5kZXg6IDA7XHJcbiRqLWlucHV0LXNoYWRvdy16LWluZGV4OiAxO1xyXG4kai1pbnB1dC16LWluZGV4OiAyO1xyXG4kai1pbnB1dC1saW5rLXotaW5kZXg6IDM7XHJcbiRqLWlucHV0LWJ1dHRvbi16LWluZGV4OiA0O1xyXG5cclxuJGJveC1zaGFkb3ctdG8tdG9wLWxnOiAwIC0xcmVtIDNyZW0gcmdiYSgkYmxhY2ssIDAuMTc1KTtcclxuXHJcbiRlbmFibGUtcG9pbnRlci1jdXJzb3ItZm9yLWJ1dHRvbnM6IHRydWU7XHJcbiJdfQ== */";

/***/ }),

/***/ 22911:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/schedule/schedule.component.scss?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2hlZHVsZS5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 46889:
/*!*************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/users/users.component.scss?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2Vycy5jb21wb25lbnQuc2NzcyJ9 */";

/***/ }),

/***/ 5793:
/*!************************************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component.scss?ngResource ***!
  \************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-mode-toggle {\n  background: #ECEEF1;\n  border-radius: 9px;\n}\n.delivery-mode-toggle .btn:hover {\n  transform: scale(1);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGl2ZXJ5LW1vZGUtdG9nZ2xlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtBQUNKO0FBQ0k7RUFDSSxtQkFBQTtBQUNSIiwiZmlsZSI6ImRlbGl2ZXJ5LW1vZGUtdG9nZ2xlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbGl2ZXJ5LW1vZGUtdG9nZ2xlIHtcbiAgICBiYWNrZ3JvdW5kOiAjRUNFRUYxO1xuICAgIGJvcmRlci1yYWRpdXM6IDlweDtcblxuICAgIC5idG46aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpOyBcbiAgICB9XG59Il19 */";

/***/ }),

/***/ 45072:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/create-delivery-modal.component.scss?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = "@charset \"UTF-8\";\n.j-input--without-label input.form-control {\n  background: red;\n}\n.j-input--without-label input.form-control:before {\n  content: \"До\";\n  display: block;\n}\n.accident-time {\n  background: #F6F7F8;\n  border: 1px solid #E7E7F1;\n  border-radius: 5px;\n  min-height: 150px;\n}\n.accident-time__description {\n  font-size: 0.875rem;\n  color: #666C72;\n}\n.point-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.point-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.point-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  color: #1a1c1f;\n  white-space: pre-wrap;\n}\n.point-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n  white-space: pre-wrap;\n}\n.delivery-form {\n  min-height: 10rem;\n}\n.delivery-form__header {\n  margin-bottom: 1.5rem;\n}\n.delivery-form__header-title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n}\n.delivery-form__direction .select-city {\n  width: 100%;\n}\n.delivery-form__direction .select-city--intercity {\n  width: 48%;\n}\n.delivery-form__direction .select-city--intercity:after {\n  content: \"\";\n  width: 15px;\n  height: 1px;\n  color: #666c72;\n}\n.delivery-type {\n  margin-bottom: 0.75rem;\n}\n/* Input */\n.input-icons span {\n  position: absolute;\n}\n.input-icons {\n  width: 100%;\n  margin-bottom: 10px;\n}\n.icon {\n  padding: 10px;\n  min-width: 40px;\n}\n.input-field {\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n.workingTime-input-dash-after {\n  position: relative;\n}\n.workingTime-input-dash-after:after {\n  content: \"\";\n  background: #C4C4C4;\n  width: 10px;\n  height: 2px;\n  display: block;\n  position: absolute;\n  right: -21px;\n  top: 38%;\n}\n.text {\n  font-size: 16px;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 63089:
/*!************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-modal/delivery-modal.component.scss?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-modal__header {\n  margin-bottom: 1.5rem;\n}\n.delivery-modal__header-title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n}\n.delivery-type {\n  margin-bottom: 0.75rem;\n}\n/* Input */\n.input-icons span {\n  position: absolute;\n}\n.input-icons {\n  width: 100%;\n  margin-bottom: 10px;\n}\n.icon {\n  padding: 10px;\n  min-width: 40px;\n}\n.input-field {\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGl2ZXJ5LW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UscUJBQUE7QUFGSjtBQUtFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHFCQUFBO0FBSEo7QUFPQTtFQUNFLHNCQUFBO0FBSkY7QUFPQSxVQUFBO0FBQ0E7RUFDRSxrQkFBQTtBQUpGO0FBT0E7RUFDRSxXQUFBO0VBQ0EsbUJBQUE7QUFKRjtBQU9BO0VBQ0UsYUFBQTtFQUNBLGVBQUE7QUFKRjtBQU9BO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQUpGIiwiZmlsZSI6ImRlbGl2ZXJ5LW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInNoYXJlZFwiO1xuXG4uZGVsaXZlcnktbW9kYWwge1xuICAmX19oZWFkZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgfVxuXG4gICZfX2hlYWRlci10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS44NzVyZW07XG4gIH1cbn1cblxuLmRlbGl2ZXJ5LXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtO1xufVxuXG4vKiBJbnB1dCAqL1xuLmlucHV0LWljb25zIHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5pbnB1dC1pY29ucyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uaWNvbiB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1pbi13aWR0aDogNDBweDtcbn1cblxuLmlucHV0LWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */";

/***/ }),

/***/ 8018:
/*!**************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-remove-modal/delivery-remove-modal.component.scss?ngResource ***!
  \**************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxpdmVyeS1yZW1vdmUtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */";

/***/ }),

/***/ 69315:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/set-delivery-modal/set-delivery-modal.component.scss?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".point-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.point-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.point-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  text-align: center;\n  color: #1a1c1f;\n  white-space: pre-wrap;\n}\n.point-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n  white-space: pre-wrap;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 73533:
/*!***************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/add-edit-modal/add-edit-modal.component.scss?ngResource ***!
  \***************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".add-modal__header {\n  margin-bottom: 34px;\n}\n.add-modal__header-title {\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 30px;\n}\n.add-btn {\n  font-size: 16px;\n  line-height: 24px;\n  color: #1586BB;\n}\n.delete-btn {\n  cursor: pointer;\n  padding-left: 1px;\n  padding-right: 12px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1lZGl0LW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdFO0VBQ0UsbUJBQUE7QUFGSjtBQUtFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFISjtBQU9BO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUpGO0FBT0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7QUFKRiIsImZpbGUiOiJhZGQtZWRpdC1tb2RhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NoYXJlZCc7XG5cbi5hZGQtbW9kYWwge1xuICAmX19oZWFkZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDM0cHg7XG4gIH1cblxuICAmX19oZWFkZXItdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICB9XG59XG5cbi5hZGQtYnRuIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICMxNTg2QkI7XG59XG5cbi5kZWxldGUtYnRuIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nLWxlZnQ6IDFweDtcbiAgcGFkZGluZy1yaWdodDogMTJweDtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuIl19 */";

/***/ }),

/***/ 65016:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/logo-modal/logo-modal.component.scss?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = ".logo-modal__header {\n  margin-top: 16px;\n  margin-bottom: 30px;\n}\n.logo-modal__body-text {\n  line-height: 18px;\n  margin-bottom: 46px;\n}\n.logo-modal__body-image {\n  width: 128px;\n  height: 128px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #b7bec5;\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 30px;\n  margin-bottom: 24px;\n}\ninput[type=file] {\n  display: none;\n}\n.logo {\n  border: 1px solid #d6dadf;\n  border-radius: 8px;\n  width: 128px;\n  height: 128px;\n}\n.nologo {\n  border: 2px dashed #d6dadf;\n  border-radius: 8px;\n  width: 128px;\n  height: 128px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 90957:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/remove-modal/remove-modal.component.scss?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = ".person-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.person-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.person-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  text-align: center;\n  color: #1a1c1f;\n}\n.person-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 82057:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/notice-modal/notice-modal.component.scss?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = ".point-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.point-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.point-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  text-align: center;\n  color: #1a1c1f;\n  white-space: pre-wrap;\n}\n.point-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 84780:
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/pickup-points-modal/pickup-points-modal.component.scss?ngResource ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".pickup-points-modal__header {\n  margin-bottom: 1.5rem;\n}\n.pickup-points-modal__header-title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n}\n.pickup-points-type {\n  margin-bottom: 0.75rem;\n}\n.prompt {\n  display: block;\n  margin-top: -0.5rem;\n  margin-bottom: 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.125rem;\n  color: #666c72;\n}\n.prompt__important {\n  color: #FF0000;\n}\n.main-checkbox {\n  margin-bottom: 0.75rem;\n}\n.switch {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n.switch__status {\n  margin-right: auto;\n}\n.switch__status-text {\n  display: block;\n  font-size: 0.75rem;\n  line-height: 1.125rem;\n  color: #666c72;\n}\n.switch__status-state {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: #1a1c1f;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 34298:
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/points-remove-modal/points-remove-modal.component.scss?ngResource ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".point-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.point-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.point-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  text-align: center;\n  color: #1a1c1f;\n  white-space: pre-wrap;\n}\n.point-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 41037:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/remove-delivery-modal/remove-delivery-modal.component.scss?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = ".delivery-remove__close {\n  display: flex;\n  justify-content: flex-end;\n}\n.delivery-remove__close-btn {\n  border: none;\n  background-color: transparent;\n}\n.delivery-remove__title {\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.875rem;\n  text-align: center;\n  color: #1a1c1f;\n}\n.delivery-remove__text {\n  display: block;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  text-align: center;\n  color: #666c72;\n}\n/*# sourceMappingURL=data:application/json;base64, */";

/***/ }),

/***/ 2162:
/*!***********************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/settings.component.scss?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = ".settings {\n  padding-top: 40px;\n}\n.settings__title {\n  font-weight: normal;\n  line-height: 55px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsaUJBQUE7QUFERjtBQUdFO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtBQURKIiwiZmlsZSI6InNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc2hhcmVkJztcblxuLnNldHRpbmdzIHtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG5cbiAgJl9fdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDU1cHg7XG4gIH1cbn1cbiJdfQ== */";

/***/ }),

/***/ 67910:
/*!**********************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/components/input-autocomplete/input-autocomplete.component.html?ngResource ***!
  \**********************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"j-input input-autocomplete\">\n  <input \n    #input\n    class=\"form-control\"\n    [value]=\"inputValue\"\n    (keyup)=\"onChange($event.target.value)\"\n    [id]=\"id\"\n    [class.is-filled]=\"isFilled\"\n    [name]=\"name\"\n    [autofocus]=\"autofocus\"\n    (focus)=\"onFocus()\"\n    (blur)=\"onBlur()\"\n    autocomplete=\"off\"\n    autocomplete=\"false\"\n  >\n  <label \n    class=\"j-input--float-label\"\n    [for]=\"id\"\n    translate\n  >\n    {{label}}\n  </label>\n  <ul \n    class=\"list-group input-autocomplete__options\"\n    [hidden]=\"!isFocused\"\n  >\n    <li \n      class=\"list-group-item\"\n      *ngFor=\"let option of options\"\n      (mousedown)=\"onOptionSelect(option)\"\n    >\n        {{ option.title }}\n    </li>\n  </ul>\n</div>";

/***/ }),

/***/ 16509:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/checkbox/checkbox.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"custom-control custom-checkbox\" [class]=\"class\">\n  <input class=\"custom-control-input\"\n         type=\"checkbox\"\n         [id]=\"label\"\n         [name]=\"label\"\n         [formControl]=\"control\"\n         ngDefaultControl\n  >\n  <label class=\"custom-control-label text-muted\"\n         [for]=\"label\" translate>\n    {{ label }}\n  </label>\n</div>\n";

/***/ }),

/***/ 12608:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-list/delivery-list.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"delivery-list\">\n  <!--  SEARCH-->\n  <!-- <div class=\"delivery-list__search\">\n    <j-form-field clearable=\"true\">\n      <span class=\"text-primary d-block mt-n1\"\n            jPrefix\n            inlineSVG=\"./assets/icons/search.svg\"></span>\n      <input type=\"text\"\n             jFormInput\n             placeholder=\"{{mapTranslate('SEARCH_LARGE') | translate}}\"\n             class=\"form-control\"\n             autocomplete=\"off\"\n             [formControl]=\"search\">\n    </j-form-field>\n  </div> -->\n\n  <!--  TABLE-->\n  <div class=\"delivery-list__body\"\n       infiniteScroll\n       [scrollWindow]=\"true\"\n       [alwaysCallback]=\"true\"\n       [infiniteScrollDistance]=\"2\"\n       [infiniteScrollThrottle]=\"500\"\n  >\n    <j-delivery-table  *ngIf=\"deliveries.length > 0; else noData\" [deliveries]=\"deliveries\"></j-delivery-table>\n\n    <ng-template #noData>\n      <j-no-data [text]=\"'JMART.SETTINGS.DELIVERY.NO_DATA'\"></j-no-data>\n    </ng-template>\n  </div>\n</div>\n\n";

/***/ }),

/***/ 67409:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-price/delivery-price.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"delivery-price d-flex align-items-center\" [class]=\"class\">\n    <j-amount-input\n        class=\"delivery-price__amount-input\"\n        [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.FROM'\"\n        currency=\"KZT_RU\"\n        [formControl]=\"controls.from\"\n        [isDisabled]=\"true\"\n    ></j-amount-input>\n    <j-amount-input\n        *ngIf=\"!isLast\"\n        class=\"delivery-price__amount-input mx-2\"\n        [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.TO'\"\n        currency=\"KZT_RU\"\n        [formControl]=\"controls.to\"\n    ></j-amount-input>\n    <j-amount-input\n        class=\"delivery-price__amount-input\"\n        [class.mx-2]=\"isLast\"\n        [label]=\"'JMART.SETTINGS.DELIVERY.FORM.PRICE.TITLE'\"\n        currency=\"KZT_RU\"\n        [formControl]=\"controls.deliveryPrice\"\n        [isDisabled]=\"checkbox?.value\"\n    ></j-amount-input>\n    <j-checkbox\n        *ngIf=\"isLast\"\n        class=\"delivery-price__amount-input text-center mb-2\"\n        [label]=\"'JMART.SETTINGS.DELIVERY.FORM.IS_FREE'\"\n        [control]=\"checkbox\"\n    ></j-checkbox>\n    <button\n     *ngIf='canBeRemoved'\n     (click)='onRemove()'\n     class='btn pl-3 pr-1 align-self-baseline'\n     inlineSVG='/assets/icons/delete.svg'\n    ></button>\n</div>\n";

/***/ }),

/***/ 74170:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/delivery-table/delivery-table.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = "\n<j-table\n  [data]=\"deliveryTableData\"\n  [class]=\"deliveryTableClasses\"\n>\n  <ng-template getTemplate name=\"columns\" let-column>\n    <span class=\"delivery-table__column-header border-0 font-weight-light\">\n      {{ column }}\n    </span>\n  </ng-template>\n  <ng-template getTemplate name=\"column-1\" let-city>\n    <span class=\"delivery-table--label\">{{ city.from }}</span>\n    <span\n      *ngIf=\"city.to\"\n      class=\"d-block delivery-table--label delivery-table__city-to\"\n    >\n      <span \n        inlineSVG='assets/jmart/delivery/from-city.svg'\n      >\n      </span>\n      {{ city.to }}\n    </span>\n  </ng-template>\n  <ng-template getTemplate name=\"column-2\" let-prices>\n    <ng-container *ngIf=\"prices\">\n      <div class=\"prices delivery-table--label\" *ngFor=\"let price of prices\">\n        <span class=\"price\">{{price.price}}</span>\n        <span class=\"range\">{{price.range}}</span>\n      </div>\n    </ng-container>\n    <div class=\"delivery-table__empty-cell\" *ngIf=\"!prices\">-</div>\n  </ng-template>\n  <ng-template getTemplate name=\"column-3\" let-wokringHours>\n    <ng-container *ngIf=\"wokringHours\">\n      <div class=\"working-time delivery-table--label\" *ngFor=\"let time of wokringHours\">\n        <span class=\"working-days\">{{time.days}}</span>\n        <span class=\"working-hours\">{{time.hour}}</span>\n      </div>\n    </ng-container>\n    <div class=\"delivery-table__empty-cell\" *ngIf=\"!wokringHours\">-</div>\n  </ng-template>\n  <ng-template getTemplate name=\"column-4\" let-time>\n    <ng-container *ngIf=\"time; else emptyTime\">\n      <div *ngIf=\"time?.isCity\">\n        <span class=\"estimated estimated-type delivery-table--label\">{{ time.estimatedType }}</span>\n        <span class=\"estimated estimated-time delivery-table--label\">{{ time.estimatedTime }}</span>\n      </div>\n      <span *ngIf=\"!time.isCity\" class=\"estimated estimated-type delivery-table--label\">{{time.deliveryEstimatedDay}}</span>\n    </ng-container>\n    <ng-template #emptyTime>\n      <div class=\"delivery-table__empty-cell\" *ngIf=\"!time\">-</div>\n    </ng-template>\n  </ng-template>\n  <ng-template getTemplate name=\"column-5\" let-deliveryMode>\n    <div class=\"table__body-item col delivery-table--label p-0\">{{ deliveryMode }}</div>\n  </ng-template>\n  <ng-template getTemplate name=\"column-6\" let-delivery>\n      <span \n        tooltipClass=\"tooltip-light\"\n        [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.EDIT' | translate\"\n        class=\"edit-btn mr-2\"\n        (click)=\"edit(delivery)\"\n      >\n        <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.8253 6.19123L18.8257 6.19084C19.1038 5.92538 19.3236 5.61097 19.4733 5.26596C19.6231 4.92081 19.7 4.55139 19.7 4.17867C19.7 3.80594 19.6231 3.43652 19.4733 3.09137C19.3235 2.74619 19.1035 2.43165 18.8253 2.1661L18.8252 2.16604L17.7516 1.14094L17.7516 1.14088C17.4735 0.875148 17.1425 0.663657 16.7772 0.519131C16.4119 0.374598 16.02 0.300049 15.6238 0.300049C15.2277 0.300049 14.8357 0.374598 14.4704 0.519131C14.1052 0.663635 13.7743 0.875084 13.4962 1.14076L13.4961 1.14088L3.11129 11.1081C2.69024 11.5236 2.36743 12.0189 2.16343 12.5608L2.16299 12.562L0.353379 17.5025L0.352851 17.504C0.301557 17.6498 0.287395 17.8047 0.311223 17.9562C0.335139 18.1083 0.396834 18.2538 0.492315 18.3805C0.587855 18.5072 0.714657 18.6117 0.863065 18.684C1.01118 18.7563 1.17593 18.7941 1.34354 18.7939C1.45952 18.7925 1.57457 18.7755 1.68525 18.7435L6.85976 17.0154L6.86196 17.0147C7.43659 16.8277 7.9574 16.5176 8.3847 16.1092L8.38535 16.1086L18.8253 6.19123ZM15.6267 2.26407L15.6267 2.26414C15.8675 2.26644 16.1003 2.35929 16.2738 2.52654L16.2754 2.52802L17.346 3.53754L17.3513 3.54247L17.3563 3.54765C17.5182 3.71572 17.6103 3.93847 17.6103 4.17226C17.6103 4.40605 17.5182 4.6288 17.3563 4.79687L17.3476 4.80587L17.3474 4.80568L15.7889 6.29384L13.3594 4.07892L14.9848 2.52887C15.0678 2.44622 15.1664 2.38076 15.2745 2.3356C15.3839 2.2899 15.5013 2.26572 15.6199 2.26416L15.6267 2.26407ZM11.91 5.46108L4.5872 12.4443L4.58616 12.4453C4.36971 12.6537 4.20587 12.9083 4.1087 13.1896L3.22369 15.6479L3.01549 16.2262L3.59952 16.0345L6.17233 15.19L6.17427 15.1894C6.46368 15.0983 6.72815 14.9438 6.94636 14.7372L6.94725 14.7364L14.3405 7.67687L11.91 5.46108Z\" />\n        </svg>\n      </span>\n      <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\" (click)=\"remove(delivery)\"\n      tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n  </ng-template>\n</j-table>";

/***/ }),

/***/ 54760:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-logo/information-logo.component.html?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = "<button\n  class=\"logo p-0\"\n  [class.has-logo]=\"smallLogo\"\n  [class.has-not-logo]=\"!smallLogo\"\n  type=\"button\"\n  (click)=\"addLogo()\"\n  translate\n  tooltipClass=\"tooltip-light\"\n  [ngbTooltip]=\"tooltip | translate\"\n>\n  <img *ngIf=\"smallLogo; else empty\" class=\"logo-img\" [src]=\"smallLogo\" width=\"56\" height=\"56\">\n\n  <ng-template #empty>\n    <span class=\"logo__text\" translate>JMART.SETTINGS.INFORMATION.LOGO</span>\n  </ng-template>\n</button>\n";

/***/ }),

/***/ 86964:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-main/information-main.component.html?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"main\">\n  <h5 class=\"mb-1 main__title\" translate>JMART.SETTINGS.INFORMATION.MAIN_INFORMATION</h5>\n  <p class=\"mb-4 main__subtitle\" translate>JMART.SETTINGS.INFORMATION.SUBTITLE</p>\n\n  <div class=\"row justify-content-start\">\n    <div class=\"left-col\">\n      <j-information-logo [smallLogo]=\"logo\"></j-information-logo>\n    </div>\n    <div class=\"col-5 right-col pl-0\">\n      <j-input\n        label=\"JMART.SETTINGS.INFORMATION.INPUT_LABEL\"\n        type=\"text\"\n        [formControl]=\"companyName\"\n        [isClearable]=\"false\"\n        translate\n      ></j-input>\n    </div>\n  </div>\n</section>\n";

/***/ }),

/***/ 20205:
/*!***************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-person/information-person.component.html?ngResource ***!
  \***************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"row auto-wrap persons-info\" [class.section-border]=\"!isLast\">\n  <div class=\"col p-3\">{{ info.lastName + \" \" + info.firstName + \" \" + info?.patronymic }}</div>\n  <div class=\"col-4 auto-wrap p-3\">\n    <p class=\"m-0\" *ngFor=\"let email of info.emails\">{{ email }}</p>\n  </div>\n  <div class=\"col-3 p-3\">\n    <p class=\"m-0\" *ngFor=\"let phone of info.phones\">{{ phone | maskPrefixPhone }}</p>\n  </div>\n  <div class=\"col-auto persons-info__btn p-3\">\n    <span (click)=\"editPerson(info)\"\n          tooltipClass=\"tooltip-light\"\n          [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.EDIT' | translate\"\n          class=\"edit-btn\"\n    >\n      <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.8253 6.19123L18.8257 6.19084C19.1038 5.92538 19.3236 5.61097 19.4733 5.26596C19.6231 4.92081 19.7 4.55139 19.7 4.17867C19.7 3.80594 19.6231 3.43652 19.4733 3.09137C19.3235 2.74619 19.1035 2.43165 18.8253 2.1661L18.8252 2.16604L17.7516 1.14094L17.7516 1.14088C17.4735 0.875148 17.1425 0.663657 16.7772 0.519131C16.4119 0.374598 16.02 0.300049 15.6238 0.300049C15.2277 0.300049 14.8357 0.374598 14.4704 0.519131C14.1052 0.663635 13.7743 0.875084 13.4962 1.14076L13.4961 1.14088L3.11129 11.1081C2.69024 11.5236 2.36743 12.0189 2.16343 12.5608L2.16299 12.562L0.353379 17.5025L0.352851 17.504C0.301557 17.6498 0.287395 17.8047 0.311223 17.9562C0.335139 18.1083 0.396834 18.2538 0.492315 18.3805C0.587855 18.5072 0.714657 18.6117 0.863065 18.684C1.01118 18.7563 1.17593 18.7941 1.34354 18.7939C1.45952 18.7925 1.57457 18.7755 1.68525 18.7435L6.85976 17.0154L6.86196 17.0147C7.43659 16.8277 7.9574 16.5176 8.3847 16.1092L8.38535 16.1086L18.8253 6.19123ZM15.6267 2.26407L15.6267 2.26414C15.8675 2.26644 16.1003 2.35929 16.2738 2.52654L16.2754 2.52802L17.346 3.53754L17.3513 3.54247L17.3563 3.54765C17.5182 3.71572 17.6103 3.93847 17.6103 4.17226C17.6103 4.40605 17.5182 4.6288 17.3563 4.79687L17.3476 4.80587L17.3474 4.80568L15.7889 6.29384L13.3594 4.07892L14.9848 2.52887C15.0678 2.44622 15.1664 2.38076 15.2745 2.3356C15.3839 2.2899 15.5013 2.26572 15.6199 2.26416L15.6267 2.26407ZM11.91 5.46108L4.5872 12.4443L4.58616 12.4453C4.36971 12.6537 4.20587 12.9083 4.1087 13.1896L3.22369 15.6479L3.01549 16.2262L3.59952 16.0345L6.17233 15.19L6.17427 15.1894C6.46368 15.0983 6.72815 14.9438 6.94636 14.7372L6.94725 14.7364L14.3405 7.67687L11.91 5.46108Z\" />\n      </svg>\n    </span>\n  </div>\n  <div class=\"col-md-auto persons-info__btn p-3\">\n    <span (click)=\"removePerson(info.id)\"\n          tooltipClass=\"tooltip-light\"\n          [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"\n          class=\"remove-btn\"\n    >\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14 17.29C13.7348 17.29 13.4804 17.1846 13.2929 16.9971C13.1054 16.8096 13 16.5552 13 16.29V8.85001C13 8.58479 13.1054 8.33044 13.2929 8.1429C13.4804 7.95536 13.7348 7.85001 14 7.85001C14.2652 7.85001 14.5196 7.95536 14.7071 8.1429C14.8946 8.33044 15 8.58479 15 8.85001V16.29C15 16.5552 14.8946 16.8096 14.7071 16.9971C14.5196 17.1846 14.2652 17.29 14 17.29Z\" />\n        <path d=\"M10 17.29C9.73478 17.29 9.48043 17.1846 9.29289 16.9971C9.10536 16.8096 9 16.5552 9 16.29V8.85001C9 8.58479 9.10536 8.33044 9.29289 8.1429C9.48043 7.95536 9.73478 7.85001 10 7.85001C10.2652 7.85001 10.5196 7.95536 10.7071 8.1429C10.8946 8.33044 11 8.58479 11 8.85001V16.29C11 16.5552 10.8946 16.8096 10.7071 16.9971C10.5196 17.1846 10.2652 17.29 10 17.29Z\" />\n        <path d=\"M13.91 21.88H10.09C8.74178 21.88 7.44863 21.3451 6.49436 20.3927C5.54008 19.4403 5.00265 18.1482 5 16.8V6.79999C5 6.53477 5.10536 6.28042 5.29289 6.09288C5.48043 5.90534 5.73478 5.79999 6 5.79999C6.26522 5.79999 6.51957 5.90534 6.70711 6.09288C6.89464 6.28042 7 6.53477 7 6.79999V16.8C7 17.6169 7.3245 18.4003 7.90211 18.9779C8.18812 19.2639 8.52765 19.4908 8.90133 19.6455C9.27502 19.8003 9.67553 19.88 10.08 19.88H13.9C14.3062 19.8826 14.7088 19.8049 15.0848 19.6513C15.4608 19.4977 15.8027 19.2712 16.0908 18.985C16.379 18.6987 16.6076 18.3583 16.7637 17.9833C16.9197 17.6083 17 17.2061 17 16.8V6.79999C17 6.53477 17.1054 6.28042 17.2929 6.09288C17.4804 5.90534 17.7348 5.79999 18 5.79999C18.2652 5.79999 18.5196 5.90534 18.7071 6.09288C18.8946 6.28042 19 6.53477 19 6.79999V16.8C18.9974 18.1482 18.4599 19.4403 17.5056 20.3927C16.5514 21.3451 15.2582 21.88 13.91 21.88Z\" />\n        <path d=\"M19.1096 4.87H4.88965C4.62443 4.87 4.37008 4.76464 4.18254 4.5771C3.99501 4.38957 3.88965 4.13521 3.88965 3.87C3.88965 3.60478 3.99501 3.35042 4.18254 3.16289C4.37008 2.97535 4.62443 2.87 4.88965 2.87H19.1096C19.3749 2.87 19.6292 2.97535 19.8168 3.16289C20.0043 3.35042 20.1096 3.60478 20.1096 3.87C20.1096 4.13521 20.0043 4.38957 19.8168 4.5771C19.6292 4.76464 19.3749 4.87 19.1096 4.87Z\" />\n        <path d=\"M13.6301 4.12H10.3701C10.1049 4.12 9.85055 4.01464 9.66301 3.8271C9.47547 3.63957 9.37012 3.38521 9.37012 3.12C9.37012 2.85478 9.47547 2.60042 9.66301 2.41289C9.85055 2.22535 10.1049 2.12 10.3701 2.12H13.6301C13.8953 2.12 14.1497 2.22535 14.3372 2.41289C14.5248 2.60042 14.6301 2.85478 14.6301 3.12C14.6301 3.38521 14.5248 3.63957 14.3372 3.8271C14.1497 4.01464 13.8953 4.12 13.6301 4.12Z\" />\n      </svg>\n    </span>\n  </div>\n</section>\n";

/***/ }),

/***/ 90301:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-persons/information-persons.component.html?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"persons\">\n  <h5 class=\"mb-1 persons__title\" translate>JMART.SETTINGS.INFORMATION.RESPONSABLE_PERSON</h5>\n  <p class=\"persons__subtitle\" translate>JMART.SETTINGS.INFORMATION.RESPONSABLE_PERSON_TEXT</p>\n  <div *ngIf=\"persons\">\n    <j-information-res-persons [respPersons]=\"persons\"></j-information-res-persons>\n  </div>\n</section>\n";

/***/ }),

/***/ 43182:
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/information-res-persons/information-res-persons.component.html?ngResource ***!
  \*************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"container-fluid persons-wrap mb-4\" *ngFor=\"let persons of respPersons\">\n  <div class=\"row justify-content-between persons-header\">\n    <h6 class=\"col-auto\">{{ persons.title }}</h6>\n    <button class=\"col-auto persons-header__add\" (click)=\"addPerson(persons.id)\">\n        <img class=\"persons-header__img\" src='./assets/jmart/add.svg' alt=\"JMART.SETTINGS.INFORMATION.ADD\" translate>\n        <span class=\"persons-header__img-text\" translate\n              tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.ADD_RESP_PERSON' | translate\">JMART.SETTINGS.INFORMATION.ADD\n        </span>\n    </button>\n  </div>\n\n  <div *ngIf=\"persons.persons.length > 0; else noinfo\">\n    <j-information-person *ngFor=\"let person of persons.persons; last as isLast\n                   trackBy: identify;\"\n                   [info]=\"person\"\n                   [blockId]=\"persons.id\"\n                   [isLast]=\"isLast\"\n    ></j-information-person>\n  </div>\n\n  <ng-template #noinfo>\n    <div class=\"row justify-content-center\">\n      <p class=\"col-md-auto persons-noinfo\" translate>JMART.SETTINGS.INFORMATION.NO_INFO</p>\n    </div>\n  </ng-template>\n</div>\n";

/***/ }),

/***/ 26184:
/*!*****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-table/j-table.component.html?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

module.exports = "<ng-content></ng-content>\n<table class=\"table table-borderless j-table w-100\" [class]=\"class.table\">\n  <thead>\n      <tr>\n        <th *ngFor=\"let column of data.columns\" class=\"children\" [class]=\"class.th\">\n            <ng-template [ngTemplateOutlet]=\"tpls['columns']\"\n                         [ngTemplateOutletContext]=\"{$implicit: column}\"></ng-template>\n        </th>\n      </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let row of data.rows\">\n      <td *ngFor=\"let item of row; index as columnIndex;\" [class]=\"class.td\">\n        <ng-template [ngTemplateOutlet]=\"getColumnTplsByIndex(columnIndex)\"\n          [ngTemplateOutletContext]=\"{$implicit: item}\"></ng-template>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  ";

/***/ }),

/***/ 44789:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/j-tole-work-regime/j-tole-work-regime.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div>\n  <div class='col-12 pr-2 pl-2 d-flex justify-content-between align-items-center'>\n    <p class='form-field-title'>Режим работы</p>\n    <button [disabled]='pickedDaysCount === 7' (click)='addWorkRegimesHandler()' class='btn add-workRegimes__button' type='button'>\n      {{\"JMART.SETTINGS.DELIVERY.FORM.PRICE.BTN\" | translate}}\n    </button>\n  </div>\n\n  <ng-container>\n    <ul>\n      <li *ngFor='let workRegime of workRegimes; index as i' class=\"my-3\">\n        <ng-container *ngTemplateOutlet='addWorkRegimeForm; context: {workRegime: workRegime, i : i}'></ng-container>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n\n<ng-template #deleteWorkRegime let-index='index'>\n  <button *ngIf='index !== 0' (click)='deleteWorkRegimeHandler(index)' class='btn delete-workRegimes__button' inlineSVG='/assets/icons/delete.svg'></button>\n</ng-template>\n\n<ng-template #addWorkRegimeForm\n             let-workRegime='workRegime'\n             let-index='i'\n>\n  <div class='col-12 pr-2 pl-2'>\n    <div class='d-flex'>\n      <j-dropdown-input [nonClosingAfterSelection]='true' [selectedItem]=\"'test'\" [options]='workRegime.days' label='Дни недели' class='work-day__item'>\n        <ng-template #selectedTemplate>\n          <!-- <ul class='d-flex align-items-center selected-days'>\n            <li\n              *ngFor='let selected of getWorkRegimeSelectedDays(workRegime.form, index)'\n            >\n              {{ selected | shortDayName }},\n            </li>\n          </ul> -->\n          <span>{{ getWorkRegimeSelectedDays(workRegime.form, index) }}</span>\n        </ng-template>\n        <ng-template #optionTemplate let-workDay>\n          <div class=\"custom-control custom-checkbox work-day__checkbox\">\n            <input [formControl]='workRegime.form.controls[workDay]'\n                   type=\"checkbox\"\n                   class=\"custom-control-input\"\n                   id=\"{{index + workDay}}\">\n            <label class=\"custom-control-label\" for=\"{{index + workDay}}\">{{ getDayTranslateKey(workDay) | translate }}</label>\n          </div>\n        </ng-template>\n      </j-dropdown-input>\n      <ng-container *ngTemplateOutlet='deleteWorkRegime; context: {index: index}'></ng-container>\n    </div>\n    <div>\n      <div class='d-flex justify-content-start align-items-center'>\n        <div class=\"custom-control custom-checkbox\">\n          <input [formControl]='workRegime.workRegimeOptions.controls.workRegimeTime'\n                 type=\"checkbox\"\n                 class=\"custom-control-input\"\n                 id=\"{{index}}allDayCheckbox\">\n          <label class=\"custom-control-label\" for=\"{{index}}allDayCheckbox\">Круглосуточно</label>\n        </div>\n       <div class='d-flex mb-2'>\n         <ng-container\n           *ngTemplateOutlet='workTimeForm;\n          context: { label: \"От\", control: workRegime.workRegimeTime.controls.open, type: TIME_INPUT_TYPE.FROM }'></ng-container>\n         <ng-container\n           *ngTemplateOutlet='workTimeForm;\n          context: { label: \"До\", control: workRegime.workRegimeTime.controls.close, type: TIME_INPUT_TYPE.TO }'></ng-container>\n       </div>\n      </div>\n      <div class='d-flex justify-content-start align-items-center' *ngIf=\"showWorkRegimeBreakTime\">\n        <div class=\"custom-control custom-checkbox without-break-checkbox\">\n          <input\n            [formControl]='workRegime.workRegimeOptions.controls.workRegimeBreakTime'\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            id=\"{{index}}withoutBreakCheckbox\">\n          <label class=\"custom-control-label\" for=\"{{index}}withoutBreakCheckbox\">Без перерыва</label>\n        </div>\n        <div class='d-flex mb-2'>\n          <ng-container\n            *ngTemplateOutlet='workTimeForm;\n          context: { label: \"Перерыв от\", control: workRegime.workRegimeBreakTime.controls.from, type: TIME_INPUT_TYPE.FROM }'></ng-container>\n          <ng-container\n            *ngTemplateOutlet='workTimeForm;\n          context: { label: \"Перерыв до\", control: workRegime.workRegimeBreakTime.controls.to, type: TIME_INPUT_TYPE.TO }'></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #workTimeForm\n             let-type='type'\n             let-label='label'\n             let-control='control'\n>\n  <div class='d-flex'>\n    <j-form-field>\n      <j-label>{{label}}</j-label>\n      <input type=\"text\"\n             jFormInput\n             [formControl]='control'\n             mask=\"00:00\"\n             class=\"form-control mb-2\"\n      >\n    </j-form-field>\n    <div *ngIf='type === TIME_INPUT_TYPE.FROM' class='divider'></div>\n  </div>\n</ng-template>\n";

/***/ }),

/***/ 40574:
/*!*****************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/no-data/no-data.component.html?ngResource ***!
  \*****************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"points-empty container-fluid\">\n  <span class=\"points-empty__img mb-3\" inlineSVG=\"./assets/jmart/no-data.svg\"></span>\n<!--  <span class=\"points-empty__text\">{{'JMART.SETTINGS.PICKUPPOINTS.NO_DATA' | translate}}</span>-->\n  <span class=\"points-empty__text\">{{text | translate}}</span>\n</section>\n";

/***/ }),

/***/ 59990:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-info/points-info.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div [innerHTML]=\"text | translate\"></div>\n";

/***/ }),

/***/ 48638:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-status/points-status.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div id=\"ck-button\" class=\"statuses\" *ngFor=\"let status of statuses | slice:0:3; let i = index\">\n    <label [for]=\"status.label+i\">\n      <input type=\"checkbox\"\n             [(ngModel)]=\"status.isSelected\"\n             (change)=\"onToggle(status.value)\"\n             [id]=\"status.label+i\"\n      >\n      <span translate>{{status.label}}</span>\n    </label>\n</div>\n";

/***/ }),

/***/ 94680:
/*!***************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/points-table/points-table.component.html?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"table container-fluid\">\n  <div class=\"table__header row\">\n    <p class=\"table__header-item col-1\">ID</p>\n    <p class=\"table__header-item col-4\">{{mapTranslate('ADDRESS') | translate}}</p>\n    <p class=\"table__header-item col-3\">{{mapTranslate('SCHEDULE') | translate}}</p>\n    <p class=\"table__header-item col-1\">{{mapTranslate('TYPE') | translate}}</p>\n    <p class=\"table__header-item col\">{{mapTranslate('TYPE_WAREHOUSE') | translate}}</p>\n    <p class=\"table__header-item col-auto\"></p>\n  </div>\n\n  <div class=\"table__body row\" *ngFor=\"let point of points; trackBy: identify\" >\n    <div class=\"table__body-item col-1\">\n      <span *ngIf=\"point.status === 'A'\" class=\"mr-1\">\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#74BA72\"/>\n        </svg>\n      </span>\n      <span *ngIf=\"point.status === 'D'\" class=\"mr-1\">\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF0000\"/>\n        </svg>\n      </span>\n      <span class=\"store-id\">{{point.companyStoreId}}</span>\n    </div>\n    <p class=\"table__body-item col-4\">​​{{point.city?.name ? point.city?.name : point.city?.title}}, {{point.pickupAddress}}</p>\n    <div class=\"table__body-item col-3\">\n      <div class=\"working-time\" *ngFor=\"let time of point.workingTime\">\n        <span class=\"working-days\">{{time.days}}</span>\n        <span class=\"working-hours\">{{time.hour}}, {{time.break}}</span>\n      </div>\n    </div>\n    <p *ngIf=\"point.type\" class=\"table__body-item col-1\">{{point.type.label}}</p>\n    <div class=\"table__body-item col\">\n      <p>{{point.isMain}}</p>\n      <p>{{point.isMainInCity}}</p>\n    </div>\n    <div class=\"table__body-item col-auto\">\n      <span (click)=\"edit(point)\"\n            tooltipClass=\"tooltip-light\"\n            [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.EDIT' | translate\"\n            class=\"edit-btn\"\n      >\n      <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.8253 6.19123L18.8257 6.19084C19.1038 5.92538 19.3236 5.61097 19.4733 5.26596C19.6231 4.92081 19.7 4.55139 19.7 4.17867C19.7 3.80594 19.6231 3.43652 19.4733 3.09137C19.3235 2.74619 19.1035 2.43165 18.8253 2.1661L18.8252 2.16604L17.7516 1.14094L17.7516 1.14088C17.4735 0.875148 17.1425 0.663657 16.7772 0.519131C16.4119 0.374598 16.02 0.300049 15.6238 0.300049C15.2277 0.300049 14.8357 0.374598 14.4704 0.519131C14.1052 0.663635 13.7743 0.875084 13.4962 1.14076L13.4961 1.14088L3.11129 11.1081C2.69024 11.5236 2.36743 12.0189 2.16343 12.5608L2.16299 12.562L0.353379 17.5025L0.352851 17.504C0.301557 17.6498 0.287395 17.8047 0.311223 17.9562C0.335139 18.1083 0.396834 18.2538 0.492315 18.3805C0.587855 18.5072 0.714657 18.6117 0.863065 18.684C1.01118 18.7563 1.17593 18.7941 1.34354 18.7939C1.45952 18.7925 1.57457 18.7755 1.68525 18.7435L6.85976 17.0154L6.86196 17.0147C7.43659 16.8277 7.9574 16.5176 8.3847 16.1092L8.38535 16.1086L18.8253 6.19123ZM15.6267 2.26407L15.6267 2.26414C15.8675 2.26644 16.1003 2.35929 16.2738 2.52654L16.2754 2.52802L17.346 3.53754L17.3513 3.54247L17.3563 3.54765C17.5182 3.71572 17.6103 3.93847 17.6103 4.17226C17.6103 4.40605 17.5182 4.6288 17.3563 4.79687L17.3476 4.80587L17.3474 4.80568L15.7889 6.29384L13.3594 4.07892L14.9848 2.52887C15.0678 2.44622 15.1664 2.38076 15.2745 2.3356C15.3839 2.2899 15.5013 2.26572 15.6199 2.26416L15.6267 2.26407ZM11.91 5.46108L4.5872 12.4443L4.58616 12.4453C4.36971 12.6537 4.20587 12.9083 4.1087 13.1896L3.22369 15.6479L3.01549 16.2262L3.59952 16.0345L6.17233 15.19L6.17427 15.1894C6.46368 15.0983 6.72815 14.9438 6.94636 14.7372L6.94725 14.7364L14.3405 7.67687L11.91 5.46108Z\" />\n      </svg>\n    </span>\n    </div>\n  </div>\n</section>\n";

/***/ }),

/***/ 33529:
/*!***************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/radio-button/radio-button.component.html?ngResource ***!
  \***************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div *ngFor=\"let option of options; let i = index\"\n     class=\"custom-control custom-radio my-3\"\n     [class.disabled]=\"formControl.disabled\"\n>\n  <input class=\"custom-control-input\"\n         type=\"radio\"\n         id=\"{{'radio'+i}}\"\n         name=\"group\"\n         [formControl]=\"formControl\"\n         [value]=\"option.value\"\n         [checked]=\"option.value === formControl.value\"\n  >\n  <label class=\"custom-control-label text-muted\"\n         for=\"{{'radio'+i}}\">\n    {{option.label}}\n  </label>\n\n</div>\n";

/***/ }),

/***/ 89966:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/select-city/select-city.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = "<j-dropdown-input \n  [label]=\"label\"\n  [options]=\"citiesNames\"\n  (selected)=\"onCitySelect($event)\"\n  [hasError]=\"error\"\n  [inputClass]=\"class\"\n  [selectedItem]=\"control.value.title\"\n></j-dropdown-input>";

/***/ }),

/***/ 35234:
/*!***********************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/components/tabs/tabs.component.html?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"tabs\">\n   <!-- <a class=\"p1 tabs__link\"\n      [routerLink]=\"['information']\"\n      routerLinkActive=\"tabs__link_active\"\n      translate>JMART.SETTINGS.INFORMATION.TITLE</a> -->\n   <!-- <a class=\"p1 tabs__link\"\n      [routerLink]=\"['pickup-points']\"\n      routerLinkActive=\"tabs__link_active\"\n      translate>JMART.SETTINGS.PICKUPPOINTS.TITLE</a> -->\n\n    <a class=\"p1 tabs__link\"\n       [routerLink]=\"['delivery']\"\n       routerLinkActive=\"tabs__link_active\"\n       translate>JMART.SETTINGS.DELIVERY.TITLE</a>\n\n   <!-- <a class=\"p1 tabs__link\"\n      [routerLink]=\"['schedule']\"\n      routerLinkActive=\"tabs__link_active\"\n      translate>JMART.SETTINGS.SCHEDULE.TITLE</a>\n\n   <a class=\"p1 tabs__link\"\n      [routerLink]=\"['users']\"\n      routerLinkActive=\"tabs__link_active\"\n      translate>JMART.SETTINGS.USERS.TITLE</a> -->\n</div>\n";

/***/ }),

/***/ 95619:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/delivery/delivery.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"delivery\">\n  <!--  HEADER-->\n  <div class=\"delivery__header\">\n    <div class=\"tabs\">\n      <a class=\"p1 tabs__link\"\n         [routerLink]=\"['city']\"\n         routerLinkActive=\"tabs__link_active\"\n         translate>JMART.SETTINGS.DELIVERY.BY_CITY</a>\n      <a class=\"p1 tabs__link\"\n         [routerLink]=\"['intercity']\"\n         routerLinkActive=\"tabs__link_active\"\n         translate>JMART.SETTINGS.DELIVERY.BY_INTERCITY</a>\n    </div>\n    <button class=\"delivery__header-btn\" type=\"button\" (click)=\"addDelivery()\">\n      <span class=\"delivery__header-icon mr-2\" inlineSVG='./assets/jmart/plus.svg'></span>\n      <span class=\"delivery__header-btn-text\" translate>{{mapTranslate('ADD_DELIVERY') | translate}}</span>\n    </button>\n  </div>\n\n  <!--  BODY -->\n  <router-outlet></router-outlet>\n</div>\n";

/***/ }),

/***/ 33777:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/forms/create-delivery.form/create-delivery.component.html?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"delivery-modal p-4\">\n    <div class=\"row justify-content-between align-items-center pt-3 delivery-modal__header\">\n      <h5 class=\"col-auto m-0 delivery-modal__header-title\" translate>{{ formTitle }}</h5>\n      <div class=\"col-auto delete-btn pt-0 pb-0\" *ngIf=\"editedIndex === 1\">\n        <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\" (click)=\"remove()\"\n              tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n      </div>\n    </div>\n\n    <div\n    *ngFor=\"let item of test; let i = index\"\n  ><h1>{{ item }}</h1></div>\n  <h1>test</h1>\n  \n    <form class=\"delivery-modal__form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  \n      <!-- <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.DELIVERY_MODE</h6>\n      <j-radio-button [options]=\"deliveryModes\"\n                      [formControl]=\"form.get('deliveryMode')\"\n                      ngDefaultControl\n      ></j-radio-button> -->\n  \n      <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.ESTIMATED_DELIVERY</h6>\n\n      <div class=\"d-flex\">\n        <j-radio-button\n          [options]=\"estimatedType\"\n          [formControl]=\"form.get('isToday')\"\n          ngDefaultControl\n        ></j-radio-button>\n        <j-input\n          class=\"ml-3 w-25 j-input--without-label\"\n          [formControl]=\"form.get('estimatedTime')\"\n          [isClearable]=\"false\"\n          maskType=\"dayTime\"\n        ></j-input>\n      </div>\n\n      <div class=\"d-flex align-items-end\">\n        <j-checkbox\n          [label]=\"'JMART.SETTINGS.DELIVERY.FORM.DAY_NIGHT_LABEL'\"\n          [control]=\"form.get('workingTime.isDayAndNight')\"\n          class=\"my-3\"\n          ngDefaultControl\n        >\n        </j-checkbox>\n        <j-input\n          class=\"w-25 ml-3 workingTime-input-dash-after\"\n          [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.FROM'\"\n          [formControl]=\"form.get('workingTime.hour.from')\"\n          [isClearable]=\"false\"\n          maskType=\"dayTime\"\n        ></j-input>\n        <j-input\n          class=\"w-25 ml-5\"\n          [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.TO'\"\n          [formControl]=\"form.get('workingTime.hour.to')\"\n          [isClearable]=\"false\"\n          maskType=\"dayTime\"\n        ></j-input>\n      </div>\n\n      <div>\n        <div class=\"d-flex align-items-baseline justify-content-between\">\n          <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.FORM.PRICE.TITLE</h6>\n          <button type=\"button\" (click)=\"addPrice()\" class=\"btn btn-link\" translate>JMART.SETTINGS.DELIVERY.FORM.PRICE.BTN</button>\n        </div>\n        <span class=\"d-block text mb-3\" translate>\n          JMART.SETTINGS.DELIVERY.FORM.PRICE.LABEL\n        </span>\n        <j-delivery-price\n          *ngFor=\"let price of formPricesLink\"\n          [price]=\"price\"\n        ></j-delivery-price>\n      </div>\n\n\n      <button type=\"button\" (click)=\"save()\">test</button>\n  \n  <!--    <div class=\"j-input\">-->\n  <!--      <div class=\"input-icons\">-->\n  <!--        <span class=\"fa fa-user icon\">до</span>-->\n  <!--        <input class=\"input-field\" type=\"text\">-->\n  <!--      </div>-->\n  <!--    </div>-->\n    </form>\n  </section>\n  ";

/***/ }),

/***/ 50896:
/*!*************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/information/information.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"information\">\n  <j-information-main></j-information-main>\n\n  <j-information-persons></j-information-persons>\n</div>\n";

/***/ }),

/***/ 79999:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/pickup-points/pickup-points.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"points\">\n  <!--  HEADER-->\n  <div class=\"points__header\">\n    <div class=\"points__subheader\">\n      <h6 class=\"points__subheader-title m-0\">{{mapTranslate('LONG_TITLE') | translate}}</h6>\n      <button class=\"points__subheader-btn\" type=\"button\" (click)=\"addPickupPoints()\">\n        <span class=\"points__subheader-icon mr-2\" inlineSVG='./assets/jmart/plus.svg'></span>\n        <span class=\"points__subheader-btn-text\" translate>{{mapTranslate('ADD_POINTS') | translate}}</span>\n      </button>\n    </div>\n\n    <div class=\"points__filter\">\n      <form [formGroup]=\"form\">\n        <div class=\"d-none d-sm-flex mb-3\">\n          <j-statuses (selected)=\"onSelect($event)\"\n                      [statuses]=\"statuses\"\n                      [formControl]=\"form.get('status')\"\n                      ngDefaultControl>\n          </j-statuses>\n        </div>\n      </form>\n\n      <!--  SEARCH-->\n      <div class=\"delivery-list__search\">\n        <j-form-field clearable=\"true\">\n      <span class=\"text-primary d-block mt-n1\"\n            jPrefix\n            inlineSVG=\"./assets/icons/search.svg\"></span>\n          <input type=\"text\"\n                 jFormInput\n                 placeholder=\"{{mapTranslate('SEARCH_LARGE') | translate}}\"\n                 class=\"form-control\"\n                 autocomplete=\"off\"\n                 [formControl]=\"search\"\n                 ngDefaultControl>\n        </j-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!--  BODY-->\n  <div class=\"points__body\"\n       infiniteScroll\n       [scrollWindow]=\"true\"\n       [alwaysCallback]=\"true\"\n       [infiniteScrollDistance]=\"2\"\n       [infiniteScrollThrottle]=\"500\"\n  >\n    <j-points-table *ngIf=\"points?.length > 0; else noData\" [points]=\"points\" [search]=\"search\"></j-points-table>\n\n    <ng-template #noData>\n      <j-no-data [text]=\"'JMART.SETTINGS.PICKUPPOINTS.NO_DATA'\"></j-no-data>\n    </ng-template>\n  </div>\n</section>\n";

/***/ }),

/***/ 80556:
/*!*******************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/schedule/schedule.component.html?ngResource ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = "<p>j-mart-settings-schedule works!</p>\n";

/***/ }),

/***/ 57121:
/*!*************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/containers/users/users.component.html?ngResource ***!
  \*************************************************************************************************/
/***/ ((module) => {

module.exports = "<p>jmart-settings-users works!</p>\n";

/***/ }),

/***/ 3174:
/*!************************************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/components/delivery-mode-toggle/delivery-mode-toggle.component.html?ngResource ***!
  \************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"delivery-mode-toggle w-100 mt-5 mb-3 p-1\">\n    <button\n        class=\"btn delivery-mode-toggle__item w-50\"\n        [class.btn-primary]=\"control.value === mode.value\"\n        *ngFor=\"let mode of mods\"\n        (click)=\"setMod(mode)\"\n    >\n        {{ mode.label }}\n    </button>\n</div>\n";

/***/ }),

/***/ 34272:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/create-delivery-modal/create-delivery-modal.component.html?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"point-remove p-3\">\n    <div class=\"point-remove__close\">\n      <button type=\"button\"\n              class=\"point-remove__close-btn\"\n              (click)=\"close()\">\n        <img src=\"./assets/icons/close.svg\"\n             alt=\"{{'SHARED.CLOSE' | translate}}\">\n      </button>\n    </div>\n    <h5 class=\"text-start point-remove__title\" translate>JMART.SETTINGS.DELIVERY.SET_DELIVERY</h5>\n      <div class=\"delivery-form\">\n      <j-delivery-mode-toggle\n        [control]=\"form.get('isJpost')\"\n      ></j-delivery-mode-toggle>\n      <div class=\"delivery-form__direction\">\n      <j-select-city\n        *ngIf=\"!isInterCity\"\n        class=\"select-city\"\n        [control]=\"form.get('direction.from')\"\n        [label]=\"'JMART.SETTINGS.DELIVERY.CITY'\"\n      ></j-select-city>\n      <!-- <j-select-city\n        [control]=\"form.get('direction.to')\"\n        [class.select-city--intercity]=\"isInterCity\"\n        *ngIf=\"isInterCity\"\n      ></j-select-city> -->\n      <div *ngIf=\"isInterCity && citiesAndRegionsCache.length > 0\" class=\"delivery-form__directions-wrapper  d-flex justify-content-between w-100\">\n        <j-input-autocomplete\n          label=\"Откуда\"\n          [options]=\"citiesAndRegions['from']\"\n          class=\"select-city--intercity\"\n          [formControl]=\"form.get('direction.from')\"\n          ngDefaultControl\n        ></j-input-autocomplete>\n        <j-input-autocomplete\n          label=\"Куда\"\n          class=\"select-city--intercity\"\n          [options]=\"citiesAndRegions['to']\"\n          [formControl]=\"form.get('direction.to')\"\n          ngDefaultControl\n        ></j-input-autocomplete>\n      </div>\n      </div>\n      <div *ngIf=\"isModeOwn\">\n\n      <div class=\"row justify-content-between align-items-center pt-3 delivery-form__header\">\n        <h5 class=\"col-auto m-0 delivery-form__header-title\" translate>{{ formTitle }}</h5>\n        <div class=\"col-auto delete-btn pt-0 pb-0\" *ngIf=\"editedIndex === 1\">\n          <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\"\n                tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n        </div>\n      </div>\n\n      <form class=\"delivery-form__create-form\" [formGroup]=\"form\">\n  \n        <!-- <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.DELIVERY_MODE</h6>\n        <j-radio-button [options]=\"deliveryModes\"\n                        [formControl]=\"form.get('deliveryMode')\"\n                        ngDefaultControl\n        ></j-radio-button> -->\n    \n        <div *ngIf=\"!isInterCity\">\n          <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.ESTIMATED_DELIVERY</h6>\n  \n          <div class=\"d-flex\">\n            <j-radio-button\n              [options]=\"estimatedType\"\n              [formControl]=\"form.get('isToday')\"\n              ngDefaultControl\n            ></j-radio-button>\n            <j-input\n              class=\"ml-3 w-25\"\n              label=\"До\"\n              [formControl]=\"form.get('estimatedTime')\"\n              [isClearable]=\"false\"\n              maskType=\"dayTime\"\n            ></j-input>\n          </div>\n\n          <div class=\"accident-time p-3\">\n            <div class=\"d-flex\">\n              <j-toggle\n                [value]=\"accidentTimeToggle\"\n                (valueChange)=\"setAccidentTimeToggle($event)\"\n              ></j-toggle>\n              <h6 translate>JMART.SETTINGS.DELIVERY.ACCIDENT_TIME.TITLE</h6>\n            </div>\n            <p class=\"accident-time__description\" translate>JMART.SETTINGS.DELIVERY.ACCIDENT_TIME.DESCRIPTION</p>\n            <div class=\"w-50\" >\n              <j-input\n                label=\"JMART.SETTINGS.DELIVERY.ACCIDENT_TIME.DAYS_INPUT_LABEL\"\n                [formControl]=\"form.get('deliveryEstimatedDay')\"\n                [isClearable]=\"false\"\n                maskType=\"daysCount\"\n                [computeSuffix]=\"getEstimatedDaysSuffix\"\n              ></j-input>\n            </div>\n          </div>\n        </div>\n  \n        <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.DELIVERY_TIME</h6>\n        <j-tole-work-regime\n          [showWorkRegimeBreakTime]=\"false\"\n          [workRegimes]=\"workingTime.workignTimeFormGroup\"\n        ></j-tole-work-regime>\n        \n        <j-input\n          *ngIf=\"isInterCity\"\n          class=\"mt-3 w-100\"\n          label=\"JMART.SETTINGS.DELIVERY.ESTIMATED_DELIVERY\"\n          [formControl]=\"form.get('deliveryEstimatedDay')\"\n          [isClearable]=\"false\"\n          maskType=\"daysCount\"\n          [computeSuffix]=\"getEstimatedDaysSuffix\"\n        ></j-input>\n\n\n        <!-- <div class=\"d-flex align-items-end\">\n          <j-checkbox\n            [label]=\"'JMART.SETTINGS.DELIVERY.FORM.DAY_NIGHT_LABEL'\"\n            [control]=\"form.get('workingTime.isDayAndNight')\"\n            class=\"my-3\"\n            ngDefaultControl\n          >\n          </j-checkbox>\n          <j-input\n            class=\"w-25 ml-3 workingTime-input-dash-after\"\n            [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.FROM'\"\n            [formControl]=\"form.get('workingTime.hour.from')\"\n            [isClearable]=\"false\"\n            maskType=\"dayTime\"\n          ></j-input>\n          <j-input\n            class=\"w-25 ml-5\"\n            [label]=\"'JMART.SETTINGS.DELIVERY.FORM.HOURS.TO'\"\n            [formControl]=\"form.get('workingTime.hour.to')\"\n            [isClearable]=\"false\"\n            maskType=\"dayTime\"\n          ></j-input>\n        </div> -->\n  \n        <div>\n          <div class=\"d-flex align-items-baseline justify-content-between\">\n            <h6 class=\"pickup-points-type mt-4\" translate>JMART.SETTINGS.DELIVERY.FORM.PRICE.TITLE</h6>\n            <button type=\"button\" (click)=\"addPrice()\" class=\"btn btn-link\" translate>JMART.SETTINGS.DELIVERY.FORM.PRICE.BTN</button>\n          </div>\n          <span class=\"d-block text mb-3\" translate>\n            JMART.SETTINGS.DELIVERY.FORM.PRICE.LABEL\n          </span>\n          <j-delivery-price\n            *ngFor=\"let price of formPricesLink; let i = index\"\n            [canBeRemoved]=\"i > 0 && i !== formPricesLink.length - 1\"\n            (remove)=\"removePrice(i)\"\n            [isLast]=\"i === formPricesLink.length - 1\"\n            [price]=\"price\"\n          ></j-delivery-price>\n  \n        </div>\n  \n  \n    <!--    <div class=\"j-input\">-->\n    <!--      <div class=\"input-icons\">-->\n    <!--        <span class=\"fa fa-user icon\">до</span>-->\n    <!--        <input class=\"input-field\" type=\"text\">-->\n    <!--      </div>-->\n    <!--    </div>-->\n      </form>\n\n      </div>\n      </div>\n    <div class=\"modal-footer\">\n      <button class=\"btn btn-outline-primary\" (click)=\"close()\" translate> JMART.SETTINGS.DELIVERY.SET_DELIVERY_DIALOG.CANCEL </button>\n      <button class=\"btn btn-primary\" (click)=\"onSave()\" translate> JMART.SETTINGS.DELIVERY.SET_DELIVERY_DIALOG.SAVE </button>\n    </div>\n  </div>\n  ";

/***/ }),

/***/ 92805:
/*!************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-modal/delivery-modal.component.html?ngResource ***!
  \************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"delivery-modal p-4\">\n  <button type=\"button\"\n          class=\"close\"\n          (click)=\"cancel()\">\n    <img src=\"./assets/icons/close.svg\"\n         alt=\"{{'SHARED.CLOSE' | translate}}\">\n  </button>\n  <div class=\"row justify-content-between align-items-center pt-3 delivery-modal__header\">\n    <h5 class=\"col-auto m-0 delivery-modal__header-title\" translate>{{ formTitle }}</h5>\n    <div class=\"col-auto delete-btn pt-0 pb-0\" *ngIf=\"editedIndex === 1\">\n      <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\" (click)=\"remove()\"\n            tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n    </div>\n  </div>\n\n  <form class=\"delivery-modal__form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <j-select-city></j-select-city>\n\n    <h6 class=\"pickup-points-type mt-4\">{{mapTranslate('DELIVERY_MODE') | translate}}</h6>\n    <j-radio-button [options]=\"deliveryModes\"\n                    [formControl]=\"form.get('deliveryMode')\"\n                    ngDefaultControl\n    ></j-radio-button>\n\n    <h6 class=\"pickup-points-type mt-4\">{{mapTranslate('ESTIMATED_DELIVERY') | translate}}</h6>\n    <j-radio-button [options]=\"estimatedType\"\n                    [formControl]=\"form.get('estimatedType')\"\n                    ngDefaultControl\n    ></j-radio-button>\n\n<!--    <div class=\"j-input\">-->\n<!--      <div class=\"input-icons\">-->\n<!--        <span class=\"fa fa-user icon\">до</span>-->\n<!--        <input class=\"input-field\" type=\"text\">-->\n<!--      </div>-->\n<!--    </div>-->\n  </form>\n</section>\n";

/***/ }),

/***/ 72449:
/*!**************************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/delivery-remove-modal/delivery-remove-modal.component.html?ngResource ***!
  \**************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<p>delivery-remove-modal works!</p>\n";

/***/ }),

/***/ 68559:
/*!********************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/delivery/set-delivery-modal/set-delivery-modal.component.html?ngResource ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"point-remove p-3\">\n  <div class=\"point-remove__close\">\n    <button type=\"button\"\n            class=\"point-remove__close-btn\"\n            (click)=\"close()\">\n      <img src=\"./assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n  </div>\n  <h5 class=\"point-remove__title\" translate>JMART.SETTINGS.DELIVERY.SET_DELIVERY</h5>\n  <span class=\"point-remove__text mb-5\" translate>JMART.SETTINGS.DELIVERY.SET_DELIVERY_TEXT</span>\n  <div class=\"row justify-content-center\">\n    <button class=\"btn btn-primary mr-3\" type=\"button\" (click)=\"setJpost()\" translate>JMART.SETTINGS.DELIVERY.JPOST</button>\n    <button class=\"btn text-primary btn-outline-primary\" type=\"button\" (click)=\"setOwnDelivery()\" translate>JMART.SETTINGS.DELIVERY.OWN_DELIVERY</button>\n  </div>\n</div>";

/***/ }),

/***/ 64060:
/*!***************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/add-edit-modal/add-edit-modal.component.html?ngResource ***!
  \***************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"add-modal p-4\">\n  <button type=\"button\"\n          class=\"close\"\n          (click)=\"cancel()\">\n    <img src=\"./assets/icons/close.svg\"\n         alt=\"{{'SHARED.CLOSE' | translate}}\">\n  </button>\n  <div class=\"row justify-content-between align-items-center pt-3 add-modal__header\">\n    <h5 class=\"col-auto m-0 add-modal__header-title\" translate>{{ formTitle }}</h5>\n    <div class=\"col-auto delete-btn pt-0 pb-0\" *ngIf=\"editedIndex === 1\">\n      <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\" (click)=\"removePerson()\"\n            tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n    </div>\n  </div>\n\n  <form class=\"modal-body__form\" [formGroup]=\"form\"  (ngSubmit)=\"addPerson()\">\n    <j-input label=\"JMART.SETTINGS.INFORMATION.LAST_NAME\"\n             type=\"text\"\n             [formControl]=\"form.get('lastName')\"\n             [hasError]=\"lastNameError && isSubmitted\"\n             [isClearable]=\"false\"\n             translate\n             ngbAutofocus=\"false\"\n    ></j-input>\n\n    <j-input label=\"JMART.SETTINGS.INFORMATION.FIRST_NAME\"\n             type=\"text\"\n             [formControl]=\"form.get('firstName')\"\n             [hasError]=\"fistNameError && isSubmitted\"\n             [isClearable]=\"false\"\n             translate\n    ></j-input>\n\n    <j-input label=\"JMART.SETTINGS.INFORMATION.PATRONYMIC\"\n             type=\"text\"\n             [formControl]=\"form.get('patronymic')\"\n             [isClearable]=\"false\"\n             translate\n    ></j-input>\n\n    <div formArrayName=\"phones\">\n      <div *ngFor=\"let phone of phones().controls; let i = index\"\n           [formGroupName]=\"i\"\n           class=\"row\"\n      >\n        <j-phone-input label=\"JMART.SETTINGS.INFORMATION.PHONE\"\n                       [isClearable]=\"false\"\n                       [formControl]=\"phone.controls.phone\"\n                       [hasError]=\"phoneError(i) && isSubmitted\"\n                       [countryCode]=\"{ id: 'phoneKz' }\"\n                       [defaultFocus]=\"false\"\n                       translate\n                       class=\"col\"\n                       ngbAutofocus=\"false\"\n        ></j-phone-input>\n        <div class=\"col-auto delete-btn\" *ngIf=\"i > 0\">\n          <span [inlineSVG]=\"'./assets/jmart/delete.svg'\" (click)=\"removePhone(i)\"\n                tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n        </div>\n      </div>\n      <button class=\"btn p-0 mb-3 add-btn\" type=\"button\" (click)=\"addPhone()\" translate>JMART.SETTINGS.INFORMATION.ADD_PHONE</button>\n    </div>\n\n    <div formArrayName=\"emails\">\n      <div *ngFor=\"let email of emails().controls; let i = index\"\n           [formGroupName]=\"i\"\n           class=\"row\"\n      >\n        <j-input label=\"JMART.SETTINGS.INFORMATION.EMAIL\"\n                 [type]=\"email\"\n                 [isClearable]=\"false\"\n                 [formControl]=\"email.controls.email\"\n                 [hasError]=\"emailError(i) && isSubmitted\"\n                 translate\n                 class=\"col\"\n        ></j-input>\n        <div class=\"col-auto delete-btn\" *ngIf=\"i > 0\">\n          <span [inlineSVG]=\"'./assets/jmart/delete.svg'\" (click)=\"removeEmail(i)\"\n                tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n        </div>\n      </div>\n      <button class=\"btn p-0 mb-3 add-btn\" type=\"button\" (click)=\"addEmail()\" translate>JMART.SETTINGS.INFORMATION.ADD_EMAIL</button>\n    </div>\n\n    <div class=\"row justify-content-end p-0 m-0\">\n      <button class=\"btn btn-outline-primary mr-3\" type=\"button\" (click)=\"cancel()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n      <button class=\"btn btn-primary\" type=\"submit\" translate>JMART.SETTINGS.INFORMATION.ADD</button>\n    </div>\n  </form>\n</section>\n";

/***/ }),

/***/ 33882:
/*!*******************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/logo-modal/logo-modal.component.html?ngResource ***!
  \*******************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"container-fluid logo-modal p-4\">\n  <button type=\"button\"\n          class=\"close\"\n          (click)=\"dismissModal()\">\n    <img src=\"./assets/icons/close.svg\"\n         alt=\"{{'SHARED.CLOSE' | translate}}\">\n  </button>\n\n  <div class=\"logo-modal__header\">\n    <h5 translate>JMART.SETTINGS.INFORMATION.SELLER_LOGO</h5>\n  </div>\n\n  <div class=\"logo-modal__body justify-content-center\">\n    <div class=\"logo-modal__body-image\">\n      <div class=\"nologo\" [hidden]=\"largeLogo.length > 0\" translate>JMART.SETTINGS.INFORMATION.NO_LOGO</div>\n      <div [hidden]=\"largeLogo.length === 0\">\n        <img class=\"logo\" [src]=\"largeLogo\" alt=\"Логотип\" width=\"128\" height=\"128\" />\n      </div>\n    </div>\n    <h5 class=\"text-center mb-1\" translate>JMART.SETTINGS.INFORMATION.LOGOTYPE</h5>\n    <p class=\"logo-modal__body-text p3 text-center text-gray\" translate>JMART.SETTINGS.INFORMATION.LOGO_TEXT</p>\n  </div>\n\n  <div class=\"logo-modal__footer row no-wrap\">\n    <div class=\"col-6 pr-2\">\n      <button *ngIf=\"!file; else cancel\"\n              class=\"btn btn-outline-primary btn-block\"\n              type=\"button\" (click)=\"removeFile()\"\n              [disabled]=\"!largeLogo\"\n              translate>JMART.SETTINGS.INFORMATION.REMOVE\n      </button>\n      <ng-template #cancel>\n        <button class=\"btn btn-outline-primary btn-block\"\n                type=\"button\" (click)=\"dismissModal()\"\n                translate>JMART.SETTINGS.INFORMATION.CANCEL\n        </button>\n      </ng-template>\n    </div>\n\n    <div class=\"col-6 pl-2\">\n      <label *ngIf=\"!file; else save\" class=\"btn btn-primary btn-block\" translate>JMART.SETTINGS.INFORMATION.UPLOAD_FILE\n        <input\n          [placeholder]=\"'JMART.SETTINGS.INFORMATION.UPLOAD_FILE' | translate\"\n          type='file'\n          id=\"fileInput\"\n          (change)=\"uploadFile($event)\"\n          (click)=\"fileInput = null\"\n          accept=\"image/png, image/jpg, image/jpeg, image/svg\"\n        />\n      </label>\n      <ng-template #save>\n        <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"saveFile()\" translate>JMART.SETTINGS.INFORMATION.SAVE</button>\n      </ng-template>\n    </div>\n  </div>\n</div>\n";

/***/ }),

/***/ 46730:
/*!***********************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/information/remove-modal/remove-modal.component.html?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"person-remove p-3\">\n  <div class=\"person-remove__close\">\n    <button type=\"button\"\n            class=\"person-remove__close-btn\"\n            (click)=\"cancel()\">\n      <img src=\"./assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n  </div>\n  <h5 class=\"person-remove__title\" translate>JMART.SETTINGS.INFORMATION.REMOVE_TITLE</h5>\n  <span class=\"person-remove__text mb-5\" translate>JMART.SETTINGS.INFORMATION.REMOVE_TEXT</span>\n  <div class=\"row justify-content-center\">\n    <button class=\"btn btn-primary mr-3\" type=\"button\" (click)=\"remove()\" translate>JMART.SETTINGS.INFORMATION.REMOVE</button>\n    <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"cancel()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n  </div>\n</div>\n";

/***/ }),

/***/ 91725:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/notice-modal/notice-modal.component.html?ngResource ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"point-remove p-3\">\n  <div class=\"point-remove__close\">\n    <button type=\"button\"\n            class=\"point-remove__close-btn\"\n            (click)=\"close()\">\n      <img src=\"./assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n  </div>\n  <h5 class=\"point-remove__title\" translate>JMART.SETTINGS.PICKUPPOINTS.NOTICE_TITLE</h5>\n  <span class=\"point-remove__text mb-5\" translate>JMART.SETTINGS.PICKUPPOINTS.NOTICE_TEXT</span>\n  <div class=\"row justify-content-center\">\n    <button class=\"btn btn-primary mr-3\" type=\"button\" (click)=\"close()\" translate>JMART.SETTINGS.PICKUPPOINTS.CLOSE</button>\n    <button class=\"btn text-primary\" type=\"button\" (click)=\"cancel()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n  </div>\n</div>\n";

/***/ }),

/***/ 20245:
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/pickup-points-modal/pickup-points-modal.component.html?ngResource ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"pickup-points-modal p-4\">\n  <button type=\"button\"\n          class=\"close\"\n          (click)=\"cancel()\">\n    <img src=\"./assets/icons/close.svg\"\n         alt=\"{{'SHARED.CLOSE' | translate}}\">\n  </button>\n  <div class=\"row justify-content-between align-items-center pt-3 pickup-points-modal__header\">\n    <h5 class=\"col-auto m-0 pickup-points-modal__header-title\" translate>{{ formTitle }}</h5>\n    <div class=\"col-auto delete-btn pt-0 pb-0\" *ngIf=\"editedIndex === 1\">\n      <span [inlineSVG]=\"'./assets/jmart/delete-orange.svg'\" (click)=\"remove()\"\n            tooltipClass=\"tooltip-light\" [ngbTooltip]=\"'JMART.SETTINGS.INFORMATION.REMOVE' | translate\"></span>\n    </div>\n  </div>\n\n  <form class=\"pickup-points-modal__form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"switch\" *ngIf=\"editedIndex === 1\">\n      <j-switch (change)=\"changeStatus($event)\" [value]=\"status\"></j-switch>\n      <div class=\"switch__status ml-2\">\n        <span class=\"switch__status-text\">{{mapTranslate('STATUS') | translate}}</span>\n        <span class=\"switch__status-state\" *ngIf=\"form.get('status').value\">{{mapTranslate('STATUS_ENABLED') | translate}}</span>\n        <span class=\"switch__status-state\" *ngIf=\"!form.get('status').value\">{{mapTranslate('STATUS_DISABLED') | translate}}</span>\n      </div>\n      <a href=\"javascript:void(0)\"\n         jSuffix\n         tooltipClass=\"tooltip-light tooltip-large\"\n         [ngbTooltip]=\"kbeInfo\"\n         [inlineSVG]=\"'/assets/icons/payments/question.svg'\"\n         triggers=\"mouseenter:mouseleave\"\n         class=\"mr-1 link-gray\">\n      </a>\n    </div>\n\n    <j-input label=\"{{mapTranslate('ID_POINT') | translate}}\"\n             type=\"text\"\n             [formControl]=\"form.get('companyStoreId')\"\n             [hasError]=\"idPointError && isSubmitted\"\n             [isClearable]=\"false\"\n             translate\n             ngbAutofocus=\"false\"\n    ></j-input>\n\n    <span class=\"prompt\">\n      <span class=\"prompt__important\">{{mapTranslate('IMPORTANT') | translate}}</span> {{mapTranslate('IMPORTANT_TEXT') | translate}}\n    </span>\n\n    <j-input label=\"{{mapTranslate('POINT_NAME') | translate}}\"\n             type=\"text\"\n             [formControl]=\"form.get('name')\"\n             [hasError]=\"titleError && isSubmitted\"\n             [isClearable]=\"false\"\n             translate\n    ></j-input>\n\n    <span class=\"prompt\">{{mapTranslate('PROMT') | translate}}</span>\n\n    <!-- <j-dropdown-input label=\"{{mapTranslate('CITY') | translate}}\"\n                      [options]=\"cityNames\"\n                      (selected)=\"selectedCity($event)\"\n                      [hasError]=\"cityError && isSubmitted\"\n                      [selectedItem]=\"form.get('city').value\"\n    ></j-dropdown-input> -->\n    <j-select-city\n      class=\"select-city\"\n      [control]=\"form.get('city')\"\n      [label]=\"'JMART.SETTINGS.DELIVERY.CITY'\"\n    ></j-select-city>\n    <button type=\"button\" (click)=\"test()\">test</button>\n\n    <j-input label=\"{{mapTranslate('ADDRESS') | translate}}\"\n             type=\"text\"\n             [formControl]=\"form.get('pickupAddress')\"\n             [hasError]=\"addressError && isSubmitted\"\n             [isClearable]=\"false\"\n    ></j-input>\n\n    <j-iban-input label=\"{{mapTranslate('IBAN' | translate)}}\"\n                  [formControl]=\"form.get('iban')\"\n                  [hasError]=\"ibanError && isSubmitted\"\n                  [isClearable]=\"false\"\n    ></j-iban-input>\n\n    <h6 class=\"pickup-points-type mt-4\">{{mapTranslate('POINT_TYPE') | translate}}</h6>\n    <j-radio-button [options]=\"typePointList\"\n                    [formControl]=\"form.get('type')\"\n                    ngDefaultControl\n    ></j-radio-button>\n\n    <div class=\"mb-4\">\n      <h6 class=\"pickup-points-type mt-4\">{{mapTranslate('TYPE_WAREHOUSE') | translate}}</h6>\n      <div class=\"custom-control custom-checkbox select-all main-checkbox\">\n        <input type=\"checkbox\"\n               class=\"custom-control-input\"\n               id=\"main\"\n               [formControl]=\"form.get('isMain')\"\n        >\n        <label class=\"custom-control-label\"\n               for=\"main\">\n          <span class=\"saved-name\">{{mapTranslate('MAIN') | translate}}</span>\n        </label>\n      </div>\n      <div class=\"custom-control custom-checkbox select-all\">\n        <input type=\"checkbox\"\n               class=\"custom-control-input\"\n               id=\"mainCity\"\n               [formControl]=\"form.get('isMainInCity')\"\n        >\n        <label class=\"custom-control-label\"\n               for=\"mainCity\">\n          <span class=\"saved-name\">{{mapTranslate('MAIN_CITY') | translate}}</span>\n        </label>\n      </div>\n      <j-tole-work-regime\n        [showWorkRegimeBreakTime]=\"false\"\n        [workRegimes]=\"workingTime.workignTimeFormGroup\"\n      ></j-tole-work-regime>\n    </div>\n    <div class=\"row justify-content-end p-0 m-0\">\n      <button class=\"btn btn-outline-primary mr-3\" type=\"button\" (click)=\"cancel()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n      <button class=\"btn btn-primary\" type=\"submit\" translate>JMART.SETTINGS.INFORMATION.SAVE</button>\n    </div>\n  </form>\n</section>\n<ng-template #kbeInfo>\n  <j-points-info [text]=\"'Тут будет текст:)'\"></j-points-info>\n</ng-template>\n";

/***/ }),

/***/ 71859:
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/point/points-remove-modal/points-remove-modal.component.html?ngResource ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"point-remove p-3\">\n  <div class=\"point-remove__close\">\n    <button type=\"button\"\n            class=\"point-remove__close-btn\"\n            (click)=\"cancel()\">\n      <img src=\"./assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n  </div>\n  <h5 class=\"point-remove__title\" translate>JMART.SETTINGS.PICKUPPOINTS.REMOVE_TITLE</h5>\n  <span class=\"point-remove__text mb-5\" translate>JMART.SETTINGS.PICKUPPOINTS.REMOVE_TEXT</span>\n  <div class=\"row justify-content-center\">\n    <button class=\"btn btn-primary mr-3\" type=\"button\" (click)=\"remove()\" translate>JMART.SETTINGS.INFORMATION.REMOVE</button>\n    <button class=\"btn text-primary\" type=\"button\" (click)=\"cancel()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n  </div>\n</div>\n";

/***/ }),

/***/ 62203:
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/modals/remove-delivery-modal/remove-delivery-modal.component.html?ngResource ***!
  \*****************************************************************************************************************************/
/***/ ((module) => {

module.exports = "<div class=\"delivery-remove p-3\">\n  <div class=\"delivery-remove__close\">\n    <button type=\"button\"\n            class=\"delivery-remove__close-btn\"\n            (click)=\"close()\">\n      <img src=\"./assets/icons/close.svg\"\n           alt=\"{{'SHARED.CLOSE' | translate}}\">\n    </button>\n  </div>\n  <h5 class=\"delivery-remove__title\" translate>JMART.SETTINGS.DELIVERY.REMOVE_MODAL.HEADER</h5>\n  <span class=\"delivery-remove__text mb-5\" translate>JMART.SETTINGS.INFORMATION.REMOVE_TEXT</span>\n  <div class=\"row justify-content-center\">\n    <button class=\"btn btn-primary mr-3\" type=\"button\" (click)=\"remove()\" translate>JMART.SETTINGS.INFORMATION.REMOVE</button>\n    <button class=\"btn btn-outline-primary\" type=\"button\" (click)=\"close()\" translate>JMART.SETTINGS.INFORMATION.CANCEL</button>\n  </div>\n</div>\n";

/***/ }),

/***/ 26404:
/*!***********************************************************************************!*\
  !*** ./src/app/jmart-cabinet/modules/settings/settings.component.html?ngResource ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = "<section class=\"settings\">\n  <h2 translate\n      class=\"settings__title mb-4\">JMART.SETTINGS.TITLE</h2>\n  <j-tabs></j-tabs>\n  <router-outlet></router-outlet>\n</section>\n";

/***/ })

}]);
//# sourceMappingURL=src_app_jmart-cabinet_modules_settings_settings_module_ts.js.map